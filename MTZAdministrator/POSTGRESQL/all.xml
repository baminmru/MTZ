<?xml version="1.0"?>
<root><ModuleHolder ModuleName="--PreInstall" File=""><BlockHolder BlockName="--body" BlockCode="

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Tables" File=""><BlockHolder BlockName="--kernel" BlockCode=" 

-- Kernel Tables --
drop table sysoptions
;
create table sysoptions(
sysoptionsID CHAR(38) primary key,
Name varchar(255) null,
TheValue varchar(255) null,
OptionType varchar(255) null
)
;
drop table typelist
;
create  table typelist(
typelistID CHAR(38) primary key  ,
Name varchar(255) not null,
SecurityStyleID CHAR(38) null, 
RegisterProc varchar(255) null,
DeleteProc varchar(255) null,
HCLProc varchar(255) null ,
PropagateProc varchar(255) null 
)
;
drop table Instance
;
create table Instance(
InstanceID CHAR(38) not null primary key,
LockUserID CHAR(38) null, 
LockSessionID CHAR(38) null, 
SecurityStyleID CHAR(38) null, 
Name varchar(255) null,
ObjType varchar(255) null
)
;
alter table instance add OwnerPartName varchar(255) null
;
alter table instance add OwnerRowID CHAR(38) null
;
alter  table instance add status CHAR(38) null
;
alter  table instance add archived numeric null
;
drop table QueryResult
;
CREATE TABLE QueryResult (
  QueryResultid CHAR(38) NOT NULL ,
  result CHAR(38) NULL 
)
;
drop table RPRESULT
;
CREATE TABLE RPRESULT (
  RPRESULTID CHAR(38) NOT NULL ,
  PARENTLEVEL numeric NOT NULL ,
  PARTNAME varchar (255) NULL ,
  THEROWID CHAR(38) NULL 
)
;


"><FormData Name=""/></BlockHolder><BlockHolder BlockName="--body" BlockCode=" 

/*Группа полей фильтра*/
drop table FilterFieldGroup/*Группа полей фильтра*/ 
;
create table FilterFieldGroup/*Группа полей фильтра*/ (
InstanceID CHAR(38) ,
FilterFieldGroupid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FilterFieldGroup add 
sequence
 integer null /* Последовательность */
;
alter  table FilterFieldGroup add 
Name
 VARCHAR (64) null /* Название */
;
alter  table FilterFieldGroup add 
Caption
 VARCHAR (255) null /* Заголовок */
;
alter  table FilterFieldGroup add 
AllowIgnore null 
 check (AllowIgnore in ( -1/* Да */
, 0/* Нет */ )) /* Можно отключать */
;


/*Поле фильтра*/
drop table FileterField/*Поле фильтра*/ 
;
create table FileterField/*Поле фильтра*/ (
ParentStructRowID CHAR(38) not null,
FileterFieldid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FileterField add 
sequence
 integer null /* Последовательность */
;
alter  table FileterField add 
Name
 VARCHAR (255) null /* Название */
;
alter  table FileterField add 
Caption
 VARCHAR (255) null /* Заголовок */
;
alter  table FileterField add 
FieldType null /* Тип поля */
;
alter  table FileterField add 
FieldSize
 integer null /* Размер */
;
alter  table FileterField add 
RefType
 INTEGER null 
 check (RefType in ( 2/* На строку раздела */
, 3/* На источник данных */
, 0/* Скалярное поле ( не ссылка) */
, 1/* На объект  */ )) /* Тип ссылки */
;
alter  table FileterField add 
RefToType null /* Тип, куда ссылаемся */
;
alter  table FileterField add 
RefToPart null /* Раздел, куда ссылаемся */
;
alter  table FileterField add 
ValueArray null 
 check (ValueArray in ( -1/* Да */
, 0/* Нет */ )) /* Массив значений */
;


/*Фильтр*/
drop table Filters/*Фильтр*/ 
;
create table Filters/*Фильтр*/ (
InstanceID CHAR(38) ,
Filtersid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table Filters add 
Name
 VARCHAR (255) null /* Название */
;
alter  table Filters add 
TheCaption
 VARCHAR (80) null /* Заголовок */
;
alter  table Filters add 
TheComment null /* Описание */
;


/*Описание формы*/
drop table PEK103_DEF/*Описание формы*/ 
;
create table PEK103_DEF/*Описание формы*/ (
InstanceID CHAR(38) ,
PEK103_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEK103_DEF add 
TheNumber
 integer null /* Номер */
;
alter  table PEK103_DEF add 
Sender null /* Отправитель */
;
alter  table PEK103_DEF add 
RcvDate
 DATETIME null /* Дата подачи заявки */
;
alter  table PEK103_DEF add 
Coment null /* Примечание */
;
alter  table PEK103_DEF add 
NodeDate
 DATETIME null /* Дата приемки  */
;
alter  table PEK103_DEF add 
PEKZ null /* Заявка */
;
alter  table PEK103_DEF add 
ThePath null /* Строка маршрута */
;


/*Cтроки формы*/
drop table PEK103_LINES/*Cтроки формы*/ 
;
create table PEK103_LINES/*Cтроки формы*/ (
InstanceID CHAR(38) ,
PEK103_LINESid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEK103_LINES add 
Seqence
 integer null /* № п\п */
;
alter  table PEK103_LINES add 
IndexTo null /* Станция назначения */
;
alter  table PEK103_LINES add 
Reciever
 VARCHAR (255) null /* Получатель */
;
alter  table PEK103_LINES add 
Weight null /* Вес */
;
alter  table PEK103_LINES add 
WeightEDIZM null /* Ед. изм. веса */
;
alter  table PEK103_LINES add 
Quantity null /* Количество */
;
alter  table PEK103_LINES add 
Cost null /* Стоимость перевозки */
;
alter  table PEK103_LINES add 
PPOCode
 VARCHAR (14) null /* Код отправления */
;


/*Блоки сообщений*/
drop table WEBC_BLOCK/*Блоки сообщений*/ 
;
create table WEBC_BLOCK/*Блоки сообщений*/ (
InstanceID CHAR(38) ,
WEBC_BLOCKid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBC_BLOCK add 
name
 VARCHAR (255) null /* Название блока */
;
alter  table WEBC_BLOCK add 
Info null /* Содержание */
;


/*Новости*/
drop table WEBC_NEWS/*Новости*/ 
;
create table WEBC_NEWS/*Новости*/ (
InstanceID CHAR(38) ,
WEBC_NEWSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBC_NEWS add 
TheDate
 DATETIME null /* Дата */
;
alter  table WEBC_NEWS add 
ShortName
 VARCHAR (128) null /* Краткое название */
;
alter  table WEBC_NEWS add 
Info null /* Содержание */
;
alter  table WEBC_NEWS add 
Accept null 
 check (Accept in ( -1/* Да */
, 0/* Нет */ )) /* Разрешена публикация */
;
alter  table WEBC_NEWS add 
Annotation
 VARCHAR (255) null /* Краткое сообщение */
;


/*Вакансии*/
drop table WEBC_JOB/*Вакансии*/ 
;
create table WEBC_JOB/*Вакансии*/ (
InstanceID CHAR(38) ,
WEBC_JOBid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBC_JOB add 
JobDate
 DATETIME null /* Дата */
;
alter  table WEBC_JOB add 
JobName
 VARCHAR (256) null /* Название */
;
alter  table WEBC_JOB add 
JobCity
 VARCHAR (1024) null /* Город */
;
alter  table WEBC_JOB add 
JobSex
 INTEGER null 
 check (JobSex in ( 1/* Мужской */
, 0/* Не существенно */
, -1/* Женский */ )) /* Пол */
;
alter  table WEBC_JOB add 
JobAge
 VARCHAR (64) null /* Возраст */
;
alter  table WEBC_JOB add 
JobEducation null 
 check (JobEducation in ( 2/* Среднее специальное */
, 1/* Среднее */
, -1/* Не важно */
, 4/* Высшее */
, 0/* Неполное среднее */
, 3/* Неполное высшее */
, 5/* Несколько высших */ )) /* Образование */
;
alter  table WEBC_JOB add 
JobExperience
 VARCHAR (1024) null /* Опыт работы */
;
alter  table WEBC_JOB add 
JobEmployment null 
 check (JobEmployment in ( 0/* Полная */
, 1/* Частичная */
, -1/* Не важно */ )) /* Занятость */
;
alter  table WEBC_JOB add 
JobCompensation
 VARCHAR (256) null /* Зарплата */
;
alter  table WEBC_JOB add 
JobDescription
 VARCHAR (2000) null /* Описание */
;
alter  table WEBC_JOB add 
JobActual
 integer null 
 check (JobActual in ( 1/* Да */
, 0/* Нет */ )) /* Актуальность */
;


/*Сообщения*/
drop table WEBC_MESSAGES/*Сообщения от посетителей*/ 
;
create table WEBC_MESSAGES/*Сообщения от посетителей*/ (
InstanceID CHAR(38) ,
WEBC_MESSAGESid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBC_MESSAGES add 
MESSAGES_FIO
 VARCHAR (256) null /* Фамилия, имя, отчество */
;
alter  table WEBC_MESSAGES add 
MESSAGES_Email
 VARCHAR (256) null /* Адрес электронной почты */
;
alter  table WEBC_MESSAGES add 
MESSAGES_TEL
 VARCHAR (256) null /* Телефон */
;
alter  table WEBC_MESSAGES add 
MESSAGES_City
 VARCHAR (256) null /* Город */
;
alter  table WEBC_MESSAGES add 
MESSAGES_Org
 VARCHAR (256) null /* Название организации */
;
alter  table WEBC_MESSAGES add 
MESSAGES_Position
 VARCHAR (256) null /* Специальность/должность */
;
alter  table WEBC_MESSAGES add 
MESSAGES_Text
 VARCHAR (2000) null /* Сообщение */
;


/*Документы*/
drop table WEBC_DOCS/*Документы*/ 
;
create table WEBC_DOCS/*Документы*/ (
InstanceID CHAR(38) ,
WEBC_DOCSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBC_DOCS add 
DocsNum
 integer null /* № */
;
alter  table WEBC_DOCS add 
DocsName
 VARCHAR (1024) null /* Название */
;
alter  table WEBC_DOCS add 
DocsFileName
 VARCHAR (1024) null /* Имя файла */
;
alter  table WEBC_DOCS add 
DocsFileSize null /* Размер */
;
alter  table WEBC_DOCS add 
DocsFileDate
 DATETIME null /* Дата  */
;
alter  table WEBC_DOCS add 
DocsDescription
 VARCHAR (1024) null /* Примечания */
;
alter  table WEBC_DOCS add 
DocsActual
 integer null 
 check (DocsActual in ( 1/* Да */
, 0/* Нет */ )) /* Актуальность */
;


/*Офис и филиалы*/
drop table WEBC_FILIALS/*Офис и филиалы*/ 
;
create table WEBC_FILIALS/*Офис и филиалы*/ (
InstanceID CHAR(38) ,
WEBC_FILIALSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBC_FILIALS add 
OfficeName
 VARCHAR (1024) null /* Название */
;
alter  table WEBC_FILIALS add 
OfficeCity
 VARCHAR (1024) null /* Город */
;
alter  table WEBC_FILIALS add 
OfficeAddress
 VARCHAR (1024) null /* Адрес */
;
alter  table WEBC_FILIALS add 
OfficeTelefons
 VARCHAR (1024) null /* Телефоны */
;
alter  table WEBC_FILIALS add 
OfficeSmallImage
 VARCHAR (1024) null /* URL картинки со схемой */
;
alter  table WEBC_FILIALS add 
OfficeBigImage
 VARCHAR (1024) null /* URL картинки увеличенной */
;
alter  table WEBC_FILIALS add 
OfficeNum
 integer null /* № */
;
alter  table WEBC_FILIALS add 
ReferFilial null /* Ссылка на филиал */
;
alter  table WEBC_FILIALS add 
EMailManag varchar(255) null /* EMail менеджера */
;
alter  table WEBC_FILIALS add 
EMailAddit varchar(255) null /* Дополнительный EMail */
;


/*Ссылки*/
drop table WEBC_LINKS/*Ссылки*/ 
;
create table WEBC_LINKS/*Ссылки*/ (
InstanceID CHAR(38) ,
WEBC_LINKSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBC_LINKS add 
LinkName
 VARCHAR (1024) null /* Название */
;
alter  table WEBC_LINKS add 
LinkURL
 VARCHAR (1024) null /* Ссылка */
;
alter  table WEBC_LINKS add 
LinkDescription
 VARCHAR (2048) null /* Описание */
;


/*Затраты*/
drop table VRRPT_COSTS/*Затраты*/ 
;
create table VRRPT_COSTS/*Затраты*/ (
InstanceID CHAR(38) ,
VRRPT_COSTSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRRPT_COSTS add 
Descrtiption null /* Описание */
;
alter  table VRRPT_COSTS add 
Cost null /* Стоимость */
;
alter  table VRRPT_COSTS add 
Duration null /* Длительность (час.) */
;


/*Планируемые встречи*/
drop table VRRPT_MeetingPlan/*Планируемые встречи*/ 
;
create table VRRPT_MeetingPlan/*Планируемые встречи*/ (
InstanceID CHAR(38) ,
VRRPT_MeetingPlanid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRRPT_MeetingPlan add 
DateOF
 DATETIME null /* Время встречи */
;
alter  table VRRPT_MeetingPlan add 
PlaceOf null /* Место проведения */
;
alter  table VRRPT_MeetingPlan add 
theme null /* Тема */
;


/*Участники*/
drop table VRRPT_Meeters/*Участники*/ 
;
create table VRRPT_Meeters/*Участники*/ (
ParentStructRowID CHAR(38) not null,
VRRPT_Meetersid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRRPT_Meeters add 
Worker null /* Сотрудник */
;
alter  table VRRPT_Meeters add 
Contact null /* Контактное лицо */
;
alter  table VRRPT_Meeters add 
Mandatory null 
 check (Mandatory in ( -1/* Да */
, 0/* Нет */ )) /* Обязательно */
;
alter  table VRRPT_Meeters add 
ReminderTime
 integer null /* Оповещать за (час.) */
;
alter  table VRRPT_Meeters add 
ReminderSent null 
 check (ReminderSent in ( -1/* Да */
, 0/* Нет */ )) /* Оповещен */
;


/*Отчет*/
drop table VRRPT_MAIN/*Отчет*/ 
;
create table VRRPT_MAIN/*Отчет*/ (
InstanceID CHAR(38) ,
VRRPT_MAINid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRRPT_MAIN add 
Author null /* Автор */
;
alter  table VRRPT_MAIN add 
TheDate
 DATETIME null /* Дата отчета */
;
alter  table VRRPT_MAIN add 
Client null /* Клиент */
;
alter  table VRRPT_MAIN add 
Project null /* Проект */
;
alter  table VRRPT_MAIN add 
Contract null /* Договор */
;
alter  table VRRPT_MAIN add 
Person null /* Контактное лицо */
;
alter  table VRRPT_MAIN add 
Name
 VARCHAR (255) null /* Название отчета */
;
alter  table VRRPT_MAIN add 
Info null /* Информация */
;
alter  table VRRPT_MAIN add 
Attrachment null /* Вложение */
;
alter  table VRRPT_MAIN add 
 Attrachment_EXT char(4) null
;
alter  table VRRPT_MAIN add 
ReportType null /* Тип отчета */
;


/*Общая информация*/
drop table VRDGCommon/*Общая информация*/ 
;
create table VRDGCommon/*Общая информация*/ (
InstanceID CHAR(38) ,
VRDGCommonid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDGCommon add 
DogNum
 VARCHAR (255) null /* Номер договора */
;
alter  table VRDGCommon add 
DogDate
 DATETIME null /* Дата договора */
;
alter  table VRDGCommon add 
Name
 VARCHAR (255) null /* Название */
;
alter  table VRDGCommon add 
Curator null /* Ответственный */
;
alter  table VRDGCommon add 
Info null /* Примечание */
;
alter  table VRDGCommon add 
Client null /* Контрагент */
;
alter  table VRDGCommon add 
PZDog null 
 check (PZDog in ( -1/* Да */
, 0/* Нет */ )) /* Договор к разовой заявке */
;
alter  table VRDGCommon add 
StartDate
 DATETIME null /* Начало действия */
;
alter  table VRDGCommon add 
EndDate
 DATETIME null /* Окончание действия договора */
;
alter  table VRDGCommon add 
Code1C
 VARCHAR (40) null /* Код1С */
;


/*Отчеты*/
drop table VRDGReport/*Отчеты*/ 
;
create table VRDGReport/*Отчеты*/ (
InstanceID CHAR(38) ,
VRDGReportid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDGReport add 
Report null /* Отчет */
;


/*Дополнительные соглашения*/
drop table VRDGContractChanges/*Дополнительные соглашения*/ 
;
create table VRDGContractChanges/*Дополнительные соглашения*/ (
InstanceID CHAR(38) ,
VRDGContractChangesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDGContractChanges add 
Code
 VARCHAR (80) null /* Номер соглашения */
;
alter  table VRDGContractChanges add 
DateOf
 DATETIME null /* Дата соглашения */
;
alter  table VRDGContractChanges add 
theFile null /* Файл соглашения */
;
alter  table VRDGContractChanges add 
 theFile_EXT char(4) null
;
alter  table VRDGContractChanges add 
the_Comment null /* Примечание */
;


/*Версия договора*/
drop table VRDGContractVersion/*Версия договора*/ 
;
create table VRDGContractVersion/*Версия договора*/ (
InstanceID CHAR(38) ,
VRDGContractVersionid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDGContractVersion add 
DateOf
 DATETIME null /* Дата версии */
;
alter  table VRDGContractVersion add 
theFile null /* Файл */
;
alter  table VRDGContractVersion add 
 theFile_EXT char(4) null
;
alter  table VRDGContractVersion add 
Actual null 
 check (Actual in ( -1/* Да */
, 0/* Нет */ )) /* Актуальная версия */
;
alter  table VRDGContractVersion add 
the_Comment null /* Примечание */
;


/*Специальные условие*/
drop table VRDGContractSpesial/*Специальные условие*/ 
;
create table VRDGContractSpesial/*Специальные условие*/ (
InstanceID CHAR(38) ,
VRDGContractSpesialid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDGContractSpesial add 
DateOf
 DATETIME null /* Дата */
;
alter  table VRDGContractSpesial add 
IsDone null 
 check (IsDone in ( -1/* Да */
, 0/* Нет */ )) /* Исполнено */
;
alter  table VRDGContractSpesial add 
the_Comment null /* Суть условия */
;


/*Поезд*/
drop table PEKSH_DATA/*Поезд*/ 
;
create table PEKSH_DATA/*Поезд*/ (
InstanceID CHAR(38) ,
PEKSH_DATAid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKSH_DATA add 
Train null /* Поезд */
;
alter  table PEKSH_DATA add 
StartTime
 datetime null /* Время отправления */
;
alter  table PEKSH_DATA add 
Duration
 integer null /* Время доставки */
;


/*День и время отправления*/
drop table PEKSH_START/*День и время отправления*/ 
;
create table PEKSH_START/*День и время отправления*/ (
ParentStructRowID CHAR(38) not null,
PEKSH_STARTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKSH_START add 
DayInYear
 integer null /* Номер дня в году */
;
alter  table PEKSH_START add 
StartTime
 datetime null /* Время отправления */
;


/*Описание расписания*/
drop table PEKSH_DEF/*Описание расписания*/ 
;
create table PEKSH_DEF/*Описание расписания*/ (
InstanceID CHAR(38) ,
PEKSH_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKSH_DEF add 
DIRECTION null /* Направление */
;
alter  table PEKSH_DEF add 
TheYear
 integer null /* Год */
;


/*Отложенное событие*/
drop table MTZ2JOB_DEF/*Описание отложенного события*/ 
;
create table MTZ2JOB_DEF/*Описание отложенного события*/ (
InstanceID CHAR(38) ,
MTZ2JOB_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table MTZ2JOB_DEF add 
EventDate
 DATETIME null /* Отложено до */
;
alter  table MTZ2JOB_DEF add 
EvenType
 VARCHAR (255) null /* Тип события */
;
alter  table MTZ2JOB_DEF add 
ThruObject null /* Объект - причина события */
;
alter  table MTZ2JOB_DEF add 
ThruState
 uniqueidentifier null /* Состояние - причина */
;
alter  table MTZ2JOB_DEF add 
NextState
 uniqueidentifier null /* Состояние после обработки */
;
alter  table MTZ2JOB_DEF add 
ProcessDate
 DATETIME null /* Момент обработки */
;
alter  table MTZ2JOB_DEF add 
Processed null 
 check (Processed in ( -1/* Да */
, 0/* Нет */ )) /* Обработан */
;


/*Описание*/
drop table PEKPAY_DEF/*Докумен для учета внутренних затрат*/ 
;
create table PEKPAY_DEF/*Докумен для учета внутренних затрат*/ (
InstanceID CHAR(38) ,
PEKPAY_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKPAY_DEF add 
ToClient null /* Поставщик */
;
alter  table PEKPAY_DEF add 
PLPNUM
 VARCHAR (20) null /* № документа */
;
alter  table PEKPAY_DEF add 
PLPDate
 DATETIME null /* Дата документа */
;
alter  table PEKPAY_DEF add 
PLPSumm null /* Сумма */
;
alter  table PEKPAY_DEF add 
TheDept null /* В счет филиала */
;
alter  table PEKPAY_DEF add 
TheComment null /* Назначеие платежа */
;
alter  table PEKPAY_DEF add 
Code1C
 VARCHAR (40) null /* Код1С */
;


/*Основные настройки*/
drop table WEBSDIC_DEF/**/ 
;
create table WEBSDIC_DEF/**/ (
InstanceID CHAR(38) ,
WEBSDIC_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBSDIC_DEF add 
WEBS null /* Сайт */
;
alter  table WEBSDIC_DEF add 
PathToFiles
 VARCHAR (2048) null /* Каталог для файлов */
;


/*WEB пользователи*/
drop table PWUUSERS/*WEB пользователи защищённого портала*/ 
;
create table PWUUSERS/*WEB пользователи защищённого портала*/ (
InstanceID CHAR(38) ,
PWUUSERSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PWUUSERS add 
PWUUSERSOrderNum
 integer null /* Номер п/п */
;
alter  table PWUUSERS add 
PWUUSERSLogin
 VARCHAR (256) null /* Имя для входа */
;
alter  table PWUUSERS add 
PWUUSERSPassword
 VARCHAR (256) null /* Пароль */
;
alter  table PWUUSERS add 
PWUUSERSEMail
 VARCHAR (256) null /* Адрес электронной почты */
;
alter  table PWUUSERS add 
PWUUSERSClient null /* Клиент */
;
alter  table PWUUSERS add 
PWUUSERSIsBanned null 
 check (PWUUSERSIsBanned in ( -1/* Да */
, 0/* Нет */ )) /* Заблокирован */
;
alter  table PWUUSERS add 
PWUUSERSRegDate
 DATETIME null /* Дата регистрации */
;


/*Маршрут доставки*/
drop table pekz_path/*Маршрут доставки*/ 
;
create table pekz_path/*Маршрут доставки*/ (
InstanceID CHAR(38) ,
pekz_pathid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table pekz_path add 
sequence
 integer null /* № */
;
alter  table pekz_path add 
IsTranzit null 
 check (IsTranzit in ( -1/* Да */
, 0/* Нет */ )) /* Транзит */
;
alter  table pekz_path add 
PathFilial null /* Филиал */
;
alter  table pekz_path add 
TransSupplier null /* Поставщик */
;
alter  table pekz_path add 
TheDirection null /* Направление */
;
alter  table pekz_path add 
PPONum
 integer null /* Кол-во ПО */
;
alter  table pekz_path add 
DestStation null /* Станция назначения */
;
alter  table pekz_path add 
PPODescription null /* Характер груза */
;
alter  table pekz_path add 
Receiver null /* Получатель */
;
alter  table pekz_path add 
PPOWeight null /* Вес ПО */
;
alter  table pekz_path add 
WeightEDIZM null /* Ед. изм. веса */
;
alter  table pekz_path add 
PPOVol null /* Объем ПО */
;
alter  table pekz_path add 
ValueEDIZM null /* Ед.изм. объема */
;
alter  table pekz_path add 
RCVInfo null /* Данные получателя */
;
alter  table pekz_path add 
PathPlanedDate
 DATETIME null /* Дата предполагаемой отправки */
;
alter  table pekz_path add 
RcvWaitDate
 DATETIME null /* Ориентировочная дата получения */
;
alter  table pekz_path add 
trainNo null /* Поезд */
;
alter  table pekz_path add 
vagNo
 VARCHAR (8) null /* Вагон № */
;
alter  table pekz_path add 
SendDate
 DATETIME null /* Дата отправки */
;
alter  table pekz_path add 
PassFIO
 VARCHAR (255) null /* ФИО Кладовщика */
;
alter  table pekz_path add 
PassDate
 DATETIME null /* Дата передачи груза в вагон */
;
alter  table pekz_path add 
RcvFIO
 VARCHAR (255) null /* ФИО ВПН */
;
alter  table pekz_path add 
RcvDate
 DATETIME null /* Дата получения груза в ПО */
;
alter  table pekz_path add 
InforRcvFIO
 VARCHAR (255) null /* Кому передана информация */
;
alter  table pekz_path add 
InfoDate
 DATETIME null /* Дата передачи информации */
;
alter  table pekz_path add 
InfoSendType null /* Способ передачи информации */
;
alter  table pekz_path add 
CalcWithNDS null 
 check (CalcWithNDS in ( -1/* Да */
, 0/* Нет */ )) /* Расчет с НДС */
;
alter  table pekz_path add 
TheCurrency null /* Валюта */
;
alter  table pekz_path add 
TRF null /* Тариф */
;
alter  table pekz_path add 
SummNDS null /* Сумма с НДС */
;
alter  table pekz_path add 
Summ null /* Сумма без НДС */
;
alter  table pekz_path add 
SupTRF null /* Тариф поставщика */
;
alter  table pekz_path add 
SupSumm null /* Сумма поставщику без НДС */
;
alter  table pekz_path add 
SupSummNDS null /* Сумма поставщику с НДС */
;


/*Весовой список ППО*/
drop table PEKZ_WLIST/*Весовой список ППО*/ 
;
create table PEKZ_WLIST/*Весовой список ППО*/ (
ParentStructRowID CHAR(38) not null,
PEKZ_WLISTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKZ_WLIST add 
sequence
 integer null /* № */
;
alter  table PEKZ_WLIST add 
theWeight null /* Вес */
;
alter  table PEKZ_WLIST add 
shCode
 VARCHAR (14) null /* Штрих Код */
;
alter  table PEKZ_WLIST add 
NettoWeight null /* Вес нетто */
;
alter  table PEKZ_WLIST add 
TNBED
 VARCHAR (40) null /* Код ТНВЭД */
;
alter  table PEKZ_WLIST add 
TheCountry null /* Страна происхождения */
;
alter  table PEKZ_WLIST add 
ItemPrice null /* Стоимость посылки */
;
alter  table PEKZ_WLIST add 
VozmCost null /* Стоимость возмщения */
;
alter  table PEKZ_WLIST add 
TheCurrency null /* Валюта стоимости */
;
alter  table PEKZ_WLIST add 
IsPodarok null 
 check (IsPodarok in ( -1/* Да */
, 0/* Нет */ )) /* Подарок */
;
alter  table PEKZ_WLIST add 
IsDocument null 
 check (IsDocument in ( -1/* Да */
, 0/* Нет */ )) /* Документ */
;
alter  table PEKZ_WLIST add 
IsObrazec null 
 check (IsObrazec in ( -1/* Да */
, 0/* Нет */ )) /* Коммерческий образец */
;
alter  table PEKZ_WLIST add 
IsVozvrat null 
 check (IsVozvrat in ( -1/* Да */
, 0/* Нет */ )) /* Возврат товара */
;
alter  table PEKZ_WLIST add 
IsProchee null 
 check (IsProchee in ( -1/* Да */
, 0/* Нет */ )) /* Прочее отправление */
;
alter  table PEKZ_WLIST add 
ItemDescription
 VARCHAR (60) null /* Описание отправления */
;
alter  table PEKZ_WLIST add 
QLicense
 integer null /* Количество лицензий */
;
alter  table PEKZ_WLIST add 
QSertif
 integer null /* Количество сертификатов */
;
alter  table PEKZ_WLIST add 
OrderNum
 VARCHAR (30) null /* № счета */
;
alter  table PEKZ_WLIST add 
QDocs
 integer null /* Количество сопроводительных документов */
;


/*Надбавки*/
drop table PEKZ_WLADDS/*Надбавки для посылки*/ 
;
create table PEKZ_WLADDS/*Надбавки для посылки*/ (
ParentStructRowID CHAR(38) not null,
PEKZ_WLADDSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKZ_WLADDS add 
TheAdds null /* Надбавка */
;


/*Почтовые документы*/
drop table PEKZ_DOCS/*Почтовые документы*/ 
;
create table PEKZ_DOCS/*Почтовые документы*/ (
InstanceID CHAR(38) ,
PEKZ_DOCSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKZ_DOCS add 
TheDoc null /* Документ */
;


/*Описание заявки*/
drop table pekz_def/*Раздел описывает  основные данные о заявке.*/ 
;
create table pekz_def/*Раздел описывает  основные данные о заявке.*/ (
InstanceID CHAR(38) ,
pekz_defid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table pekz_def add 
QueryDate
 DATETIME null /* Дата запроса */
;
alter  table pekz_def add 
Fillial null /* Принята в */
;
alter  table pekz_def add 
PEKCode
 VARCHAR (50) null /* № заявки */
;
alter  table pekz_def add 
PlatType
 INTEGER null 
 check (PlatType in ( 0/* Отправитель */
, 1/* Получатель */
, 2/* Другой */ )) /* Платит */
;
alter  table pekz_def add 
TRType null /* Тип доставки */
;
alter  table pekz_def add 
PlanedDate
 DATETIME null /* Дата предполагаемой отправки */
;
alter  table pekz_def add 
ClientFrom null /* Отправитель */
;
alter  table pekz_def add 
ClientTo null /* Получатель */
;
alter  table pekz_def add 
ClientPayed null /* Плательщик */
;
alter  table pekz_def add 
AcceptDate
 DATETIME null /* Дата приема заявки */
;
alter  table pekz_def add 
VRCFinfo null /* Данные отправителя */
;
alter  table pekz_def add 
Supplier null /* Поставщик */
;
alter  table pekz_def add 
PayDept null /* Оплачивается в  */
;
alter  table pekz_def add 
TheDogovor null /* Договор */
;
alter  table pekz_def add 
IsPayed null 
 check (IsPayed in ( -1/* Да */
, 0/* Нет */ )) /* Оплачена */
;
alter  table pekz_def add 
RcvInfo null /* Данные получателя */
;
alter  table pekz_def add 
IsNal null 
 check (IsNal in ( -1/* Да */
, 0/* Нет */ )) /* Наличная оплата */
;
alter  table pekz_def add 
TheComment null /* Примечания */
;
alter  table pekz_def add 
AcceptTime
 datetime null /* Время приема заявки */
;
alter  table pekz_def add 
LoadTime
 datetime null /* Время приема груза на склад */
;
alter  table pekz_def add 
LoadDate
 DATETIME null /* Дата приема груза на склад */
;
alter  table pekz_def add 
TRF null /* Тариф */
;
alter  table pekz_def add 
Code1C
 VARCHAR (40) null /* Код1С */
;
alter  table pekz_def add 
IncludeInOrder null 
 check (IncludeInOrder in ( -1/* Да */
, 0/* Нет */ )) /* Включен в ордер */
;
alter  table pekz_def add 
IncludeInAct null 
 check (IncludeInAct in ( -1/* Да */
, 0/* Нет */ )) /* Включена в акт */
;
alter  table pekz_def add 
SummNDS null /* Сумма с НДС */
;
alter  table pekz_def add 
Summ null /* Сумма без НДС */
;
alter  table pekz_def add 
SummDop null /* Сумма доп. услуг без НДС */
;
alter  table pekz_def add 
SummDopNDS null /* Сумма доп. услуг с НДС */
;
alter  table pekz_def add 
theActWork null /* акт выполненных работ */
;


/*Сбор груза*/
drop table PEKZ_ACLCT/*Сбор груза для отправки автотранспортом*/ 
;
create table PEKZ_ACLCT/*Сбор груза для отправки автотранспортом*/ (
InstanceID CHAR(38) ,
PEKZ_ACLCTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKZ_ACLCT add 
TheFilial null /* Филиал */
;
alter  table PEKZ_ACLCT add 
AutoType null /* Тип автотранспорта */
;
alter  table PEKZ_ACLCT add 
CollectDate
 DATETIME null /* Дата получения груза */
;
alter  table PEKZ_ACLCT add 
TheAddress null /* Адрес  */
;
alter  table PEKZ_ACLCT add 
CollectTimeFrom
 datetime null /* Начиная с */
;
alter  table PEKZ_ACLCT add 
CollectTimeTo
 datetime null /* По */
;
alter  table PEKZ_ACLCT add 
ThePerson
 VARCHAR (255) null /* Контактное лицо */
;
alter  table PEKZ_ACLCT add 
Phone
 VARCHAR (20) null /* Контактный телефон */
;
alter  table PEKZ_ACLCT add 
TheComment null /* Примечание */
;
alter  table PEKZ_ACLCT add 
TheLength null /* Километраж */
;
alter  table PEKZ_ACLCT add 
TheDuration null /* Длительность (час) */
;
alter  table PEKZ_ACLCT add 
Info null /* Данные о грузе */
;
alter  table PEKZ_ACLCT add 
AutoSuplier null /* Поставщик */
;
alter  table PEKZ_ACLCT add 
SummNDS null /* Сумма с НДС */
;
alter  table PEKZ_ACLCT add 
Summ null /* Сумма без НДС */
;
alter  table PEKZ_ACLCT add 
SupSumm null /* Сумма поставщику без НДС */
;
alter  table PEKZ_ACLCT add 
SupSummNDS null /* Сумма поставщику с НДС */
;


/*Авто доставка*/
drop table PEKZ_ADLVR/*Доставка груза получателю автотранспортом*/ 
;
create table PEKZ_ADLVR/*Доставка груза получателю автотранспортом*/ (
InstanceID CHAR(38) ,
PEKZ_ADLVRid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKZ_ADLVR add 
TheFilial null /* Филиал */
;
alter  table PEKZ_ADLVR add 
AutoType null /* Тип автотранспорта */
;
alter  table PEKZ_ADLVR add 
TheAddress null /* Адрес  */
;
alter  table PEKZ_ADLVR add 
CollectDate
 DATETIME null /* Дата получения груза */
;
alter  table PEKZ_ADLVR add 
CollectTimeFrom
 datetime null /* Начиная с */
;
alter  table PEKZ_ADLVR add 
CollectTimeTo
 datetime null /* По */
;
alter  table PEKZ_ADLVR add 
ThePerson
 VARCHAR (255) null /* Контактное лицо */
;
alter  table PEKZ_ADLVR add 
Phone
 VARCHAR (20) null /* Контактный телефон */
;
alter  table PEKZ_ADLVR add 
TheComment null /* Примечание */
;
alter  table PEKZ_ADLVR add 
TheLength null /* Километраж */
;
alter  table PEKZ_ADLVR add 
TheDuration null /* Длительность (час) */
;
alter  table PEKZ_ADLVR add 
Info null /* Данные о грузе */
;
alter  table PEKZ_ADLVR add 
AutoSuplier null /* Поставщик */
;
alter  table PEKZ_ADLVR add 
CalcWithNDS null 
 check (CalcWithNDS in ( -1/* Да */
, 0/* Нет */ )) /* Расчет с НДС */
;
alter  table PEKZ_ADLVR add 
SummNDS null /* Сумма с НДС */
;
alter  table PEKZ_ADLVR add 
Summ null /* Сумма без НДС */
;
alter  table PEKZ_ADLVR add 
SupSumm null /* Сумма поставщику без НДС */
;
alter  table PEKZ_ADLVR add 
SupSummNDS null /* Сумма поставщику с НДС */
;


/*Дополнительные услуги*/
drop table pekz_dop/*Дополнительные услуги*/ 
;
create table pekz_dop/*Дополнительные услуги*/ (
InstanceID CHAR(38) ,
pekz_dopid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table pekz_dop add 
sequence
 integer null /* № */
;
alter  table pekz_dop add 
SRV null /* Услуга */
;
alter  table pekz_dop add 
Quantity null /* Количество */
;
alter  table pekz_dop add 
EDIZM null /* Ед. измерения */
;
alter  table pekz_dop add 
PathFilial null /* Филиал */
;
alter  table pekz_dop add 
TheComment null /* Примечание */
;
alter  table pekz_dop add 
DopSupplier null /* Поставщик */
;
alter  table pekz_dop add 
TheCurrency null /* Валюта */
;
alter  table pekz_dop add 
TRF null /* Тариф */
;
alter  table pekz_dop add 
Summ null /* Сумма без НДС */
;
alter  table pekz_dop add 
SummNDS null /* Сумма с НДС */
;
alter  table pekz_dop add 
SupTRF null /* Тариф поставщика */
;
alter  table pekz_dop add 
SupSumm null /* Сумма поставщику без НДС */
;
alter  table pekz_dop add 
SupSummNDS null /* Сумма поставщику с НДС */
;
alter  table pekz_dop add 
CalcWithNDS null 
 check (CalcWithNDS in ( -1/* Да */
, 0/* Нет */ )) /* Расчет с НДС */
;


/*Очередь заблокированных объектов*/
drop table REPD_LOCKED/*Очередь заблокированных объектов*/ 
;
create table REPD_LOCKED/*Очередь заблокированных объектов*/ (
InstanceID CHAR(38) ,
REPD_LOCKEDid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table REPD_LOCKED add 
LastTry
 DATETIME null /* Последняя разработка */
;
alter  table REPD_LOCKED add 
SourceFile
 VARCHAR (2048) null /* Файл данных */
;
alter  table REPD_LOCKED add 
ReplicaRowID
 uniqueidentifier null /* Идентификатор строки реплики */
;
alter  table REPD_LOCKED add 
FirstTry
 DATETIME null /* Первая обработка */
;
alter  table REPD_LOCKED add 
StructType
 VARCHAR (255) null /* Тип строки */
;
alter  table REPD_LOCKED add 
ObjectType
 VARCHAR (255) null /* Тип объекта */
;
alter  table REPD_LOCKED add 
The_RowID
 uniqueidentifier null /* Идетнификатор строки */
;
alter  table REPD_LOCKED add 
The_InstanceID
 uniqueidentifier null /* Объект */
;
alter  table REPD_LOCKED add 
ReplicaPackID
 uniqueidentifier null /* ReplicaPackID */
;
alter  table REPD_LOCKED add 
PartCount
 integer null /* PartCount */
;
alter  table REPD_LOCKED add 
PartNumber
 integer null /* PartNumber */
;


/*Запрос данных на объект\ строку*/
drop table REPD_RequestQuery/*Запрос данных на объект\ строку*/ 
;
create table REPD_RequestQuery/*Запрос данных на объект\ строку*/ (
InstanceID CHAR(38) ,
REPD_RequestQueryid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table REPD_RequestQuery add 
TheRowID
 uniqueidentifier null /* TheRowID */
;
alter  table REPD_RequestQuery add 
ReqPartName
 VARCHAR (255) null /* ReqPartName */
;
alter  table REPD_RequestQuery add 
ObjectID
 uniqueidentifier null /* ObjectID */
;
alter  table REPD_RequestQuery add 
SourceSrv null /* SourceSrv */
;
alter  table REPD_RequestQuery add 
SendRecord null /* SendRecord */
;
alter  table REPD_RequestQuery add 
DestSrv null /* DestSrv */
;
alter  table REPD_RequestQuery add 
Provider null /* Provider */
;
alter  table REPD_RequestQuery add 
ReqTypeName
 VARCHAR (255) null /* ReqTypeName */
;


/*Результат запроса*/
drop table REPD_ResQueryRcv/*Результат запроса*/ 
;
create table REPD_ResQueryRcv/*Результат запроса*/ (
ParentStructRowID CHAR(38) not null,
REPD_ResQueryRcvid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table REPD_ResQueryRcv add 
ReceiveRec null /* ReceiveRec */
;


/*Провайдер репликациии*/
drop table REPD_PROV/*Провайдер репликациии*/ 
;
create table REPD_PROV/*Провайдер репликациии*/ (
InstanceID CHAR(38) ,
REPD_PROVid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table REPD_PROV add 
AssemblyName
 VARCHAR (255) null /* AssemblyName */
;
alter  table REPD_PROV add 
ClassName
 VARCHAR (255) null /* ClassName */
;
alter  table REPD_PROV add 
Name
 VARCHAR (255) null /* Name */
;


/*Узлы репликации*/
drop table REPD_SRV/*Узлы репликации*/ 
;
create table REPD_SRV/*Узлы репликации*/ (
InstanceID CHAR(38) ,
REPD_SRVid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table REPD_SRV add 
Obj3 null /* Obj3 */
;
alter  table REPD_SRV add 
name
 VARCHAR (255) null /* Название */
;
alter  table REPD_SRV add 
Obj2 null /* Obj2 */
;
alter  table REPD_SRV add 
Obj1 null /* Obj1 */
;


/*Получатели реплик*/
drop table REPD_SNDTO/*Получатели реплик*/ 
;
create table REPD_SNDTO/*Получатели реплик*/ (
ParentStructRowID CHAR(38) not null,
REPD_SNDTOid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table REPD_SNDTO add 
DestSrv null /* DestSrv */
;
alter  table REPD_SNDTO add 
LastScan
 DATETIME null /* Last scan */
;
alter  table REPD_SNDTO add 
Config null /* Config */
;
alter  table REPD_SNDTO add 
LastReceive
 DATETIME null /* Last Receive */
;
alter  table REPD_SNDTO add 
Provider null /* Provider */
;
alter  table REPD_SNDTO add 
Work_Start
 datetime null /* Начало работы (время) */
;
alter  table REPD_SNDTO add 
Work_End
 datetime null /* Окончание работы (время) */
;
alter  table REPD_SNDTO add 
The_Interval
 integer null /* Интервал */
;


/*Константы к запросу*/
drop table REPD_CONST/**/ 
;
create table REPD_CONST/**/ (
ParentStructRowID CHAR(38) not null,
REPD_CONSTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table REPD_CONST add 
Name
 VARCHAR (255) null /* Название */
;
alter  table REPD_CONST add 
TheValue
 VARCHAR (255) null /* Значение */
;


/*Тип репликации документов*/
drop table REPD_REPTYPE/*Описание типа репликации документов для узла*/ 
;
create table REPD_REPTYPE/*Описание типа репликации документов для узла*/ (
ParentStructRowID CHAR(38) not null,
REPD_REPTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table REPD_REPTYPE add 
ReplicaType null 
 check (ReplicaType in ( 0/* Весь документ */
, 2/* Локальный */
, 1/* Построчно */ )) /* Тип репликации */
;
alter  table REPD_REPTYPE add 
TheObjectType null /* Тип объекта */
;
alter  table REPD_REPTYPE add 
UseFilter null 
 check (UseFilter in ( -1/* Да */
, 0/* Нет */ )) /* Фильтровать по условию */
;
alter  table REPD_REPTYPE add 
RepConditonQRY null /* Условие репликации */
;


/*Очередь отсылки*/
drop table REPD_SendQ/*Очередь отсылки*/ 
;
create table REPD_SendQ/*Очередь отсылки*/ (
InstanceID CHAR(38) ,
REPD_SendQid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table REPD_SendQ add 
SourceSrv null /* SourceSrv */
;
alter  table REPD_SendQ add 
Config null /* Config */
;
alter  table REPD_SendQ add 
SentDate
 DATETIME null /* SentDate */
;
alter  table REPD_SendQ add 
DestSrv null /* DestSrv */
;
alter  table REPD_SendQ add 
Provider null /* Provider */
;
alter  table REPD_SendQ add 
Acknowelge null 
 check (Acknowelge in ( -1/* Да */
, 0/* Нет */ )) /* Acknowelge */
;
alter  table REPD_SendQ add 
SendSize
 integer null /* SendSize */
;
alter  table REPD_SendQ add 
CheckDate
 DATETIME null /* CheckDate */
;
alter  table REPD_SendQ add 
ReplicaPackID
 uniqueidentifier null /* ReplicaPackID */
;
alter  table REPD_SendQ add 
FileName
 VARCHAR (1024) null /* FileName */
;
alter  table REPD_SendQ add 
PartCount
 integer null /* Количество частей */
;
alter  table REPD_SendQ add 
PartNumber
 integer null /* Часть */
;
alter  table REPD_SendQ add 
Sent
 integer null 
 check (Sent in ( 1/* Да */
, 0/* Нет */ )) /* Sent */
;
alter  table REPD_SendQ add 
ReplicatorPointer
 DATETIME null /* Указатель репликации */
;


/*Очередь полученых реплик*/
drop table REPD_RecvQ/*Очередь полученых реплик*/ 
;
create table REPD_RecvQ/*Очередь полученых реплик*/ (
InstanceID CHAR(38) ,
REPD_RecvQid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table REPD_RecvQ add 
TheRowID
 uniqueidentifier null /* TheRowID */
;
alter  table REPD_RecvQ add 
Received
 DATETIME null /* Received */
;
alter  table REPD_RecvQ add 
Provider null /* Provider */
;
alter  table REPD_RecvQ add 
RecvSize
 integer null /* RecvSize */
;
alter  table REPD_RecvQ add 
SourceSrv null /* SourceSrv */
;
alter  table REPD_RecvQ add 
DestSrv null /* DestSrv */
;
alter  table REPD_RecvQ add 
Acknowelge null 
 check (Acknowelge in ( -1/* Да */
, 0/* Нет */ )) /* Acknowelge */
;
alter  table REPD_RecvQ add 
ReplicaPackID
 uniqueidentifier null /* ReplicaPackID */
;
alter  table REPD_RecvQ add 
PartCount
 integer null /* Количество частей */
;
alter  table REPD_RecvQ add 
PartNumber
 integer null /* Часть */
;
alter  table REPD_RecvQ add 
FileName
 VARCHAR (1024) null /* FileName */
;
alter  table REPD_RecvQ add 
Completed null 
 check (Completed in ( -1/* Да */
, 0/* Нет */ )) /* Completed */
;


/*Дейсвие при смене*/
drop table StateAction/*Дейсвие при смене*/ 
;
create table StateAction/*Дейсвие при смене*/ (
InstanceID CHAR(38) ,
StateActionid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table StateAction add 
OnDocStatus null /* При входе в состояие */
;
alter  table StateAction add 
NewSecurityStyle null /* Установить стиль защиты */
;
alter  table StateAction add 
ClearSecurity null 
 check (ClearSecurity in ( -1/* Да */
, 0/* Нет */ )) /* Сбросить стиль защиты */
;
alter  table StateAction add 
LibraryFile
 VARCHAR (255) null /* Библиотека-обработчик */
;
alter  table StateAction add 
ActionClass
 VARCHAR (255) null /* Класс для обработки */
;
alter  table StateAction add 
ActionScript null /* Скрипт для исполнения */
;


/*Элементы маршрута*/
drop table TheDiffPath/**/ 
;
create table TheDiffPath/**/ (
InstanceID CHAR(38) ,
TheDiffPathid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table TheDiffPath add 
TheNumber
 integer null /* Номер сегмента в Сложном Маршруте */
;
alter  table TheDiffPath add 
TempTownFrom null /* Промежуточный пункт отправления */
;
alter  table TheDiffPath add 
Direction null /* Направление */
;
alter  table TheDiffPath add 
TempDirStation null /* Промежуточный пункт прибытия */
;
alter  table TheDiffPath add 
Transporter null /* Перевозчик */
;
alter  table TheDiffPath add 
Transport null /* Транспорт */
;


/*Доп. услуги в точке прибытия*/
drop table DopUslTo/**/ 
;
create table DopUslTo/**/ (
ParentStructRowID CHAR(38) not null,
DopUslToid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table DopUslTo add 
DopUsluga null /* Доп. услуга */
;


/*Доп. услуги в точке отправления*/
drop table DopUslFrom/**/ 
;
create table DopUslFrom/**/ (
ParentStructRowID CHAR(38) not null,
DopUslFromid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table DopUslFrom add 
DopUsluga null /* Доп. услуга */
;


/*Описание сложного маршрута*/
drop table TheDefenitionDiffP/**/ 
;
create table TheDefenitionDiffP/**/ (
InstanceID CHAR(38) ,
TheDefenitionDiffPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table TheDefenitionDiffP add 
TheNumeric
 integer null /* Номер сложного маршрута */
;
alter  table TheDefenitionDiffP add 
TownFrom null /* Город отправления */
;
alter  table TheDefenitionDiffP add 
DirStation null /* Станция назначения */
;
alter  table TheDefenitionDiffP add 
CountParticles null /* Количество участков */
;
alter  table TheDefenitionDiffP add 
TheComment null /* Примечание */
;


/*Описание акта*/
drop table PEKACT_DEF/*Акт сверки*/ 
;
create table PEKACT_DEF/*Акт сверки*/ (
InstanceID CHAR(38) ,
PEKACT_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKACT_DEF add 
Podrazdelenie null /* Подразделение */
;
alter  table PEKACT_DEF add 
Client null /* Клиент */
;
alter  table PEKACT_DEF add 
Number_of_akt
 integer null /* Номер_акта */
;
alter  table PEKACT_DEF add 
Date_FROM
 DATETIME null /* Дата С */
;
alter  table PEKACT_DEF add 
Date_TO
 DATETIME null /* Дата ПО */
;
alter  table PEKACT_DEF add 
TheDgovor null /* Договор */
;
alter  table PEKACT_DEF add 
dateCreate
 DATETIME null /* Дата оформления акта */
;
alter  table PEKACT_DEF add 
dateSend
 DATETIME null /* Дата передачи акта клиенту */
;
alter  table PEKACT_DEF add 
dateReceive
 DATETIME null /* Дата возврата подписанного акта клиент */
;
alter  table PEKACT_DEF add 
FIO
 VARCHAR (100) null /* ФИО получившего акт */
;
alter  table PEKACT_DEF add 
Code1C
 VARCHAR (40) null /* Код 1С */
;


/*Итоги по акту*/
drop table PEKACT_ITOG/*Подводятся итоги по акту в разрезе услуг*/ 
;
create table PEKACT_ITOG/*Подводятся итоги по акту в разрезе услуг*/ (
InstanceID CHAR(38) ,
PEKACT_ITOGid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKACT_ITOG add 
SRV null /* Услуга */
;
alter  table PEKACT_ITOG add 
Summ null /* Сумма */
;
alter  table PEKACT_ITOG add 
SummNDS null /* Сумма с НДС */
;
alter  table PEKACT_ITOG add 
SupSUMM null /* Сумма поставщику */
;
alter  table PEKACT_ITOG add 
SupSummNDS null /* Сумма поставщику с НДС */
;
alter  table PEKACT_ITOG add 
Quantity null /* Количество */
;
alter  table PEKACT_ITOG add 
edizm null /* Единица измерения */
;


/*Строки акта*/
drop table PEKACT_LINES/*Строки акта сверки */ 
;
create table PEKACT_LINES/*Строки акта сверки */ (
InstanceID CHAR(38) ,
PEKACT_LINESid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKACT_LINES add 
Zayavka null /* Заявка */
;


/*Тип поля*/
drop table FIELDTYPE/*Типы полей, перечисления, интервалы*/ 
;
create table FIELDTYPE/*Типы полей, перечисления, интервалы*/ (
InstanceID CHAR(38) ,
FIELDTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FIELDTYPE add 
Name
 VARCHAR (255) null /* Название */
;
alter  table FIELDTYPE add 
TypeStyle
 INTEGER null 
 check (TypeStyle in ( 3/* Интервал */
, 0/* Скалярный тип */
, 4/* Ссылка */
, 2/* Перечисление */
, 1/* Выражение */
, 5/* Элемент оформления */ )) /* Трактовка */
;
alter  table FIELDTYPE add 
the_Comment null /* Описание */
;
alter  table FIELDTYPE add 
AllowSize null 
 check (AllowSize in ( -1/* Да */
, 0/* Нет */ )) /* Нужен размер */
;
alter  table FIELDTYPE add 
Minimum
 VARCHAR (64) null /* Минимум */
;
alter  table FIELDTYPE add 
Maximum
 VARCHAR (64) null /* Максимум */
;
alter  table FIELDTYPE add 
AllowLikeSearch null 
 check (AllowLikeSearch in ( -1/* Да */
, 0/* Нет */ )) /* Поиск текста */
;
alter  table FIELDTYPE add 
GridSortType
 INTEGER null 
 check (GridSortType in ( 0/* As String */
, 1/* As Numeric */
, 2/* As Date */ )) /* Вариант сортировки в табличном представлении */
;


/*Отображение*/
drop table FIELDTYPEMAP/*Отображение типа поля на физический тип хранения*/ 
;
create table FIELDTYPEMAP/*Отображение типа поля на физический тип хранения*/ (
ParentStructRowID CHAR(38) not null,
FIELDTYPEMAPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FIELDTYPEMAP add 
Target null /* Платформа */
;
alter  table FIELDTYPEMAP add 
StoageType
 VARCHAR (255) null /* Тип хранения */
;
alter  table FIELDTYPEMAP add 
FixedSize
 integer null /* Размер */
;


/*Зачения*/
drop table ENUMITEM/*Для описания Enum типов*/ 
;
create table ENUMITEM/*Для описания Enum типов*/ (
ParentStructRowID CHAR(38) not null,
ENUMITEMid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ENUMITEM add 
Name
 VARCHAR (255) null /* Название */
;
alter  table ENUMITEM add 
NameValue
 integer null /* Значение */
;
alter  table ENUMITEM add 
NameInCode
 VARCHAR (100) null /* Название в коде */
;


/*Методы и процедуры*/
drop table SHAREDMETHOD/*Методы и процедуры*/ 
;
create table SHAREDMETHOD/*Методы и процедуры*/ (
InstanceID CHAR(38) ,
SHAREDMETHODid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table SHAREDMETHOD add 
Name
 VARCHAR (255) null /* Название */
;
alter  table SHAREDMETHOD add 
the_Comment null /* Описание метода */
;
alter  table SHAREDMETHOD add 
ReturnType null /* Возвращаемый тип */
;


/*Реализация*/
drop table SCRIPT/*Код метода на понятном конкретному генератору языке*/ 
;
create table SCRIPT/*Код метода на понятном конкретному генератору языке*/ (
ParentStructRowID CHAR(38) not null,
SCRIPTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table SCRIPT add 
Target null /* Целевая платформа */
;
alter  table SCRIPT add 
Code null /* Скрипт */
;


/*Параметры*/
drop table PARAMETERS/*Параметры метода*/ 
;
create table PARAMETERS/*Параметры метода*/ (
ParentStructRowID CHAR(38) not null,
PARAMETERSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PARAMETERS add 
sequence
 integer null /* Последовательность */
;
alter  table PARAMETERS add 
Name
 VARCHAR (80) null /* Имя */
;
alter  table PARAMETERS add 
Caption
 VARCHAR (80) null /* Заголовок */
;
alter  table PARAMETERS add 
TypeOfParm null /* Тип данных */
;
alter  table PARAMETERS add 
DataSize
 integer null /* Размер */
;
alter  table PARAMETERS add 
AllowNull null 
 check (AllowNull in ( -1/* Да */
, 0/* Нет */ )) /* Можно не задавать */
;
alter  table PARAMETERS add 
OutParam null 
 check (OutParam in ( -1/* Да */
, 0/* Нет */ )) /* Возвращает значение */
;
alter  table PARAMETERS add 
ReferenceType
 INTEGER null 
 check (ReferenceType in ( 2/* На строку раздела */
, 3/* На источник данных */
, 0/* Скалярное поле ( не ссылка) */
, 1/* На объект  */ )) /* Тип ссылки */
;
alter  table PARAMETERS add 
RefToType null /* Ссылка на тип */
;
alter  table PARAMETERS add 
RefToPart null /* Ссылка на раздел */
;


/*Тип объекта*/
drop table OBJECTTYPE/*Тип объекта (карточки)*/ 
;
create table OBJECTTYPE/*Тип объекта (карточки)*/ (
InstanceID CHAR(38) ,
OBJECTTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table OBJECTTYPE add 
Package null /* Приложение */
;
alter  table OBJECTTYPE add 
the_Comment
 VARCHAR (255) null /* Название */
;
alter  table OBJECTTYPE add 
Name
 VARCHAR (14) null /* Код */
;
alter  table OBJECTTYPE add 
IsSingleInstance null 
 check (IsSingleInstance in ( -1/* Да */
, 0/* Нет */ )) /* Допускается только один объект */
;
alter  table OBJECTTYPE add 
ChooseView null /* Представление для выбора */
;
alter  table OBJECTTYPE add 
OnRun null /* При запуске */
;
alter  table OBJECTTYPE add 
OnCreate null /* При создании */
;
alter  table OBJECTTYPE add 
OnDelete null /* При удалении */
;
alter  table OBJECTTYPE add 
AllowRefToObject null 
 check (AllowRefToObject in ( -1/* Да */
, 0/* Нет */ )) /* Отображать при выборе ссылки */
;
alter  table OBJECTTYPE add 
AllowSearch null 
 check (AllowSearch in ( -1/* Да */
, 0/* Нет */ )) /* Отображать при поиске */
;
alter  table OBJECTTYPE add 
ReplicaType null 
 check (ReplicaType in ( 0/* Весь документ */
, 2/* Локальный */
, 1/* Построчно */ )) /* Тип репликации */
;
alter  table OBJECTTYPE add 
TheComment null /* Описание */
;


/*Раздел*/
drop table PART/*Раздел объекта*/ 
;
create table PART/*Раздел объекта*/ (
ParentStructRowID CHAR(38) not null,
PARTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
;
alter  table PART add 
Sequence
 integer null /* № п/п */
;
alter  table PART add 
PartType null 
 check (PartType in ( 1/* Коллекция */
, 3/* Расширение */
, 0/* Строка */
, 2/* Дерево */
, 4/* Расширение с данными */ )) /* Тип структры  */
;
alter  table PART add 
Caption
 VARCHAR (255) null /* Заголовок */
;
alter  table PART add 
Name
 VARCHAR (20) null /* Название */
;
alter  table PART add 
the_Comment null /* Описание */
;
alter  table PART add 
NoLog null 
 check (NoLog in ( -1/* Да */
, 0/* Нет */ )) /* Не записывать в журнал */
;
alter  table PART add 
ManualRegister null 
 check (ManualRegister in ( -1/* Да */
, 0/* Нет */ )) /* Исключить из индексирования */
;
alter  table PART add 
OnCreate null /* При создании */
;
alter  table PART add 
OnSave null /* При сохранении */
;
alter  table PART add 
OnRun null /* При открытии */
;
alter  table PART add 
OnDelete null /* При удалении */
;
alter  table PART add 
AddBehaivor
 INTEGER null 
 check (AddBehaivor in ( 0/* AddForm */
, 2/* RunAction */
, 1/* RefreshOnly */ )) /* Поведение при добавлении */
;
alter  table PART add 
ExtenderObject null /* Объект расширения */
;
alter  table PART add 
shablonBrief
 VARCHAR (100) null /* Шаблон для краткого отображения */
;
alter  table PART add 
ruleBrief null /* Правило составления BRIEF поля */
;
alter  table PART add 
IsJormalChange null 
 check (IsJormalChange in ( -1/* Да */
, 0/* Нет */ )) /* Вести журнал изменений */
;


/*Методы раздела*/
drop table PARTMENU/*Методы уровня раздела*/ 
;
create table PARTMENU/*Методы уровня раздела*/ (
ParentStructRowID CHAR(38) not null,
PARTMENUid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PARTMENU add 
Name
 VARCHAR (64) null /* Название */
;
alter  table PARTMENU add 
Caption
 VARCHAR (80) null /* Заголовок */
;
alter  table PARTMENU add 
ToolTip
 VARCHAR (80) null /* Подсказка */
;
alter  table PARTMENU add 
the_Action null /* Метод */
;
alter  table PARTMENU add 
IsMenuItem null 
 check (IsMenuItem in ( -1/* Да */
, 0/* Нет */ )) /* Включать в меню */
;
alter  table PARTMENU add 
IsToolBarButton null 
 check (IsToolBarButton in ( -1/* Да */
, 0/* Нет */ )) /* В тулбар */
;
alter  table PARTMENU add 
HotKey
 VARCHAR (20) null /* Горячая клавиша */
;


/*Отображение параметров*/
drop table PARTPARAMMAP/*отображение значений полей раздела на параметры метода*/ 
;
create table PARTPARAMMAP/*отображение значений полей раздела на параметры метода*/ (
ParentStructRowID CHAR(38) not null,
PARTPARAMMAPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PARTPARAMMAP add 
FieldName
 VARCHAR (255) null /* Поле (значение) */
;
alter  table PARTPARAMMAP add 
ParamName
 VARCHAR (80) null /* Параметр */
;
alter  table PARTPARAMMAP add 
NoEdit null 
 check (NoEdit in ( -1/* Да */
, 0/* Нет */ )) /* Редактировать параметр нельзя */
;


/*Поле*/
drop table FIELD/*Поле*/ 
;
create table FIELD/*Поле*/ (
ParentStructRowID CHAR(38) not null,
FIELDid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FIELD add 
Sequence
 integer null /* № п/п */
;
alter  table FIELD add 
Caption
 VARCHAR (80) null /* Надпись */
;
alter  table FIELD add 
Name
 VARCHAR (64) null /* Имя поля */
;
alter  table FIELD add 
FieldType null /* Тип поля */
;
alter  table FIELD add 
IsBrief null 
 check (IsBrief in ( -1/* Да */
, 0/* Нет */ )) /* Краткая информация */
;
alter  table FIELD add 
AllowNull null 
 check (AllowNull in ( -1/* Да */
, 0/* Нет */ )) /* Может быть пустым */
;
alter  table FIELD add 
DataSize
 integer null /* Размер поля */
;
alter  table FIELD add 
ReferenceType
 INTEGER null 
 check (ReferenceType in ( 2/* На строку раздела */
, 3/* На источник данных */
, 0/* Скалярное поле ( не ссылка) */
, 1/* На объект  */ )) /* Тип ссылки */
;
alter  table FIELD add 
RefToType null /* Ссылка на тип */
;
alter  table FIELD add 
RefToPart null /* Ссылка на раздел */
;
alter  table FIELD add 
InternalReference null 
 check (InternalReference in ( -1/* Да */
, 0/* Нет */ )) /* Ссылка в пределах объекта */
;
alter  table FIELD add 
CreateRefOnly null 
 check (CreateRefOnly in ( -1/* Да */
, 0/* Нет */ )) /* Только создание объекта */
;
alter  table FIELD add 
IsAutoNumber null 
 check (IsAutoNumber in ( -1/* Да */
, 0/* Нет */ )) /* Автонумерация */
;
alter  table FIELD add 
TheNumerator null /* Нумератор */
;
alter  table FIELD add 
ZoneTemplate
 VARCHAR (255) null /* Шаблон зоны нумерации */
;
alter  table FIELD add 
NumberDateField null /* Поле для расчета даты */
;
alter  table FIELD add 
TheComment null /* Описание */
;
alter  table FIELD add 
shablonBrief
 VARCHAR (100) null /* Шаблон для краткого отображения */
;
alter  table FIELD add 
theNameClass
 VARCHAR (100) null /* Имя класса для мастера строк */
;


/*Логика поля на форме*/
drop table FIELDVALIDATOR/*Логика взаимосвязей на форме при изменении поля*/ 
;
create table FIELDVALIDATOR/*Логика взаимосвязей на форме при изменении поля*/ (
ParentStructRowID CHAR(38) not null,
FIELDVALIDATORid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FIELDVALIDATOR add 
Target null /* Платформа */
;
alter  table FIELDVALIDATOR add 
Code null /* Скрипт */
;


/*Методы поля*/
drop table FIELDMENU/*Методы, ассоциированные с полем*/ 
;
create table FIELDMENU/*Методы, ассоциированные с полем*/ (
ParentStructRowID CHAR(38) not null,
FIELDMENUid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FIELDMENU add 
Name
 VARCHAR (64) null /* Название */
;
alter  table FIELDMENU add 
Caption
 VARCHAR (80) null /* Заголовок */
;
alter  table FIELDMENU add 
ToolTip
 VARCHAR (80) null /* Подсказка */
;
alter  table FIELDMENU add 
ActionID null /* Идентификатор вызываемого метода */
;
alter  table FIELDMENU add 
IsMenuItem null 
 check (IsMenuItem in ( -1/* Да */
, 0/* Нет */ )) /* В меню */
;
alter  table FIELDMENU add 
IsToolBarButton null 
 check (IsToolBarButton in ( -1/* Да */
, 0/* Нет */ )) /* В тулбар */
;
alter  table FIELDMENU add 
HotKey
 VARCHAR (20) null /* Горячая клавиша */
;


/*Отображение параметров*/
drop table FIELDPARAMMAP/*Отображение значений на параметры метода*/ 
;
create table FIELDPARAMMAP/*Отображение значений на параметры метода*/ (
ParentStructRowID CHAR(38) not null,
FIELDPARAMMAPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FIELDPARAMMAP add 
FieldName
 VARCHAR (255) null /* Поле (значение) */
;
alter  table FIELDPARAMMAP add 
ParamName
 VARCHAR (80) null /* Параметр */
;
alter  table FIELDPARAMMAP add 
NoEdit null 
 check (NoEdit in ( -1/* Да */
, 0/* Нет */ )) /* Редактировать параметр нельзя */
;


/*Интерфейсы расширения*/
drop table FldExtenders/**/ 
;
create table FldExtenders/**/ (
ParentStructRowID CHAR(38) not null,
FldExtendersid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FldExtenders add 
TheName
 VARCHAR (255) null /* Название */
;
alter  table FldExtenders add 
TargetPlatform null /* Целевая платформа */
;
alter  table FldExtenders add 
TheObject
 VARCHAR (255) null /* Объект */
;
alter  table FldExtenders add 
TheConfig
 VARCHAR (512) null /* Конфиг */
;


/*Значение по умолчанию*/
drop table FIELDEXPRESSION/*Выражение для вычисления поля
или значение по умолчанию*/ 
;
create table FIELDEXPRESSION/*Выражение для вычисления поля
или значение по умолчанию*/ (
ParentStructRowID CHAR(38) not null,
FIELDEXPRESSIONid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FIELDEXPRESSION add 
Target null /* Платформа */
;
alter  table FIELDEXPRESSION add 
Code null /* Скрипт */
;


/*Динамический фильтр*/
drop table DINAMICFILTERSCRIPT/*Выражение для построения дополнительного фильтра для ссылочных полей*/ 
;
create table DINAMICFILTERSCRIPT/*Выражение для построения дополнительного фильтра для ссылочных полей*/ (
ParentStructRowID CHAR(38) not null,
DINAMICFILTERSCRIPTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table DINAMICFILTERSCRIPT add 
Target null /* Целевая платформа */
;
alter  table DINAMICFILTERSCRIPT add 
Code null /* Скрипт */
;


/*Описание источника данных*/
drop table FIELDSRCDEF/*Описание источника данных для полей типа ReferenceSQL */ 
;
create table FIELDSRCDEF/*Описание источника данных для полей типа ReferenceSQL */ (
ParentStructRowID CHAR(38) not null,
FIELDSRCDEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FIELDSRCDEF add 
Provider
 VARCHAR (128) null /* Провайдер */
;
alter  table FIELDSRCDEF add 
ConnectionString
 VARCHAR (512) null /* Строка соединения с источником */
;
alter  table FIELDSRCDEF add 
DataSource
 VARCHAR (512) null /* Источник данных */
;
alter  table FIELDSRCDEF add 
IDField
 VARCHAR (128) null /* ID */
;
alter  table FIELDSRCDEF add 
BriefString
 VARCHAR (512) null /* Источник краткой информации */
;
alter  table FIELDSRCDEF add 
FilterString
 VARCHAR (512) null /* Фильтр источника данных */
;
alter  table FIELDSRCDEF add 
SortField
 VARCHAR (512) null /* Сортировка источника данных */
;
alter  table FIELDSRCDEF add 
DescriptionString null /* Примечания */
;
alter  table FIELDSRCDEF add 
DontShowDialog
 integer null 
 check (DontShowDialog in ( 1/* Да */
, 0/* Нет */ )) /* Не показывать форму выбора */
;


/*Представление*/
drop table PARTVIEW/*Вариант представления, который может использоваться для создания журнала*/ 
;
create table PARTVIEW/*Вариант представления, который может использоваться для создания журнала*/ (
ParentStructRowID CHAR(38) not null,
PARTVIEWid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PARTVIEW add 
Name
 VARCHAR (255) null /* Название */
;
alter  table PARTVIEW add 
the_Alias
 VARCHAR (64) null /* Псевдоним */
;
alter  table PARTVIEW add 
ForChoose null 
 check (ForChoose in ( -1/* Да */
, 0/* Нет */ )) /* Для поиска */
;
alter  table PARTVIEW add 
FilterField0
 VARCHAR (255) null /* Поле - фильтр 0 */
;
alter  table PARTVIEW add 
FilterField1
 VARCHAR (255) null /* Поле - фильтр 1 */
;
alter  table PARTVIEW add 
FilterField2
 VARCHAR (255) null /* Поле - фильтр 2 */
;
alter  table PARTVIEW add 
FilterField3
 VARCHAR (255) null /* Поле - фильтр 3 */
;


/*Колонка*/
drop table ViewColumn/*Колонка пердставления*/ 
;
create table ViewColumn/*Колонка пердставления*/ (
ParentStructRowID CHAR(38) not null,
ViewColumnid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ViewColumn add 
sequence
 integer null /* №  */
;
alter  table ViewColumn add 
Name
 VARCHAR (255) null /* Название */
;
alter  table ViewColumn add 
the_Alias
 VARCHAR (64) null /* Псвдоним */
;
alter  table ViewColumn add 
FromPart null /* Раздел */
;
alter  table ViewColumn add 
Field null /* Поле */
;
alter  table ViewColumn add 
Aggregation
 INTEGER null 
 check (Aggregation in ( 5/* MAX */
, 1/* AVG */
, 3/* SUM */
, 2/* COUNT */
, 4/* MIN */
, 6/* CUSTOM */
, 0/* none */ )) /* Агрегация */
;
alter  table ViewColumn add 
Expression null /* Формула */
;
alter  table ViewColumn add 
ForCombo null 
 check (ForCombo in ( -1/* Да */
, 0/* Нет */ )) /* Для комбо */
;


/*Связанные представления*/
drop table PARTVIEW_LNK/**/ 
;
create table PARTVIEW_LNK/**/ (
ParentStructRowID CHAR(38) not null,
PARTVIEW_LNKid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PARTVIEW_LNK add 
TheView null /* Представление */
;
alter  table PARTVIEW_LNK add 
TheJoinSource null /* Связь: Поле для join источник */
;
alter  table PARTVIEW_LNK add 
RefType
 integer null 
 check (RefType in ( 2/* Ссылка на строку */
, 1/* Ссылка на объект */
, 3/* Связка InstanceID (в передлах объекта) */
, 4/* Связка ParentStructRowID  (в передлах объекта) */
, 0/* Нет */ )) /* Связывать как */
;
alter  table PARTVIEW_LNK add 
TheJoinDestination null /* Свзяь: Поле для join приемник */
;
alter  table PARTVIEW_LNK add 
HandJoin
 VARCHAR (255) null /* Ручной join */
;
alter  table PARTVIEW_LNK add 
SEQ
 integer null /* Порядок */
;


/*Интерфейсы расширения*/
drop table ExtenderInterface/**/ 
;
create table ExtenderInterface/**/ (
ParentStructRowID CHAR(38) not null,
ExtenderInterfaceid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ExtenderInterface add 
TheName
 VARCHAR (255) null /* Название */
;
alter  table ExtenderInterface add 
TargetPlatform null /* Целевая платформа */
;
alter  table ExtenderInterface add 
TheObject
 VARCHAR (255) null /* Объект */
;
alter  table ExtenderInterface add 
TheConfig
 VARCHAR (512) null /* Конфиг */
;


/*Логика на форме*/
drop table VALIDATOR/*Действия в впроцессе редактирования*/ 
;
create table VALIDATOR/*Действия в впроцессе редактирования*/ (
ParentStructRowID CHAR(38) not null,
VALIDATORid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VALIDATOR add 
Target null /* Целевая платформа */
;
alter  table VALIDATOR add 
Code null /* Скрипт */
;


/*Ограничение уникальности*/
drop table UNIQUECONSTRAINT/*Ограничение уникальности*/ 
;
create table UNIQUECONSTRAINT/*Ограничение уникальности*/ (
ParentStructRowID CHAR(38) not null,
UNIQUECONSTRAINTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table UNIQUECONSTRAINT add 
Name
 VARCHAR (80) null /* Название */
;
alter  table UNIQUECONSTRAINT add 
PerParent null 
 check (PerParent in ( -1/* Да */
, 0/* Нет */ )) /* По родителю */
;
alter  table UNIQUECONSTRAINT add 
TheComment null /* Описание */
;


/*Поля ограничения*/
drop table CONSTRAINTFIELD/*Поля ограничения*/ 
;
create table CONSTRAINTFIELD/*Поля ограничения*/ (
ParentStructRowID CHAR(38) not null,
CONSTRAINTFIELDid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table CONSTRAINTFIELD add 
TheField null /* Поле */
;


/*Проверка правильности*/
drop table INSTANCEVALIDATOR/*Проверка правильности для объекта в целом*/ 
;
create table INSTANCEVALIDATOR/*Проверка правильности для объекта в целом*/ (
ParentStructRowID CHAR(38) not null,
INSTANCEVALIDATORid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table INSTANCEVALIDATOR add 
Target null /* Платформа */
;
alter  table INSTANCEVALIDATOR add 
Code null /* Скрипт */
;


/*Состояния*/
drop table OBJSTATUS/*Возможные логические состояния документа*/ 
;
create table OBJSTATUS/*Возможные логические состояния документа*/ (
ParentStructRowID CHAR(38) not null,
OBJSTATUSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table OBJSTATUS add 
name
 VARCHAR (80) null /* Название */
;
alter  table OBJSTATUS add 
isStartup null 
 check (isStartup in ( -1/* Да */
, 0/* Нет */ )) /* Начальное */
;
alter  table OBJSTATUS add 
IsArchive null 
 check (IsArchive in ( -1/* Да */
, 0/* Нет */ )) /* Архивное */
;
alter  table OBJSTATUS add 
the_comment null /* Описание */
;


/*Разрешенные переходы*/
drop table NEXTSTATE/*Матрица переходов */ 
;
create table NEXTSTATE/*Матрица переходов */ (
ParentStructRowID CHAR(38) not null,
NEXTSTATEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table NEXTSTATE add 
TheState null /* Разрешенное состояние */
;


/*Режим работы*/
drop table OBJECTMODE/*Режим работы*/ 
;
create table OBJECTMODE/*Режим работы*/ (
ParentStructRowID CHAR(38) not null,
OBJECTMODEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table OBJECTMODE add 
Name
 VARCHAR (5) null /* Название режима */
;
alter  table OBJECTMODE add 
DefaultMode null 
 check (DefaultMode in ( -1/* Да */
, 0/* Нет */ )) /* Этот режим является основным режимом работы объекта */
;
alter  table OBJECTMODE add 
TheComment null /* Описание */
;


/*Органичения разделов*/
drop table STRUCTRESTRICTION/*Ораничения на доступ к разделу документа*/ 
;
create table STRUCTRESTRICTION/*Ораничения на доступ к разделу документа*/ (
ParentStructRowID CHAR(38) not null,
STRUCTRESTRICTIONid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table STRUCTRESTRICTION add 
Struct null /* структура, доступ к которой ограничен */
;
alter  table STRUCTRESTRICTION add 
AllowRead null 
 check (AllowRead in ( -1/* Да */
, 0/* Нет */ )) /* Разрешен просмотр */
;
alter  table STRUCTRESTRICTION add 
AllowAdd null 
 check (AllowAdd in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено добавлять */
;
alter  table STRUCTRESTRICTION add 
AllowEdit null 
 check (AllowEdit in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено изменять */
;
alter  table STRUCTRESTRICTION add 
AllowDelete null 
 check (AllowDelete in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено удалять */
;


/*Ограничения полей*/
drop table FIELDRESTRICTION/*Ограничения на доступ к полям раздела*/ 
;
create table FIELDRESTRICTION/*Ограничения на доступ к полям раздела*/ (
ParentStructRowID CHAR(38) not null,
FIELDRESTRICTIONid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FIELDRESTRICTION add 
ThePart null /* Структура, которой принадлежит поле */
;
alter  table FIELDRESTRICTION add 
TheField null /* Поле, на которое накладывается ограничение */
;
alter  table FIELDRESTRICTION add 
AllowRead null 
 check (AllowRead in ( -1/* Да */
, 0/* Нет */ )) /* Разрешен просмотр */
;
alter  table FIELDRESTRICTION add 
AllowModify null 
 check (AllowModify in ( -1/* Да */
, 0/* Нет */ )) /* Разрешена модификация */
;
alter  table FIELDRESTRICTION add 
MandatoryField null 
 check (MandatoryField in ( 0/* Нет */
, -1/* Не существенно */
, 1/* Да */ )) /* Обязательное поле */
;


/*Ограничения методов*/
drop table METHODRESTRICTION/*Ограничение на использование методов раздела*/ 
;
create table METHODRESTRICTION/*Ограничение на использование методов раздела*/ (
ParentStructRowID CHAR(38) not null,
METHODRESTRICTIONid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table METHODRESTRICTION add 
Part null /* Структура, которой принадлежит метод */
;
alter  table METHODRESTRICTION add 
Method null /* Метод */
;
alter  table METHODRESTRICTION add 
IsRestricted null 
 check (IsRestricted in ( -1/* Да */
, 0/* Нет */ )) /* Запрещено использовать */
;


/*Методы типа*/
drop table TYPEMENU/*Методы уровня типа*/ 
;
create table TYPEMENU/*Методы уровня типа*/ (
ParentStructRowID CHAR(38) not null,
TYPEMENUid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table TYPEMENU add 
Name
 VARCHAR (64) null /* Название */
;
alter  table TYPEMENU add 
Caption
 VARCHAR (80) null /* Заголовок */
;
alter  table TYPEMENU add 
ToolTip
 VARCHAR (80) null /* Подсказка */
;
alter  table TYPEMENU add 
the_Action null /* Метод */
;
alter  table TYPEMENU add 
IsMenuItem null 
 check (IsMenuItem in ( -1/* Да */
, 0/* Нет */ )) /* Включать в меню */
;
alter  table TYPEMENU add 
IsToolBarButton null 
 check (IsToolBarButton in ( -1/* Да */
, 0/* Нет */ )) /* Включать в тулбар */
;
alter  table TYPEMENU add 
HotKey
 VARCHAR (20) null /* Горячая клавиша */
;


/*Приложение*/
drop table MTZAPP/*Группа взаимосвязных документов*/ 
;
create table MTZAPP/*Группа взаимосвязных документов*/ (
InstanceID CHAR(38) ,
MTZAPPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table MTZAPP add 
Name
 VARCHAR (255) null /* Название */
;
alter  table MTZAPP add 
DBName
 VARCHAR (64) null /* База данных */
;
alter  table MTZAPP add 
TheComment null /* Описание */
;


/*Обязательные приложения*/
drop table ParentPackage/*Приложения от которых зависит данное приложение*/ 
;
create table ParentPackage/*Приложения от которых зависит данное приложение*/ (
ParentStructRowID CHAR(38) not null,
ParentPackageid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ParentPackage add 
Package null /* Приложение */
;


/*Пакет генерации*/
drop table GENPACKAGE/*Пакет генерации*/ 
;
create table GENPACKAGE/*Пакет генерации*/ (
InstanceID CHAR(38) ,
GENPACKAGEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table GENPACKAGE add 
Name
 VARCHAR (255) null /* Название */
;


/*Генераторы*/
drop table GENERATOR_TARGET/*Генераторы*/ 
;
create table GENERATOR_TARGET/*Генераторы*/ (
ParentStructRowID CHAR(38) not null,
GENERATOR_TARGETid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table GENERATOR_TARGET add 
Name
 VARCHAR (255) null /* Название */
;
alter  table GENERATOR_TARGET add 
TargetType null 
 check (TargetType in ( 0/* СУБД */
, 4/* АРМ */
, 3/* Документация */
, 1/* МОДЕЛЬ */
, 2/* Приложение */ )) /* Тип платформы */
;
alter  table GENERATOR_TARGET add 
QueueName
 VARCHAR (255) null /* Очередь */
;
alter  table GENERATOR_TARGET add 
GeneratorProgID
 VARCHAR (255) null /* COM класс */
;
alter  table GENERATOR_TARGET add 
GeneratorStyle
 INTEGER null 
 check (GeneratorStyle in ( 0/* Один тип */
, 1/* Все типы сразу */ )) /* Вариант */
;
alter  table GENERATOR_TARGET add 
TheDevelopmentEnv null 
 check (TheDevelopmentEnv in ( 2/* JAVA */
, 3/* OTHER */
, 1/* DOTNET */
, 0/* VB6 */ )) /* Среда разработки */
;


/*Ручной код*/
drop table GENMANUALCODE/*Код, который не укладывается в описание модели*/ 
;
create table GENMANUALCODE/*Код, который не укладывается в описание модели*/ (
ParentStructRowID CHAR(38) not null,
GENMANUALCODEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table GENMANUALCODE add 
Name
 VARCHAR (255) null /* Название */
;
alter  table GENMANUALCODE add 
the_Alias
 VARCHAR (80) null /* Псевдоним */
;
alter  table GENMANUALCODE add 
Code null /* Код */
;


/*Контрольные элементы*/
drop table GENCONTROLS/*Контрольные элементы, которые используются при генерации*/ 
;
create table GENCONTROLS/*Контрольные элементы, которые используются при генерации*/ (
ParentStructRowID CHAR(38) not null,
GENCONTROLSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table GENCONTROLS add 
ControlProgID
 VARCHAR (255) null /* ProgID контрольконо элемента */
;
alter  table GENCONTROLS add 
ControlClassID
 VARCHAR (40) null /* Класс контрольногоэлемента */
;
alter  table GENCONTROLS add 
VersionMajor
 integer null /* Версия */
;
alter  table GENCONTROLS add 
VersionMinor
 integer null /* Подверсия */
;


/*Библиотеки*/
drop table GENREFERENCE/*Библиотеки, которые используются при генерации*/ 
;
create table GENREFERENCE/*Библиотеки, которые используются при генерации*/ (
ParentStructRowID CHAR(38) not null,
GENREFERENCEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table GENREFERENCE add 
Name
 VARCHAR (255) null /* Название */
;
alter  table GENREFERENCE add 
RefClassID
 VARCHAR (40) null /* Класс ссылки */
;
alter  table GENREFERENCE add 
VersionMajor
 integer null /* Номер версии */
;
alter  table GENREFERENCE add 
VersionMinor
 integer null /* Подверсия */
;


/*Локализация*/
drop table LocalizeInfo/**/ 
;
create table LocalizeInfo/**/ (
InstanceID CHAR(38) ,
LocalizeInfoid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table LocalizeInfo add 
LangFull
 VARCHAR (255) null /* Язык - название */
;
alter  table LocalizeInfo add 
LangShort
 VARCHAR (255) null /* Код языка */
;


/*Требование*/
drop table PEKPQ_DEF/*Описание требования на оплату*/ 
;
create table PEKPQ_DEF/*Описание требования на оплату*/ (
InstanceID CHAR(38) ,
PEKPQ_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKPQ_DEF add 
sequence
 integer null /* № */
;
alter  table PEKPQ_DEF add 
TheDate
 DATETIME null /* Дата требования */
;
alter  table PEKPQ_DEF add 
TheDept null /* Подразделение */
;
alter  table PEKPQ_DEF add 
TheComment null /* Назначение платежа */
;
alter  table PEKPQ_DEF add 
TheSumm null /* Сума платежа */
;
alter  table PEKPQ_DEF add 
ToSuplier null /* Контрагент */
;
alter  table PEKPQ_DEF add 
TheDescription null /* Примечание */
;
alter  table PEKPQ_DEF add 
TheDogovor null /* Договор */
;
alter  table PEKPQ_DEF add 
Code1C
 VARCHAR (40) null /* Код1С */
;


/*Банки*/
drop table ENTDIC_BANK/*Банки*/ 
;
create table ENTDIC_BANK/*Банки*/ (
InstanceID CHAR(38) ,
ENTDIC_BANKid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ENTDIC_BANK add 
BIC
 VARCHAR (11) null /* БИК */
;
alter  table ENTDIC_BANK add 
RKC
 VARCHAR (11) null /* РКЦ */
;
alter  table ENTDIC_BANK add 
ACC
 VARCHAR (20) null /* Счет */
;
alter  table ENTDIC_BANK add 
KORACC
 VARCHAR (20) null /* Кор. счет */
;
alter  table ENTDIC_BANK add 
SUBKORACC
 VARCHAR (20) null /* Суб кор счет */
;
alter  table ENTDIC_BANK add 
name
 VARCHAR (255) null /* Название */
;
alter  table ENTDIC_BANK add 
Addr
 VARCHAR (255) null /* Адрес */
;
alter  table ENTDIC_BANK add 
Code1C
 VARCHAR (40) null /* Код1С */
;


/*Тип доставки*/
drop table ENTDIC_DOST/*Тип доставки*/ 
;
create table ENTDIC_DOST/*Тип доставки*/ (
InstanceID CHAR(38) ,
ENTDIC_DOSTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ENTDIC_DOST add 
Code
 VARCHAR (10) null /* Код */
;
alter  table ENTDIC_DOST add 
name
 VARCHAR (255) null /* Название */
;


/*Города*/
drop table ENTDIC_TOWN/*Города*/ 
;
create table ENTDIC_TOWN/*Города*/ (
InstanceID CHAR(38) ,
ENTDIC_TOWNid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ENTDIC_TOWN add 
name
 VARCHAR (255) null /* Название */
;
alter  table ENTDIC_TOWN add 
country null /* Страна */
;


/*Тип транспорта*/
drop table ENTDIC_TransportType/*Типы транспорта*/ 
;
create table ENTDIC_TransportType/*Типы транспорта*/ (
InstanceID CHAR(38) ,
ENTDIC_TransportTypeid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ENTDIC_TransportType add 
TheName
 VARCHAR (255) null /* Название типа */
;


/*Организационно-правовая форма*/
drop table ENTDIC_OPF/*Организационно-правовая форма*/ 
;
create table ENTDIC_OPF/*Организационно-правовая форма*/ (
InstanceID CHAR(38) ,
ENTDIC_OPFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ENTDIC_OPF add 
name
 VARCHAR (255) null /* Название */
;


/*Единицы измерения*/
drop table ENTDIC_EDIZM/*Единицы измерения*/ 
;
create table ENTDIC_EDIZM/*Единицы измерения*/ (
InstanceID CHAR(38) ,
ENTDIC_EDIZMid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ENTDIC_EDIZM add 
code
 VARCHAR (10) null /* Код */
;
alter  table ENTDIC_EDIZM add 
name
 VARCHAR (255) null /* Название */
;
alter  table ENTDIC_EDIZM add 
Netto null /* Базовых единиц */
;
alter  table ENTDIC_EDIZM add 
baseEDIZM null /* Базовая единица изм. */
;


/*Валюта*/
drop table ENTDIC_CURRENCY/*Валюта*/ 
;
create table ENTDIC_CURRENCY/*Валюта*/ (
InstanceID CHAR(38) ,
ENTDIC_CURRENCYid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ENTDIC_CURRENCY add 
name
 VARCHAR (255) null /* Название */
;
alter  table ENTDIC_CURRENCY add 
Code
 VARCHAR (10) null /* Код */
;


/*Курс валюты*/
drop table ENTDIC_CURCOURCE/*Курс валюты*/ 
;
create table ENTDIC_CURCOURCE/*Курс валюты*/ (
ParentStructRowID CHAR(38) not null,
ENTDIC_CURCOURCEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ENTDIC_CURCOURCE add 
CourceDate
 DATETIME null /* Дата */
;
alter  table ENTDIC_CURCOURCE add 
the_Value null /* Курс */
;
alter  table ENTDIC_CURCOURCE add 
Quantity null /* Количество */
;


/*Страны*/
drop table ENTDIC_COUNTRY/*Страны*/ 
;
create table ENTDIC_COUNTRY/*Страны*/ (
InstanceID CHAR(38) ,
ENTDIC_COUNTRYid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ENTDIC_COUNTRY add 
Code
 VARCHAR (10) null /* Код */
;
alter  table ENTDIC_COUNTRY add 
name
 VARCHAR (255) null /* Название */
;


/*Название областей*/
drop table ENTDIC_REGION/*Название областей*/ 
;
create table ENTDIC_REGION/*Название областей*/ (
InstanceID CHAR(38) ,
ENTDIC_REGIONid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ENTDIC_REGION add 
Code
 VARCHAR (10) null /* Код */
;
alter  table ENTDIC_REGION add 
name
 VARCHAR (255) null /* Название */
;


/*Статистика  посещений сайта*/
drop table ST_MAIN/**/ 
;
create table ST_MAIN/**/ (
InstanceID CHAR(38) ,
ST_MAINid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ST_MAIN add 
AccessDate
 DATETIME null /* Дата */
;
alter  table ST_MAIN add 
UrlReferer
 VARCHAR (1024) null /* Предыдущий адрес */
;
alter  table ST_MAIN add 
UserAgent
 VARCHAR (256) null /* Интернет агент */
;
alter  table ST_MAIN add 
UserHostAddress
 VARCHAR (512) null /* Адрес хоста */
;
alter  table ST_MAIN add 
UserHostName
 VARCHAR (512) null /* Имя хоста */
;
alter  table ST_MAIN add 
the_Description
 VARCHAR (1024) null /* Примечания */
;
alter  table ST_MAIN add 
WEBS_Page null /* Стартовая страница */
;


/*Описание*/
drop table ST_DEF/**/ 
;
create table ST_DEF/**/ (
InstanceID CHAR(38) ,
ST_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ST_DEF add 
Name
 VARCHAR (1024) null /* Имя */
;
alter  table ST_DEF add 
WEBS null /* Сайт */
;
alter  table ST_DEF add 
the_Description
 VARCHAR (4000) null /* Примечания */
;
alter  table ST_DEF add 
IsActive null 
 check (IsActive in ( -1/* Да */
, 0/* Нет */ )) /* Активна */
;


/*Статистика посещений страниц сайта*/
drop table ST_PAGES/**/ 
;
create table ST_PAGES/**/ (
InstanceID CHAR(38) ,
ST_PAGESid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ST_PAGES add 
AccessDate
 DATETIME null /* Дата */
;
alter  table ST_PAGES add 
UrlReferer
 VARCHAR (1024) null /* Предыдущий адрес */
;
alter  table ST_PAGES add 
UserAgent
 VARCHAR (256) null /* Интернет агент */
;
alter  table ST_PAGES add 
UserHostAddress
 VARCHAR (512) null /* Адрес хоста */
;
alter  table ST_PAGES add 
UserHostName
 VARCHAR (512) null /* Имя хоста */
;
alter  table ST_PAGES add 
the_Description
 VARCHAR (1024) null /* Примечания */
;
alter  table ST_PAGES add 
WEBS_Page null /* Стартовая страница */
;


/*Описание расширения Журнал*/
drop table STDJournlaExtInfo/**/ 
;
create table STDJournlaExtInfo/**/ (
InstanceID CHAR(38) ,
STDJournlaExtInfoid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table STDJournlaExtInfo add 
TheName
 VARCHAR (255) null /* Название */
;
alter  table STDJournlaExtInfo add 
TheJournalRef null /* Журнал */
;


/*Параметры*/
drop table STDJournalExtParam/**/ 
;
create table STDJournalExtParam/**/ (
InstanceID CHAR(38) ,
STDJournalExtParamid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table STDJournalExtParam add 
FieldName
 VARCHAR (255) null /* Поле (значение) */
;
alter  table STDJournalExtParam add 
ParamName
 VARCHAR (80) null /* Параметр */
;
alter  table STDJournalExtParam add 
TargetPlatform null /* Целевая платформа */
;


/*Фильтры журнала*/
drop table STDJournalExtFlt/**/ 
;
create table STDJournalExtFlt/**/ (
InstanceID CHAR(38) ,
STDJournalExtFltid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table STDJournalExtFlt add 
ViewSource
 VARCHAR (255) null /* Запрос журнала */
;


/*Поля фильтра*/
drop table STDJournalExtField/**/ 
;
create table STDJournalExtField/**/ (
ParentStructRowID CHAR(38) not null,
STDJournalExtFieldid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table STDJournalExtField add 
ViewField
 VARCHAR (255) null /* Колонка журнала */
;
alter  table STDJournalExtField add 
FieldSource
 VARCHAR (255) null /* Поле (значение) */
;
alter  table STDJournalExtField add 
TargetPlatform null /* Целевая платформа */
;
alter  table STDJournalExtField add 
ConstantValue
 VARCHAR (255) null /* Значение */
;
alter  table STDJournalExtField add 
ConditionType
 INTEGER null 
 check (ConditionType in ( 2/* &lt;&gt; */
, 3/* &gt; */
, 1/* = */
, 4/* &gt;= */
, 7/* &lt;= */
, 8/* like */
, 6/* &lt; */
, 0/* none */ )) /* Условие на поле */
;


/*Дни*/
drop table CAL_DAYS/*День календаря*/ 
;
create table CAL_DAYS/*День календаря*/ (
InstanceID CHAR(38) ,
CAL_DAYSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table CAL_DAYS add 
TheDate
 DATETIME null /* Дата */
;
alter  table CAL_DAYS add 
IsHoliday null 
 check (IsHoliday in ( -1/* Да */
, 0/* Нет */ )) /* Выходной */
;


/*Рабочие часы*/
drop table CAL_TIME/*Рабочее время в пределах дня*/ 
;
create table CAL_TIME/*Рабочее время в пределах дня*/ (
ParentStructRowID CHAR(38) not null,
CAL_TIMEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table CAL_TIME add 
FromTime
 datetime null /* Начало периода */
;
alter  table CAL_TIME add 
ToTime
 datetime null /* Конец периода */
;


/*Описание*/
drop table CAL_HEAD/*Описание календаря*/ 
;
create table CAL_HEAD/*Описание календаря*/ (
InstanceID CHAR(38) ,
CAL_HEADid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table CAL_HEAD add 
Name
 VARCHAR (255) null /* Название */
;
alter  table CAL_HEAD add 
FillStyle
 VARCHAR (255) null /* Вариант заполнения */
;


/*Суть сообщения*/
drop table SrvMessageInfo/*Суть сообщения*/ 
;
create table SrvMessageInfo/*Суть сообщения*/ (
InstanceID CHAR(38) ,
SrvMessageInfoid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table SrvMessageInfo add 
ForUser null /* Для пользователя */
;
alter  table SrvMessageInfo add 
msgDate
 DATETIME null /* Дата */
;
alter  table SrvMessageInfo add 
MsgInfo null /* Текст сообщения */
;
alter  table SrvMessageInfo add 
TheDocument null /* Документ */
;
alter  table SrvMessageInfo add 
ReadTime
 DATETIME null /* Время прочтения */
;


/*Описание*/
drop table PEKNAL_DEF/*Раздел описывает факт наличной оплаты*/ 
;
create table PEKNAL_DEF/*Раздел описывает факт наличной оплаты*/ (
InstanceID CHAR(38) ,
PEKNAL_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKNAL_DEF add 
TheNumber
 VARCHAR (20) null /* Номер */
;
alter  table PEKNAL_DEF add 
TheDate
 DATETIME null /* Дата оплаты */
;
alter  table PEKNAL_DEF add 
TheSumm null /* Сумма оплаты */
;
alter  table PEKNAL_DEF add 
ThePEKZ null /* Заявка */
;
alter  table PEKNAL_DEF add 
TheDept null /* Из подразделения */
;
alter  table PEKNAL_DEF add 
FromClient null /* От клиента */
;
alter  table PEKNAL_DEF add 
TheComment null /* Назначение платежа */
;
alter  table PEKNAL_DEF add 
RceivedBy null /* Кто получил */
;
alter  table PEKNAL_DEF add 
Code1C
 VARCHAR (40) null /* Код1С */
;


/*Привязка к заявкам*/
drop table PEKNAL_PZ/*Привязка оплаты к заявкам*/ 
;
create table PEKNAL_PZ/*Привязка оплаты к заявкам*/ (
InstanceID CHAR(38) ,
PEKNAL_PZid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKNAL_PZ add 
PZ null /* Заявка */
;
alter  table PEKNAL_PZ add 
TheSumm null /* Сумма */
;


/*Раскладка по филиалам*/
drop table PEKNAL_ROWS/*Разбивка стоимости наличной оплаты по филиалам*/ 
;
create table PEKNAL_ROWS/*Разбивка стоимости наличной оплаты по филиалам*/ (
InstanceID CHAR(38) ,
PEKNAL_ROWSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKNAL_ROWS add 
TheNumber
 VARCHAR (20) null /* Номер */
;
alter  table PEKNAL_ROWS add 
TheDate
 DATETIME null /* Дата оплаты */
;
alter  table PEKNAL_ROWS add 
TheSumm null /* Сумма оплаты */
;
alter  table PEKNAL_ROWS add 
TheDept null /* Подразделение */
;
alter  table PEKNAL_ROWS add 
FromClient null /* От клиента */
;
alter  table PEKNAL_ROWS add 
TheDogovor null /* Договор */
;


/*Файл*/
drop table FileDef/*Файл*/ 
;
create table FileDef/*Файл*/ (
InstanceID CHAR(38) ,
FileDefid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table FileDef add 
Name
 VARCHAR (255) null /* Название */
;
alter  table FileDef add 
the_Comment null /* Пояснение */
;


/*Версии*/
drop table FileVersion/*Версии файла*/ 
;
create table FileVersion/*Версии файла*/ (
InstanceID CHAR(38) ,
FileVersionid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
;
alter  table FileVersion add 
Version
 VARCHAR (20) null /* Номер версии */
;
alter  table FileVersion add 
Ext
 VARCHAR (5) null /* Расширение */
;
alter  table FileVersion add 
CurrentVersion null 
 check (CurrentVersion in ( -1/* Да */
, 0/* Нет */ )) /* Текущая версия */
;
alter  table FileVersion add 
the_Comment null /* Пояснение */
;
alter  table FileVersion add 
FileData null /* Данные */
;
alter  table FileVersion add 
 FileData_EXT char(4) null
;


/*Зоны*/
drop table Num_zones/*Зоны уникальных нумеров*/ 
;
create table Num_zones/*Зоны уникальных нумеров*/ (
InstanceID CHAR(38) ,
Num_zonesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table Num_zones add 
ZoneMask
 VARCHAR (255) null /* Маска зоны */
;


/*Номера*/
drop table Num_Values/*уникальные номера*/ 
;
create table Num_Values/*уникальные номера*/ (
ParentStructRowID CHAR(38) not null,
Num_Valuesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table Num_Values add 
the_Value
 integer null /* Значение */
;
alter  table Num_Values add 
OwnerPartName
 VARCHAR (64) null /* Раздел */
;
alter  table Num_Values add 
OwnerRowID
 uniqueidentifier null /* Идентификатор строки */
;


/*Описание*/
drop table Num_head/*Описание нумератора*/ 
;
create table Num_head/*Описание нумератора*/ (
InstanceID CHAR(38) ,
Num_headid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table Num_head add 
Name
 VARCHAR (80) null /* Название */
;
alter  table Num_head add 
Shema
 INTEGER null 
 check (Shema in ( 0/* Единая зона */
, 1/* По году */
, 4/* По дню */
, 2/* По кварталу */
, 3/* По месяцу */
, 10/* Произвольные зоны */ )) /* Схема нумерации */
;


/*Текущие настройки*/
drop table BaseSetting/**/ 
;
create table BaseSetting/**/ (
InstanceID CHAR(38) ,
BaseSettingid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table BaseSetting add 
FIL null /* Филиал */
;
alter  table BaseSetting add 
NDS
 VARCHAR (10) null /* Ставка НДС */
;
alter  table BaseSetting add 
NewClientTRF null /* Тариф для нового клиента */
;
alter  table BaseSetting add 
SingleSendTRF null /* Тариф для разовой отправки */
;
alter  table BaseSetting add 
SingleSendCli null /* Клиент для всех разовых заявок */
;
alter  table BaseSetting add 
Passport
 VARCHAR (200) null /* Данные паспорта для Ф116 */
;
alter  table BaseSetting add 
NDS103 null 
 check (NDS103 in ( -1/* Да */
, 0/* Нет */ )) /* Ф103 с НДС */
;
alter  table BaseSetting add 
Count103
 VARCHAR (5) null /* Кол-во Ф103 */
;
alter  table BaseSetting add 
TrTypeDef null /* Тип доставки по умолчанию */
;
alter  table BaseSetting add 
Direction null /* Направление по умолчанию */
;
alter  table BaseSetting add 
WED null /* Ед. изм. веса по умолчанию */
;
alter  table BaseSetting add 
VED null /* Ед. изм. объема по умолчанию */
;
alter  table BaseSetting add 
Code null 
 check (Code in ( -1/* Да */
, 0/* Нет */ )) /* Присваивать номер при взвешивании */
;
alter  table BaseSetting add 
IDX
 VARCHAR (10) null /* Индекс почтового отделения */
;
alter  table BaseSetting add 
DateSHCode
 VARCHAR (10) null /* Явный код месяца для штрих-кода */
;
alter  table BaseSetting add 
Round500 null 
 check (Round500 in ( -1/* Да */
, 0/* Нет */ )) /* Округление до 500 гр. */
;
alter  table BaseSetting add 
AccountGeneral
 VARCHAR (100) null /* Главный бухгалтер */
;
alter  table BaseSetting add 
CashMan
 VARCHAR (255) null /* Кассир */
;
alter  table BaseSetting add 
addInvoiceInfo null /* Доверенность (для счет-фактуры) */
;
alter  table BaseSetting add 
genDirector
 VARCHAR (255) null /* Руководитель организации */
;


/*Описание*/
drop table Reports/*Описание*/ 
;
create table Reports/*Описание*/ (
InstanceID CHAR(38) ,
Reportsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table Reports add 
Name
 VARCHAR (255) null /* Название */
;
alter  table Reports add 
ReportFile null /* Файл отчета */
;
alter  table Reports add 
 ReportFile_EXT char(4) null
;
alter  table Reports add 
Caption
 VARCHAR (255) null /* Заголовок */
;
alter  table Reports add 
PrepareMethod null /* Метод для формирования */
;
alter  table Reports add 
ReportType
 INTEGER null 
 check (ReportType in ( 1/* Двумерная матрица */
, 0/* Таблица */
, 3/* Экспорт по WORD шаблону */
, 2/* Только расчет */
, 4/* Экспорт по Excel шаблону */ )) /* Тип отчета */
;
alter  table Reports add 
TheReportExt null /* Расширение для создания отчета */
;
alter  table Reports add 
ReportView
 VARCHAR (255) null /* Базовый запрос */
;
alter  table Reports add 
TheComment null /* Описание */
;


/*Секции*/
drop table RPTStruct/*Секции*/ 
;
create table RPTStruct/*Секции*/ (
InstanceID CHAR(38) ,
RPTStructid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
;
alter  table RPTStruct add 
Name
 VARCHAR (64) null /* Название */
;
alter  table RPTStruct add 
Caption
 VARCHAR (255) null /* Заголовок */
;


/*Поля секции*/
drop table RPTFields/*Поля секции*/ 
;
create table RPTFields/*Поля секции*/ (
ParentStructRowID CHAR(38) not null,
RPTFieldsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table RPTFields add 
Name
 VARCHAR (64) null /* Название */
;
alter  table RPTFields add 
FieldType null /* Тип поля */
;
alter  table RPTFields add 
FieldSize
 integer null /* Размер */
;
alter  table RPTFields add 
Caption
 VARCHAR (255) null /* Заголовок */
;


/*Формулы*/
drop table RPTFormula/*Формулы*/ 
;
create table RPTFormula/*Формулы*/ (
InstanceID CHAR(38) ,
RPTFormulaid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table RPTFormula add 
Name
 VARCHAR (64) null /* Название */
;
alter  table RPTFormula add 
Code null /* Выражение */
;
alter  table RPTFormula add 
Platform null /* Платформа */
;


/*Описание*/
drop table PEKRKO_DEF/*Раздел описывает факт возварта наличных из кассы*/ 
;
create table PEKRKO_DEF/*Раздел описывает факт возварта наличных из кассы*/ (
InstanceID CHAR(38) ,
PEKRKO_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKRKO_DEF add 
TheNumber
 VARCHAR (20) null /* Номер */
;
alter  table PEKRKO_DEF add 
TheDate
 DATETIME null /* Дата оплаты */
;
alter  table PEKRKO_DEF add 
TheSumm null /* Сумма оплаты */
;
alter  table PEKRKO_DEF add 
ThePEKZ null /* Заявка */
;
alter  table PEKRKO_DEF add 
TheDept null /* Из подразделения */
;
alter  table PEKRKO_DEF add 
FromClient null /* Клиент-получатель */
;
alter  table PEKRKO_DEF add 
TheComment null /* Назначение платежа */
;
alter  table PEKRKO_DEF add 
EmpPayed null /* Кто выдал */
;
alter  table PEKRKO_DEF add 
Code1C
 VARCHAR (40) null /* Код1С */
;


/*Раскладка по филиалам*/
drop table PEKRKO_ROWS/*Разбивка стоимости возврата наличных по филиалам*/ 
;
create table PEKRKO_ROWS/*Разбивка стоимости возврата наличных по филиалам*/ (
InstanceID CHAR(38) ,
PEKRKO_ROWSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKRKO_ROWS add 
TheNumber
 VARCHAR (20) null /* Номер */
;
alter  table PEKRKO_ROWS add 
TheDate
 DATETIME null /* Дата оплаты */
;
alter  table PEKRKO_ROWS add 
TheSumm null /* Сумма оплаты */
;
alter  table PEKRKO_ROWS add 
TheDept null /* Подразделение */
;
alter  table PEKRKO_ROWS add 
FromClient null /* От клиента */
;
alter  table PEKRKO_ROWS add 
TheDogovor null /* Договор */
;


/*Регресс по общему весу*/
drop table PEKTRF_REGALL/*Регресс по общему весу*/ 
;
create table PEKTRF_REGALL/*Регресс по общему весу*/ (
InstanceID CHAR(38) ,
PEKTRF_REGALLid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKTRF_REGALL add 
WeightFrom null /* Суммарный вес от */
;
alter  table PEKTRF_REGALL add 
WeightTo null /* Суммарный вес по */
;
alter  table PEKTRF_REGALL add 
WeightEDIZM null /* Ед. изм. веса */
;
alter  table PEKTRF_REGALL add 
PricePercent null /* Процент от тарифа */
;
alter  table PEKTRF_REGALL add 
FixedPrice null /* Фиксированная цена */
;
alter  table PEKTRF_REGALL add 
PriceCurrency null /* Валюта фиксированной цены */
;


/*Скидки*/
drop table PEKTRF_DECR/*Скидки*/ 
;
create table PEKTRF_DECR/*Скидки*/ (
InstanceID CHAR(38) ,
PEKTRF_DECRid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKTRF_DECR add 
Name
 VARCHAR (255) null /* Название скидки */
;
alter  table PEKTRF_DECR add 
DecrPercent null /* Процент к тарифу */
;


/*Надбавки*/
drop table PEKTRF_ADDS/*Надбавки*/ 
;
create table PEKTRF_ADDS/*Надбавки*/ (
InstanceID CHAR(38) ,
PEKTRF_ADDSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKTRF_ADDS add 
Name null /* Название надбавки */
;
alter  table PEKTRF_ADDS add 
AddPercent null /* Процент к тарифной ставке */
;
alter  table PEKTRF_ADDS add 
MinValue null /* Минимальное значение */
;
alter  table PEKTRF_ADDS add 
MaxValue null /* Максимальное значение */
;


/*Общее описание*/
drop table PEKTRF_DEF/*Общее описание*/ 
;
create table PEKTRF_DEF/*Общее описание*/ (
InstanceID CHAR(38) ,
PEKTRF_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKTRF_DEF add 
VolumeTarif null 
 check (VolumeTarif in ( -1/* Да */
, 0/* Нет */ )) /* Тариф по объему */
;
alter  table PEKTRF_DEF add 
StartDate
 DATETIME null /* Начало действия */
;
alter  table PEKTRF_DEF add 
TType null /* Тип тарифа */
;
alter  table PEKTRF_DEF add 
TRType null /* Тип доставки */
;
alter  table PEKTRF_DEF add 
IncludeNDS null 
 check (IncludeNDS in ( -1/* Да */
, 0/* Нет */ )) /* Цены с НДС */
;
alter  table PEKTRF_DEF add 
MinPPOWeight null /* Минимальный расчетный вес */
;
alter  table PEKTRF_DEF add 
SupplierTarif null 
 check (SupplierTarif in ( -1/* Да */
, 0/* Нет */ )) /* Тариф поставщика */
;
alter  table PEKTRF_DEF add 
Supplier null /* Поставщик */
;
alter  table PEKTRF_DEF add 
EndDate
 DATETIME null /* Конец действия тарифа */
;
alter  table PEKTRF_DEF add 
TheFilial null /* Филиал */
;
alter  table PEKTRF_DEF add 
NalAdds null /* Надбавка за наличную оплату */
;


/*Автодоставка*/
drop table PEKTRF_AUTO/*Стоимость автодоставки груза*/ 
;
create table PEKTRF_AUTO/*Стоимость автодоставки груза*/ (
InstanceID CHAR(38) ,
PEKTRF_AUTOid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKTRF_AUTO add 
AutoType null /* Тип автотранспорта */
;
alter  table PEKTRF_AUTO add 
ForTime null 
 check (ForTime in ( -1/* Да */
, 0/* Нет */ )) /* За время */
;
alter  table PEKTRF_AUTO add 
ByLength null 
 check (ByLength in ( -1/* Да */
, 0/* Нет */ )) /* От расстояния */
;
alter  table PEKTRF_AUTO add 
LengthPrice null /* Стоимость за км */
;
alter  table PEKTRF_AUTO add 
HourPrice null /* Стоимость часа */
;


/*Тарифы на услуги*/
drop table PEKTRF_SRV/*Тарифы на услуги*/ 
;
create table PEKTRF_SRV/*Тарифы на услуги*/ (
InstanceID CHAR(38) ,
PEKTRF_SRVid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKTRF_SRV add 
SrvTYPE null /* Услуга */
;
alter  table PEKTRF_SRV add 
Price null /* Цена */
;
alter  table PEKTRF_SRV add 
TheCurrency null /* Валюта */
;
alter  table PEKTRF_SRV add 
EDIZM null /* Ед. изм. */
;
alter  table PEKTRF_SRV add 
Quant null /* Количество */
;


/*Транспортировка*/
drop table PEKTRF_TR/*Транспортировка*/ 
;
create table PEKTRF_TR/*Транспортировка*/ (
InstanceID CHAR(38) ,
PEKTRF_TRid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKTRF_TR add 
Train null /* Направление */
;
alter  table PEKTRF_TR add 
ToST null /* До станции */
;
alter  table PEKTRF_TR add 
Price null /* Цена */
;
alter  table PEKTRF_TR add 
TheCurrency null /* Валюта */
;
alter  table PEKTRF_TR add 
TheQuantity null /* Количество */
;
alter  table PEKTRF_TR add 
EDIZM null /* Единица измерения */
;


/*Регресс по весу*/
drop table PEKTRF_REGRTR/*Регресс по весу*/ 
;
create table PEKTRF_REGRTR/*Регресс по весу*/ (
ParentStructRowID CHAR(38) not null,
PEKTRF_REGRTRid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKTRF_REGRTR add 
WeightFrom null /* Суммарный вес от */
;
alter  table PEKTRF_REGRTR add 
WeightTo null /* Суммарный вес по */
;
alter  table PEKTRF_REGRTR add 
WeightEDIZM null /* Ед. изм. веса */
;
alter  table PEKTRF_REGRTR add 
PricePercent null /* Процент от тарифа */
;
alter  table PEKTRF_REGRTR add 
FixedPrice null /* Фиксированная цена */
;
alter  table PEKTRF_REGRTR add 
PriceCurrency null /* Валюта фиксированной цены */
;


/*Описание лимита*/
drop table PEKCL_DEF/*Описание лимита*/ 
;
create table PEKCL_DEF/*Описание лимита*/ (
InstanceID CHAR(38) ,
PEKCL_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKCL_DEF add 
TheDep null /* Филиал */
;
alter  table PEKCL_DEF add 
LimDate
 DATETIME null /* Дата */
;


/*Текущие лимиты*/
drop table PEKCL_DAYLY/*Текущие лимиты*/ 
;
create table PEKCL_DAYLY/*Текущие лимиты*/ (
InstanceID CHAR(38) ,
PEKCL_DAYLYid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKCL_DAYLY add 
Train null /* Поезд */
;
alter  table PEKCL_DAYLY add 
GOTYPE null /* Тип СГО */
;
alter  table PEKCL_DAYLY add 
TheValue null /* Объем */
;
alter  table PEKCL_DAYLY add 
ValueEDIZM null /* Ед. изм. объема */
;
alter  table PEKCL_DAYLY add 
WeightValue null /* Вес */
;
alter  table PEKCL_DAYLY add 
WeightEDIZM null /* Ед. изм.веса */
;
alter  table PEKCL_DAYLY add 
the_Description null /* Описание */
;


/*Обемы под загрузку*/
drop table PEKL_TOLOAD/*Обемы под загрузку*/ 
;
create table PEKL_TOLOAD/*Обемы под загрузку*/ (
ParentStructRowID CHAR(38) not null,
PEKL_TOLOADid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKL_TOLOAD add 
SRCPekZ null /* По заявке */
;
alter  table PEKL_TOLOAD add 
TheValue null /* Объем */
;
alter  table PEKL_TOLOAD add 
ValueEDIZM null /* Ед. изм. объема */
;
alter  table PEKL_TOLOAD add 
WeightValue null /* Вес */
;
alter  table PEKL_TOLOAD add 
WeightEDIZM null /* Ед. изм.веса */
;


/*Описание*/
drop table MTZExt_def/*Список зарегистрированных расширений*/ 
;
create table MTZExt_def/*Список зарегистрированных расширений*/ (
InstanceID CHAR(38) ,
MTZExt_defid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table MTZExt_def add 
Name
 VARCHAR (255) null /* Название */
;
alter  table MTZExt_def add 
ExtType null 
 check (ExtType in ( 1/* OnFormExt */
, 7/* CodeGenerator */
, 3/* JrnlAddExt */
, 6/* VerifyRowExt */
, 0/* StatusExt */
, 8/* ARMGenerator */
, 5/* DefaultExt */
, 2/* CustomExt */
, 4/* JrnlRunExt */ )) /* Тип расширения */
;
alter  table MTZExt_def add 
TheDescription null /* Описание */
;


/*Реализации расширения*/
drop table MTZExtRel/*Реализации расширения для разных разработческих плаформ*/ 
;
create table MTZExtRel/*Реализации расширения для разных разработческих плаформ*/ (
InstanceID CHAR(38) ,
MTZExtRelid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table MTZExtRel add 
ThePlatform null 
 check (ThePlatform in ( 2/* JAVA */
, 3/* OTHER */
, 1/* DOTNET */
, 0/* VB6 */ )) /* Реализация */
;
alter  table MTZExtRel add 
TheClassName
 VARCHAR (255) null /* Название класса */
;
alter  table MTZExtRel add 
TheLibraryName
 VARCHAR (255) null /* Название библиотеки */
;


/*Описание*/
drop table InfoStoreDef/*Описание каталога*/ 
;
create table InfoStoreDef/*Описание каталога*/ (
InstanceID CHAR(38) ,
InfoStoreDefid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table InfoStoreDef add 
TheGroup null /* Группа */
;
alter  table InfoStoreDef add 
Name
 VARCHAR (255) null /* Название */
;
alter  table InfoStoreDef add 
InfoStoreType
 INTEGER null 
 check (InfoStoreType in ( 2/* Групповой */
, 1/* Персональный */
, 0/*  Общий */ )) /* Тип каталога */
;
alter  table InfoStoreDef add 
TheUser null /* Пользователь */
;


/*Папка*/
drop table Folder/*Папка каталога*/ 
;
create table Folder/*Папка каталога*/ (
InstanceID CHAR(38) ,
Folderid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
;
alter  table Folder add 
Name
 VARCHAR (255) null /* Название */
;
alter  table Folder add 
FolderType null 
 check (FolderType in ( 2/* Исходящие */
, 10/* Завершенные */
, 5/* Календарь */
, 0/*   */
, 1/* Входящие */
, 9/* Отложенные */
, 4/* Журнал */
, 8/* В работе */
, 7/* Черновики */
, 6/* Отправленные */
, 3/* Удаленные */ )) /* Тип папки */
;


/*Документы*/
drop table Shortcut/*Ярлыки документов*/ 
;
create table Shortcut/*Ярлыки документов*/ (
ParentStructRowID CHAR(38) not null,
Shortcutid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table Shortcut add 
DocItem null /* Документ */
;
alter  table Shortcut add 
StartMode
 VARCHAR (255) null /* Режим */
;


/*Описание платежа*/
drop table PEKP_DEF/*Описание платежа*/ 
;
create table PEKP_DEF/*Описание платежа*/ (
InstanceID CHAR(38) ,
PEKP_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKP_DEF add 
FromClient null /* Клиент */
;
alter  table PEKP_DEF add 
PLPNUM
 VARCHAR (20) null /* № документа */
;
alter  table PEKP_DEF add 
PLPDate
 DATETIME null /* Дата документа */
;
alter  table PEKP_DEF add 
PLPSumm null /* Сумма */
;
alter  table PEKP_DEF add 
TheCurrncy null /* Валюта */
;
alter  table PEKP_DEF add 
TheDogovor null /* К договору */
;
alter  table PEKP_DEF add 
TheComment null /* Назначение платежа */
;
alter  table PEKP_DEF add 
TheDept null /* Подразделение */
;
alter  table PEKP_DEF add 
Code1C
 VARCHAR (40) null /* Код1С */
;


/*Заявки к платежному поручению*/
drop table PEKP_PZ/*привязка заявок к платежному поручению*/ 
;
create table PEKP_PZ/*привязка заявок к платежному поручению*/ (
InstanceID CHAR(38) ,
PEKP_PZid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKP_PZ add 
PZ null /* Заявка */
;
alter  table PEKP_PZ add 
TheSumm null /* Сумма */
;


/*Журнал событий*/
drop table SysLog/*Журнал событий, которые произошли в системе*/ 
;
create table SysLog/*Журнал событий, которые произошли в системе*/ (
InstanceID CHAR(38) ,
SysLogid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table SysLog add 
TheSession null /* Сессия */
;
alter  table SysLog add 
the_Resource
 VARCHAR (255) null /* Ресурс */
;
alter  table SysLog add 
LogStructID
 VARCHAR (255) null /* Раздел с которым происхоит действие */
;
alter  table SysLog add 
VERB
 VARCHAR (80) null /* Действие */
;
alter  table SysLog add 
LogInstanceID
 uniqueidentifier null /* Идентификатор документа */
;


/*Сессия пользователя*/
drop table the_Session/*Зарегистрированные сессии пользователей*/ 
;
create table the_Session/*Зарегистрированные сессии пользователей*/ (
InstanceID CHAR(38) ,
the_Sessionid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table the_Session add 
UserRole null /* Текущая роль пользователя */
;
alter  table the_Session add 
ClosedAt
 DATETIME null /* Момент закрытия */
;
alter  table the_Session add 
Closed
 integer null 
 check (Closed in ( 1/* Да */
, 0/* Нет */ )) /* Закрыта */
;
alter  table the_Session add 
Usersid null /* Пользователь */
;
alter  table the_Session add 
LastAccess
 DATETIME null /* Последнее подтверждение */
;
alter  table the_Session add 
StartAt
 DATETIME null /* Момент открытия */
;
alter  table the_Session add 
Lang
 VARCHAR (25) null /* Язык */
;


/*Роботы журнала событий*/
drop table LogReader/*Программы, которые регистрируют себя как 
обработчики лога событий.*/ 
;
create table LogReader/*Программы, которые регистрируют себя как 
обработчики лога событий.*/ (
InstanceID CHAR(38) ,
LogReaderid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table LogReader add 
Name
 VARCHAR (80) null /* Название */
;
alter  table LogReader add 
AutoStart
 integer null 
 check (AutoStart in ( 1/* Да */
, 0/* Нет */ )) /* Автоматизированный запуск */
;
alter  table LogReader add 
AutoProgid
 VARCHAR (255) null /* Класс для автоматического запуска */
;
alter  table LogReader add 
ReadMarker
 DATETIME null /* Дата последней прочитанной записи */
;
alter  table LogReader add 
StartInterval
 integer null /* Интервал запуска (мин) */
;
alter  table LogReader add 
LastStart
 DATETIME null /* Дата последнего запуска */
;
alter  table LogReader add 
LastStop
 DATETIME null /* Дата последне останвки */
;


/*Действия*/
drop table Verb/*Защищаемые системой дейсвия*/ 
;
create table Verb/*Защищаемые системой дейсвия*/ (
InstanceID CHAR(38) ,
Verbid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table Verb add 
Name
 VARCHAR (80) null /* Название */
;


/*Пользователи*/
drop table Users/*Пользователи*/ 
;
create table Users/*Пользователи*/ (
InstanceID CHAR(38) ,
Usersid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table Users add 
Family
 VARCHAR (255) null /* Фамилия */
;
alter  table Users add 
Name
 VARCHAR (64) null /* Имя */
;
alter  table Users add 
SurName
 VARCHAR (255) null /* Отчество */
;
alter  table Users add 
Login
 VARCHAR (64) null /* Имя для входа */
;
alter  table Users add 
Password varchar(80) null /* Пароль */
;
alter  table Users add 
DomaiName
 VARCHAR (255) null /* Доменное имя */
;
alter  table Users add 
EMail varchar(255) null /* e-mail */
;
alter  table Users add 
Phone
 VARCHAR (20) null /* Телефон */
;
alter  table Users add 
LocalPhone
 VARCHAR (20) null /* Местный телефон */
;
alter  table Users add 
MobilePhone
 VARCHAR (20) null /* Мобильный телефон */
;
alter  table Users add 
Photo null /* Фото */
;
alter  table Users add 
BirthDay
 DATETIME null /* Дата рождения */
;
alter  table Users add 
Activity null /* Журнал активности */
;
alter  table Users add 
CertificateID
 VARCHAR (255) null /* CertificateID */
;
alter  table Users add 
CertData null /* CertData */
;
alter  table Users add 
ClientDef null /* Ассоциация с клиентом */
;
alter  table Users add 
PersonaData null /* PersonaData */
;


/*Группы*/
drop table Groups/*Группы*/ 
;
create table Groups/*Группы*/ (
InstanceID CHAR(38) ,
Groupsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table Groups add 
Name
 VARCHAR (80) null /* Название */
;


/*Состав группы*/
drop table GroupUser/*Состав группы*/ 
;
create table GroupUser/*Состав группы*/ (
ParentStructRowID CHAR(38) not null,
GroupUserid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table GroupUser add 
TheUser null /* Пользователь */
;


/*Стадия договора*/
drop table VRDContractStage/*Стадия договора*/ 
;
create table VRDContractStage/*Стадия договора*/ (
InstanceID CHAR(38) ,
VRDContractStageid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDContractStage add 
Name
 VARCHAR (255) null /* Название */
;


/*Тип отчета*/
drop table VRDRreportType/*Тип отчета*/ 
;
create table VRDRreportType/*Тип отчета*/ (
InstanceID CHAR(38) ,
VRDRreportTypeid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDRreportType add 
Name
 VARCHAR (255) null /* Название */
;


/*Типы проектов*/
drop table VRDPrjType/*Типы проектов*/ 
;
create table VRDPrjType/*Типы проектов*/ (
InstanceID CHAR(38) ,
VRDPrjTypeid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDPrjType add 
Name
 VARCHAR (255) null /* Название */
;


/*Направление деятельности*/
drop table VRDStream/*Направление деятельности*/ 
;
create table VRDStream/*Направление деятельности*/ (
InstanceID CHAR(38) ,
VRDStreamid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDStream add 
Name
 VARCHAR (255) null /* Назввание */
;


/*Заинтересованность*/
drop table VRDInterest/*Заинтересованность*/ 
;
create table VRDInterest/*Заинтересованность*/ (
InstanceID CHAR(38) ,
VRDInterestid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDInterest add 
Name
 VARCHAR (255) null /* Название */
;


/*Тип документа*/
drop table VRDDocType/*Тип документа*/ 
;
create table VRDDocType/*Тип документа*/ (
InstanceID CHAR(38) ,
VRDDocTypeid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDDocType add 
Name
 VARCHAR (255) null /* Название */
;


/*Лояльность*/
drop table VRDLoyalty/*Лояльность*/ 
;
create table VRDLoyalty/*Лояльность*/ (
InstanceID CHAR(38) ,
VRDLoyaltyid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRDLoyalty add 
the_Level
 VARCHAR (255) null /* Степень */
;


/*Рынки*/
drop table VRDMarket/*Рынки*/ 
;
create table VRDMarket/*Рынки*/ (
InstanceID CHAR(38) ,
VRDMarketid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
;
alter  table VRDMarket add 
Name
 VARCHAR (255) null /* Название */
;


/*Описание прав*/
drop table MTZSEC_RIGHT/*описание прав для каждой группы*/ 
;
create table MTZSEC_RIGHT/*описание прав для каждой группы*/ (
InstanceID CHAR(38) ,
MTZSEC_RIGHTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table MTZSEC_RIGHT add 
Piority
 integer null /* Приоритет */
;
alter  table MTZSEC_RIGHT add 
TheGroup null /* Группа */
;
alter  table MTZSEC_RIGHT add 
ProtectedItem
 VARCHAR (255) null /* Защищаемый элемент */
;
alter  table MTZSEC_RIGHT add 
Allow null 
 check (Allow in ( -1/* Да */
, 0/* Нет */ )) /* Разрешение */
;


/*Банковские реквизиты*/
drop table VRCAccounts/*Банковские реквизиты*/ 
;
create table VRCAccounts/*Банковские реквизиты*/ (
InstanceID CHAR(38) ,
VRCAccountsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCAccounts add 
BANK null /* Банк */
;
alter  table VRCAccounts add 
acc
 VARCHAR (20) null /* № счета */
;
alter  table VRCAccounts add 
fillial null /* Название филиала */
;
alter  table VRCAccounts add 
DefaultAccount null 
 check (DefaultAccount in ( -1/* Да */
, 0/* Нет */ )) /* Основной счет для расчетов */
;
alter  table VRCAccounts add 
Code1C
 VARCHAR (40) null /* Код1С */
;


/*Точки доставки*/
drop table VRCTorg/*Точки доставки*/ 
;
create table VRCTorg/*Точки доставки*/ (
InstanceID CHAR(38) ,
VRCTorgid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCTorg add 
Address null /* Адрес */
;
alter  table VRCTorg add 
name
 VARCHAR (255) null /* Название */
;
alter  table VRCTorg add 
Town null /* Город */
;


/*Доп. информация*/
drop table VRCAditional/*Доп. информация*/ 
;
create table VRCAditional/*Доп. информация*/ (
InstanceID CHAR(38) ,
VRCAditionalid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCAditional add 
KPP
 VARCHAR (9) null /* КПП */
;
alter  table VRCAditional add 
Country null /* Страна */
;
alter  table VRCAditional add 
town null /* Город */
;
alter  table VRCAditional add 
district
 VARCHAR (255) null /* Район */
;
alter  table VRCAditional add 
uraddr null /* Юридический адрес */
;
alter  table VRCAditional add 
urphone
 VARCHAR (20) null /* Телефон по юр. адресу */
;
alter  table VRCAditional add 
regdate
 DATETIME null /* Дата регистрации */
;
alter  table VRCAditional add 
regby null /* Кем зарегистрирован */
;
alter  table VRCAditional add 
Stream null /* Направление деяельности */
;
alter  table VRCAditional add 
WEBSite varchar(255) null /* WEB узел */
;
alter  table VRCAditional add 
creditlimit null /* Лимит кредита */
;
alter  table VRCAditional add 
maxcreditlen
 integer null /* Длительность кредита */
;
alter  table VRCAditional add 
townphonecode
 VARCHAR (10) null /* Телефонный код  */
;
alter  table VRCAditional add 
POSTINDEX
 VARCHAR (20) null /* Почтовый индекс */
;
alter  table VRCAditional add 
phone2
 VARCHAR (20) null /* Телефон 2 */
;
alter  table VRCAditional add 
OKONH
 VARCHAR (20) null /* ОКОНХ */
;
alter  table VRCAditional add 
OKPO
 VARCHAR (20) null /* ОКПО */
;
alter  table VRCAditional add 
regsved
 VARCHAR (30) null /* Номер свидетельства орегистрации */
;
alter  table VRCAditional add 
Concurent null 
 check (Concurent in ( -1/* Да */
, 0/* Нет */ )) /* Конкурент */
;
alter  table VRCAditional add 
eMail varchar(255) null /* Электронная почта */
;
alter  table VRCAditional add 
mobTelephone
 VARCHAR (20) null /* Мобильный телефон */
;
alter  table VRCAditional add 
prnActWork null 
 check (prnActWork in ( -1/* Да */
, 0/* Нет */ )) /* Печать акта выполненных работ */
;


/*Тарифы клиента*/
drop table VRCTarif/*Тарифы клиента по филиалам*/ 
;
create table VRCTarif/*Тарифы клиента по филиалам*/ (
InstanceID CHAR(38) ,
VRCTarifid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCTarif add 
TheDept null /* Филиал */
;
alter  table VRCTarif add 
TheTarifType null /* Текущий тариф */
;


/*Описание*/
drop table VRCCommonInfo/*Общая информация*/ 
;
create table VRCCommonInfo/*Общая информация*/ (
InstanceID CHAR(38) ,
VRCCommonInfoid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCCommonInfo add 
IsPhizical null 
 check (IsPhizical in ( -1/* Да */
, 0/* Нет */ )) /* Физическое лицо */
;
alter  table VRCCommonInfo add 
Name
 VARCHAR (255) null /* Название */
;
alter  table VRCCommonInfo add 
fullname null /* Полное наименование */
;
alter  table VRCCommonInfo add 
Address
 VARCHAR (255) null /* Почтовый адрес */
;
alter  table VRCCommonInfo add 
fax
 VARCHAR (20) null /* Факс */
;
alter  table VRCCommonInfo add 
Phone
 VARCHAR (25) null /* Телефон */
;
alter  table VRCCommonInfo add 
the_Comment null /* Примечание */
;
alter  table VRCCommonInfo add 
INN
 VARCHAR (12) null /* ИНН */
;
alter  table VRCCommonInfo add 
KPP
 VARCHAR (9) null /* КПП */
;
alter  table VRCCommonInfo add 
Curator null /* Ответственный */
;
alter  table VRCCommonInfo add 
Transporter null 
 check (Transporter in ( -1/* Да */
, 0/* Нет */ )) /* Поставщик тр. услуг */
;
alter  table VRCCommonInfo add 
PassportInfo null /* Паспортные данные */
;
alter  table VRCCommonInfo add 
Code1C
 VARCHAR (40) null /* Код1С */
;
alter  table VRCCommonInfo add 
MarkToDelete null 
 check (MarkToDelete in ( -1/* Да */
, 0/* Нет */ )) /* Помечен на даление */
;


/*Пользователи*/
drop table ROLES_USER/*Пользователи*/ 
;
create table ROLES_USER/*Пользователи*/ (
InstanceID CHAR(38) ,
ROLES_USERid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ROLES_USER add 
TheUser null /* Пользователь */
;


/*Отображение на группы защиты*/
drop table ROLES_MAP/*Отображение на группы защиты*/ 
;
create table ROLES_MAP/*Отображение на группы защиты*/ (
InstanceID CHAR(38) ,
ROLES_MAPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ROLES_MAP add 
TheGroup null /* Группа */
;


/*Доступные документы*/
drop table ROLES_DOC/**/ 
;
create table ROLES_DOC/**/ (
InstanceID CHAR(38) ,
ROLES_DOCid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ROLES_DOC add 
The_Document null /* Тип документа */
;
alter  table ROLES_DOC add 
The_Denied
 integer null 
 check (The_Denied in ( 1/* Да */
, 0/* Нет */ )) /* Запрещен */
;
alter  table ROLES_DOC add 
AllowDeleteDoc null 
 check (AllowDeleteDoc in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено удаление */
;


/*Доступные состояния*/
drop table ROLES_DOC_STATE/**/ 
;
create table ROLES_DOC_STATE/**/ (
ParentStructRowID CHAR(38) not null,
ROLES_DOC_STATEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ROLES_DOC_STATE add 
The_State null /* Состояние */
;
alter  table ROLES_DOC_STATE add 
The_Mode null /* Режим */
;
alter  table ROLES_DOC_STATE add 
AllowDelete null 
 check (AllowDelete in ( -1/* Да */
, 0/* Нет */ )) /* Можно удалять */
;
alter  table ROLES_DOC_STATE add 
StateChangeDisabled null 
 check (StateChangeDisabled in ( -1/* Да */
, 0/* Нет */ )) /* Запрещена смена состояния */
;


/*Определение роли*/
drop table ROLES_DEF/*Определение роли*/ 
;
create table ROLES_DEF/*Определение роли*/ (
InstanceID CHAR(38) ,
ROLES_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ROLES_DEF add 
name
 VARCHAR (255) null /* Название */
;
alter  table ROLES_DEF add 
TheComment null /* Описание */
;
alter  table ROLES_DEF add 
RightsSet_Denied null 
 check (RightsSet_Denied in ( -1/* Да */
, 0/* Нет */ )) /* Настройка прав запрещена */
;
alter  table ROLES_DEF add 
FormCFG_Denied null 
 check (FormCFG_Denied in ( -1/* Да */
, 0/* Нет */ )) /* Настройки форм запрещены */
;
alter  table ROLES_DEF add 
ListCFG_Denied null 
 check (ListCFG_Denied in ( -1/* Да */
, 0/* Нет */ )) /* Настройка журналов запрещена */
;
alter  table ROLES_DEF add 
FileExch_Denied null 
 check (FileExch_Denied in ( -1/* Да */
, 0/* Нет */ )) /* Файловый обмен запрещен */
;


/*Отчёты*/
drop table ROLES_REPORTS/**/ 
;
create table ROLES_REPORTS/**/ (
InstanceID CHAR(38) ,
ROLES_REPORTSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ROLES_REPORTS add 
The_Report null /* Отчёт */
;


/*Доступные приложения*/
drop table ROLES_WP/*Доступные приложения*/ 
;
create table ROLES_WP/*Доступные приложения*/ (
InstanceID CHAR(38) ,
ROLES_WPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ROLES_WP add 
WP null /* Приложение */
;


/*Допустимые действия*/
drop table ROLES_ACT/*Допустимые действия*/ 
;
create table ROLES_ACT/*Допустимые действия*/ (
ParentStructRowID CHAR(38) not null,
ROLES_ACTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
;
alter  table ROLES_ACT add 
Accesible
 integer null 
 check (Accesible in ( 1/* Да */
, 0/* Нет */ )) /* Доступность */
;
alter  table ROLES_ACT add 
EntryPoints null /* Доступные действия */
;


/*Сообщения от сервера*/
drop table RptSrvMsg/*Сообщения от сервера*/ 
;
create table RptSrvMsg/*Сообщения от сервера*/ (
InstanceID CHAR(38) ,
RptSrvMsgid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table RptSrvMsg add 
Msgdate
 DATETIME null /* Дата сообщения */
;
alter  table RptSrvMsg add 
Info null /* Информация */
;


/*Заявка*/
drop table RptQuery/*Заявка*/ 
;
create table RptQuery/*Заявка*/ (
InstanceID CHAR(38) ,
RptQueryid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table RptQuery add 
ReportType null /* Тип отчета */
;
alter  table RptQuery add 
QueryUser null /* Автор заявки */
;
alter  table RptQuery add 
QryDate
 DATETIME null /* Дата заявки */
;
alter  table RptQuery add 
AcceptDate
 DATETIME null /* Дата приема заявки сервером */
;
alter  table RptQuery add 
FinDate
 DATETIME null /* Момент завершения обработки */
;
alter  table RptQuery add 
ResultID
 uniqueidentifier null /* Идентификатор результата */
;


/*Параметры отчета*/
drop table RptQryParam/*Параметры отчета*/ 
;
create table RptQryParam/*Параметры отчета*/ (
InstanceID CHAR(38) ,
RptQryParamid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table RptQryParam add 
Name
 VARCHAR (255) null /* Название */
;
alter  table RptQryParam add 
TheValue null /* Значение */
;


/*Описание приказа*/
drop table PEKORD_DEF/*Описание приказа*/ 
;
create table PEKORD_DEF/*Описание приказа*/ (
InstanceID CHAR(38) ,
PEKORD_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKORD_DEF add 
docnumber
 integer null /* Номер приказа */
;
alter  table PEKORD_DEF add 
author null /* Автор */
;
alter  table PEKORD_DEF add 
docname
 VARCHAR (80) null /* Название */
;
alter  table PEKORD_DEF add 
regdate
 DATETIME null /* Дата регистрации */
;
alter  table PEKORD_DEF add 
comments null /* Содержание */
;
alter  table PEKORD_DEF add 
TarifStartDate
 DATETIME null /* Дата начала действия тарифа */
;


/*Таблица тарифов*/
drop table PEKORD_DATA/*Таблица тарифов*/ 
;
create table PEKORD_DATA/*Таблица тарифов*/ (
InstanceID CHAR(38) ,
PEKORD_DATAid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKORD_DATA add 
Cient null /* Клиент */
;
alter  table PEKORD_DATA add 
NewTarifType null /* Тип тарифа */
;
alter  table PEKORD_DATA add 
TheDept null /* Филиал */
;


/*Арм*/
drop table WorkPlace/*Арм*/ 
;
create table WorkPlace/*Арм*/ (
InstanceID CHAR(38) ,
WorkPlaceid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WorkPlace add 
Name
 VARCHAR (255) null /* Название */
;
alter  table WorkPlace add 
Caption
 VARCHAR (255) null /* Заголовок */
;
alter  table WorkPlace add 
TheVersion
 VARCHAR (30) null /* Версия */
;
alter  table WorkPlace add 
ThePlatform null 
 check (ThePlatform in ( 2/* JAVA */
, 3/* OTHER */
, 1/* DOTNET */
, 0/* VB6 */ )) /* Платформа реализации */
;
alter  table WorkPlace add 
TheComment null /* Примечание */
;


/*Меню*/
drop table EntryPoints/*Меню*/ 
;
create table EntryPoints/*Меню*/ (
InstanceID CHAR(38) ,
EntryPointsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
;
alter  table EntryPoints add 
sequence
 integer null /* Последовательность */
;
alter  table EntryPoints add 
Name
 VARCHAR (38) null /* Название */
;
alter  table EntryPoints add 
Caption
 VARCHAR (255) null /* Заголовок */
;
alter  table EntryPoints add 
AsToolbarItem null 
 check (AsToolbarItem in ( -1/* Да */
, 0/* Нет */ )) /* Включить в тулбар */
;
alter  table EntryPoints add 
ActionType null 
 check (ActionType in ( 5/* Открыть отчет */
, 0/* Ничего не делать */
, 2/* Выполнить метод */
, 1/* Открыть документ */
, 4/* Запустить АРМ */
, 3/* Открыть журнал */ )) /* Вариант действия */
;
alter  table EntryPoints add 
TheFilter null /* Фильтр */
;
alter  table EntryPoints add 
Journal null /* Журнал */
;
alter  table EntryPoints add 
Report null /* Отчет */
;
alter  table EntryPoints add 
Document null /* Документ */
;
alter  table EntryPoints add 
Method null /* Метод */
;
alter  table EntryPoints add 
IconFile
 VARCHAR (2000) null /* Файл картинки */
;
alter  table EntryPoints add 
TheExtention null /* Расширение */
;
alter  table EntryPoints add 
ARM null /* АРМ */
;
alter  table EntryPoints add 
TheComment null /* Примечание */
;
alter  table EntryPoints add 
ObjectType null /* Тип документа */
;
alter  table EntryPoints add 
JournalFixedQuery null /* Ограничения к журналу */
;


/*Привязка фильтра*/
drop table EPFilterLink/*Привязка фильтра к журналу*/ 
;
create table EPFilterLink/*Привязка фильтра к журналу*/ (
ParentStructRowID CHAR(38) not null,
EPFilterLinkid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table EPFilterLink add 
RowSource
 VARCHAR (255) null /* Источник */
;
alter  table EPFilterLink add 
TheExpression null /* Выражение */
;
alter  table EPFilterLink add 
FilterField
 VARCHAR (255) null /* Поле фильтра */
;


/*Список типов*/
drop table ARMTypes/*Типы документов, которые подключаются в MDI режиме*/ 
;
create table ARMTypes/*Типы документов, которые подключаются в MDI режиме*/ (
InstanceID CHAR(38) ,
ARMTypesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ARMTypes add 
TheDocumentType null /* Тип документа */
;


/*Поведение журналов*/
drop table ARMJournal/*Описание действий журанлов*/ 
;
create table ARMJournal/*Описание действий журанлов*/ (
InstanceID CHAR(38) ,
ARMJournalid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ARMJournal add 
TheJournal null /* Журнал */
;


/*Добавление*/
drop table ARMJRNLADD/*Варианты обработки добавления*/ 
;
create table ARMJRNLADD/*Варианты обработки добавления*/ (
ParentStructRowID CHAR(38) not null,
ARMJRNLADDid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ARMJRNLADD add 
Name
 VARCHAR (255) null /* Название */
;
alter  table ARMJRNLADD add 
TheExtention null /* Расширение */
;


/*Отчеты*/
drop table ARMJRNLREP/*Отчеты из журнала*/ 
;
create table ARMJRNLREP/*Отчеты из журнала*/ (
ParentStructRowID CHAR(38) not null,
ARMJRNLREPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ARMJRNLREP add 
repname
 VARCHAR (255) null /* Название отчета */
;
alter  table ARMJRNLREP add 
TheReport null /* Отчет */
;


/*Действия*/
drop table ARMJRNLRUN/*Дополнительные действия в журнале*/ 
;
create table ARMJRNLRUN/*Дополнительные действия в журнале*/ (
ParentStructRowID CHAR(38) not null,
ARMJRNLRUNid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ARMJRNLRUN add 
Name
 VARCHAR (255) null /* Название */
;
alter  table ARMJRNLRUN add 
TheExtention null /* Расширение */
;


/*Зоны номеров ППО*/
drop table PEKD_NZONE/*Зоны номеров ППО*/ 
;
create table PEKD_NZONE/*Зоны номеров ППО*/ (
InstanceID CHAR(38) ,
PEKD_NZONEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_NZONE add 
Dept null /* Филиал */
;
alter  table PEKD_NZONE add 
TheYear
 integer null /* Год */
;
alter  table PEKD_NZONE add 
TheMonth null 
 check (TheMonth in ( 11/* Ноябрь */
, 2/* Февраль */
, 12/* Декабрь */
, 3/* Март */
, 1/* Январь */
, 9/* Сентябрь */
, 6/* Июнь */
, 10/* Октябрь */
, 5/* Май */
, 8/* Август */
, 7/* Июль */
, 4/* Апрель */ )) /* Месяц */
;
alter  table PEKD_NZONE add 
FromPPOIDX
 integer null /* Начиная с */
;
alter  table PEKD_NZONE add 
ToPPOIdx
 integer null /* По */
;
alter  table PEKD_NZONE add 
POIDX
 VARCHAR (6) null /* Индекс отделения */
;


/*Занятые номера*/
drop table PEKD_USEDNUM/*Занятые номера*/ 
;
create table PEKD_USEDNUM/*Занятые номера*/ (
InstanceID CHAR(38) ,
PEKD_USEDNUMid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_USEDNUM add 
UsedNumber
 integer null /* Номер */
;


/*Колонки журнала*/
drop table JournalColumn/*Колонки журнала*/ 
;
create table JournalColumn/*Колонки журнала*/ (
InstanceID CHAR(38) ,
JournalColumnid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table JournalColumn add 
sequence
 integer null /* Последовательность */
;
alter  table JournalColumn add 
name
 VARCHAR (255) null /* Название */
;
alter  table JournalColumn add 
ColumnAlignment
 integer null 
 check (ColumnAlignment in ( 4/* Center Center */
, 3/* Center Top */
, 6/* Right Top */
, 8/* Right Bottom */
, 2/* Left Bottom */
, 7/* Right Center */
, 5/* Center Bottom */
, 1/* Left Center */
, 0/* Left Top */ )) /* Выравнивание */
;
alter  table JournalColumn add 
ColSort
 INTEGER null 
 check (ColSort in ( 0/* As String */
, 1/* As Numeric */
, 2/* As Date */ )) /* Сортировка колонки */
;
alter  table JournalColumn add 
GroupAggregation
 INTEGER null 
 check (GroupAggregation in ( 5/* MAX */
, 1/* AVG */
, 3/* SUM */
, 2/* COUNT */
, 4/* MIN */
, 6/* CUSTOM */
, 0/* none */ )) /* Аггрегация при группировке */
;


/*Состав колонки*/
drop table JColumnSource/*Состав колонки*/ 
;
create table JColumnSource/*Состав колонки*/ (
ParentStructRowID CHAR(38) not null,
JColumnSourceid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table JColumnSource add 
SrcPartView null /* Представление */
;
alter  table JColumnSource add 
ViewField
 VARCHAR (255) null /* Поле представления */
;


/*Журнал*/
drop table Journal/*Журнал*/ 
;
create table Journal/*Журнал*/ (
InstanceID CHAR(38) ,
Journalid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table Journal add 
Name
 VARCHAR (255) null /* Название */
;
alter  table Journal add 
the_Alias
 VARCHAR (32) null /* Псевдоним */
;
alter  table Journal add 
TheComment null /* Описание */
;


/*Источники журнала*/
drop table JournalSrc/*Источники журнала*/ 
;
create table JournalSrc/*Источники журнала*/ (
InstanceID CHAR(38) ,
JournalSrcid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table JournalSrc add 
PartView
 uniqueidentifier null /* Представление */
;
alter  table JournalSrc add 
OnRun
 INTEGER null 
 check (OnRun in ( 2/* Открыть документ */
, 1/* Открыть строку */
, 0/* Ничего не делать */ )) /* При открытии */
;
alter  table JournalSrc add 
OpenMode
 VARCHAR (1) null /* Режим открытия */
;
alter  table JournalSrc add 
ViewAlias
 VARCHAR (255) null /* Псевдоним представления */
;


/*Ожидаемые грузы*/
drop table pekmsg_path/*Маршрут доставки*/ 
;
create table pekmsg_path/*Маршрут доставки*/ (
InstanceID CHAR(38) ,
pekmsg_pathid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table pekmsg_path add 
SendDate
 DATETIME null /* Дата отправки */
;
alter  table pekmsg_path add 
RcvWaitDate
 DATETIME null /* Ориентировочная дата получения */
;
alter  table pekmsg_path add 
trainNo null /* Поезд */
;
alter  table pekmsg_path add 
vagNo
 VARCHAR (8) null /* Вагон № */
;
alter  table pekmsg_path add 
PathFilial null /* Филиал */
;
alter  table pekmsg_path add 
TransSupplier null /* Поставщик */
;
alter  table pekmsg_path add 
TheDirection null /* Направление */
;
alter  table pekmsg_path add 
PPONum
 integer null /* Кол-во ПО */
;
alter  table pekmsg_path add 
DestStation null /* Станция назначения */
;
alter  table pekmsg_path add 
PPODescription null /* Характер груза */
;
alter  table pekmsg_path add 
Receiver null /* Получатель */
;
alter  table pekmsg_path add 
PPOWeight null /* Вес ПО */
;
alter  table pekmsg_path add 
WeightEDIZM null /* Ед. изм. веса */
;
alter  table pekmsg_path add 
PPOVol null /* Объем ПО */
;
alter  table pekmsg_path add 
ValueEDIZM null /* Ед.изм. объема */
;
alter  table pekmsg_path add 
PassFIO
 VARCHAR (255) null /* ФИО Кладовщика */
;
alter  table pekmsg_path add 
PassDate
 DATETIME null /* Дата передачи груза в вагон */
;
alter  table pekmsg_path add 
RcvFIO
 VARCHAR (255) null /* ФИО ВПН */
;
alter  table pekmsg_path add 
RcvDate
 DATETIME null /* Дата получения груза в ПО */
;
alter  table pekmsg_path add 
InforRcvFIO
 VARCHAR (255) null /* Кому передана информация */
;
alter  table pekmsg_path add 
InfoDate
 DATETIME null /* Дата передачи информации */
;
alter  table pekmsg_path add 
InfoSendType null /* Способ передачи информации */
;


/*Список рассылки*/
drop table WEBS_MAILLIST/**/ 
;
create table WEBS_MAILLIST/**/ (
InstanceID CHAR(38) ,
WEBS_MAILLISTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBS_MAILLIST add 
Email
 VARCHAR (512) null /* Адрес */
;


/*Рекламируемые маршруты*/
drop table WEBS_RECLAME/**/ 
;
create table WEBS_RECLAME/**/ (
InstanceID CHAR(38) ,
WEBS_RECLAMEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBS_RECLAME add 
queque
 integer null /* Номер п/п */
;
alter  table WEBS_RECLAME add 
Path null /* Маршрут */
;


/*Страница сайта*/
drop table WEBS_PAGEDEF/**/ 
;
create table WEBS_PAGEDEF/**/ (
InstanceID CHAR(38) ,
WEBS_PAGEDEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
;
alter  table WEBS_PAGEDEF add 
QueueNumber
 integer null /* Номер п/п */
;
alter  table WEBS_PAGEDEF add 
Name
 VARCHAR (256) null /* Название */
;
alter  table WEBS_PAGEDEF add 
Url
 VARCHAR (1024) null /* Урл */
;
alter  table WEBS_PAGEDEF add 
Title
 VARCHAR (256) null /* Титул */
;
alter  table WEBS_PAGEDEF add 
ShortName
 VARCHAR (256) null /* Короткое название */
;
alter  table WEBS_PAGEDEF add 
ObjectName null /* Имя объекта */
;
alter  table WEBS_PAGEDEF add 
ObjectCode null /* Имя раздела */
;
alter  table WEBS_PAGEDEF add 
AllowHeader null 
 check (AllowHeader in ( -1/* Да */
, 0/* Нет */ )) /* Выводить заголовок */
;
alter  table WEBS_PAGEDEF add 
the_Mode
 VARCHAR (256) null /* Режим работы */
;
alter  table WEBS_PAGEDEF add 
PageType
 INTEGER null 
 check (PageType in ( 0/* Не существенно */
, 1/* Объект */
, 3/* Раздел */
, 2/* Таблица */ )) /* Тип */
;
alter  table WEBS_PAGEDEF add 
ControlPath
 VARCHAR (256) null /* Контрол */
;
alter  table WEBS_PAGEDEF add 
SelectIDParameterName
 VARCHAR (256) null /* Имя параметра для передачи в форму редактирования */
;
alter  table WEBS_PAGEDEF add 
PageContent null /* Cодержимое */
;
alter  table WEBS_PAGEDEF add 
AllowAddPage null 
 check (AllowAddPage in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено добавлять страницы */
;
alter  table WEBS_PAGEDEF add 
the_IsLocked null 
 check (the_IsLocked in ( -1/* Да */
, 0/* Нет */ )) /* Заблокирована */
;
alter  table WEBS_PAGEDEF add 
IsOnMap null 
 check (IsOnMap in ( -1/* Да */
, 0/* Нет */ )) /* Отображать на карте сайта */
;
alter  table WEBS_PAGEDEF add 
IsShowHisory null 
 check (IsShowHisory in ( -1/* Да */
, 0/* Нет */ )) /* Отобразить историю */
;
alter  table WEBS_PAGEDEF add 
RedirectToFirstChild null 
 check (RedirectToFirstChild in ( -1/* Да */
, 0/* Нет */ )) /* Перейти на первую дочернюю страницу */
;


/*Картинки*/
drop table WEBS_PICS/**/ 
;
create table WEBS_PICS/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_PICSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBS_PICS add 
Name
 VARCHAR (512) null /* Название */
;
alter  table WEBS_PICS add 
FileContent null /* Файл */
;
alter  table WEBS_PICS add 
 FileContent_EXT char(4) null
;


/*Отношения с меню*/
drop table WEBS_PAGEMENU/**/ 
;
create table WEBS_PAGEMENU/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_PAGEMENUid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBS_PAGEMENU add 
AllowInMenu null 
 check (AllowInMenu in ( -1/* Да */
, 0/* Нет */ )) /* В меню */
;
alter  table WEBS_PAGEMENU add 
AllowInBottomMenu null 
 check (AllowInBottomMenu in ( -1/* Да */
, 0/* Нет */ )) /* В нижнем меню */
;
alter  table WEBS_PAGEMENU add 
UsePartRowsInMenu null 
 check (UsePartRowsInMenu in ( -1/* Да */
, 0/* Нет */ )) /* Развернуть строки в меню */
;
alter  table WEBS_PAGEMENU add 
UsePartRowsEditForm null /* Страница для редактирования */
;
alter  table WEBS_PAGEMENU add 
UsePartRowsTextField
 VARCHAR (256) null /* Поле текста ссылки */
;
alter  table WEBS_PAGEMENU add 
UsePartRowsRowIDField
 VARCHAR (256) null /* Поле ID */
;
alter  table WEBS_PAGEMENU add 
UsePartRowsSort
 VARCHAR (256) null /* Сортировка строк части */
;


/*Содержимое*/
drop table WEBS_PAGECONTENT/**/ 
;
create table WEBS_PAGECONTENT/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_PAGECONTENTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBS_PAGECONTENT add 
Content
 VARCHAR (8000) null /* Содержимое */
;


/*Параметры*/
drop table WEBS_PAGEPARS/**/ 
;
create table WEBS_PAGEPARS/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_PAGEPARSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBS_PAGEPARS add 
Name
 VARCHAR (256) null /* Имя */
;
alter  table WEBS_PAGEPARS add 
TheValue
 VARCHAR (256) null /* Значение */
;


/*Компоненты*/
drop table WEBS_PAGECOMP/**/ 
;
create table WEBS_PAGECOMP/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_PAGECOMPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBS_PAGECOMP add 
Name
 VARCHAR (256) null /* Название */
;
alter  table WEBS_PAGECOMP add 
Title
 VARCHAR (256) null /* Титул */
;
alter  table WEBS_PAGECOMP add 
Selected null 
 check (Selected in ( -1/* Да */
, 0/* Нет */ )) /* Активен */
;
alter  table WEBS_PAGECOMP add 
IsCollection null 
 check (IsCollection in ( -1/* Да */
, 0/* Нет */ )) /* Коллекция */
;
alter  table WEBS_PAGECOMP add 
the_PartName null /* Раздел */
;
alter  table WEBS_PAGECOMP add 
IDField
 VARCHAR (256) null /* Поле ID */
;
alter  table WEBS_PAGECOMP add 
UserIdField
 VARCHAR (256) null /* поле UserID */
;
alter  table WEBS_PAGECOMP add 
Visible null 
 check (Visible in ( -1/* Да */
, 0/* Нет */ )) /* Видимость */
;


/*Табличная часть*/
drop table TablePart/**/ 
;
create table TablePart/**/ (
ParentStructRowID CHAR(38) not null,
TablePartid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table TablePart add 
FilterUserIDFieldName_
 VARCHAR (256) null /* Имя поля для фильтра UserID */
;
alter  table TablePart add 
Filter_
 VARCHAR (256) null /* Фильтр */
;
alter  table TablePart add 
SelectIDParameterName
 VARCHAR (256) null /* Параметр для передачи ID */
;
alter  table TablePart add 
EditForm null /* Страница для редактирования */
;
alter  table TablePart add 
AllowDelete null 
 check (AllowDelete in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено удаление */
;
alter  table TablePart add 
AllowAddNew null 
 check (AllowAddNew in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено добавление */
;
alter  table TablePart add 
AddStatusColumn_ null 
 check (AddStatusColumn_ in ( -1/* Да */
, 0/* Нет */ )) /* Есть Status колонка */
;
alter  table TablePart add 
AllowEditRowStatusNameValue
 VARCHAR (256) null /* Значение Status для редактирования */
;
alter  table TablePart add 
AllowEditField
 VARCHAR (256) null /* AllowEditField */
;
alter  table TablePart add 
JournalID null /* JournalID */
;
alter  table TablePart add 
FilterUserClientDef
 VARCHAR (256) null /* FilterUserClientDef */
;
alter  table TablePart add 
AllowEditUserClientDef null 
 check (AllowEditUserClientDef in ( -1/* Да */
, 0/* Нет */ )) /* AllowEditUserClientDef */
;
alter  table TablePart add 
ClientDefField
 VARCHAR (256) null /* ClientDefField */
;
alter  table TablePart add 
DataNavigateUrlField
 VARCHAR (256) null /* DataNavigateUrlField */
;
alter  table TablePart add 
PagerSize
 integer null /* PagerSize */
;
alter  table TablePart add 
EditCaption
 VARCHAR (256) null /* EditCaption */
;
alter  table TablePart add 
ViewCaption
 VARCHAR (256) null /* ViewCaption */
;
alter  table TablePart add 
DeleteCaption
 VARCHAR (256) null /* DeleteCaption */
;


/*Замены*/
drop table ReplaceValues/**/ 
;
create table ReplaceValues/**/ (
ParentStructRowID CHAR(38) not null,
ReplaceValuesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ReplaceValues add 
Name
 VARCHAR (256) null /* Поле */
;
alter  table ReplaceValues add 
SourceName
 VARCHAR (256) null /* Поле источник */
;


/*Запрещённые для редактирования поля*/
drop table DenyEdit/**/ 
;
create table DenyEdit/**/ (
ParentStructRowID CHAR(38) not null,
DenyEditid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table DenyEdit add 
Name
 VARCHAR (256) null /* Значение */
;


/*Невидимые поля*/
drop table DenyVisible/**/ 
;
create table DenyVisible/**/ (
ParentStructRowID CHAR(38) not null,
DenyVisibleid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table DenyVisible add 
Name
 VARCHAR (256) null /* Имя поля */
;


/*Значения поля, разрешающего редактирование*/
drop table AllowEditFieldValues/*Значения поля, разрешающего редактирование*/ 
;
create table AllowEditFieldValues/*Значения поля, разрешающего редактирование*/ (
ParentStructRowID CHAR(38) not null,
AllowEditFieldValuesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table AllowEditFieldValues add 
Name
 VARCHAR (256) null /* Значение */
;


/*Комбобоксы*/
drop table ComboFields/**/ 
;
create table ComboFields/**/ (
ParentStructRowID CHAR(38) not null,
ComboFieldsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table ComboFields add 
Name
 VARCHAR (256) null /* Поле */
;
alter  table ComboFields add 
SourceName
 VARCHAR (256) null /* Поле источник */
;


/*Анкеты*/
drop table WEBS_ANKETA/**/ 
;
create table WEBS_ANKETA/**/ (
InstanceID CHAR(38) ,
WEBS_ANKETAid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBS_ANKETA add 
Name
 VARCHAR (256) null /* Название */
;
alter  table WEBS_ANKETA add 
the_Description
 VARCHAR (4000) null /* Описание */
;
alter  table WEBS_ANKETA add 
AnketaDef null /* Анкета */
;
alter  table WEBS_ANKETA add 
Message
 VARCHAR (156) null /* Сообщение */
;


/*Вопросы*/
drop table WEBS_QUESTIONS/**/ 
;
create table WEBS_QUESTIONS/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_QUESTIONSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBS_QUESTIONS add 
the_Number
 integer null /* Номер  */
;
alter  table WEBS_QUESTIONS add 
QuestionType
 uniqueidentifier null /* Тип */
;
alter  table WEBS_QUESTIONS add 
Name
 VARCHAR (1024) null /* Имя */
;
alter  table WEBS_QUESTIONS add 
Required null 
 check (Required in ( -1/* Да */
, 0/* Нет */ )) /* Обязательность */
;
alter  table WEBS_QUESTIONS add 
Style
 VARCHAR (256) null /* Стиль */
;


/*Ответы*/
drop table WEBS_ANSWERS/**/ 
;
create table WEBS_ANSWERS/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_ANSWERSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBS_ANSWERS add 
the_Number
 integer null /* Номер  */
;
alter  table WEBS_ANSWERS add 
Name
 VARCHAR (1024) null /* Значение  */
;
alter  table WEBS_ANSWERS add 
the_Description
 VARCHAR (4000) null /* Описание  */
;


/*Документы для скачивания*/
drop table WEBS_DDOC/*Список документов которые можно скачать*/ 
;
create table WEBS_DDOC/*Список документов которые можно скачать*/ (
InstanceID CHAR(38) ,
WEBS_DDOCid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBS_DDOC add 
Name
 VARCHAR (512) null /* Название */
;
alter  table WEBS_DDOC add 
FileName
 VARCHAR (1024) null /* Имя файла */
;
alter  table WEBS_DDOC add 
FileContract null /* Файл */
;
alter  table WEBS_DDOC add 
 FileContract_EXT char(4) null
;
alter  table WEBS_DDOC add 
Title
 VARCHAR (512) null /* Заголовок для ссылки */
;


/*Новости*/
drop table WEBS_NEWS/*Древовидный список новостей*/ 
;
create table WEBS_NEWS/*Древовидный список новостей*/ (
InstanceID CHAR(38) ,
WEBS_NEWSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
;
alter  table WEBS_NEWS add 
QueueNumber
 integer null /* Номер п/п */
;
alter  table WEBS_NEWS add 
Name
 VARCHAR (256) null /* Название */
;
alter  table WEBS_NEWS add 
Title
 VARCHAR (256) null /* Титул */
;
alter  table WEBS_NEWS add 
ShortName
 VARCHAR (256) null /* Короткое название */
;
alter  table WEBS_NEWS add 
the_Mode
 VARCHAR (256) null /* Режим работы */
;
alter  table WEBS_NEWS add 
PageContent null /* Cодержимое */
;
alter  table WEBS_NEWS add 
the_IsLocked null 
 check (the_IsLocked in ( -1/* Да */
, 0/* Нет */ )) /* Заблокирована */
;
alter  table WEBS_NEWS add 
IsShowHisory null 
 check (IsShowHisory in ( -1/* Да */
, 0/* Нет */ )) /* Отобразить историю */
;
alter  table WEBS_NEWS add 
NewsDate
 DATETIME null /* Дата */
;
alter  table WEBS_NEWS add 
NewsDescription null /* Описание */
;


/*Картинки*/
drop table NEWS_PICS/**/ 
;
create table NEWS_PICS/**/ (
ParentStructRowID CHAR(38) not null,
NEWS_PICSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table NEWS_PICS add 
Name
 VARCHAR (512) null /* Название */
;
alter  table NEWS_PICS add 
FileContent null /* Файл */
;
alter  table NEWS_PICS add 
 FileContent_EXT char(4) null
;


/*Смотри также*/
drop table VRCPSeeAlso/*Смотри также*/ 
;
create table VRCPSeeAlso/*Смотри также*/ (
InstanceID CHAR(38) ,
VRCPSeeAlsoid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCPSeeAlso add 
Document null /* Документ */
;
alter  table VRCPSeeAlso add 
the_Comment null /* Примечание */
;


/*Факты*/
drop table VRCPSpecial/*Факты*/ 
;
create table VRCPSpecial/*Факты*/ (
InstanceID CHAR(38) ,
VRCPSpecialid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCPSpecial add 
DateOF
 DATETIME null /* Дата */
;
alter  table VRCPSpecial add 
Info null /* Описание */
;
alter  table VRCPSpecial add 
theFile null /* Файл */
;
alter  table VRCPSpecial add 
 theFile_EXT char(4) null
;
alter  table VRCPSpecial add 
InfoSrc null /* Источник */
;


/*Подарки*/
drop table VRCPPresents/*Подарки*/ 
;
create table VRCPPresents/*Подарки*/ (
InstanceID CHAR(38) ,
VRCPPresentsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCPPresents add 
DateOF
 DATETIME null /* Дата */
;
alter  table VRCPPresents add 
Gift
 VARCHAR (255) null /* Подарок */
;
alter  table VRCPPresents add 
PresentCost null /* Цена подарка */
;
alter  table VRCPPresents add 
reason null /* Повод */
;


/*Отчеты*/
drop table VRCPReports/*Отчеты*/ 
;
create table VRCPReports/*Отчеты*/ (
InstanceID CHAR(38) ,
VRCPReportsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCPReports add 
Report null /* Отчет */
;


/*Памятные даты*/
drop table VRCPDates/*Памятные даты*/ 
;
create table VRCPDates/*Памятные даты*/ (
InstanceID CHAR(38) ,
VRCPDatesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCPDates add 
DateOf
 DATETIME null /* Дата */
;
alter  table VRCPDates add 
DateEvent
 VARCHAR (255) null /* Событие */
;


/*Родственники*/
drop table VRCPNeigborhood/*Родственники*/ 
;
create table VRCPNeigborhood/*Родственники*/ (
InstanceID CHAR(38) ,
VRCPNeigborhoodid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCPNeigborhood add 
the_Level
 VARCHAR (255) null /* Степень родства */
;
alter  table VRCPNeigborhood add 
person null /* Описание */
;


/*Увлечения*/
drop table VRCPInterest/*Увлечения*/ 
;
create table VRCPInterest/*Увлечения*/ (
InstanceID CHAR(38) ,
VRCPInterestid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCPInterest add 
Info null /* Описание */
;


/*Общая информация*/
drop table VRCPCommon/*Общая информация*/ 
;
create table VRCPCommon/*Общая информация*/ (
InstanceID CHAR(38) ,
VRCPCommonid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table VRCPCommon add 
Family
 VARCHAR (255) null /* Фамилия */
;
alter  table VRCPCommon add 
Name
 VARCHAR (255) null /* Имя */
;
alter  table VRCPCommon add 
SurName
 VARCHAR (255) null /* Отчество */
;
alter  table VRCPCommon add 
Privelegie null /* Звание */
;
alter  table VRCPCommon add 
phone
 VARCHAR (30) null /* Телефон */
;
alter  table VRCPCommon add 
email varchar(255) null /* e-mail */
;
alter  table VRCPCommon add 
fax
 VARCHAR (30) null /* Факс */
;
alter  table VRCPCommon add 
Loyality null /* Лояльность */
;
alter  table VRCPCommon add 
the_Comment null /* Примечания */
;
alter  table VRCPCommon add 
Curator null /* Ответственный */
;
alter  table VRCPCommon add 
mobile
 VARCHAR (30) null /* Мобильный телефон */
;
alter  table VRCPCommon add 
PersonDeYuro null 
 check (PersonDeYuro in ( -1/* Да */
, 0/* Нет */ )) /* Официальный представитель */
;
alter  table VRCPCommon add 
ActionReason
 VARCHAR (255) null /* Действует на основании */
;
alter  table VRCPCommon add 
ActionStart
 DATETIME null /* Начало действия доверености */
;
alter  table VRCPCommon add 
ActionEnd
 DATETIME null /* Конец действия доверенности */
;
alter  table VRCPCommon add 
PassportInfo null /* Паспортные данные */
;
alter  table VRCPCommon add 
Address null /* Адрес */
;


/*Z-Отчет*/
drop table PEKZR_DATA/*Данные ежедневного Z отчета*/ 
;
create table PEKZR_DATA/*Данные ежедневного Z отчета*/ (
InstanceID CHAR(38) ,
PEKZR_DATAid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKZR_DATA add 
TheDept null /* Филиал */
;
alter  table PEKZR_DATA add 
TheDate
 DATETIME null /* Дата */
;
alter  table PEKZR_DATA add 
TheValue null /* Значение */
;


/*Карточки*/
drop table WEBCRD_NUM/*Карточки*/ 
;
create table WEBCRD_NUM/*Карточки*/ (
InstanceID CHAR(38) ,
WEBCRD_NUMid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WEBCRD_NUM add 
TheNumber
 VARCHAR (30) null /* Номер карточки */
;
alter  table WEBCRD_NUM add 
ActivationTime
 DATETIME null /* Когда активирована */
;
alter  table WEBCRD_NUM add 
ActivatedBy null /* Кем активирована */
;
alter  table WEBCRD_NUM add 
Activated null 
 check (Activated in ( -1/* Да */
, 0/* Нет */ )) /* Активирована */
;


/*Описание серии*/
drop table WBCRD_DEF/*Описание серии*/ 
;
create table WBCRD_DEF/*Описание серии*/ (
InstanceID CHAR(38) ,
WBCRD_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table WBCRD_DEF add 
TheDate
 DATETIME null /* Дата выпуска сериии */
;
alter  table WBCRD_DEF add 
ExpDate
 DATETIME null /* Конец действия серии */
;
alter  table WBCRD_DEF add 
CardSumm null /* Сумма на карточке */
;
alter  table WBCRD_DEF add 
TheCurrency null /* Валюта */
;


/*Описание*/
drop table PEKO_DEF/*Описание*/ 
;
create table PEKO_DEF/*Описание*/ (
InstanceID CHAR(38) ,
PEKO_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKO_DEF add 
ToClient null /* Поставщик */
;
alter  table PEKO_DEF add 
PLPNUM
 VARCHAR (20) null /* № документа */
;
alter  table PEKO_DEF add 
PLPDate
 DATETIME null /* Дата документа */
;
alter  table PEKO_DEF add 
PLPSumm null /* Сумма */
;
alter  table PEKO_DEF add 
TheDept null /* В счет филиала */
;
alter  table PEKO_DEF add 
TheComment null /* Назначеие платежа */
;
alter  table PEKO_DEF add 
Code1C
 VARCHAR (40) null /* Код1С */
;


/*Описание лимитов*/
drop table PEKL_DEF/*Описание лимитов*/ 
;
create table PEKL_DEF/*Описание лимитов*/ (
InstanceID CHAR(38) ,
PEKL_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKL_DEF add 
TheDep null /* Филиал */
;
alter  table PEKL_DEF add 
FromDate
 DATETIME null /* Начало действия */
;
alter  table PEKL_DEF add 
ToDate
 DATETIME null /* Окончание действия */
;


/*Стандартные лимиты*/
drop table PEKL_WDAY/*Стандартные лимиты*/ 
;
create table PEKL_WDAY/*Стандартные лимиты*/ (
InstanceID CHAR(38) ,
PEKL_WDAYid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKL_WDAY add 
Train null /* Поезд */
;
alter  table PEKL_WDAY add 
GOTYPE null /* Тип СГО */
;
alter  table PEKL_WDAY add 
TheValue null /* Объем */
;
alter  table PEKL_WDAY add 
TheValueEDIZM null /* Ед. изм. Объема */
;
alter  table PEKL_WDAY add 
WeightValue null /* Вес */
;
alter  table PEKL_WDAY add 
WeightEDIZM null /* Ед. изм. веса */
;
alter  table PEKL_WDAY add 
the_Description null /* Описание */
;


/*Надбавки*/
drop table PEKD_ADDS/*Варианты надбавок*/ 
;
create table PEKD_ADDS/*Варианты надбавок*/ (
InstanceID CHAR(38) ,
PEKD_ADDSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_ADDS add 
Name
 VARCHAR (255) null /* Название */
;
alter  table PEKD_ADDS add 
CalcType
 integer null 
 check (CalcType in ( 1/* Объем */
, 2/* Плотность */
, 3/* Прочее */
, 0/* Вес */ )) /* Тип расчета */
;


/*Тип поезда*/
drop table PEKD_TRAINTYPE/*Тип поезда*/ 
;
create table PEKD_TRAINTYPE/*Тип поезда*/ (
InstanceID CHAR(38) ,
PEKD_TRAINTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_TRAINTYPE add 
name
 VARCHAR (255) null /* Название */
;


/*Тип автотранспорта*/
drop table PEKD_AUTO/*Справочник типов автотранспорта*/ 
;
create table PEKD_AUTO/*Справочник типов автотранспорта*/ (
InstanceID CHAR(38) ,
PEKD_AUTOid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_AUTO add 
Name
 VARCHAR (255) null /* Название */
;
alter  table PEKD_AUTO add 
TheVolume null /* Грузоподъемность */
;
alter  table PEKD_AUTO add 
TheDimentions
 VARCHAR (80) null /* Габариты */
;


/*Типы СГО*/
drop table PEKD_GOTYPE/*Типы СГО*/ 
;
create table PEKD_GOTYPE/*Типы СГО*/ (
InstanceID CHAR(38) ,
PEKD_GOTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_GOTYPE add 
name
 VARCHAR (255) null /* Название */
;


/*Способ передачи информации*/
drop table PEKD_INFOSENDTYPE/*Способ передачи информации */ 
;
create table PEKD_INFOSENDTYPE/*Способ передачи информации */ (
InstanceID CHAR(38) ,
PEKD_INFOSENDTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_INFOSENDTYPE add 
Name
 VARCHAR (255) null /* Название */
;


/*Система отправки*/
drop table PEKD_TRTYPE/*Система отправки*/ 
;
create table PEKD_TRTYPE/*Система отправки*/ (
InstanceID CHAR(38) ,
PEKD_TRTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_TRTYPE add 
name
 VARCHAR (255) null /* Название */
;


/*Группы ДопУслуг*/
drop table PEKD_GRPDpUSL/*позволяет группировать ДопУслуги (PEKD_SRV)*/ 
;
create table PEKD_GRPDpUSL/*позволяет группировать ДопУслуги (PEKD_SRV)*/ (
InstanceID CHAR(38) ,
PEKD_GRPDpUSLid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_GRPDpUSL add 
name
 VARCHAR (255) null /* Название */
;


/*Характер отправления*/
drop table PEKD_POSTTYPE/*Характер отправления*/ 
;
create table PEKD_POSTTYPE/*Характер отправления*/ (
InstanceID CHAR(38) ,
PEKD_POSTTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_POSTTYPE add 
Name
 VARCHAR (255) null /* Название */
;


/*Группы тарифов*/
drop table PEKD_TRFGRP/*Группы тарифов*/ 
;
create table PEKD_TRFGRP/*Группы тарифов*/ (
InstanceID CHAR(38) ,
PEKD_TRFGRPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
;
alter  table PEKD_TRFGRP add 
name
 VARCHAR (255) null /* Группа */
;


/*Типы тарифов*/
drop table PEKD_TRFTYPE/*Типы тарифов*/ 
;
create table PEKD_TRFTYPE/*Типы тарифов*/ (
ParentStructRowID CHAR(38) not null,
PEKD_TRFTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_TRFTYPE add 
name
 VARCHAR (255) null /* Название */
;


/*Филиал*/
drop table PEKD_DEPT/*Филиал*/ 
;
create table PEKD_DEPT/*Филиал*/ (
InstanceID CHAR(38) ,
PEKD_DEPTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_DEPT add 
name
 VARCHAR (255) null /* Название */
;
alter  table PEKD_DEPT add 
Address null /* Адрес */
;
alter  table PEKD_DEPT add 
Supplier null /* Основной поставщик */
;
alter  table PEKD_DEPT add 
DocPrefix
 VARCHAR (3) null /* Префикс номеров документов */
;
alter  table PEKD_DEPT add 
PGDPName
 VARCHAR (255) null /* Название ПЖДП */
;
alter  table PEKD_DEPT add 
town null /* Город */
;
alter  table PEKD_DEPT add 
Code1C
 VARCHAR (40) null /* Код1С */
;


/*Контролируемые лимиты*/
drop table PEKD_DEPLIMITS/*Уровни неснижаемых остатков по постащикам*/ 
;
create table PEKD_DEPLIMITS/*Уровни неснижаемых остатков по постащикам*/ (
ParentStructRowID CHAR(38) not null,
PEKD_DEPLIMITSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_DEPLIMITS add 
Supplier null /* Поставщик */
;
alter  table PEKD_DEPLIMITS add 
LimitMark null /* Необходимый остаток */
;
alter  table PEKD_DEPLIMITS add 
DaysToCrash
 integer null /* Запас в днях */
;


/*Договора с поставщиками*/
drop table PEKD_DEPDOG/*Договора в рамках которого поставщик поставляет услуги*/ 
;
create table PEKD_DEPDOG/*Договора в рамках которого поставщик поставляет услуги*/ (
ParentStructRowID CHAR(38) not null,
PEKD_DEPDOGid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_DEPDOG add 
Supplier null /* Поставщик */
;
alter  table PEKD_DEPDOG add 
TheDogovor null /* Договор */
;


/*Направление перевозки*/
drop table PEKD_DIRECTION/*Направление перевозки*/ 
;
create table PEKD_DIRECTION/*Направление перевозки*/ (
InstanceID CHAR(38) ,
PEKD_DIRECTIONid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_DIRECTION add 
Town null /* Город */
;
alter  table PEKD_DIRECTION add 
Name
 VARCHAR (255) null /* Направление */
;
alter  table PEKD_DIRECTION add 
Dept null /* Филиал */
;
alter  table PEKD_DIRECTION add 
Srok
 VARCHAR (255) null /* Срок доставки */
;
alter  table PEKD_DIRECTION add 
the_Rule
 VARCHAR (255) null /* Отправка */
;
alter  table PEKD_DIRECTION add 
POSTINDEX
 VARCHAR (20) null /* Почтовый индекс */
;
alter  table PEKD_DIRECTION add 
TheTransport null /* Транспорт */
;
alter  table PEKD_DIRECTION add 
TheAgent null /* Агент */
;


/*Маршруты*/
drop table PEKD_TRAINS/*Маршруты*/ 
;
create table PEKD_TRAINS/*Маршруты*/ (
ParentStructRowID CHAR(38) not null,
PEKD_TRAINSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_TRAINS add 
TrainNo
 VARCHAR (50) null /* № поезда */
;
alter  table PEKD_TRAINS add 
FromStation null /* Из */
;
alter  table PEKD_TRAINS add 
ToSTATION null /* В */
;
alter  table PEKD_TRAINS add 
the_Rule
 VARCHAR (255) null /* Отправка */
;
alter  table PEKD_TRAINS add 
TheDesciption
 VARCHAR (255) null /* Описание */
;
alter  table PEKD_TRAINS add 
TheComment null /* Примечание */
;
alter  table PEKD_TRAINS add 
TrainType null /* Тип поезда */
;


/*Точки доставки*/
drop table PEKD_DIRSTATION/*Точки доставки*/ 
;
create table PEKD_DIRSTATION/*Точки доставки*/ (
ParentStructRowID CHAR(38) not null,
PEKD_DIRSTATIONid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_DIRSTATION add 
name
 VARCHAR (255) null /* Название */
;
alter  table PEKD_DIRSTATION add 
POSTINDEX
 VARCHAR (20) null /* Индекс отделения */
;
alter  table PEKD_DIRSTATION add 
region null /* Регион */
;
alter  table PEKD_DIRSTATION add 
area
 VARCHAR (255) null /* Район */
;
alter  table PEKD_DIRSTATION add 
TheNextTown null /* Город */
;


/*Дополнительные услуги*/
drop table PEKD_SRV/*Дополнительные услуги*/ 
;
create table PEKD_SRV/*Дополнительные услуги*/ (
InstanceID CHAR(38) ,
PEKD_SRVid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
;
alter  table PEKD_SRV add 
name
 VARCHAR (255) null /* Название */
;
alter  table PEKD_SRV add 
DependOnWeight null 
 check (DependOnWeight in ( -1/* Да */
, 0/* Нет */ )) /* Зависит от веса */
;
alter  table PEKD_SRV add 
EDIZM null /* Единица измерения */
;
alter  table PEKD_SRV add 
GRPDpUsl null /* Группа Услуг */
;
alter  table PEKD_SRV add 
IsObligate null 
 check (IsObligate in ( -1/* Да */
, 0/* Нет */ )) /* Является обязательной */
;
alter  table PEKD_SRV add 
CalcWithNDS null 
 check (CalcWithNDS in ( -1/* Да */
, 0/* Нет */ )) /* Расчет с НДС */
;
alter  table PEKD_SRV add 
Code1C
 VARCHAR (40) null /* Код1С */
;


"><FormData Name=""/></BlockHolder><BlockHolder BlockName="--ForeignKey" BlockCode=" 

alter  TABLE FilterFieldGroup DROP CONSTRAINT fk_195
;
alter  table FilterFieldGroup add constraint fk_195 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE FileterField DROP CONSTRAINT fk_196
;
alter  table FileterField add constraint fk_196 foreign key(ParentStructRowID) references FilterFieldGroup (FilterFieldGroupID)
;


alter  TABLE Filters DROP CONSTRAINT fk_197
;
alter  table Filters add constraint fk_197 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEK103_DEF DROP CONSTRAINT fk_474
;
alter  table PEK103_DEF add constraint fk_474 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEK103_LINES DROP CONSTRAINT fk_475
;
alter  table PEK103_LINES add constraint fk_475 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBC_BLOCK DROP CONSTRAINT fk_149
;
alter  table WEBC_BLOCK add constraint fk_149 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBC_NEWS DROP CONSTRAINT fk_150
;
alter  table WEBC_NEWS add constraint fk_150 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBC_JOB DROP CONSTRAINT fk_548
;
alter  table WEBC_JOB add constraint fk_548 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBC_MESSAGES DROP CONSTRAINT fk_589
;
alter  table WEBC_MESSAGES add constraint fk_589 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBC_DOCS DROP CONSTRAINT fk_549
;
alter  table WEBC_DOCS add constraint fk_549 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBC_FILIALS DROP CONSTRAINT fk_550
;
alter  table WEBC_FILIALS add constraint fk_550 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBC_LINKS DROP CONSTRAINT fk_551
;
alter  table WEBC_LINKS add constraint fk_551 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRRPT_COSTS DROP CONSTRAINT fk_216
;
alter  table VRRPT_COSTS add constraint fk_216 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRRPT_MeetingPlan DROP CONSTRAINT fk_217
;
alter  table VRRPT_MeetingPlan add constraint fk_217 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRRPT_Meeters DROP CONSTRAINT fk_218
;
alter  table VRRPT_Meeters add constraint fk_218 foreign key(ParentStructRowID) references VRRPT_MeetingPlan (VRRPT_MeetingPlanID)
;


alter  TABLE VRRPT_MAIN DROP CONSTRAINT fk_219
;
alter  table VRRPT_MAIN add constraint fk_219 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDGCommon DROP CONSTRAINT fk_55
;
alter  table VRDGCommon add constraint fk_55 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDGReport DROP CONSTRAINT fk_56
;
alter  table VRDGReport add constraint fk_56 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDGContractChanges DROP CONSTRAINT fk_58
;
alter  table VRDGContractChanges add constraint fk_58 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDGContractVersion DROP CONSTRAINT fk_60
;
alter  table VRDGContractVersion add constraint fk_60 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDGContractSpesial DROP CONSTRAINT fk_61
;
alter  table VRDGContractSpesial add constraint fk_61 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKSH_DATA DROP CONSTRAINT fk_545
;
alter  table PEKSH_DATA add constraint fk_545 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKSH_START DROP CONSTRAINT fk_546
;
alter  table PEKSH_START add constraint fk_546 foreign key(ParentStructRowID) references PEKSH_DATA (PEKSH_DATAID)
;


alter  TABLE PEKSH_DEF DROP CONSTRAINT fk_547
;
alter  table PEKSH_DEF add constraint fk_547 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE MTZ2JOB_DEF DROP CONSTRAINT fk_580
;
alter  table MTZ2JOB_DEF add constraint fk_580 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKPAY_DEF DROP CONSTRAINT fk_603
;
alter  table PEKPAY_DEF add constraint fk_603 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBSDIC_DEF DROP CONSTRAINT fk_619
;
alter  table WEBSDIC_DEF add constraint fk_619 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PWUUSERS DROP CONSTRAINT fk_706
;
alter  table PWUUSERS add constraint fk_706 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE pekz_path DROP CONSTRAINT fk_79
;
alter  table pekz_path add constraint fk_79 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKZ_WLIST DROP CONSTRAINT fk_596
;
alter  table PEKZ_WLIST add constraint fk_596 foreign key(ParentStructRowID) references pekz_path (pekz_pathID)
;


alter  TABLE PEKZ_WLADDS DROP CONSTRAINT fk_597
;
alter  table PEKZ_WLADDS add constraint fk_597 foreign key(ParentStructRowID) references PEKZ_WLIST (PEKZ_WLISTID)
;


alter  TABLE PEKZ_DOCS DROP CONSTRAINT fk_80
;
alter  table PEKZ_DOCS add constraint fk_80 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE pekz_def DROP CONSTRAINT fk_81
;
alter  table pekz_def add constraint fk_81 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKZ_ACLCT DROP CONSTRAINT fk_707
;
alter  table PEKZ_ACLCT add constraint fk_707 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKZ_ADLVR DROP CONSTRAINT fk_708
;
alter  table PEKZ_ADLVR add constraint fk_708 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE pekz_dop DROP CONSTRAINT fk_82
;
alter  table pekz_dop add constraint fk_82 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE REPD_LOCKED DROP CONSTRAINT fk_527
;
alter  table REPD_LOCKED add constraint fk_527 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE REPD_RequestQuery DROP CONSTRAINT fk_528
;
alter  table REPD_RequestQuery add constraint fk_528 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE REPD_ResQueryRcv DROP CONSTRAINT fk_529
;
alter  table REPD_ResQueryRcv add constraint fk_529 foreign key(ParentStructRowID) references REPD_RequestQuery (REPD_RequestQueryID)
;


alter  TABLE REPD_PROV DROP CONSTRAINT fk_530
;
alter  table REPD_PROV add constraint fk_530 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE REPD_SRV DROP CONSTRAINT fk_531
;
alter  table REPD_SRV add constraint fk_531 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE REPD_SNDTO DROP CONSTRAINT fk_532
;
alter  table REPD_SNDTO add constraint fk_532 foreign key(ParentStructRowID) references REPD_SRV (REPD_SRVID)
;


alter  TABLE REPD_CONST DROP CONSTRAINT fk_621
;
alter  table REPD_CONST add constraint fk_621 foreign key(ParentStructRowID) references REPD_SNDTO (REPD_SNDTOID)
;


alter  TABLE REPD_REPTYPE DROP CONSTRAINT fk_622
;
alter  table REPD_REPTYPE add constraint fk_622 foreign key(ParentStructRowID) references REPD_SNDTO (REPD_SNDTOID)
;


alter  TABLE REPD_SendQ DROP CONSTRAINT fk_533
;
alter  table REPD_SendQ add constraint fk_533 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE REPD_RecvQ DROP CONSTRAINT fk_534
;
alter  table REPD_RecvQ add constraint fk_534 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE StateAction DROP CONSTRAINT fk_64
;
alter  table StateAction add constraint fk_64 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE TheDiffPath DROP CONSTRAINT fk_709
;
alter  table TheDiffPath add constraint fk_709 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE DopUslTo DROP CONSTRAINT fk_710
;
alter  table DopUslTo add constraint fk_710 foreign key(ParentStructRowID) references TheDiffPath (TheDiffPathID)
;


alter  TABLE DopUslFrom DROP CONSTRAINT fk_711
;
alter  table DopUslFrom add constraint fk_711 foreign key(ParentStructRowID) references TheDiffPath (TheDiffPathID)
;


alter  TABLE TheDefenitionDiffP DROP CONSTRAINT fk_712
;
alter  table TheDefenitionDiffP add constraint fk_712 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKACT_DEF DROP CONSTRAINT fk_604
;
alter  table PEKACT_DEF add constraint fk_604 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKACT_ITOG DROP CONSTRAINT fk_605
;
alter  table PEKACT_ITOG add constraint fk_605 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKACT_LINES DROP CONSTRAINT fk_606
;
alter  table PEKACT_LINES add constraint fk_606 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE FIELDTYPE DROP CONSTRAINT fk_299
;
alter  table FIELDTYPE add constraint fk_299 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE FIELDTYPEMAP DROP CONSTRAINT fk_300
;
alter  table FIELDTYPEMAP add constraint fk_300 foreign key(ParentStructRowID) references FIELDTYPE (FIELDTYPEID)
;


alter  TABLE ENUMITEM DROP CONSTRAINT fk_301
;
alter  table ENUMITEM add constraint fk_301 foreign key(ParentStructRowID) references FIELDTYPE (FIELDTYPEID)
;


alter  TABLE SHAREDMETHOD DROP CONSTRAINT fk_302
;
alter  table SHAREDMETHOD add constraint fk_302 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE SCRIPT DROP CONSTRAINT fk_303
;
alter  table SCRIPT add constraint fk_303 foreign key(ParentStructRowID) references SHAREDMETHOD (SHAREDMETHODID)
;


alter  TABLE PARAMETERS DROP CONSTRAINT fk_304
;
alter  table PARAMETERS add constraint fk_304 foreign key(ParentStructRowID) references SCRIPT (SCRIPTID)
;


alter  TABLE OBJECTTYPE DROP CONSTRAINT fk_305
;
alter  table OBJECTTYPE add constraint fk_305 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PART DROP CONSTRAINT fk_306
;
alter  table PART add constraint fk_306 foreign key(ParentStructRowID) references OBJECTTYPE (OBJECTTYPEID)
;


alter  TABLE PARTMENU DROP CONSTRAINT fk_307
;
alter  table PARTMENU add constraint fk_307 foreign key(ParentStructRowID) references PART (PARTID)
;


alter  TABLE PARTPARAMMAP DROP CONSTRAINT fk_308
;
alter  table PARTPARAMMAP add constraint fk_308 foreign key(ParentStructRowID) references PARTMENU (PARTMENUID)
;


alter  TABLE FIELD DROP CONSTRAINT fk_309
;
alter  table FIELD add constraint fk_309 foreign key(ParentStructRowID) references PART (PARTID)
;


alter  TABLE FIELDVALIDATOR DROP CONSTRAINT fk_310
;
alter  table FIELDVALIDATOR add constraint fk_310 foreign key(ParentStructRowID) references FIELD (FIELDID)
;


alter  TABLE FIELDMENU DROP CONSTRAINT fk_311
;
alter  table FIELDMENU add constraint fk_311 foreign key(ParentStructRowID) references FIELD (FIELDID)
;


alter  TABLE FIELDPARAMMAP DROP CONSTRAINT fk_312
;
alter  table FIELDPARAMMAP add constraint fk_312 foreign key(ParentStructRowID) references FIELDMENU (FIELDMENUID)
;


alter  TABLE FldExtenders DROP CONSTRAINT fk_654
;
alter  table FldExtenders add constraint fk_654 foreign key(ParentStructRowID) references FIELD (FIELDID)
;


alter  TABLE FIELDEXPRESSION DROP CONSTRAINT fk_313
;
alter  table FIELDEXPRESSION add constraint fk_313 foreign key(ParentStructRowID) references FIELD (FIELDID)
;


alter  TABLE DINAMICFILTERSCRIPT DROP CONSTRAINT fk_314
;
alter  table DINAMICFILTERSCRIPT add constraint fk_314 foreign key(ParentStructRowID) references FIELD (FIELDID)
;


alter  TABLE FIELDSRCDEF DROP CONSTRAINT fk_655
;
alter  table FIELDSRCDEF add constraint fk_655 foreign key(ParentStructRowID) references FIELD (FIELDID)
;


alter  TABLE PARTVIEW DROP CONSTRAINT fk_315
;
alter  table PARTVIEW add constraint fk_315 foreign key(ParentStructRowID) references PART (PARTID)
;


alter  TABLE ViewColumn DROP CONSTRAINT fk_316
;
alter  table ViewColumn add constraint fk_316 foreign key(ParentStructRowID) references PARTVIEW (PARTVIEWID)
;


alter  TABLE PARTVIEW_LNK DROP CONSTRAINT fk_656
;
alter  table PARTVIEW_LNK add constraint fk_656 foreign key(ParentStructRowID) references PARTVIEW (PARTVIEWID)
;


alter  TABLE ExtenderInterface DROP CONSTRAINT fk_657
;
alter  table ExtenderInterface add constraint fk_657 foreign key(ParentStructRowID) references PART (PARTID)
;


alter  TABLE VALIDATOR DROP CONSTRAINT fk_317
;
alter  table VALIDATOR add constraint fk_317 foreign key(ParentStructRowID) references PART (PARTID)
;


alter  TABLE UNIQUECONSTRAINT DROP CONSTRAINT fk_318
;
alter  table UNIQUECONSTRAINT add constraint fk_318 foreign key(ParentStructRowID) references PART (PARTID)
;


alter  TABLE CONSTRAINTFIELD DROP CONSTRAINT fk_319
;
alter  table CONSTRAINTFIELD add constraint fk_319 foreign key(ParentStructRowID) references UNIQUECONSTRAINT (UNIQUECONSTRAINTID)
;


alter  TABLE INSTANCEVALIDATOR DROP CONSTRAINT fk_320
;
alter  table INSTANCEVALIDATOR add constraint fk_320 foreign key(ParentStructRowID) references OBJECTTYPE (OBJECTTYPEID)
;


alter  TABLE OBJSTATUS DROP CONSTRAINT fk_321
;
alter  table OBJSTATUS add constraint fk_321 foreign key(ParentStructRowID) references OBJECTTYPE (OBJECTTYPEID)
;


alter  TABLE NEXTSTATE DROP CONSTRAINT fk_322
;
alter  table NEXTSTATE add constraint fk_322 foreign key(ParentStructRowID) references OBJSTATUS (OBJSTATUSID)
;


alter  TABLE OBJECTMODE DROP CONSTRAINT fk_323
;
alter  table OBJECTMODE add constraint fk_323 foreign key(ParentStructRowID) references OBJECTTYPE (OBJECTTYPEID)
;


alter  TABLE STRUCTRESTRICTION DROP CONSTRAINT fk_324
;
alter  table STRUCTRESTRICTION add constraint fk_324 foreign key(ParentStructRowID) references OBJECTMODE (OBJECTMODEID)
;


alter  TABLE FIELDRESTRICTION DROP CONSTRAINT fk_325
;
alter  table FIELDRESTRICTION add constraint fk_325 foreign key(ParentStructRowID) references OBJECTMODE (OBJECTMODEID)
;


alter  TABLE METHODRESTRICTION DROP CONSTRAINT fk_326
;
alter  table METHODRESTRICTION add constraint fk_326 foreign key(ParentStructRowID) references OBJECTMODE (OBJECTMODEID)
;


alter  TABLE TYPEMENU DROP CONSTRAINT fk_327
;
alter  table TYPEMENU add constraint fk_327 foreign key(ParentStructRowID) references OBJECTTYPE (OBJECTTYPEID)
;


alter  TABLE MTZAPP DROP CONSTRAINT fk_328
;
alter  table MTZAPP add constraint fk_328 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ParentPackage DROP CONSTRAINT fk_329
;
alter  table ParentPackage add constraint fk_329 foreign key(ParentStructRowID) references MTZAPP (MTZAPPID)
;


alter  TABLE GENPACKAGE DROP CONSTRAINT fk_330
;
alter  table GENPACKAGE add constraint fk_330 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE GENERATOR_TARGET DROP CONSTRAINT fk_331
;
alter  table GENERATOR_TARGET add constraint fk_331 foreign key(ParentStructRowID) references GENPACKAGE (GENPACKAGEID)
;


alter  TABLE GENMANUALCODE DROP CONSTRAINT fk_332
;
alter  table GENMANUALCODE add constraint fk_332 foreign key(ParentStructRowID) references GENERATOR_TARGET (GENERATOR_TARGETID)
;


alter  TABLE GENCONTROLS DROP CONSTRAINT fk_333
;
alter  table GENCONTROLS add constraint fk_333 foreign key(ParentStructRowID) references GENERATOR_TARGET (GENERATOR_TARGETID)
;


alter  TABLE GENREFERENCE DROP CONSTRAINT fk_334
;
alter  table GENREFERENCE add constraint fk_334 foreign key(ParentStructRowID) references GENERATOR_TARGET (GENERATOR_TARGETID)
;


alter  TABLE LocalizeInfo DROP CONSTRAINT fk_658
;
alter  table LocalizeInfo add constraint fk_658 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKPQ_DEF DROP CONSTRAINT fk_598
;
alter  table PEKPQ_DEF add constraint fk_598 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ENTDIC_BANK DROP CONSTRAINT fk_388
;
alter  table ENTDIC_BANK add constraint fk_388 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ENTDIC_DOST DROP CONSTRAINT fk_390
;
alter  table ENTDIC_DOST add constraint fk_390 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ENTDIC_TOWN DROP CONSTRAINT fk_391
;
alter  table ENTDIC_TOWN add constraint fk_391 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ENTDIC_TransportType DROP CONSTRAINT fk_713
;
alter  table ENTDIC_TransportType add constraint fk_713 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ENTDIC_OPF DROP CONSTRAINT fk_714
;
alter  table ENTDIC_OPF add constraint fk_714 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ENTDIC_EDIZM DROP CONSTRAINT fk_398
;
alter  table ENTDIC_EDIZM add constraint fk_398 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ENTDIC_CURRENCY DROP CONSTRAINT fk_404
;
alter  table ENTDIC_CURRENCY add constraint fk_404 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ENTDIC_CURCOURCE DROP CONSTRAINT fk_405
;
alter  table ENTDIC_CURCOURCE add constraint fk_405 foreign key(ParentStructRowID) references ENTDIC_CURRENCY (ENTDIC_CURRENCYID)
;


alter  TABLE ENTDIC_COUNTRY DROP CONSTRAINT fk_410
;
alter  table ENTDIC_COUNTRY add constraint fk_410 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ENTDIC_REGION DROP CONSTRAINT fk_414
;
alter  table ENTDIC_REGION add constraint fk_414 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ST_MAIN DROP CONSTRAINT fk_623
;
alter  table ST_MAIN add constraint fk_623 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ST_DEF DROP CONSTRAINT fk_624
;
alter  table ST_DEF add constraint fk_624 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ST_PAGES DROP CONSTRAINT fk_625
;
alter  table ST_PAGES add constraint fk_625 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE STDJournlaExtInfo DROP CONSTRAINT fk_648
;
alter  table STDJournlaExtInfo add constraint fk_648 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE STDJournalExtParam DROP CONSTRAINT fk_649
;
alter  table STDJournalExtParam add constraint fk_649 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE STDJournalExtFlt DROP CONSTRAINT fk_650
;
alter  table STDJournalExtFlt add constraint fk_650 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE STDJournalExtField DROP CONSTRAINT fk_715
;
alter  table STDJournalExtField add constraint fk_715 foreign key(ParentStructRowID) references STDJournalExtFlt (STDJournalExtFltID)
;


alter  TABLE CAL_DAYS DROP CONSTRAINT fk_98
;
alter  table CAL_DAYS add constraint fk_98 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE CAL_TIME DROP CONSTRAINT fk_99
;
alter  table CAL_TIME add constraint fk_99 foreign key(ParentStructRowID) references CAL_DAYS (CAL_DAYSID)
;


alter  TABLE CAL_HEAD DROP CONSTRAINT fk_100
;
alter  table CAL_HEAD add constraint fk_100 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE SrvMessageInfo DROP CONSTRAINT fk_296
;
alter  table SrvMessageInfo add constraint fk_296 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKNAL_DEF DROP CONSTRAINT fk_599
;
alter  table PEKNAL_DEF add constraint fk_599 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKNAL_PZ DROP CONSTRAINT fk_607
;
alter  table PEKNAL_PZ add constraint fk_607 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKNAL_ROWS DROP CONSTRAINT fk_716
;
alter  table PEKNAL_ROWS add constraint fk_716 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE FileDef DROP CONSTRAINT fk_467
;
alter  table FileDef add constraint fk_467 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE FileVersion DROP CONSTRAINT fk_468
;
alter  table FileVersion add constraint fk_468 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE Num_zones DROP CONSTRAINT fk_161
;
alter  table Num_zones add constraint fk_161 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE Num_Values DROP CONSTRAINT fk_162
;
alter  table Num_Values add constraint fk_162 foreign key(ParentStructRowID) references Num_zones (Num_zonesID)
;


alter  TABLE Num_head DROP CONSTRAINT fk_163
;
alter  table Num_head add constraint fk_163 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE BaseSetting DROP CONSTRAINT fk_717
;
alter  table BaseSetting add constraint fk_717 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE Reports DROP CONSTRAINT fk_181
;
alter  table Reports add constraint fk_181 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE RPTStruct DROP CONSTRAINT fk_182
;
alter  table RPTStruct add constraint fk_182 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE RPTFields DROP CONSTRAINT fk_183
;
alter  table RPTFields add constraint fk_183 foreign key(ParentStructRowID) references RPTStruct (RPTStructID)
;


alter  TABLE RPTFormula DROP CONSTRAINT fk_184
;
alter  table RPTFormula add constraint fk_184 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKRKO_DEF DROP CONSTRAINT fk_718
;
alter  table PEKRKO_DEF add constraint fk_718 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKRKO_ROWS DROP CONSTRAINT fk_719
;
alter  table PEKRKO_ROWS add constraint fk_719 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKTRF_REGALL DROP CONSTRAINT fk_540
;
alter  table PEKTRF_REGALL add constraint fk_540 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKTRF_DECR DROP CONSTRAINT fk_539
;
alter  table PEKTRF_DECR add constraint fk_539 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKTRF_ADDS DROP CONSTRAINT fk_538
;
alter  table PEKTRF_ADDS add constraint fk_538 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKTRF_DEF DROP CONSTRAINT fk_456
;
alter  table PEKTRF_DEF add constraint fk_456 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKTRF_AUTO DROP CONSTRAINT fk_720
;
alter  table PEKTRF_AUTO add constraint fk_720 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKTRF_SRV DROP CONSTRAINT fk_457
;
alter  table PEKTRF_SRV add constraint fk_457 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKTRF_TR DROP CONSTRAINT fk_458
;
alter  table PEKTRF_TR add constraint fk_458 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKTRF_REGRTR DROP CONSTRAINT fk_537
;
alter  table PEKTRF_REGRTR add constraint fk_537 foreign key(ParentStructRowID) references PEKTRF_TR (PEKTRF_TRID)
;


alter  TABLE PEKCL_DEF DROP CONSTRAINT fk_459
;
alter  table PEKCL_DEF add constraint fk_459 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKCL_DAYLY DROP CONSTRAINT fk_460
;
alter  table PEKCL_DAYLY add constraint fk_460 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKL_TOLOAD DROP CONSTRAINT fk_461
;
alter  table PEKL_TOLOAD add constraint fk_461 foreign key(ParentStructRowID) references PEKCL_DAYLY (PEKCL_DAYLYID)
;


alter  TABLE MTZExt_def DROP CONSTRAINT fk_581
;
alter  table MTZExt_def add constraint fk_581 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE MTZExtRel DROP CONSTRAINT fk_591
;
alter  table MTZExtRel add constraint fk_591 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE InfoStoreDef DROP CONSTRAINT fk_120
;
alter  table InfoStoreDef add constraint fk_120 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE Folder DROP CONSTRAINT fk_121
;
alter  table Folder add constraint fk_121 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE Shortcut DROP CONSTRAINT fk_122
;
alter  table Shortcut add constraint fk_122 foreign key(ParentStructRowID) references Folder (FolderID)
;


alter  TABLE PEKP_DEF DROP CONSTRAINT fk_208
;
alter  table PEKP_DEF add constraint fk_208 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKP_PZ DROP CONSTRAINT fk_608
;
alter  table PEKP_PZ add constraint fk_608 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE SysLog DROP CONSTRAINT fk_338
;
alter  table SysLog add constraint fk_338 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE the_Session DROP CONSTRAINT fk_339
;
alter  table the_Session add constraint fk_339 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE LogReader DROP CONSTRAINT fk_340
;
alter  table LogReader add constraint fk_340 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE Verb DROP CONSTRAINT fk_341
;
alter  table Verb add constraint fk_341 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE Users DROP CONSTRAINT fk_418
;
alter  table Users add constraint fk_418 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE Groups DROP CONSTRAINT fk_419
;
alter  table Groups add constraint fk_419 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE GroupUser DROP CONSTRAINT fk_420
;
alter  table GroupUser add constraint fk_420 foreign key(ParentStructRowID) references Groups (GroupsID)
;


alter  TABLE VRDContractStage DROP CONSTRAINT fk_424
;
alter  table VRDContractStage add constraint fk_424 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDRreportType DROP CONSTRAINT fk_425
;
alter  table VRDRreportType add constraint fk_425 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDPrjType DROP CONSTRAINT fk_426
;
alter  table VRDPrjType add constraint fk_426 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDStream DROP CONSTRAINT fk_427
;
alter  table VRDStream add constraint fk_427 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDInterest DROP CONSTRAINT fk_428
;
alter  table VRDInterest add constraint fk_428 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDDocType DROP CONSTRAINT fk_429
;
alter  table VRDDocType add constraint fk_429 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDLoyalty DROP CONSTRAINT fk_430
;
alter  table VRDLoyalty add constraint fk_430 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRDMarket DROP CONSTRAINT fk_431
;
alter  table VRDMarket add constraint fk_431 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE MTZSEC_RIGHT DROP CONSTRAINT fk_185
;
alter  table MTZSEC_RIGHT add constraint fk_185 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCAccounts DROP CONSTRAINT fk_126
;
alter  table VRCAccounts add constraint fk_126 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCTorg DROP CONSTRAINT fk_131
;
alter  table VRCTorg add constraint fk_131 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCAditional DROP CONSTRAINT fk_554
;
alter  table VRCAditional add constraint fk_554 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCTarif DROP CONSTRAINT fk_721
;
alter  table VRCTarif add constraint fk_721 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCCommonInfo DROP CONSTRAINT fk_136
;
alter  table VRCCommonInfo add constraint fk_136 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ROLES_USER DROP CONSTRAINT fk_281
;
alter  table ROLES_USER add constraint fk_281 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ROLES_MAP DROP CONSTRAINT fk_282
;
alter  table ROLES_MAP add constraint fk_282 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ROLES_DOC DROP CONSTRAINT fk_556
;
alter  table ROLES_DOC add constraint fk_556 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ROLES_DOC_STATE DROP CONSTRAINT fk_557
;
alter  table ROLES_DOC_STATE add constraint fk_557 foreign key(ParentStructRowID) references ROLES_DOC (ROLES_DOCID)
;


alter  TABLE ROLES_DEF DROP CONSTRAINT fk_283
;
alter  table ROLES_DEF add constraint fk_283 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ROLES_REPORTS DROP CONSTRAINT fk_558
;
alter  table ROLES_REPORTS add constraint fk_558 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ROLES_WP DROP CONSTRAINT fk_285
;
alter  table ROLES_WP add constraint fk_285 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ROLES_ACT DROP CONSTRAINT fk_559
;
alter  table ROLES_ACT add constraint fk_559 foreign key(ParentStructRowID) references ROLES_WP (ROLES_WPID)
;


alter  TABLE RptSrvMsg DROP CONSTRAINT fk_83
;
alter  table RptSrvMsg add constraint fk_83 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE RptQuery DROP CONSTRAINT fk_84
;
alter  table RptQuery add constraint fk_84 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE RptQryParam DROP CONSTRAINT fk_85
;
alter  table RptQryParam add constraint fk_85 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKORD_DEF DROP CONSTRAINT fk_562
;
alter  table PEKORD_DEF add constraint fk_562 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKORD_DATA DROP CONSTRAINT fk_563
;
alter  table PEKORD_DATA add constraint fk_563 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WorkPlace DROP CONSTRAINT fk_165
;
alter  table WorkPlace add constraint fk_165 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE EntryPoints DROP CONSTRAINT fk_583
;
alter  table EntryPoints add constraint fk_583 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE EPFilterLink DROP CONSTRAINT fk_590
;
alter  table EPFilterLink add constraint fk_590 foreign key(ParentStructRowID) references EntryPoints (EntryPointsID)
;


alter  TABLE ARMTypes DROP CONSTRAINT fk_584
;
alter  table ARMTypes add constraint fk_584 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ARMJournal DROP CONSTRAINT fk_585
;
alter  table ARMJournal add constraint fk_585 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE ARMJRNLADD DROP CONSTRAINT fk_586
;
alter  table ARMJRNLADD add constraint fk_586 foreign key(ParentStructRowID) references ARMJournal (ARMJournalID)
;


alter  TABLE ARMJRNLREP DROP CONSTRAINT fk_587
;
alter  table ARMJRNLREP add constraint fk_587 foreign key(ParentStructRowID) references ARMJournal (ARMJournalID)
;


alter  TABLE ARMJRNLRUN DROP CONSTRAINT fk_588
;
alter  table ARMJRNLRUN add constraint fk_588 foreign key(ParentStructRowID) references ARMJournal (ARMJournalID)
;


alter  TABLE PEKD_NZONE DROP CONSTRAINT fk_564
;
alter  table PEKD_NZONE add constraint fk_564 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_USEDNUM DROP CONSTRAINT fk_565
;
alter  table PEKD_USEDNUM add constraint fk_565 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE JournalColumn DROP CONSTRAINT fk_168
;
alter  table JournalColumn add constraint fk_168 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE JColumnSource DROP CONSTRAINT fk_169
;
alter  table JColumnSource add constraint fk_169 foreign key(ParentStructRowID) references JournalColumn (JournalColumnID)
;


alter  TABLE Journal DROP CONSTRAINT fk_170
;
alter  table Journal add constraint fk_170 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE JournalSrc DROP CONSTRAINT fk_171
;
alter  table JournalSrc add constraint fk_171 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE pekmsg_path DROP CONSTRAINT fk_722
;
alter  table pekmsg_path add constraint fk_722 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBS_MAILLIST DROP CONSTRAINT fk_685
;
alter  table WEBS_MAILLIST add constraint fk_685 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBS_RECLAME DROP CONSTRAINT fk_723
;
alter  table WEBS_RECLAME add constraint fk_723 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBS_PAGEDEF DROP CONSTRAINT fk_687
;
alter  table WEBS_PAGEDEF add constraint fk_687 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBS_PICS DROP CONSTRAINT fk_688
;
alter  table WEBS_PICS add constraint fk_688 foreign key(ParentStructRowID) references WEBS_PAGEDEF (WEBS_PAGEDEFID)
;


alter  TABLE WEBS_PAGEMENU DROP CONSTRAINT fk_689
;
alter  table WEBS_PAGEMENU add constraint fk_689 foreign key(ParentStructRowID) references WEBS_PAGEDEF (WEBS_PAGEDEFID)
;


alter  TABLE WEBS_PAGECONTENT DROP CONSTRAINT fk_690
;
alter  table WEBS_PAGECONTENT add constraint fk_690 foreign key(ParentStructRowID) references WEBS_PAGEDEF (WEBS_PAGEDEFID)
;


alter  TABLE WEBS_PAGEPARS DROP CONSTRAINT fk_691
;
alter  table WEBS_PAGEPARS add constraint fk_691 foreign key(ParentStructRowID) references WEBS_PAGEDEF (WEBS_PAGEDEFID)
;


alter  TABLE WEBS_PAGECOMP DROP CONSTRAINT fk_692
;
alter  table WEBS_PAGECOMP add constraint fk_692 foreign key(ParentStructRowID) references WEBS_PAGEDEF (WEBS_PAGEDEFID)
;


alter  TABLE TablePart DROP CONSTRAINT fk_693
;
alter  table TablePart add constraint fk_693 foreign key(ParentStructRowID) references WEBS_PAGECOMP (WEBS_PAGECOMPID)
;


alter  TABLE ReplaceValues DROP CONSTRAINT fk_694
;
alter  table ReplaceValues add constraint fk_694 foreign key(ParentStructRowID) references WEBS_PAGECOMP (WEBS_PAGECOMPID)
;


alter  TABLE DenyEdit DROP CONSTRAINT fk_695
;
alter  table DenyEdit add constraint fk_695 foreign key(ParentStructRowID) references WEBS_PAGECOMP (WEBS_PAGECOMPID)
;


alter  TABLE DenyVisible DROP CONSTRAINT fk_696
;
alter  table DenyVisible add constraint fk_696 foreign key(ParentStructRowID) references WEBS_PAGECOMP (WEBS_PAGECOMPID)
;


alter  TABLE AllowEditFieldValues DROP CONSTRAINT fk_697
;
alter  table AllowEditFieldValues add constraint fk_697 foreign key(ParentStructRowID) references WEBS_PAGECOMP (WEBS_PAGECOMPID)
;


alter  TABLE ComboFields DROP CONSTRAINT fk_698
;
alter  table ComboFields add constraint fk_698 foreign key(ParentStructRowID) references WEBS_PAGECOMP (WEBS_PAGECOMPID)
;


alter  TABLE WEBS_ANKETA DROP CONSTRAINT fk_700
;
alter  table WEBS_ANKETA add constraint fk_700 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBS_QUESTIONS DROP CONSTRAINT fk_701
;
alter  table WEBS_QUESTIONS add constraint fk_701 foreign key(ParentStructRowID) references WEBS_ANKETA (WEBS_ANKETAID)
;


alter  TABLE WEBS_ANSWERS DROP CONSTRAINT fk_702
;
alter  table WEBS_ANSWERS add constraint fk_702 foreign key(ParentStructRowID) references WEBS_QUESTIONS (WEBS_QUESTIONSID)
;


alter  TABLE WEBS_DDOC DROP CONSTRAINT fk_703
;
alter  table WEBS_DDOC add constraint fk_703 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBS_NEWS DROP CONSTRAINT fk_704
;
alter  table WEBS_NEWS add constraint fk_704 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE NEWS_PICS DROP CONSTRAINT fk_705
;
alter  table NEWS_PICS add constraint fk_705 foreign key(ParentStructRowID) references WEBS_NEWS (WEBS_NEWSID)
;


alter  TABLE VRCPSeeAlso DROP CONSTRAINT fk_141
;
alter  table VRCPSeeAlso add constraint fk_141 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCPSpecial DROP CONSTRAINT fk_142
;
alter  table VRCPSpecial add constraint fk_142 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCPPresents DROP CONSTRAINT fk_143
;
alter  table VRCPPresents add constraint fk_143 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCPReports DROP CONSTRAINT fk_144
;
alter  table VRCPReports add constraint fk_144 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCPDates DROP CONSTRAINT fk_145
;
alter  table VRCPDates add constraint fk_145 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCPNeigborhood DROP CONSTRAINT fk_146
;
alter  table VRCPNeigborhood add constraint fk_146 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCPInterest DROP CONSTRAINT fk_147
;
alter  table VRCPInterest add constraint fk_147 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE VRCPCommon DROP CONSTRAINT fk_148
;
alter  table VRCPCommon add constraint fk_148 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKZR_DATA DROP CONSTRAINT fk_724
;
alter  table PEKZR_DATA add constraint fk_724 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WEBCRD_NUM DROP CONSTRAINT fk_293
;
alter  table WEBCRD_NUM add constraint fk_293 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE WBCRD_DEF DROP CONSTRAINT fk_294
;
alter  table WBCRD_DEF add constraint fk_294 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKO_DEF DROP CONSTRAINT fk_245
;
alter  table PEKO_DEF add constraint fk_245 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKL_DEF DROP CONSTRAINT fk_152
;
alter  table PEKL_DEF add constraint fk_152 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKL_WDAY DROP CONSTRAINT fk_153
;
alter  table PEKL_WDAY add constraint fk_153 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_ADDS DROP CONSTRAINT fk_602
;
alter  table PEKD_ADDS add constraint fk_602 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_TRAINTYPE DROP CONSTRAINT fk_567
;
alter  table PEKD_TRAINTYPE add constraint fk_567 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_AUTO DROP CONSTRAINT fk_725
;
alter  table PEKD_AUTO add constraint fk_725 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_GOTYPE DROP CONSTRAINT fk_568
;
alter  table PEKD_GOTYPE add constraint fk_568 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_INFOSENDTYPE DROP CONSTRAINT fk_609
;
alter  table PEKD_INFOSENDTYPE add constraint fk_609 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_TRTYPE DROP CONSTRAINT fk_569
;
alter  table PEKD_TRTYPE add constraint fk_569 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_GRPDpUSL DROP CONSTRAINT fk_726
;
alter  table PEKD_GRPDpUSL add constraint fk_726 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_POSTTYPE DROP CONSTRAINT fk_611
;
alter  table PEKD_POSTTYPE add constraint fk_611 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_TRFGRP DROP CONSTRAINT fk_570
;
alter  table PEKD_TRFGRP add constraint fk_570 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_TRFTYPE DROP CONSTRAINT fk_571
;
alter  table PEKD_TRFTYPE add constraint fk_571 foreign key(ParentStructRowID) references PEKD_TRFGRP (PEKD_TRFGRPID)
;


alter  TABLE PEKD_DEPT DROP CONSTRAINT fk_572
;
alter  table PEKD_DEPT add constraint fk_572 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_DEPLIMITS DROP CONSTRAINT fk_573
;
alter  table PEKD_DEPLIMITS add constraint fk_573 foreign key(ParentStructRowID) references PEKD_DEPT (PEKD_DEPTID)
;


alter  TABLE PEKD_DEPDOG DROP CONSTRAINT fk_612
;
alter  table PEKD_DEPDOG add constraint fk_612 foreign key(ParentStructRowID) references PEKD_DEPT (PEKD_DEPTID)
;


alter  TABLE PEKD_DIRECTION DROP CONSTRAINT fk_574
;
alter  table PEKD_DIRECTION add constraint fk_574 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


alter  TABLE PEKD_TRAINS DROP CONSTRAINT fk_575
;
alter  table PEKD_TRAINS add constraint fk_575 foreign key(ParentStructRowID) references PEKD_DIRECTION (PEKD_DIRECTIONID)
;


alter  TABLE PEKD_DIRSTATION DROP CONSTRAINT fk_576
;
alter  table PEKD_DIRSTATION add constraint fk_576 foreign key(ParentStructRowID) references PEKD_DIRECTION (PEKD_DIRECTIONID)
;


alter  TABLE PEKD_SRV DROP CONSTRAINT fk_579
;
alter  table PEKD_SRV add constraint fk_579 foreign key(INSTANCEID) references INSTANCE (INSTANCEID)
;


"><FormData Name=""/></BlockHolder><BlockHolder BlockName="--index" BlockCode=" 

drop index parent_FilterFieldGroup
;
create index parent_FilterFieldGroup on FilterFieldGroup(&quot;INSTANCEID&quot;)
;


drop index parent_FileterField
;
create index parent_FileterField on FileterField(ParentStructRowID)
;


drop index parent_Filters
;
create index parent_Filters on Filters(&quot;INSTANCEID&quot;)
;


drop index parent_PEK103_DEF
;
create index parent_PEK103_DEF on PEK103_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEK103_LINES
;
create index parent_PEK103_LINES on PEK103_LINES(&quot;INSTANCEID&quot;)
;


drop index parent_WEBC_BLOCK
;
create index parent_WEBC_BLOCK on WEBC_BLOCK(&quot;INSTANCEID&quot;)
;


drop index parent_WEBC_NEWS
;
create index parent_WEBC_NEWS on WEBC_NEWS(&quot;INSTANCEID&quot;)
;


drop index parent_WEBC_JOB
;
create index parent_WEBC_JOB on WEBC_JOB(&quot;INSTANCEID&quot;)
;


drop index parent_WEBC_MESSAGES
;
create index parent_WEBC_MESSAGES on WEBC_MESSAGES(&quot;INSTANCEID&quot;)
;


drop index parent_WEBC_DOCS
;
create index parent_WEBC_DOCS on WEBC_DOCS(&quot;INSTANCEID&quot;)
;


drop index parent_WEBC_FILIALS
;
create index parent_WEBC_FILIALS on WEBC_FILIALS(&quot;INSTANCEID&quot;)
;


drop index parent_WEBC_LINKS
;
create index parent_WEBC_LINKS on WEBC_LINKS(&quot;INSTANCEID&quot;)
;


drop index parent_VRRPT_COSTS
;
create index parent_VRRPT_COSTS on VRRPT_COSTS(&quot;INSTANCEID&quot;)
;


drop index parent_VRRPT_MeetingPlan
;
create index parent_VRRPT_MeetingPlan on VRRPT_MeetingPlan(&quot;INSTANCEID&quot;)
;


drop index parent_VRRPT_Meeters
;
create index parent_VRRPT_Meeters on VRRPT_Meeters(ParentStructRowID)
;


drop index parent_VRRPT_MAIN
;
create index parent_VRRPT_MAIN on VRRPT_MAIN(&quot;INSTANCEID&quot;)
;


drop index parent_VRDGCommon
;
create index parent_VRDGCommon on VRDGCommon(&quot;INSTANCEID&quot;)
;


drop index parent_VRDGReport
;
create index parent_VRDGReport on VRDGReport(&quot;INSTANCEID&quot;)
;


drop index parent_VRDGContractChanges
;
create index parent_VRDGContractChanges on VRDGContractChanges(&quot;INSTANCEID&quot;)
;


drop index parent_VRDGContractVersion
;
create index parent_VRDGContractVersion on VRDGContractVersion(&quot;INSTANCEID&quot;)
;


drop index parent_VRDGContractSpesial
;
create index parent_VRDGContractSpesial on VRDGContractSpesial(&quot;INSTANCEID&quot;)
;


drop index parent_PEKSH_DATA
;
create index parent_PEKSH_DATA on PEKSH_DATA(&quot;INSTANCEID&quot;)
;


drop index parent_PEKSH_START
;
create index parent_PEKSH_START on PEKSH_START(ParentStructRowID)
;


drop index parent_PEKSH_DEF
;
create index parent_PEKSH_DEF on PEKSH_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_MTZ2JOB_DEF
;
create index parent_MTZ2JOB_DEF on MTZ2JOB_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEKPAY_DEF
;
create index parent_PEKPAY_DEF on PEKPAY_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_WEBSDIC_DEF
;
create index parent_WEBSDIC_DEF on WEBSDIC_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PWUUSERS
;
create index parent_PWUUSERS on PWUUSERS(&quot;INSTANCEID&quot;)
;


drop index parent_pekz_path
;
create index parent_pekz_path on pekz_path(&quot;INSTANCEID&quot;)
;


drop index parent_PEKZ_WLIST
;
create index parent_PEKZ_WLIST on PEKZ_WLIST(ParentStructRowID)
;


drop index parent_PEKZ_WLADDS
;
create index parent_PEKZ_WLADDS on PEKZ_WLADDS(ParentStructRowID)
;


drop index parent_PEKZ_DOCS
;
create index parent_PEKZ_DOCS on PEKZ_DOCS(&quot;INSTANCEID&quot;)
;


drop index parent_pekz_def
;
create index parent_pekz_def on pekz_def(&quot;INSTANCEID&quot;)
;


drop index parent_PEKZ_ACLCT
;
create index parent_PEKZ_ACLCT on PEKZ_ACLCT(&quot;INSTANCEID&quot;)
;


drop index parent_PEKZ_ADLVR
;
create index parent_PEKZ_ADLVR on PEKZ_ADLVR(&quot;INSTANCEID&quot;)
;


drop index parent_pekz_dop
;
create index parent_pekz_dop on pekz_dop(&quot;INSTANCEID&quot;)
;


drop index parent_REPD_LOCKED
;
create index parent_REPD_LOCKED on REPD_LOCKED(&quot;INSTANCEID&quot;)
;


drop index parent_REPD_RequestQuery
;
create index parent_REPD_RequestQuery on REPD_RequestQuery(&quot;INSTANCEID&quot;)
;


drop index parent_REPD_ResQueryRcv
;
create index parent_REPD_ResQueryRcv on REPD_ResQueryRcv(ParentStructRowID)
;


drop index parent_REPD_PROV
;
create index parent_REPD_PROV on REPD_PROV(&quot;INSTANCEID&quot;)
;


drop index parent_REPD_SRV
;
create index parent_REPD_SRV on REPD_SRV(&quot;INSTANCEID&quot;)
;


drop index parent_REPD_SNDTO
;
create index parent_REPD_SNDTO on REPD_SNDTO(ParentStructRowID)
;


drop index parent_REPD_CONST
;
create index parent_REPD_CONST on REPD_CONST(ParentStructRowID)
;


drop index parent_REPD_REPTYPE
;
create index parent_REPD_REPTYPE on REPD_REPTYPE(ParentStructRowID)
;


drop index parent_REPD_SendQ
;
create index parent_REPD_SendQ on REPD_SendQ(&quot;INSTANCEID&quot;)
;


drop index parent_REPD_RecvQ
;
create index parent_REPD_RecvQ on REPD_RecvQ(&quot;INSTANCEID&quot;)
;


drop index parent_StateAction
;
create index parent_StateAction on StateAction(&quot;INSTANCEID&quot;)
;


drop index parent_TheDiffPath
;
create index parent_TheDiffPath on TheDiffPath(&quot;INSTANCEID&quot;)
;


drop index parent_DopUslTo
;
create index parent_DopUslTo on DopUslTo(ParentStructRowID)
;


drop index parent_DopUslFrom
;
create index parent_DopUslFrom on DopUslFrom(ParentStructRowID)
;


drop index parent_TheDefenitionDiffP
;
create index parent_TheDefenitionDiffP on TheDefenitionDiffP(&quot;INSTANCEID&quot;)
;


drop index parent_PEKACT_DEF
;
create index parent_PEKACT_DEF on PEKACT_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEKACT_ITOG
;
create index parent_PEKACT_ITOG on PEKACT_ITOG(&quot;INSTANCEID&quot;)
;


drop index parent_PEKACT_LINES
;
create index parent_PEKACT_LINES on PEKACT_LINES(&quot;INSTANCEID&quot;)
;


drop index parent_FIELDTYPE
;
create index parent_FIELDTYPE on FIELDTYPE(&quot;INSTANCEID&quot;)
;


drop index parent_FIELDTYPEMAP
;
create index parent_FIELDTYPEMAP on FIELDTYPEMAP(ParentStructRowID)
;


drop index parent_ENUMITEM
;
create index parent_ENUMITEM on ENUMITEM(ParentStructRowID)
;


drop index parent_SHAREDMETHOD
;
create index parent_SHAREDMETHOD on SHAREDMETHOD(&quot;INSTANCEID&quot;)
;


drop index parent_SCRIPT
;
create index parent_SCRIPT on SCRIPT(ParentStructRowID)
;


drop index parent_PARAMETERS
;
create index parent_PARAMETERS on PARAMETERS(ParentStructRowID)
;


drop index parent_OBJECTTYPE
;
create index parent_OBJECTTYPE on OBJECTTYPE(&quot;INSTANCEID&quot;)
;


drop index parent_PART
;
create index parent_PART on PART(ParentStructRowID)
;


drop index parent_PARTMENU
;
create index parent_PARTMENU on PARTMENU(ParentStructRowID)
;


drop index parent_PARTPARAMMAP
;
create index parent_PARTPARAMMAP on PARTPARAMMAP(ParentStructRowID)
;


drop index parent_FIELD
;
create index parent_FIELD on FIELD(ParentStructRowID)
;


drop index parent_FIELDVALIDATOR
;
create index parent_FIELDVALIDATOR on FIELDVALIDATOR(ParentStructRowID)
;


drop index parent_FIELDMENU
;
create index parent_FIELDMENU on FIELDMENU(ParentStructRowID)
;


drop index parent_FIELDPARAMMAP
;
create index parent_FIELDPARAMMAP on FIELDPARAMMAP(ParentStructRowID)
;


drop index parent_FldExtenders
;
create index parent_FldExtenders on FldExtenders(ParentStructRowID)
;


drop index parent_FIELDEXPRESSION
;
create index parent_FIELDEXPRESSION on FIELDEXPRESSION(ParentStructRowID)
;


drop index parent_DINAMICFILTERSCRIPT
;
create index parent_DINAMICFILTERSCRIPT on DINAMICFILTERSCRIPT(ParentStructRowID)
;


drop index parent_FIELDSRCDEF
;
create index parent_FIELDSRCDEF on FIELDSRCDEF(ParentStructRowID)
;


drop index parent_PARTVIEW
;
create index parent_PARTVIEW on PARTVIEW(ParentStructRowID)
;


drop index parent_ViewColumn
;
create index parent_ViewColumn on ViewColumn(ParentStructRowID)
;


drop index parent_PARTVIEW_LNK
;
create index parent_PARTVIEW_LNK on PARTVIEW_LNK(ParentStructRowID)
;


drop index parent_ExtenderInterface
;
create index parent_ExtenderInterface on ExtenderInterface(ParentStructRowID)
;


drop index parent_VALIDATOR
;
create index parent_VALIDATOR on VALIDATOR(ParentStructRowID)
;


drop index parent_UNIQUECONSTRAINT
;
create index parent_UNIQUECONSTRAINT on UNIQUECONSTRAINT(ParentStructRowID)
;


drop index parent_CONSTRAINTFIELD
;
create index parent_CONSTRAINTFIELD on CONSTRAINTFIELD(ParentStructRowID)
;


drop index parent_INSTANCEVALIDATOR
;
create index parent_INSTANCEVALIDATOR on INSTANCEVALIDATOR(ParentStructRowID)
;


drop index parent_OBJSTATUS
;
create index parent_OBJSTATUS on OBJSTATUS(ParentStructRowID)
;


drop index parent_NEXTSTATE
;
create index parent_NEXTSTATE on NEXTSTATE(ParentStructRowID)
;


drop index parent_OBJECTMODE
;
create index parent_OBJECTMODE on OBJECTMODE(ParentStructRowID)
;


drop index parent_STRUCTRESTRICTION
;
create index parent_STRUCTRESTRICTION on STRUCTRESTRICTION(ParentStructRowID)
;


drop index parent_FIELDRESTRICTION
;
create index parent_FIELDRESTRICTION on FIELDRESTRICTION(ParentStructRowID)
;


drop index parent_METHODRESTRICTION
;
create index parent_METHODRESTRICTION on METHODRESTRICTION(ParentStructRowID)
;


drop index parent_TYPEMENU
;
create index parent_TYPEMENU on TYPEMENU(ParentStructRowID)
;


drop index parent_MTZAPP
;
create index parent_MTZAPP on MTZAPP(&quot;INSTANCEID&quot;)
;


drop index parent_ParentPackage
;
create index parent_ParentPackage on ParentPackage(ParentStructRowID)
;


drop index parent_GENPACKAGE
;
create index parent_GENPACKAGE on GENPACKAGE(&quot;INSTANCEID&quot;)
;


drop index parent_GENERATOR_TARGET
;
create index parent_GENERATOR_TARGET on GENERATOR_TARGET(ParentStructRowID)
;


drop index parent_GENMANUALCODE
;
create index parent_GENMANUALCODE on GENMANUALCODE(ParentStructRowID)
;


drop index parent_GENCONTROLS
;
create index parent_GENCONTROLS on GENCONTROLS(ParentStructRowID)
;


drop index parent_GENREFERENCE
;
create index parent_GENREFERENCE on GENREFERENCE(ParentStructRowID)
;


drop index parent_LocalizeInfo
;
create index parent_LocalizeInfo on LocalizeInfo(&quot;INSTANCEID&quot;)
;


drop index parent_PEKPQ_DEF
;
create index parent_PEKPQ_DEF on PEKPQ_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_ENTDIC_BANK
;
create index parent_ENTDIC_BANK on ENTDIC_BANK(&quot;INSTANCEID&quot;)
;


drop index parent_ENTDIC_DOST
;
create index parent_ENTDIC_DOST on ENTDIC_DOST(&quot;INSTANCEID&quot;)
;


drop index parent_ENTDIC_TOWN
;
create index parent_ENTDIC_TOWN on ENTDIC_TOWN(&quot;INSTANCEID&quot;)
;


drop index parent_ENTDIC_TransportType
;
create index parent_ENTDIC_TransportType on ENTDIC_TransportType(&quot;INSTANCEID&quot;)
;


drop index parent_ENTDIC_OPF
;
create index parent_ENTDIC_OPF on ENTDIC_OPF(&quot;INSTANCEID&quot;)
;


drop index parent_ENTDIC_EDIZM
;
create index parent_ENTDIC_EDIZM on ENTDIC_EDIZM(&quot;INSTANCEID&quot;)
;


drop index parent_ENTDIC_CURRENCY
;
create index parent_ENTDIC_CURRENCY on ENTDIC_CURRENCY(&quot;INSTANCEID&quot;)
;


drop index parent_ENTDIC_CURCOURCE
;
create index parent_ENTDIC_CURCOURCE on ENTDIC_CURCOURCE(ParentStructRowID)
;


drop index parent_ENTDIC_COUNTRY
;
create index parent_ENTDIC_COUNTRY on ENTDIC_COUNTRY(&quot;INSTANCEID&quot;)
;


drop index parent_ENTDIC_REGION
;
create index parent_ENTDIC_REGION on ENTDIC_REGION(&quot;INSTANCEID&quot;)
;


drop index parent_ST_MAIN
;
create index parent_ST_MAIN on ST_MAIN(&quot;INSTANCEID&quot;)
;


drop index parent_ST_DEF
;
create index parent_ST_DEF on ST_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_ST_PAGES
;
create index parent_ST_PAGES on ST_PAGES(&quot;INSTANCEID&quot;)
;


drop index parent_STDJournlaExtInfo
;
create index parent_STDJournlaExtInfo on STDJournlaExtInfo(&quot;INSTANCEID&quot;)
;


drop index parent_STDJournalExtParam
;
create index parent_STDJournalExtParam on STDJournalExtParam(&quot;INSTANCEID&quot;)
;


drop index parent_STDJournalExtFlt
;
create index parent_STDJournalExtFlt on STDJournalExtFlt(&quot;INSTANCEID&quot;)
;


drop index parent_STDJournalExtField
;
create index parent_STDJournalExtField on STDJournalExtField(ParentStructRowID)
;


drop index parent_CAL_DAYS
;
create index parent_CAL_DAYS on CAL_DAYS(&quot;INSTANCEID&quot;)
;


drop index parent_CAL_TIME
;
create index parent_CAL_TIME on CAL_TIME(ParentStructRowID)
;


drop index parent_CAL_HEAD
;
create index parent_CAL_HEAD on CAL_HEAD(&quot;INSTANCEID&quot;)
;


drop index parent_SrvMessageInfo
;
create index parent_SrvMessageInfo on SrvMessageInfo(&quot;INSTANCEID&quot;)
;


drop index parent_PEKNAL_DEF
;
create index parent_PEKNAL_DEF on PEKNAL_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEKNAL_PZ
;
create index parent_PEKNAL_PZ on PEKNAL_PZ(&quot;INSTANCEID&quot;)
;


drop index parent_PEKNAL_ROWS
;
create index parent_PEKNAL_ROWS on PEKNAL_ROWS(&quot;INSTANCEID&quot;)
;


drop index parent_FileDef
;
create index parent_FileDef on FileDef(&quot;INSTANCEID&quot;)
;


drop index parent_FileVersion
;
create index parent_FileVersion on FileVersion(&quot;INSTANCEID&quot;)
;


drop index parent_Num_zones
;
create index parent_Num_zones on Num_zones(&quot;INSTANCEID&quot;)
;


drop index parent_Num_Values
;
create index parent_Num_Values on Num_Values(ParentStructRowID)
;


drop index parent_Num_head
;
create index parent_Num_head on Num_head(&quot;INSTANCEID&quot;)
;


drop index parent_BaseSetting
;
create index parent_BaseSetting on BaseSetting(&quot;INSTANCEID&quot;)
;


drop index parent_Reports
;
create index parent_Reports on Reports(&quot;INSTANCEID&quot;)
;


drop index parent_RPTStruct
;
create index parent_RPTStruct on RPTStruct(&quot;INSTANCEID&quot;)
;


drop index parent_RPTFields
;
create index parent_RPTFields on RPTFields(ParentStructRowID)
;


drop index parent_RPTFormula
;
create index parent_RPTFormula on RPTFormula(&quot;INSTANCEID&quot;)
;


drop index parent_PEKRKO_DEF
;
create index parent_PEKRKO_DEF on PEKRKO_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEKRKO_ROWS
;
create index parent_PEKRKO_ROWS on PEKRKO_ROWS(&quot;INSTANCEID&quot;)
;


drop index parent_PEKTRF_REGALL
;
create index parent_PEKTRF_REGALL on PEKTRF_REGALL(&quot;INSTANCEID&quot;)
;


drop index parent_PEKTRF_DECR
;
create index parent_PEKTRF_DECR on PEKTRF_DECR(&quot;INSTANCEID&quot;)
;


drop index parent_PEKTRF_ADDS
;
create index parent_PEKTRF_ADDS on PEKTRF_ADDS(&quot;INSTANCEID&quot;)
;


drop index parent_PEKTRF_DEF
;
create index parent_PEKTRF_DEF on PEKTRF_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEKTRF_AUTO
;
create index parent_PEKTRF_AUTO on PEKTRF_AUTO(&quot;INSTANCEID&quot;)
;


drop index parent_PEKTRF_SRV
;
create index parent_PEKTRF_SRV on PEKTRF_SRV(&quot;INSTANCEID&quot;)
;


drop index parent_PEKTRF_TR
;
create index parent_PEKTRF_TR on PEKTRF_TR(&quot;INSTANCEID&quot;)
;


drop index parent_PEKTRF_REGRTR
;
create index parent_PEKTRF_REGRTR on PEKTRF_REGRTR(ParentStructRowID)
;


drop index parent_PEKCL_DEF
;
create index parent_PEKCL_DEF on PEKCL_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEKCL_DAYLY
;
create index parent_PEKCL_DAYLY on PEKCL_DAYLY(&quot;INSTANCEID&quot;)
;


drop index parent_PEKL_TOLOAD
;
create index parent_PEKL_TOLOAD on PEKL_TOLOAD(ParentStructRowID)
;


drop index parent_MTZExt_def
;
create index parent_MTZExt_def on MTZExt_def(&quot;INSTANCEID&quot;)
;


drop index parent_MTZExtRel
;
create index parent_MTZExtRel on MTZExtRel(&quot;INSTANCEID&quot;)
;


drop index parent_InfoStoreDef
;
create index parent_InfoStoreDef on InfoStoreDef(&quot;INSTANCEID&quot;)
;


drop index parent_Folder
;
create index parent_Folder on Folder(&quot;INSTANCEID&quot;)
;


drop index parent_Shortcut
;
create index parent_Shortcut on Shortcut(ParentStructRowID)
;


drop index parent_PEKP_DEF
;
create index parent_PEKP_DEF on PEKP_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEKP_PZ
;
create index parent_PEKP_PZ on PEKP_PZ(&quot;INSTANCEID&quot;)
;


drop index parent_SysLog
;
create index parent_SysLog on SysLog(&quot;INSTANCEID&quot;)
;


drop index parent_the_Session
;
create index parent_the_Session on the_Session(&quot;INSTANCEID&quot;)
;


drop index parent_LogReader
;
create index parent_LogReader on LogReader(&quot;INSTANCEID&quot;)
;


drop index parent_Verb
;
create index parent_Verb on Verb(&quot;INSTANCEID&quot;)
;


drop index parent_Users
;
create index parent_Users on Users(&quot;INSTANCEID&quot;)
;


drop index parent_Groups
;
create index parent_Groups on Groups(&quot;INSTANCEID&quot;)
;


drop index parent_GroupUser
;
create index parent_GroupUser on GroupUser(ParentStructRowID)
;


drop index parent_VRDContractStage
;
create index parent_VRDContractStage on VRDContractStage(&quot;INSTANCEID&quot;)
;


drop index parent_VRDRreportType
;
create index parent_VRDRreportType on VRDRreportType(&quot;INSTANCEID&quot;)
;


drop index parent_VRDPrjType
;
create index parent_VRDPrjType on VRDPrjType(&quot;INSTANCEID&quot;)
;


drop index parent_VRDStream
;
create index parent_VRDStream on VRDStream(&quot;INSTANCEID&quot;)
;


drop index parent_VRDInterest
;
create index parent_VRDInterest on VRDInterest(&quot;INSTANCEID&quot;)
;


drop index parent_VRDDocType
;
create index parent_VRDDocType on VRDDocType(&quot;INSTANCEID&quot;)
;


drop index parent_VRDLoyalty
;
create index parent_VRDLoyalty on VRDLoyalty(&quot;INSTANCEID&quot;)
;


drop index parent_VRDMarket
;
create index parent_VRDMarket on VRDMarket(&quot;INSTANCEID&quot;)
;


drop index parent_MTZSEC_RIGHT
;
create index parent_MTZSEC_RIGHT on MTZSEC_RIGHT(&quot;INSTANCEID&quot;)
;


drop index parent_VRCAccounts
;
create index parent_VRCAccounts on VRCAccounts(&quot;INSTANCEID&quot;)
;


drop index parent_VRCTorg
;
create index parent_VRCTorg on VRCTorg(&quot;INSTANCEID&quot;)
;


drop index parent_VRCAditional
;
create index parent_VRCAditional on VRCAditional(&quot;INSTANCEID&quot;)
;


drop index parent_VRCTarif
;
create index parent_VRCTarif on VRCTarif(&quot;INSTANCEID&quot;)
;


drop index parent_VRCCommonInfo
;
create index parent_VRCCommonInfo on VRCCommonInfo(&quot;INSTANCEID&quot;)
;


drop index parent_ROLES_USER
;
create index parent_ROLES_USER on ROLES_USER(&quot;INSTANCEID&quot;)
;


drop index parent_ROLES_MAP
;
create index parent_ROLES_MAP on ROLES_MAP(&quot;INSTANCEID&quot;)
;


drop index parent_ROLES_DOC
;
create index parent_ROLES_DOC on ROLES_DOC(&quot;INSTANCEID&quot;)
;


drop index parent_ROLES_DOC_STATE
;
create index parent_ROLES_DOC_STATE on ROLES_DOC_STATE(ParentStructRowID)
;


drop index parent_ROLES_DEF
;
create index parent_ROLES_DEF on ROLES_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_ROLES_REPORTS
;
create index parent_ROLES_REPORTS on ROLES_REPORTS(&quot;INSTANCEID&quot;)
;


drop index parent_ROLES_WP
;
create index parent_ROLES_WP on ROLES_WP(&quot;INSTANCEID&quot;)
;


drop index parent_ROLES_ACT
;
create index parent_ROLES_ACT on ROLES_ACT(ParentStructRowID)
;


drop index parent_RptSrvMsg
;
create index parent_RptSrvMsg on RptSrvMsg(&quot;INSTANCEID&quot;)
;


drop index parent_RptQuery
;
create index parent_RptQuery on RptQuery(&quot;INSTANCEID&quot;)
;


drop index parent_RptQryParam
;
create index parent_RptQryParam on RptQryParam(&quot;INSTANCEID&quot;)
;


drop index parent_PEKORD_DEF
;
create index parent_PEKORD_DEF on PEKORD_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEKORD_DATA
;
create index parent_PEKORD_DATA on PEKORD_DATA(&quot;INSTANCEID&quot;)
;


drop index parent_WorkPlace
;
create index parent_WorkPlace on WorkPlace(&quot;INSTANCEID&quot;)
;


drop index parent_EntryPoints
;
create index parent_EntryPoints on EntryPoints(&quot;INSTANCEID&quot;)
;


drop index parent_EPFilterLink
;
create index parent_EPFilterLink on EPFilterLink(ParentStructRowID)
;


drop index parent_ARMTypes
;
create index parent_ARMTypes on ARMTypes(&quot;INSTANCEID&quot;)
;


drop index parent_ARMJournal
;
create index parent_ARMJournal on ARMJournal(&quot;INSTANCEID&quot;)
;


drop index parent_ARMJRNLADD
;
create index parent_ARMJRNLADD on ARMJRNLADD(ParentStructRowID)
;


drop index parent_ARMJRNLREP
;
create index parent_ARMJRNLREP on ARMJRNLREP(ParentStructRowID)
;


drop index parent_ARMJRNLRUN
;
create index parent_ARMJRNLRUN on ARMJRNLRUN(ParentStructRowID)
;


drop index parent_PEKD_NZONE
;
create index parent_PEKD_NZONE on PEKD_NZONE(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_USEDNUM
;
create index parent_PEKD_USEDNUM on PEKD_USEDNUM(&quot;INSTANCEID&quot;)
;


drop index parent_JournalColumn
;
create index parent_JournalColumn on JournalColumn(&quot;INSTANCEID&quot;)
;


drop index parent_JColumnSource
;
create index parent_JColumnSource on JColumnSource(ParentStructRowID)
;


drop index parent_Journal
;
create index parent_Journal on Journal(&quot;INSTANCEID&quot;)
;


drop index parent_JournalSrc
;
create index parent_JournalSrc on JournalSrc(&quot;INSTANCEID&quot;)
;


drop index parent_pekmsg_path
;
create index parent_pekmsg_path on pekmsg_path(&quot;INSTANCEID&quot;)
;


drop index parent_WEBS_MAILLIST
;
create index parent_WEBS_MAILLIST on WEBS_MAILLIST(&quot;INSTANCEID&quot;)
;


drop index parent_WEBS_RECLAME
;
create index parent_WEBS_RECLAME on WEBS_RECLAME(&quot;INSTANCEID&quot;)
;


drop index parent_WEBS_PAGEDEF
;
create index parent_WEBS_PAGEDEF on WEBS_PAGEDEF(&quot;INSTANCEID&quot;)
;


drop index parent_WEBS_PICS
;
create index parent_WEBS_PICS on WEBS_PICS(ParentStructRowID)
;


drop index parent_WEBS_PAGEMENU
;
create index parent_WEBS_PAGEMENU on WEBS_PAGEMENU(ParentStructRowID)
;


drop index parent_WEBS_PAGECONTENT
;
create index parent_WEBS_PAGECONTENT on WEBS_PAGECONTENT(ParentStructRowID)
;


drop index parent_WEBS_PAGEPARS
;
create index parent_WEBS_PAGEPARS on WEBS_PAGEPARS(ParentStructRowID)
;


drop index parent_WEBS_PAGECOMP
;
create index parent_WEBS_PAGECOMP on WEBS_PAGECOMP(ParentStructRowID)
;


drop index parent_TablePart
;
create index parent_TablePart on TablePart(ParentStructRowID)
;


drop index parent_ReplaceValues
;
create index parent_ReplaceValues on ReplaceValues(ParentStructRowID)
;


drop index parent_DenyEdit
;
create index parent_DenyEdit on DenyEdit(ParentStructRowID)
;


drop index parent_DenyVisible
;
create index parent_DenyVisible on DenyVisible(ParentStructRowID)
;


drop index parent_AllowEditFieldValues
;
create index parent_AllowEditFieldValues on AllowEditFieldValues(ParentStructRowID)
;


drop index parent_ComboFields
;
create index parent_ComboFields on ComboFields(ParentStructRowID)
;


drop index parent_WEBS_ANKETA
;
create index parent_WEBS_ANKETA on WEBS_ANKETA(&quot;INSTANCEID&quot;)
;


drop index parent_WEBS_QUESTIONS
;
create index parent_WEBS_QUESTIONS on WEBS_QUESTIONS(ParentStructRowID)
;


drop index parent_WEBS_ANSWERS
;
create index parent_WEBS_ANSWERS on WEBS_ANSWERS(ParentStructRowID)
;


drop index parent_WEBS_DDOC
;
create index parent_WEBS_DDOC on WEBS_DDOC(&quot;INSTANCEID&quot;)
;


drop index parent_WEBS_NEWS
;
create index parent_WEBS_NEWS on WEBS_NEWS(&quot;INSTANCEID&quot;)
;


drop index parent_NEWS_PICS
;
create index parent_NEWS_PICS on NEWS_PICS(ParentStructRowID)
;


drop index parent_VRCPSeeAlso
;
create index parent_VRCPSeeAlso on VRCPSeeAlso(&quot;INSTANCEID&quot;)
;


drop index parent_VRCPSpecial
;
create index parent_VRCPSpecial on VRCPSpecial(&quot;INSTANCEID&quot;)
;


drop index parent_VRCPPresents
;
create index parent_VRCPPresents on VRCPPresents(&quot;INSTANCEID&quot;)
;


drop index parent_VRCPReports
;
create index parent_VRCPReports on VRCPReports(&quot;INSTANCEID&quot;)
;


drop index parent_VRCPDates
;
create index parent_VRCPDates on VRCPDates(&quot;INSTANCEID&quot;)
;


drop index parent_VRCPNeigborhood
;
create index parent_VRCPNeigborhood on VRCPNeigborhood(&quot;INSTANCEID&quot;)
;


drop index parent_VRCPInterest
;
create index parent_VRCPInterest on VRCPInterest(&quot;INSTANCEID&quot;)
;


drop index parent_VRCPCommon
;
create index parent_VRCPCommon on VRCPCommon(&quot;INSTANCEID&quot;)
;


drop index parent_PEKZR_DATA
;
create index parent_PEKZR_DATA on PEKZR_DATA(&quot;INSTANCEID&quot;)
;


drop index parent_WEBCRD_NUM
;
create index parent_WEBCRD_NUM on WEBCRD_NUM(&quot;INSTANCEID&quot;)
;


drop index parent_WBCRD_DEF
;
create index parent_WBCRD_DEF on WBCRD_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEKO_DEF
;
create index parent_PEKO_DEF on PEKO_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEKL_DEF
;
create index parent_PEKL_DEF on PEKL_DEF(&quot;INSTANCEID&quot;)
;


drop index parent_PEKL_WDAY
;
create index parent_PEKL_WDAY on PEKL_WDAY(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_ADDS
;
create index parent_PEKD_ADDS on PEKD_ADDS(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_TRAINTYPE
;
create index parent_PEKD_TRAINTYPE on PEKD_TRAINTYPE(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_AUTO
;
create index parent_PEKD_AUTO on PEKD_AUTO(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_GOTYPE
;
create index parent_PEKD_GOTYPE on PEKD_GOTYPE(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_INFOSENDTYPE
;
create index parent_PEKD_INFOSENDTYPE on PEKD_INFOSENDTYPE(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_TRTYPE
;
create index parent_PEKD_TRTYPE on PEKD_TRTYPE(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_GRPDpUSL
;
create index parent_PEKD_GRPDpUSL on PEKD_GRPDpUSL(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_POSTTYPE
;
create index parent_PEKD_POSTTYPE on PEKD_POSTTYPE(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_TRFGRP
;
create index parent_PEKD_TRFGRP on PEKD_TRFGRP(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_TRFTYPE
;
create index parent_PEKD_TRFTYPE on PEKD_TRFTYPE(ParentStructRowID)
;


drop index parent_PEKD_DEPT
;
create index parent_PEKD_DEPT on PEKD_DEPT(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_DEPLIMITS
;
create index parent_PEKD_DEPLIMITS on PEKD_DEPLIMITS(ParentStructRowID)
;


drop index parent_PEKD_DEPDOG
;
create index parent_PEKD_DEPDOG on PEKD_DEPDOG(ParentStructRowID)
;


drop index parent_PEKD_DIRECTION
;
create index parent_PEKD_DIRECTION on PEKD_DIRECTION(&quot;INSTANCEID&quot;)
;


drop index parent_PEKD_TRAINS
;
create index parent_PEKD_TRAINS on PEKD_TRAINS(ParentStructRowID)
;


drop index parent_PEKD_DIRSTATION
;
create index parent_PEKD_DIRSTATION on PEKD_DIRSTATION(ParentStructRowID)
;


drop index parent_PEKD_SRV
;
create index parent_PEKD_SRV on PEKD_SRV(&quot;INSTANCEID&quot;)
;


"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Functions.Header" File=""><BlockHolder BlockName="--body" BlockCode=" 

 create or replace package Func as

  function instance_BRIEF_F  (
 ainstanceid CHAR
)return varchar;


 function FilterFieldGroup_BRIEF_F  (
 aFilterFieldGroupid CHAR
) return varchar;


 function FileterField_BRIEF_F  (
 aFileterFieldid CHAR
) return varchar;


 function Filters_BRIEF_F  (
 aFiltersid CHAR
) return varchar;


 function PEK103_DEF_BRIEF_F  (
 aPEK103_DEFid CHAR
) return varchar;


 function PEK103_LINES_BRIEF_F  (
 aPEK103_LINESid CHAR
) return varchar;


 function WEBC_BLOCK_BRIEF_F  (
 aWEBC_BLOCKid CHAR
) return varchar;


 function WEBC_NEWS_BRIEF_F  (
 aWEBC_NEWSid CHAR
) return varchar;


 function WEBC_JOB_BRIEF_F  (
 aWEBC_JOBid CHAR
) return varchar;


 function WEBC_MESSAGES_BRIEF_F  (
 aWEBC_MESSAGESid CHAR
) return varchar;


 function WEBC_DOCS_BRIEF_F  (
 aWEBC_DOCSid CHAR
) return varchar;


 function WEBC_FILIALS_BRIEF_F  (
 aWEBC_FILIALSid CHAR
) return varchar;


 function WEBC_LINKS_BRIEF_F  (
 aWEBC_LINKSid CHAR
) return varchar;


 function VRRPT_COSTS_BRIEF_F  (
 aVRRPT_COSTSid CHAR
) return varchar;


 function VRRPT_MeetingPlan_BRIEF_F  (
 aVRRPT_MeetingPlanid CHAR
) return varchar;


 function VRRPT_Meeters_BRIEF_F  (
 aVRRPT_Meetersid CHAR
) return varchar;


 function VRRPT_MAIN_BRIEF_F  (
 aVRRPT_MAINid CHAR
) return varchar;


 function VRDGCommon_BRIEF_F  (
 aVRDGCommonid CHAR
) return varchar;


 function VRDGReport_BRIEF_F  (
 aVRDGReportid CHAR
) return varchar;


 function VRDGContractChanges_BRIEF_F  (
 aVRDGContractChangesid CHAR
) return varchar;


 function VRDGContractVersion_BRIEF_F  (
 aVRDGContractVersionid CHAR
) return varchar;


 function VRDGContractSpesial_BRIEF_F  (
 aVRDGContractSpesialid CHAR
) return varchar;


 function PEKSH_DATA_BRIEF_F  (
 aPEKSH_DATAid CHAR
) return varchar;


 function PEKSH_START_BRIEF_F  (
 aPEKSH_STARTid CHAR
) return varchar;


 function PEKSH_DEF_BRIEF_F  (
 aPEKSH_DEFid CHAR
) return varchar;


 function MTZ2JOB_DEF_BRIEF_F  (
 aMTZ2JOB_DEFid CHAR
) return varchar;


 function PEKPAY_DEF_BRIEF_F  (
 aPEKPAY_DEFid CHAR
) return varchar;


 function WEBSDIC_DEF_BRIEF_F  (
 aWEBSDIC_DEFid CHAR
) return varchar;


 function PWUUSERS_BRIEF_F  (
 aPWUUSERSid CHAR
) return varchar;


 function pekz_path_BRIEF_F  (
 apekz_pathid CHAR
) return varchar;


 function PEKZ_WLIST_BRIEF_F  (
 aPEKZ_WLISTid CHAR
) return varchar;


 function PEKZ_WLADDS_BRIEF_F  (
 aPEKZ_WLADDSid CHAR
) return varchar;


 function PEKZ_DOCS_BRIEF_F  (
 aPEKZ_DOCSid CHAR
) return varchar;


 function pekz_def_BRIEF_F  (
 apekz_defid CHAR
) return varchar;


 function PEKZ_ACLCT_BRIEF_F  (
 aPEKZ_ACLCTid CHAR
) return varchar;


 function PEKZ_ADLVR_BRIEF_F  (
 aPEKZ_ADLVRid CHAR
) return varchar;


 function pekz_dop_BRIEF_F  (
 apekz_dopid CHAR
) return varchar;


 function REPD_LOCKED_BRIEF_F  (
 aREPD_LOCKEDid CHAR
) return varchar;


 function REPD_RequestQuery_BRIEF_F  (
 aREPD_RequestQueryid CHAR
) return varchar;


 function REPD_ResQueryRcv_BRIEF_F  (
 aREPD_ResQueryRcvid CHAR
) return varchar;


 function REPD_PROV_BRIEF_F  (
 aREPD_PROVid CHAR
) return varchar;


 function REPD_SRV_BRIEF_F  (
 aREPD_SRVid CHAR
) return varchar;


 function REPD_SNDTO_BRIEF_F  (
 aREPD_SNDTOid CHAR
) return varchar;


 function REPD_CONST_BRIEF_F  (
 aREPD_CONSTid CHAR
) return varchar;


 function REPD_REPTYPE_BRIEF_F  (
 aREPD_REPTYPEid CHAR
) return varchar;


 function REPD_SendQ_BRIEF_F  (
 aREPD_SendQid CHAR
) return varchar;


 function REPD_RecvQ_BRIEF_F  (
 aREPD_RecvQid CHAR
) return varchar;


 function StateAction_BRIEF_F  (
 aStateActionid CHAR
) return varchar;


 function TheDiffPath_BRIEF_F  (
 aTheDiffPathid CHAR
) return varchar;


 function DopUslTo_BRIEF_F  (
 aDopUslToid CHAR
) return varchar;


 function DopUslFrom_BRIEF_F  (
 aDopUslFromid CHAR
) return varchar;


 function TheDefenitionDiffP_BRIEF_F  (
 aTheDefenitionDiffPid CHAR
) return varchar;


 function PEKACT_DEF_BRIEF_F  (
 aPEKACT_DEFid CHAR
) return varchar;


 function PEKACT_ITOG_BRIEF_F  (
 aPEKACT_ITOGid CHAR
) return varchar;


 function PEKACT_LINES_BRIEF_F  (
 aPEKACT_LINESid CHAR
) return varchar;


 function FIELDTYPE_BRIEF_F  (
 aFIELDTYPEid CHAR
) return varchar;


 function FIELDTYPEMAP_BRIEF_F  (
 aFIELDTYPEMAPid CHAR
) return varchar;


 function ENUMITEM_BRIEF_F  (
 aENUMITEMid CHAR
) return varchar;


 function SHAREDMETHOD_BRIEF_F  (
 aSHAREDMETHODid CHAR
) return varchar;


 function SCRIPT_BRIEF_F  (
 aSCRIPTid CHAR
) return varchar;


 function PARAMETERS_BRIEF_F  (
 aPARAMETERSid CHAR
) return varchar;


 function OBJECTTYPE_BRIEF_F  (
 aOBJECTTYPEid CHAR
) return varchar;


 function PART_BRIEF_F  (
 aPARTid CHAR
) return varchar;


 function PARTMENU_BRIEF_F  (
 aPARTMENUid CHAR
) return varchar;


 function PARTPARAMMAP_BRIEF_F  (
 aPARTPARAMMAPid CHAR
) return varchar;


 function FIELD_BRIEF_F  (
 aFIELDid CHAR
) return varchar;


 function FIELDVALIDATOR_BRIEF_F  (
 aFIELDVALIDATORid CHAR
) return varchar;


 function FIELDMENU_BRIEF_F  (
 aFIELDMENUid CHAR
) return varchar;


 function FIELDPARAMMAP_BRIEF_F  (
 aFIELDPARAMMAPid CHAR
) return varchar;


 function FldExtenders_BRIEF_F  (
 aFldExtendersid CHAR
) return varchar;


 function FIELDEXPRESSION_BRIEF_F  (
 aFIELDEXPRESSIONid CHAR
) return varchar;


 function DINAMICFILTERSCRIPT_BRIEF_F  (
 aDINAMICFILTERSCRIPTid CHAR
) return varchar;


 function FIELDSRCDEF_BRIEF_F  (
 aFIELDSRCDEFid CHAR
) return varchar;


 function PARTVIEW_BRIEF_F  (
 aPARTVIEWid CHAR
) return varchar;


 function ViewColumn_BRIEF_F  (
 aViewColumnid CHAR
) return varchar;


 function PARTVIEW_LNK_BRIEF_F  (
 aPARTVIEW_LNKid CHAR
) return varchar;


 function ExtenderInterface_BRIEF_F  (
 aExtenderInterfaceid CHAR
) return varchar;


 function VALIDATOR_BRIEF_F  (
 aVALIDATORid CHAR
) return varchar;


 function UNIQUECONSTRAINT_BRIEF_F  (
 aUNIQUECONSTRAINTid CHAR
) return varchar;


 function CONSTRAINTFIELD_BRIEF_F  (
 aCONSTRAINTFIELDid CHAR
) return varchar;


 function INSTANCEVALIDATOR_BRIEF_F  (
 aINSTANCEVALIDATORid CHAR
) return varchar;


 function OBJSTATUS_BRIEF_F  (
 aOBJSTATUSid CHAR
) return varchar;


 function NEXTSTATE_BRIEF_F  (
 aNEXTSTATEid CHAR
) return varchar;


 function OBJECTMODE_BRIEF_F  (
 aOBJECTMODEid CHAR
) return varchar;


 function STRUCTRESTRICTION_BRIEF_F  (
 aSTRUCTRESTRICTIONid CHAR
) return varchar;


 function FIELDRESTRICTION_BRIEF_F  (
 aFIELDRESTRICTIONid CHAR
) return varchar;


 function METHODRESTRICTION_BRIEF_F  (
 aMETHODRESTRICTIONid CHAR
) return varchar;


 function TYPEMENU_BRIEF_F  (
 aTYPEMENUid CHAR
) return varchar;


 function MTZAPP_BRIEF_F  (
 aMTZAPPid CHAR
) return varchar;


 function ParentPackage_BRIEF_F  (
 aParentPackageid CHAR
) return varchar;


 function GENPACKAGE_BRIEF_F  (
 aGENPACKAGEid CHAR
) return varchar;


 function GENERATOR_TARGET_BRIEF_F  (
 aGENERATOR_TARGETid CHAR
) return varchar;


 function GENMANUALCODE_BRIEF_F  (
 aGENMANUALCODEid CHAR
) return varchar;


 function GENCONTROLS_BRIEF_F  (
 aGENCONTROLSid CHAR
) return varchar;


 function GENREFERENCE_BRIEF_F  (
 aGENREFERENCEid CHAR
) return varchar;


 function LocalizeInfo_BRIEF_F  (
 aLocalizeInfoid CHAR
) return varchar;


 function PEKPQ_DEF_BRIEF_F  (
 aPEKPQ_DEFid CHAR
) return varchar;


 function ENTDIC_BANK_BRIEF_F  (
 aENTDIC_BANKid CHAR
) return varchar;


 function ENTDIC_DOST_BRIEF_F  (
 aENTDIC_DOSTid CHAR
) return varchar;


 function ENTDIC_TOWN_BRIEF_F  (
 aENTDIC_TOWNid CHAR
) return varchar;


 function ENTDIC_TransportType_BRIEF_F  (
 aENTDIC_TransportTypeid CHAR
) return varchar;


 function ENTDIC_OPF_BRIEF_F  (
 aENTDIC_OPFid CHAR
) return varchar;


 function ENTDIC_EDIZM_BRIEF_F  (
 aENTDIC_EDIZMid CHAR
) return varchar;


 function ENTDIC_CURRENCY_BRIEF_F  (
 aENTDIC_CURRENCYid CHAR
) return varchar;


 function ENTDIC_CURCOURCE_BRIEF_F  (
 aENTDIC_CURCOURCEid CHAR
) return varchar;


 function ENTDIC_COUNTRY_BRIEF_F  (
 aENTDIC_COUNTRYid CHAR
) return varchar;


 function ENTDIC_REGION_BRIEF_F  (
 aENTDIC_REGIONid CHAR
) return varchar;


 function ST_MAIN_BRIEF_F  (
 aST_MAINid CHAR
) return varchar;


 function ST_DEF_BRIEF_F  (
 aST_DEFid CHAR
) return varchar;


 function ST_PAGES_BRIEF_F  (
 aST_PAGESid CHAR
) return varchar;


 function STDJournlaExtInfo_BRIEF_F  (
 aSTDJournlaExtInfoid CHAR
) return varchar;


 function STDJournalExtParam_BRIEF_F  (
 aSTDJournalExtParamid CHAR
) return varchar;


 function STDJournalExtFlt_BRIEF_F  (
 aSTDJournalExtFltid CHAR
) return varchar;


 function STDJournalExtField_BRIEF_F  (
 aSTDJournalExtFieldid CHAR
) return varchar;


 function CAL_DAYS_BRIEF_F  (
 aCAL_DAYSid CHAR
) return varchar;


 function CAL_TIME_BRIEF_F  (
 aCAL_TIMEid CHAR
) return varchar;


 function CAL_HEAD_BRIEF_F  (
 aCAL_HEADid CHAR
) return varchar;


 function SrvMessageInfo_BRIEF_F  (
 aSrvMessageInfoid CHAR
) return varchar;


 function PEKNAL_DEF_BRIEF_F  (
 aPEKNAL_DEFid CHAR
) return varchar;


 function PEKNAL_PZ_BRIEF_F  (
 aPEKNAL_PZid CHAR
) return varchar;


 function PEKNAL_ROWS_BRIEF_F  (
 aPEKNAL_ROWSid CHAR
) return varchar;


 function FileDef_BRIEF_F  (
 aFileDefid CHAR
) return varchar;


 function FileVersion_BRIEF_F  (
 aFileVersionid CHAR
) return varchar;


 function Num_zones_BRIEF_F  (
 aNum_zonesid CHAR
) return varchar;


 function Num_Values_BRIEF_F  (
 aNum_Valuesid CHAR
) return varchar;


 function Num_head_BRIEF_F  (
 aNum_headid CHAR
) return varchar;


 function BaseSetting_BRIEF_F  (
 aBaseSettingid CHAR
) return varchar;


 function Reports_BRIEF_F  (
 aReportsid CHAR
) return varchar;


 function RPTStruct_BRIEF_F  (
 aRPTStructid CHAR
) return varchar;


 function RPTFields_BRIEF_F  (
 aRPTFieldsid CHAR
) return varchar;


 function RPTFormula_BRIEF_F  (
 aRPTFormulaid CHAR
) return varchar;


 function PEKRKO_DEF_BRIEF_F  (
 aPEKRKO_DEFid CHAR
) return varchar;


 function PEKRKO_ROWS_BRIEF_F  (
 aPEKRKO_ROWSid CHAR
) return varchar;


 function PEKTRF_REGALL_BRIEF_F  (
 aPEKTRF_REGALLid CHAR
) return varchar;


 function PEKTRF_DECR_BRIEF_F  (
 aPEKTRF_DECRid CHAR
) return varchar;


 function PEKTRF_ADDS_BRIEF_F  (
 aPEKTRF_ADDSid CHAR
) return varchar;


 function PEKTRF_DEF_BRIEF_F  (
 aPEKTRF_DEFid CHAR
) return varchar;


 function PEKTRF_AUTO_BRIEF_F  (
 aPEKTRF_AUTOid CHAR
) return varchar;


 function PEKTRF_SRV_BRIEF_F  (
 aPEKTRF_SRVid CHAR
) return varchar;


 function PEKTRF_TR_BRIEF_F  (
 aPEKTRF_TRid CHAR
) return varchar;


 function PEKTRF_REGRTR_BRIEF_F  (
 aPEKTRF_REGRTRid CHAR
) return varchar;


 function PEKCL_DEF_BRIEF_F  (
 aPEKCL_DEFid CHAR
) return varchar;


 function PEKCL_DAYLY_BRIEF_F  (
 aPEKCL_DAYLYid CHAR
) return varchar;


 function PEKL_TOLOAD_BRIEF_F  (
 aPEKL_TOLOADid CHAR
) return varchar;


 function MTZExt_def_BRIEF_F  (
 aMTZExt_defid CHAR
) return varchar;


 function MTZExtRel_BRIEF_F  (
 aMTZExtRelid CHAR
) return varchar;


 function InfoStoreDef_BRIEF_F  (
 aInfoStoreDefid CHAR
) return varchar;


 function Folder_BRIEF_F  (
 aFolderid CHAR
) return varchar;


 function Shortcut_BRIEF_F  (
 aShortcutid CHAR
) return varchar;


 function PEKP_DEF_BRIEF_F  (
 aPEKP_DEFid CHAR
) return varchar;


 function PEKP_PZ_BRIEF_F  (
 aPEKP_PZid CHAR
) return varchar;


 function SysLog_BRIEF_F  (
 aSysLogid CHAR
) return varchar;


 function the_Session_BRIEF_F  (
 athe_Sessionid CHAR
) return varchar;


 function LogReader_BRIEF_F  (
 aLogReaderid CHAR
) return varchar;


 function Verb_BRIEF_F  (
 aVerbid CHAR
) return varchar;


 function Users_BRIEF_F  (
 aUsersid CHAR
) return varchar;


 function Groups_BRIEF_F  (
 aGroupsid CHAR
) return varchar;


 function GroupUser_BRIEF_F  (
 aGroupUserid CHAR
) return varchar;


 function VRDContractStage_BRIEF_F  (
 aVRDContractStageid CHAR
) return varchar;


 function VRDRreportType_BRIEF_F  (
 aVRDRreportTypeid CHAR
) return varchar;


 function VRDPrjType_BRIEF_F  (
 aVRDPrjTypeid CHAR
) return varchar;


 function VRDStream_BRIEF_F  (
 aVRDStreamid CHAR
) return varchar;


 function VRDInterest_BRIEF_F  (
 aVRDInterestid CHAR
) return varchar;


 function VRDDocType_BRIEF_F  (
 aVRDDocTypeid CHAR
) return varchar;


 function VRDLoyalty_BRIEF_F  (
 aVRDLoyaltyid CHAR
) return varchar;


 function VRDMarket_BRIEF_F  (
 aVRDMarketid CHAR
) return varchar;


 function MTZSEC_RIGHT_BRIEF_F  (
 aMTZSEC_RIGHTid CHAR
) return varchar;


 function VRCAccounts_BRIEF_F  (
 aVRCAccountsid CHAR
) return varchar;


 function VRCTorg_BRIEF_F  (
 aVRCTorgid CHAR
) return varchar;


 function VRCAditional_BRIEF_F  (
 aVRCAditionalid CHAR
) return varchar;


 function VRCTarif_BRIEF_F  (
 aVRCTarifid CHAR
) return varchar;


 function VRCCommonInfo_BRIEF_F  (
 aVRCCommonInfoid CHAR
) return varchar;


 function ROLES_USER_BRIEF_F  (
 aROLES_USERid CHAR
) return varchar;


 function ROLES_MAP_BRIEF_F  (
 aROLES_MAPid CHAR
) return varchar;


 function ROLES_DOC_BRIEF_F  (
 aROLES_DOCid CHAR
) return varchar;


 function ROLES_DOC_STATE_BRIEF_F  (
 aROLES_DOC_STATEid CHAR
) return varchar;


 function ROLES_DEF_BRIEF_F  (
 aROLES_DEFid CHAR
) return varchar;


 function ROLES_REPORTS_BRIEF_F  (
 aROLES_REPORTSid CHAR
) return varchar;


 function ROLES_WP_BRIEF_F  (
 aROLES_WPid CHAR
) return varchar;


 function ROLES_ACT_BRIEF_F  (
 aROLES_ACTid CHAR
) return varchar;


 function RptSrvMsg_BRIEF_F  (
 aRptSrvMsgid CHAR
) return varchar;


 function RptQuery_BRIEF_F  (
 aRptQueryid CHAR
) return varchar;


 function RptQryParam_BRIEF_F  (
 aRptQryParamid CHAR
) return varchar;


 function PEKORD_DEF_BRIEF_F  (
 aPEKORD_DEFid CHAR
) return varchar;


 function PEKORD_DATA_BRIEF_F  (
 aPEKORD_DATAid CHAR
) return varchar;


 function WorkPlace_BRIEF_F  (
 aWorkPlaceid CHAR
) return varchar;


 function EntryPoints_BRIEF_F  (
 aEntryPointsid CHAR
) return varchar;


 function EPFilterLink_BRIEF_F  (
 aEPFilterLinkid CHAR
) return varchar;


 function ARMTypes_BRIEF_F  (
 aARMTypesid CHAR
) return varchar;


 function ARMJournal_BRIEF_F  (
 aARMJournalid CHAR
) return varchar;


 function ARMJRNLADD_BRIEF_F  (
 aARMJRNLADDid CHAR
) return varchar;


 function ARMJRNLREP_BRIEF_F  (
 aARMJRNLREPid CHAR
) return varchar;


 function ARMJRNLRUN_BRIEF_F  (
 aARMJRNLRUNid CHAR
) return varchar;


 function PEKD_NZONE_BRIEF_F  (
 aPEKD_NZONEid CHAR
) return varchar;


 function PEKD_USEDNUM_BRIEF_F  (
 aPEKD_USEDNUMid CHAR
) return varchar;


 function JournalColumn_BRIEF_F  (
 aJournalColumnid CHAR
) return varchar;


 function JColumnSource_BRIEF_F  (
 aJColumnSourceid CHAR
) return varchar;


 function Journal_BRIEF_F  (
 aJournalid CHAR
) return varchar;


 function JournalSrc_BRIEF_F  (
 aJournalSrcid CHAR
) return varchar;


 function pekmsg_path_BRIEF_F  (
 apekmsg_pathid CHAR
) return varchar;


 function WEBS_MAILLIST_BRIEF_F  (
 aWEBS_MAILLISTid CHAR
) return varchar;


 function WEBS_RECLAME_BRIEF_F  (
 aWEBS_RECLAMEid CHAR
) return varchar;


 function WEBS_PAGEDEF_BRIEF_F  (
 aWEBS_PAGEDEFid CHAR
) return varchar;


 function WEBS_PICS_BRIEF_F  (
 aWEBS_PICSid CHAR
) return varchar;


 function WEBS_PAGEMENU_BRIEF_F  (
 aWEBS_PAGEMENUid CHAR
) return varchar;


 function WEBS_PAGECONTENT_BRIEF_F  (
 aWEBS_PAGECONTENTid CHAR
) return varchar;


 function WEBS_PAGEPARS_BRIEF_F  (
 aWEBS_PAGEPARSid CHAR
) return varchar;


 function WEBS_PAGECOMP_BRIEF_F  (
 aWEBS_PAGECOMPid CHAR
) return varchar;


 function TablePart_BRIEF_F  (
 aTablePartid CHAR
) return varchar;


 function ReplaceValues_BRIEF_F  (
 aReplaceValuesid CHAR
) return varchar;


 function DenyEdit_BRIEF_F  (
 aDenyEditid CHAR
) return varchar;


 function DenyVisible_BRIEF_F  (
 aDenyVisibleid CHAR
) return varchar;


 function AllowEditFieldValues_BRIEF_F  (
 aAllowEditFieldValuesid CHAR
) return varchar;


 function ComboFields_BRIEF_F  (
 aComboFieldsid CHAR
) return varchar;


 function WEBS_ANKETA_BRIEF_F  (
 aWEBS_ANKETAid CHAR
) return varchar;


 function WEBS_QUESTIONS_BRIEF_F  (
 aWEBS_QUESTIONSid CHAR
) return varchar;


 function WEBS_ANSWERS_BRIEF_F  (
 aWEBS_ANSWERSid CHAR
) return varchar;


 function WEBS_DDOC_BRIEF_F  (
 aWEBS_DDOCid CHAR
) return varchar;


 function WEBS_NEWS_BRIEF_F  (
 aWEBS_NEWSid CHAR
) return varchar;


 function NEWS_PICS_BRIEF_F  (
 aNEWS_PICSid CHAR
) return varchar;


 function VRCPSeeAlso_BRIEF_F  (
 aVRCPSeeAlsoid CHAR
) return varchar;


 function VRCPSpecial_BRIEF_F  (
 aVRCPSpecialid CHAR
) return varchar;


 function VRCPPresents_BRIEF_F  (
 aVRCPPresentsid CHAR
) return varchar;


 function VRCPReports_BRIEF_F  (
 aVRCPReportsid CHAR
) return varchar;


 function VRCPDates_BRIEF_F  (
 aVRCPDatesid CHAR
) return varchar;


 function VRCPNeigborhood_BRIEF_F  (
 aVRCPNeigborhoodid CHAR
) return varchar;


 function VRCPInterest_BRIEF_F  (
 aVRCPInterestid CHAR
) return varchar;


 function VRCPCommon_BRIEF_F  (
 aVRCPCommonid CHAR
) return varchar;


 function PEKZR_DATA_BRIEF_F  (
 aPEKZR_DATAid CHAR
) return varchar;


 function WEBCRD_NUM_BRIEF_F  (
 aWEBCRD_NUMid CHAR
) return varchar;


 function WBCRD_DEF_BRIEF_F  (
 aWBCRD_DEFid CHAR
) return varchar;


 function PEKO_DEF_BRIEF_F  (
 aPEKO_DEFid CHAR
) return varchar;


 function PEKL_DEF_BRIEF_F  (
 aPEKL_DEFid CHAR
) return varchar;


 function PEKL_WDAY_BRIEF_F  (
 aPEKL_WDAYid CHAR
) return varchar;


 function PEKD_ADDS_BRIEF_F  (
 aPEKD_ADDSid CHAR
) return varchar;


 function PEKD_TRAINTYPE_BRIEF_F  (
 aPEKD_TRAINTYPEid CHAR
) return varchar;


 function PEKD_AUTO_BRIEF_F  (
 aPEKD_AUTOid CHAR
) return varchar;


 function PEKD_GOTYPE_BRIEF_F  (
 aPEKD_GOTYPEid CHAR
) return varchar;


 function PEKD_INFOSENDTYPE_BRIEF_F  (
 aPEKD_INFOSENDTYPEid CHAR
) return varchar;


 function PEKD_TRTYPE_BRIEF_F  (
 aPEKD_TRTYPEid CHAR
) return varchar;


 function PEKD_GRPDpUSL_BRIEF_F  (
 aPEKD_GRPDpUSLid CHAR
) return varchar;


 function PEKD_POSTTYPE_BRIEF_F  (
 aPEKD_POSTTYPEid CHAR
) return varchar;


 function PEKD_TRFGRP_BRIEF_F  (
 aPEKD_TRFGRPid CHAR
) return varchar;


 function PEKD_TRFTYPE_BRIEF_F  (
 aPEKD_TRFTYPEid CHAR
) return varchar;


 function PEKD_DEPT_BRIEF_F  (
 aPEKD_DEPTid CHAR
) return varchar;


 function PEKD_DEPLIMITS_BRIEF_F  (
 aPEKD_DEPLIMITSid CHAR
) return varchar;


 function PEKD_DEPDOG_BRIEF_F  (
 aPEKD_DEPDOGid CHAR
) return varchar;


 function PEKD_DIRECTION_BRIEF_F  (
 aPEKD_DIRECTIONid CHAR
) return varchar;


 function PEKD_TRAINS_BRIEF_F  (
 aPEKD_TRAINSid CHAR
) return varchar;


 function PEKD_DIRSTATION_BRIEF_F  (
 aPEKD_DIRSTATIONid CHAR
) return varchar;


 function PEKD_SRV_BRIEF_F  (
 aPEKD_SRVid CHAR
) return varchar;

 end Func;

;

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Views" File=""><BlockHolder BlockName="--body" BlockCode=" 

create or replace view v_INSTANCE as
select instance.*,objstatus.name statusname,objstatus.IsArchive
from instance left join objstatus on instance.status=objstatus.objstatusid
;

create or replace view V_AUTOFilterFieldGroup as 
select   FilterFieldGroupID
, 
FilterFieldGroup.sequence 
FilterFieldGroup_sequence 
, 
FilterFieldGroup.Caption 
FilterFieldGroup_Caption 
, 
FilterFieldGroup.Name 
FilterFieldGroup_Name 
, 
 FilterFieldGroup.AllowIgnore  
FilterFieldGroup_AllowIgnore_VAL, 
 decode(FilterFieldGroup.AllowIgnore 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FilterFieldGroup_AllowIgnore 
, FilterFieldGroup.InstanceID InstanceID 
, FilterFieldGroup.FilterFieldGroupID ID 
, 'FilterFieldGroup' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FilterFieldGroup
 join INSTANCE on FilterFieldGroup.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOFileterField as 
select   FileterFieldID,FilterFieldGroupID
, 
FileterField.sequence 
FileterField_sequence 
, 
 FileterField.ValueArray  
FileterField_ValueArray_VAL, 
 decode(FileterField.ValueArray 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FileterField_ValueArray 
, 
FileterField.FieldSize 
FileterField_FieldSize 
, 
 FileterField.RefType  
FileterField_RefType_VAL, 
 decode(FileterField.RefType 
, 2 ,'На строку раздела'
, 3 ,'На источник данных'
, 0 ,'Скалярное поле ( не ссылка)'
, 1 ,'На объект '
, '???') 
FileterField_RefType 
, 
 FileterField.RefToPart  
FileterField_RefToPart_ID, 
 Func.PART_BRIEF_F(FileterField.RefToPart) 
FileterField_RefToPart 
, 
FileterField.Caption 
FileterField_Caption 
, 
 FileterField.FieldType  
FileterField_FieldType_ID, 
 Func.FIELDTYPE_BRIEF_F(FileterField.FieldType) 
FileterField_FieldType 
, 
 FileterField.RefToType  
FileterField_RefToType_ID, 
 Func.OBJECTTYPE_BRIEF_F(FileterField.RefToType) 
FileterField_RefToType 
, 
FileterField.Name 
FileterField_Name 
, FilterFieldGroup.InstanceID InstanceID 
, FileterField.FileterFieldID ID 
, 'FileterField' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FileterField
 join FilterFieldGroup on FilterFieldGroup.FilterFieldGroupID=FileterField.ParentStructRowID 
 join INSTANCE on FilterFieldGroup.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewMTZFltr_Filters as 
select   FiltersID
, 
Filters.TheCaption 
Filters_TheCaption 
, 
Filters.Name 
Filters_Name 
, Filters.InstanceID InstanceID 
, Filters.FiltersID ID 
, 'Filters' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Filters
 join INSTANCE on Filters.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOFilters as 
select   FiltersID
, 
Filters.Name 
Filters_Name 
, 
Filters.TheCaption 
Filters_TheCaption 
, 
Filters.TheComment 
Filters_TheComment 
, Filters.InstanceID InstanceID 
, Filters.FiltersID ID 
, 'Filters' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Filters
 join INSTANCE on Filters.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEK103_DEF as 
select   PEK103_DEFID
, 
PEK103_DEF.Coment 
PEK103_DEF_Coment 
, 
PEK103_DEF.TheNumber 
PEK103_DEF_TheNumber 
, 
 PEK103_DEF.PEKZ  
PEK103_DEF_PEKZ_ID, 
 Func.INSTANCE_BRIEF_F(PEK103_DEF.PEKZ) 
PEK103_DEF_PEKZ 
, 
PEK103_DEF.NodeDate 
PEK103_DEF_NodeDate 
, 
PEK103_DEF.Sender 
PEK103_DEF_Sender 
, 
 PEK103_DEF.ThePath  
PEK103_DEF_ThePath_ID, 
 Func.pekz_path_BRIEF_F(PEK103_DEF.ThePath) 
PEK103_DEF_ThePath 
, 
PEK103_DEF.RcvDate 
PEK103_DEF_RcvDate 
, PEK103_DEF.InstanceID InstanceID 
, PEK103_DEF.PEK103_DEFID ID 
, 'PEK103_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEK103_DEF
 join INSTANCE on PEK103_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEK103_LINES as 
select   PEK103_LINESID
, 
PEK103_LINES.Weight 
PEK103_LINES_Weight 
, 
PEK103_LINES.Seqence 
PEK103_LINES_Seqence 
, 
PEK103_LINES.Cost 
PEK103_LINES_Cost 
, 
PEK103_LINES.PPOCode 
PEK103_LINES_PPOCode 
, 
 PEK103_LINES.IndexTo  
PEK103_LINES_IndexTo_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(PEK103_LINES.IndexTo) 
PEK103_LINES_IndexTo 
, 
 PEK103_LINES.WeightEDIZM  
PEK103_LINES_WeightEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEK103_LINES.WeightEDIZM) 
PEK103_LINES_WeightEDIZM 
, 
PEK103_LINES.Reciever 
PEK103_LINES_Reciever 
, 
PEK103_LINES.Quantity 
PEK103_LINES_Quantity 
, PEK103_LINES.InstanceID InstanceID 
, PEK103_LINES.PEK103_LINESID ID 
, 'PEK103_LINES' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEK103_LINES
 join INSTANCE on PEK103_LINES.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBC_BLOCK as 
select   WEBC_BLOCKID
, 
WEBC_BLOCK.name 
WEBC_BLOCK_name 
, 
WEBC_BLOCK.Info 
WEBC_BLOCK_Info 
, WEBC_BLOCK.InstanceID InstanceID 
, WEBC_BLOCK.WEBC_BLOCKID ID 
, 'WEBC_BLOCK' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBC_BLOCK
 join INSTANCE on WEBC_BLOCK.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBC_NEWS as 
select   WEBC_NEWSID
, 
WEBC_NEWS.Annotation 
WEBC_NEWS_Annotation 
, 
WEBC_NEWS.TheDate 
WEBC_NEWS_TheDate 
, 
 WEBC_NEWS.Accept  
WEBC_NEWS_Accept_VAL, 
 decode(WEBC_NEWS.Accept 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBC_NEWS_Accept 
, 
WEBC_NEWS.Info 
WEBC_NEWS_Info 
, 
WEBC_NEWS.ShortName 
WEBC_NEWS_ShortName 
, WEBC_NEWS.InstanceID InstanceID 
, WEBC_NEWS.WEBC_NEWSID ID 
, 'WEBC_NEWS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBC_NEWS
 join INSTANCE on WEBC_NEWS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBC_JOB as 
select   WEBC_JOBID
, 
WEBC_JOB.JobCity 
WEBC_JOB_JobCity 
, 
WEBC_JOB.JobName 
WEBC_JOB_JobName 
, 
WEBC_JOB.JobDescription 
WEBC_JOB_JobDescription 
, 
WEBC_JOB.JobCompensation 
WEBC_JOB_JobCompensation 
, 
 WEBC_JOB.JobEducation  
WEBC_JOB_JobEducation_VAL, 
 decode(WEBC_JOB.JobEducation 
, 2 ,'Среднее специальное'
, 1 ,'Среднее'
, -1 ,'Не важно'
, 4 ,'Высшее'
, 0 ,'Неполное среднее'
, 3 ,'Неполное высшее'
, 5 ,'Несколько высших'
, '???') 
WEBC_JOB_JobEducation 
, 
WEBC_JOB.JobDate 
WEBC_JOB_JobDate 
, 
 WEBC_JOB.JobActual  
WEBC_JOB_JobActual_VAL, 
 decode(WEBC_JOB.JobActual 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBC_JOB_JobActual 
, 
WEBC_JOB.JobExperience 
WEBC_JOB_JobExperience 
, 
WEBC_JOB.JobAge 
WEBC_JOB_JobAge 
, 
 WEBC_JOB.JobSex  
WEBC_JOB_JobSex_VAL, 
 decode(WEBC_JOB.JobSex 
, 1 ,'Мужской'
, 0 ,'Не существенно'
, -1 ,'Женский'
, '???') 
WEBC_JOB_JobSex 
, 
 WEBC_JOB.JobEmployment  
WEBC_JOB_JobEmployment_VAL, 
 decode(WEBC_JOB.JobEmployment 
, 0 ,'Полная'
, 1 ,'Частичная'
, -1 ,'Не важно'
, '???') 
WEBC_JOB_JobEmployment 
, WEBC_JOB.InstanceID InstanceID 
, WEBC_JOB.WEBC_JOBID ID 
, 'WEBC_JOB' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBC_JOB
 join INSTANCE on WEBC_JOB.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBC_MESSAGES as 
select   WEBC_MESSAGESID
, 
WEBC_MESSAGES.MESSAGES_FIO 
WEBC_MESSAGES_MESSAGES_FIO 
, 
WEBC_MESSAGES.MESSAGES_TEL 
WEBC_MESSAGES_MESSAGES_TEL 
, 
WEBC_MESSAGES.MESSAGES_Text 
WEBC_MESSAGES_MESSAGES_Text 
, 
WEBC_MESSAGES.MESSAGES_Org 
WEBC_MESSAGES_MESSAGES_Org 
, 
WEBC_MESSAGES.MESSAGES_Position 
WEBC_MESSAGES_MESSAGES_Position 
, 
WEBC_MESSAGES.MESSAGES_Email 
WEBC_MESSAGES_MESSAGES_Email 
, 
WEBC_MESSAGES.MESSAGES_City 
WEBC_MESSAGES_MESSAGES_City 
, WEBC_MESSAGES.InstanceID InstanceID 
, WEBC_MESSAGES.WEBC_MESSAGESID ID 
, 'WEBC_MESSAGES' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBC_MESSAGES
 join INSTANCE on WEBC_MESSAGES.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBC_DOCS as 
select   WEBC_DOCSID
, 
WEBC_DOCS.DocsName 
WEBC_DOCS_DocsName 
, 
WEBC_DOCS.DocsFileDate 
WEBC_DOCS_DocsFileDate 
, 
WEBC_DOCS.DocsDescription 
WEBC_DOCS_DocsDescription 
, 
 WEBC_DOCS.DocsActual  
WEBC_DOCS_DocsActual_VAL, 
 decode(WEBC_DOCS.DocsActual 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBC_DOCS_DocsActual 
, 
WEBC_DOCS.DocsFileSize 
WEBC_DOCS_DocsFileSize 
, 
WEBC_DOCS.DocsNum 
WEBC_DOCS_DocsNum 
, 
WEBC_DOCS.DocsFileName 
WEBC_DOCS_DocsFileName 
, WEBC_DOCS.InstanceID InstanceID 
, WEBC_DOCS.WEBC_DOCSID ID 
, 'WEBC_DOCS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBC_DOCS
 join INSTANCE on WEBC_DOCS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBC_FILIALS as 
select   WEBC_FILIALSID
, 
WEBC_FILIALS.OfficeBigImage 
WEBC_FILIALS_OfficeBigImage 
, 
WEBC_FILIALS.OfficeName 
WEBC_FILIALS_OfficeName 
, 
WEBC_FILIALS.EMailManag 
WEBC_FILIALS_EMailManag 
, 
WEBC_FILIALS.OfficeCity 
WEBC_FILIALS_OfficeCity 
, 
 WEBC_FILIALS.ReferFilial  
WEBC_FILIALS_ReferFilial_ID, 
 Func.PEKD_DEPT_BRIEF_F(WEBC_FILIALS.ReferFilial) 
WEBC_FILIALS_ReferFilial 
, 
WEBC_FILIALS.OfficeAddress 
WEBC_FILIALS_OfficeAddress 
, 
WEBC_FILIALS.OfficeSmallImage 
WEBC_FILIALS_OfficeSmallImage 
, 
WEBC_FILIALS.OfficeTelefons 
WEBC_FILIALS_OfficeTelefons 
, 
WEBC_FILIALS.OfficeNum 
WEBC_FILIALS_OfficeNum 
, 
WEBC_FILIALS.EMailAddit 
WEBC_FILIALS_EMailAddit 
, WEBC_FILIALS.InstanceID InstanceID 
, WEBC_FILIALS.WEBC_FILIALSID ID 
, 'WEBC_FILIALS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBC_FILIALS
 join INSTANCE on WEBC_FILIALS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBC_LINKS as 
select   WEBC_LINKSID
, 
WEBC_LINKS.LinkName 
WEBC_LINKS_LinkName 
, 
WEBC_LINKS.LinkURL 
WEBC_LINKS_LinkURL 
, 
WEBC_LINKS.LinkDescription 
WEBC_LINKS_LinkDescription 
, WEBC_LINKS.InstanceID InstanceID 
, WEBC_LINKS.WEBC_LINKSID ID 
, 'WEBC_LINKS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBC_LINKS
 join INSTANCE on WEBC_LINKS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewVRRPT_COSTS as 
select   VRRPT_COSTSID
, 
 VRRPT_MAIN.Contract  
VRRPT_MAIN_Contract_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Contract) 
VRRPT_MAIN_Contract 
, 
VRRPT_MAIN.Attrachment 
VRRPT_MAIN_Attrachment 
, 
 VRRPT_MAIN.Author  
VRRPT_MAIN_Author_ID, 
 Func.Users_BRIEF_F(VRRPT_MAIN.Author) 
VRRPT_MAIN_Author 
, 
VRRPT_MAIN.Name 
VRRPT_MAIN_Name 
, 
VRRPT_COSTS.Descrtiption 
VRRPT_COSTS_Descrtiption 
, 
 VRRPT_MAIN.Client  
VRRPT_MAIN_Client_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Client) 
VRRPT_MAIN_Client 
, 
VRRPT_MAIN.TheDate 
VRRPT_MAIN_TheDate 
, 
 VRRPT_MAIN.Project  
VRRPT_MAIN_Project_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Project) 
VRRPT_MAIN_Project 
, 
VRRPT_COSTS.Duration 
VRRPT_COSTS_Duration 
, 
 VRRPT_MAIN.Person  
VRRPT_MAIN_Person_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Person) 
VRRPT_MAIN_Person 
, VRRPT_COSTS.InstanceID InstanceID 
, VRRPT_COSTS.VRRPT_COSTSID ID 
, 'VRRPT_COSTS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRRPT_COSTS
 join INSTANCE on VRRPT_COSTS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join VRRPT_MAIN ON VRRPT_MAIN.InstanceID=VRRPT_COSTS.InstanceID 
;
create or replace view V_AUTOVRRPT_COSTS as 
select   VRRPT_COSTSID
, 
VRRPT_COSTS.Duration 
VRRPT_COSTS_Duration 
, 
VRRPT_COSTS.Descrtiption 
VRRPT_COSTS_Descrtiption 
, 
VRRPT_COSTS.Cost 
VRRPT_COSTS_Cost 
, VRRPT_COSTS.InstanceID InstanceID 
, VRRPT_COSTS.VRRPT_COSTSID ID 
, 'VRRPT_COSTS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRRPT_COSTS
 join INSTANCE on VRRPT_COSTS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_VRRPT_MeetingPlan as 
select   VRRPT_MeetingPlanID
, 
 VRRPT_MAIN.Client  
VRRPT_MAIN_Client_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Client) 
VRRPT_MAIN_Client 
, 
VRRPT_MAIN.Info 
VRRPT_MAIN_Info 
, 
VRRPT_MeetingPlan.theme 
VRRPT_MeetingPlan_theme 
, 
VRRPT_MeetingPlan.PlaceOf 
VRRPT_MeetingPlan_PlaceOf 
, 
 VRRPT_MAIN.Project  
VRRPT_MAIN_Project_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Project) 
VRRPT_MAIN_Project 
, 
 VRRPT_MAIN.Contract  
VRRPT_MAIN_Contract_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Contract) 
VRRPT_MAIN_Contract 
, 
VRRPT_MeetingPlan.DateOF 
VRRPT_MeetingPlan_DateOF 
, 
 VRRPT_MAIN.Person  
VRRPT_MAIN_Person_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Person) 
VRRPT_MAIN_Person 
, 
VRRPT_MAIN.Name 
VRRPT_MAIN_Name 
, 
VRRPT_MAIN.Attrachment 
VRRPT_MAIN_Attrachment 
, 
 VRRPT_MAIN.ReportType  
VRRPT_MAIN_ReportType_ID, 
 Func.VRDRreportType_BRIEF_F(VRRPT_MAIN.ReportType) 
VRRPT_MAIN_ReportType 
, 
VRRPT_MAIN.TheDate 
VRRPT_MAIN_TheDate 
, 
 VRRPT_MAIN.Author  
VRRPT_MAIN_Author_ID, 
 Func.Users_BRIEF_F(VRRPT_MAIN.Author) 
VRRPT_MAIN_Author 
, VRRPT_MeetingPlan.InstanceID InstanceID 
, VRRPT_MeetingPlan.VRRPT_MeetingPlanID ID 
, 'VRRPT_MeetingPlan' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRRPT_MeetingPlan
 join INSTANCE on VRRPT_MeetingPlan.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join VRRPT_MAIN ON VRRPT_MAIN.InstanceID=VRRPT_MeetingPlan.InstanceID 
;
create or replace view V_AUTOVRRPT_MeetingPlan as 
select   VRRPT_MeetingPlanID
, 
VRRPT_MeetingPlan.PlaceOf 
VRRPT_MeetingPlan_PlaceOf 
, 
VRRPT_MeetingPlan.theme 
VRRPT_MeetingPlan_theme 
, 
VRRPT_MeetingPlan.DateOF 
VRRPT_MeetingPlan_DateOF 
, VRRPT_MeetingPlan.InstanceID InstanceID 
, VRRPT_MeetingPlan.VRRPT_MeetingPlanID ID 
, 'VRRPT_MeetingPlan' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRRPT_MeetingPlan
 join INSTANCE on VRRPT_MeetingPlan.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRRPT_Meeters as 
select   VRRPT_MeetersID,VRRPT_MeetingPlanID
, 
 VRRPT_Meeters.Contact  
VRRPT_Meeters_Contact_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_Meeters.Contact) 
VRRPT_Meeters_Contact 
, 
 VRRPT_Meeters.ReminderSent  
VRRPT_Meeters_ReminderSent_VAL, 
 decode(VRRPT_Meeters.ReminderSent 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRRPT_Meeters_ReminderSent 
, 
 VRRPT_Meeters.Worker  
VRRPT_Meeters_Worker_ID, 
 Func.Users_BRIEF_F(VRRPT_Meeters.Worker) 
VRRPT_Meeters_Worker 
, 
VRRPT_Meeters.ReminderTime 
VRRPT_Meeters_ReminderTime 
, 
 VRRPT_Meeters.Mandatory  
VRRPT_Meeters_Mandatory_VAL, 
 decode(VRRPT_Meeters.Mandatory 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRRPT_Meeters_Mandatory 
, VRRPT_MeetingPlan.InstanceID InstanceID 
, VRRPT_Meeters.VRRPT_MeetersID ID 
, 'VRRPT_Meeters' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRRPT_Meeters
 join VRRPT_MeetingPlan on VRRPT_MeetingPlan.VRRPT_MeetingPlanID=VRRPT_Meeters.ParentStructRowID 
 join INSTANCE on VRRPT_MeetingPlan.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewVRRPT_Meeters as 
select   VRRPT_MeetersID,VRRPT_MeetingPlanID
, 
VRRPT_MeetingPlan.theme 
VRRPT_MeetingPlan_theme 
, 
VRRPT_MeetingPlan.DateOF 
VRRPT_MeetingPlan_DateOF 
, 
 VRRPT_MAIN.Person  
VRRPT_MAIN_Person_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Person) 
VRRPT_MAIN_Person 
, 
VRRPT_Meeters.ReminderTime 
VRRPT_Meeters_ReminderTime 
, 
 VRRPT_Meeters.Worker  
VRRPT_Meeters_Worker_ID, 
 Func.Users_BRIEF_F(VRRPT_Meeters.Worker) 
VRRPT_Meeters_Worker 
, 
 VRRPT_MAIN.Author  
VRRPT_MAIN_Author_ID, 
 Func.Users_BRIEF_F(VRRPT_MAIN.Author) 
VRRPT_MAIN_Author 
, 
 VRRPT_MAIN.Project  
VRRPT_MAIN_Project_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Project) 
VRRPT_MAIN_Project 
, 
VRRPT_MeetingPlan.PlaceOf 
VRRPT_MeetingPlan_PlaceOf 
, 
VRRPT_MAIN.TheDate 
VRRPT_MAIN_TheDate 
, 
VRRPT_MAIN.Attrachment 
VRRPT_MAIN_Attrachment 
, 
 VRRPT_Meeters.Contact  
VRRPT_Meeters_Contact_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_Meeters.Contact) 
VRRPT_Meeters_Contact 
, 
 VRRPT_MAIN.Contract  
VRRPT_MAIN_Contract_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Contract) 
VRRPT_MAIN_Contract 
, 
 VRRPT_Meeters.Mandatory  
VRRPT_Meeters_Mandatory_VAL, 
 decode(VRRPT_Meeters.Mandatory 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRRPT_Meeters_Mandatory 
, 
 VRRPT_MAIN.Client  
VRRPT_MAIN_Client_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Client) 
VRRPT_MAIN_Client 
, 
VRRPT_MAIN.Info 
VRRPT_MAIN_Info 
, 
 VRRPT_Meeters.ReminderSent  
VRRPT_Meeters_ReminderSent_VAL, 
 decode(VRRPT_Meeters.ReminderSent 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRRPT_Meeters_ReminderSent 
, 
VRRPT_MAIN.Name 
VRRPT_MAIN_Name 
, VRRPT_MeetingPlan.InstanceID InstanceID 
, VRRPT_Meeters.VRRPT_MeetersID ID 
, 'VRRPT_Meeters' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRRPT_Meeters
 join VRRPT_MeetingPlan on VRRPT_MeetingPlan.VRRPT_MeetingPlanID=VRRPT_Meeters.ParentStructRowID 
 join INSTANCE on VRRPT_MeetingPlan.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join VRRPT_MAIN ON VRRPT_MAIN.InstanceID=VRRPT_MeetingPlan.InstanceID 
;
create or replace view V_AUTOVRRPT_MAIN as 
select   VRRPT_MAINID
, 
 VRRPT_MAIN.Contract  
VRRPT_MAIN_Contract_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Contract) 
VRRPT_MAIN_Contract 
, 
VRRPT_MAIN.Info 
VRRPT_MAIN_Info 
, 
VRRPT_MAIN.Name 
VRRPT_MAIN_Name 
, 
 VRRPT_MAIN.Project  
VRRPT_MAIN_Project_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Project) 
VRRPT_MAIN_Project 
, 
VRRPT_MAIN.Attrachment 
VRRPT_MAIN_Attrachment 
, 
 VRRPT_MAIN.Client  
VRRPT_MAIN_Client_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Client) 
VRRPT_MAIN_Client 
, 
 VRRPT_MAIN.ReportType  
VRRPT_MAIN_ReportType_ID, 
 Func.VRDRreportType_BRIEF_F(VRRPT_MAIN.ReportType) 
VRRPT_MAIN_ReportType 
, 
VRRPT_MAIN.TheDate 
VRRPT_MAIN_TheDate 
, 
 VRRPT_MAIN.Author  
VRRPT_MAIN_Author_ID, 
 Func.Users_BRIEF_F(VRRPT_MAIN.Author) 
VRRPT_MAIN_Author 
, 
 VRRPT_MAIN.Person  
VRRPT_MAIN_Person_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Person) 
VRRPT_MAIN_Person 
, VRRPT_MAIN.InstanceID InstanceID 
, VRRPT_MAIN.VRRPT_MAINID ID 
, 'VRRPT_MAIN' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRRPT_MAIN
 join INSTANCE on VRRPT_MAIN.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewVRRPT_MAIN as 
select   VRRPT_MAINID
, 
 VRRPT_MAIN.Client  
VRRPT_MAIN_Client_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Client) 
VRRPT_MAIN_Client 
, 
 VRRPT_MAIN.Author  
VRRPT_MAIN_Author_ID, 
 Func.Users_BRIEF_F(VRRPT_MAIN.Author) 
VRRPT_MAIN_Author 
, 
VRRPT_MAIN.Info 
VRRPT_MAIN_Info 
, 
VRRPT_MAIN.TheDate 
VRRPT_MAIN_TheDate 
, 
 VRRPT_MAIN.ReportType  
VRRPT_MAIN_ReportType_ID, 
 Func.VRDRreportType_BRIEF_F(VRRPT_MAIN.ReportType) 
VRRPT_MAIN_ReportType 
, 
VRRPT_MAIN.Attrachment 
VRRPT_MAIN_Attrachment 
, 
 VRRPT_MAIN.Contract  
VRRPT_MAIN_Contract_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Contract) 
VRRPT_MAIN_Contract 
, 
 VRRPT_MAIN.Project  
VRRPT_MAIN_Project_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Project) 
VRRPT_MAIN_Project 
, 
 VRRPT_MAIN.Person  
VRRPT_MAIN_Person_ID, 
 Func.INSTANCE_BRIEF_F(VRRPT_MAIN.Person) 
VRRPT_MAIN_Person 
, 
VRRPT_MAIN.Name 
VRRPT_MAIN_Name 
, VRRPT_MAIN.InstanceID InstanceID 
, VRRPT_MAIN.VRRPT_MAINID ID 
, 'VRRPT_MAIN' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRRPT_MAIN
 join INSTANCE on VRRPT_MAIN.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDGCommon as 
select   VRDGCommonID
, 
 VRDGCommon.Curator  
VRDGCommon_Curator_ID, 
 Func.Users_BRIEF_F(VRDGCommon.Curator) 
VRDGCommon_Curator 
, 
VRDGCommon.Name 
VRDGCommon_Name 
, 
VRDGCommon.EndDate 
VRDGCommon_EndDate 
, 
VRDGCommon.Code1C 
VRDGCommon_Code1C 
, 
VRDGCommon.DogNum 
VRDGCommon_DogNum 
, 
 VRDGCommon.Client  
VRDGCommon_Client_ID, 
 Func.INSTANCE_BRIEF_F(VRDGCommon.Client) 
VRDGCommon_Client 
, 
 VRDGCommon.PZDog  
VRDGCommon_PZDog_VAL, 
 decode(VRDGCommon.PZDog 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRDGCommon_PZDog 
, 
VRDGCommon.StartDate 
VRDGCommon_StartDate 
, 
VRDGCommon.DogDate 
VRDGCommon_DogDate 
, 
VRDGCommon.Info 
VRDGCommon_Info 
, VRDGCommon.InstanceID InstanceID 
, VRDGCommon.VRDGCommonID ID 
, 'VRDGCommon' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDGCommon
 join INSTANCE on VRDGCommon.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDGReport as 
select   VRDGReportID
, 
 VRDGReport.Report  
VRDGReport_Report_ID, 
 Func.INSTANCE_BRIEF_F(VRDGReport.Report) 
VRDGReport_Report 
, VRDGReport.InstanceID InstanceID 
, VRDGReport.VRDGReportID ID 
, 'VRDGReport' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDGReport
 join INSTANCE on VRDGReport.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDGContractChanges as 
select   VRDGContractChangesID
, 
VRDGContractChanges.Code 
VRDGContractChanges_Code 
, 
VRDGContractChanges.theFile 
VRDGContractChanges_theFile 
, 
VRDGContractChanges.the_Comment 
VRDGContractChanges_the_Comment 
, 
VRDGContractChanges.DateOf 
VRDGContractChanges_DateOf 
, VRDGContractChanges.InstanceID InstanceID 
, VRDGContractChanges.VRDGContractChangesID ID 
, 'VRDGContractChanges' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDGContractChanges
 join INSTANCE on VRDGContractChanges.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDGContractVersion as 
select   VRDGContractVersionID
, 
 VRDGContractVersion.Actual  
VRDGContractVersion_Actual_VAL, 
 decode(VRDGContractVersion.Actual 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRDGContractVersion_Actual 
, 
VRDGContractVersion.the_Comment 
VRDGContractVersion_the_Comment 
, 
VRDGContractVersion.theFile 
VRDGContractVersion_theFile 
, 
VRDGContractVersion.DateOf 
VRDGContractVersion_DateOf 
, VRDGContractVersion.InstanceID InstanceID 
, VRDGContractVersion.VRDGContractVersionID ID 
, 'VRDGContractVersion' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDGContractVersion
 join INSTANCE on VRDGContractVersion.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDGContractSpesial as 
select   VRDGContractSpesialID
, 
VRDGContractSpesial.DateOf 
VRDGContractSpesial_DateOf 
, 
 VRDGContractSpesial.IsDone  
VRDGContractSpesial_IsDone_VAL, 
 decode(VRDGContractSpesial.IsDone 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRDGContractSpesial_IsDone 
, 
VRDGContractSpesial.the_Comment 
VRDGContractSpesial_the_Comment 
, VRDGContractSpesial.InstanceID InstanceID 
, VRDGContractSpesial.VRDGContractSpesialID ID 
, 'VRDGContractSpesial' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDGContractSpesial
 join INSTANCE on VRDGContractSpesial.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKSH_DATA as 
select   PEKSH_DATAID
, 
PEKSH_DATA.Duration 
PEKSH_DATA_Duration 
, 
 PEKSH_DATA.Train  
PEKSH_DATA_Train_ID, 
 Func.PEKD_TRAINS_BRIEF_F(PEKSH_DATA.Train) 
PEKSH_DATA_Train 
, 
PEKSH_DATA.StartTime 
PEKSH_DATA_StartTime 
, PEKSH_DATA.InstanceID InstanceID 
, PEKSH_DATA.PEKSH_DATAID ID 
, 'PEKSH_DATA' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKSH_DATA
 join INSTANCE on PEKSH_DATA.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKSH_START as 
select   PEKSH_STARTID,PEKSH_DATAID
, 
PEKSH_START.StartTime 
PEKSH_START_StartTime 
, 
PEKSH_START.DayInYear 
PEKSH_START_DayInYear 
, PEKSH_DATA.InstanceID InstanceID 
, PEKSH_START.PEKSH_STARTID ID 
, 'PEKSH_START' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKSH_START
 join PEKSH_DATA on PEKSH_DATA.PEKSH_DATAID=PEKSH_START.ParentStructRowID 
 join INSTANCE on PEKSH_DATA.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKSH_PEKSH_DEF as 
select   PEKSH_DEFID
, 
 PEKSH_DEF.DIRECTION  
PEKSH_DEF_DIRECTION_ID, 
 Func.PEKD_DIRECTION_BRIEF_F(PEKSH_DEF.DIRECTION) 
PEKSH_DEF_DIRECTION 
, 
PEKSH_DEF.TheYear 
PEKSH_DEF_TheYear 
, PEKSH_DEF.InstanceID InstanceID 
, PEKSH_DEF.PEKSH_DEFID ID 
, 'PEKSH_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKSH_DEF
 join INSTANCE on PEKSH_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKSH_DEF as 
select   PEKSH_DEFID
, 
 PEKSH_DEF.DIRECTION  
PEKSH_DEF_DIRECTION_ID, 
 Func.PEKD_DIRECTION_BRIEF_F(PEKSH_DEF.DIRECTION) 
PEKSH_DEF_DIRECTION 
, 
PEKSH_DEF.TheYear 
PEKSH_DEF_TheYear 
, PEKSH_DEF.InstanceID InstanceID 
, PEKSH_DEF.PEKSH_DEFID ID 
, 'PEKSH_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKSH_DEF
 join INSTANCE on PEKSH_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOMTZ2JOB_DEF as 
select   MTZ2JOB_DEFID
, 
 MTZ2JOB_DEF.Processed  
MTZ2JOB_DEF_Processed_VAL, 
 decode(MTZ2JOB_DEF.Processed 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ2JOB_DEF_Processed 
, 
MTZ2JOB_DEF.ProcessDate 
MTZ2JOB_DEF_ProcessDate 
, 
MTZ2JOB_DEF.ThruState 
MTZ2JOB_DEF_ThruState 
, 
MTZ2JOB_DEF.EventDate 
MTZ2JOB_DEF_EventDate 
, 
MTZ2JOB_DEF.NextState 
MTZ2JOB_DEF_NextState 
, 
 MTZ2JOB_DEF.ThruObject  
MTZ2JOB_DEF_ThruObject_ID, 
 Func.INSTANCE_BRIEF_F(MTZ2JOB_DEF.ThruObject) 
MTZ2JOB_DEF_ThruObject 
, 
MTZ2JOB_DEF.EvenType 
MTZ2JOB_DEF_EvenType 
, MTZ2JOB_DEF.InstanceID InstanceID 
, MTZ2JOB_DEF.MTZ2JOB_DEFID ID 
, 'MTZ2JOB_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZ2JOB_DEF
 join INSTANCE on MTZ2JOB_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKPAY_DEF as 
select   PEKPAY_DEFID
, 
PEKPAY_DEF.PLPNUM 
PEKPAY_DEF_PLPNUM 
, 
PEKPAY_DEF.PLPSumm 
PEKPAY_DEF_PLPSumm 
, 
 PEKPAY_DEF.ToClient  
PEKPAY_DEF_ToClient_ID, 
 Func.INSTANCE_BRIEF_F(PEKPAY_DEF.ToClient) 
PEKPAY_DEF_ToClient 
, 
PEKPAY_DEF.Code1C 
PEKPAY_DEF_Code1C 
, 
PEKPAY_DEF.TheComment 
PEKPAY_DEF_TheComment 
, 
 PEKPAY_DEF.TheDept  
PEKPAY_DEF_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKPAY_DEF.TheDept) 
PEKPAY_DEF_TheDept 
, 
PEKPAY_DEF.PLPDate 
PEKPAY_DEF_PLPDate 
, PEKPAY_DEF.InstanceID InstanceID 
, PEKPAY_DEF.PEKPAY_DEFID ID 
, 'PEKPAY_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKPAY_DEF
 join INSTANCE on PEKPAY_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBSDIC_DEF as 
select   WEBSDIC_DEFID
, 
WEBSDIC_DEF.PathToFiles 
WEBSDIC_DEF_PathToFiles 
, 
 WEBSDIC_DEF.WEBS  
WEBSDIC_DEF_WEBS_ID, 
 Func.INSTANCE_BRIEF_F(WEBSDIC_DEF.WEBS) 
WEBSDIC_DEF_WEBS 
, WEBSDIC_DEF.InstanceID InstanceID 
, WEBSDIC_DEF.WEBSDIC_DEFID ID 
, 'WEBSDIC_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBSDIC_DEF
 join INSTANCE on WEBSDIC_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPWUUSERS as 
select   PWUUSERSID
, 
 PWUUSERS.PWUUSERSClient  
PWUUSERS_PWUUSERSClient_ID, 
 Func.INSTANCE_BRIEF_F(PWUUSERS.PWUUSERSClient) 
PWUUSERS_PWUUSERSClient 
, 
PWUUSERS.PWUUSERSEMail 
PWUUSERS_PWUUSERSEMail 
, 
PWUUSERS.PWUUSERSRegDate 
PWUUSERS_PWUUSERSRegDate 
, 
PWUUSERS.PWUUSERSLogin 
PWUUSERS_PWUUSERSLogin 
, 
PWUUSERS.PWUUSERSOrderNum 
PWUUSERS_PWUUSERSOrderNum 
, 
PWUUSERS.PWUUSERSPassword 
PWUUSERS_PWUUSERSPassword 
, 
 PWUUSERS.PWUUSERSIsBanned  
PWUUSERS_PWUUSERSIsBanned_VAL, 
 decode(PWUUSERS.PWUUSERSIsBanned 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PWUUSERS_PWUUSERSIsBanned 
, PWUUSERS.InstanceID InstanceID 
, PWUUSERS.PWUUSERSID ID 
, 'PWUUSERS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PWUUSERS
 join INSTANCE on PWUUSERS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKZ_pekz_path as 
select   pekz_pathID
, 
 pekz_def.ClientTo  
pekz_def_ClientTo_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientTo) 
pekz_def_ClientTo 
, 
 pekz_path.InfoSendType  
pekz_path_InfoSendType_ID, 
 Func.PEKD_INFOSENDTYPE_BRIEF_F(pekz_path.InfoSendType) 
pekz_path_InfoSendType 
, 
 pekz_def.Supplier  
pekz_def_Supplier_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.Supplier) 
pekz_def_Supplier 
, 
pekz_def.Code1C 
pekz_def_Code1C 
, 
pekz_path.vagNo 
pekz_path_vagNo 
, 
pekz_def.PlanedDate 
pekz_def_PlanedDate 
, 
 pekz_def.Fillial  
pekz_def_Fillial_ID, 
 Func.PEKD_DEPT_BRIEF_F(pekz_def.Fillial) 
pekz_def_Fillial 
, 
pekz_path.sequence 
pekz_path_sequence 
, 
pekz_path.SupSumm 
pekz_path_SupSumm 
, 
pekz_def.AcceptDate 
pekz_def_AcceptDate 
, 
pekz_path.RcvFIO 
pekz_path_RcvFIO 
, 
 pekz_path.TheCurrency  
pekz_path_TheCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(pekz_path.TheCurrency) 
pekz_path_TheCurrency 
, 
pekz_def.AcceptTime 
pekz_def_AcceptTime 
, 
 pekz_path.DestStation  
pekz_path_DestStation_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(pekz_path.DestStation) 
pekz_path_DestStation 
, 
pekz_path.TRF 
pekz_path_TRF 
, 
 pekz_def.TheDogovor  
pekz_def_TheDogovor_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.TheDogovor) 
pekz_def_TheDogovor 
, 
pekz_path.PassDate 
pekz_path_PassDate 
, 
 pekz_def.ClientFrom  
pekz_def_ClientFrom_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientFrom) 
pekz_def_ClientFrom 
, 
pekz_path.RCVInfo 
PEKZ_PATH_RCVInfo 
, 
 pekz_path.trainNo  
pekz_path_trainNo_ID, 
 Func.PEKD_TRAINS_BRIEF_F(pekz_path.trainNo) 
pekz_path_trainNo 
, 
pekz_path.SendDate 
pekz_path_SendDate 
, 
pekz_def.TheComment 
pekz_def_TheComment 
, 
pekz_path.PassFIO 
pekz_path_PassFIO 
, 
 pekz_path.ValueEDIZM  
pekz_path_ValueEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(pekz_path.ValueEDIZM) 
pekz_path_ValueEDIZM 
, 
 pekz_path.Receiver  
pekz_path_Receiver_ID, 
 Func.INSTANCE_BRIEF_F(pekz_path.Receiver) 
pekz_path_Receiver 
, 
 pekz_path.WeightEDIZM  
pekz_path_WeightEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(pekz_path.WeightEDIZM) 
pekz_path_WeightEDIZM 
, 
pekz_def.QueryDate 
pekz_def_QueryDate 
, 
pekz_path.RcvWaitDate 
pekz_path_RcvWaitDate 
, 
pekz_path.SummNDS 
pekz_path_SummNDS 
, 
pekz_path.Summ 
pekz_path_Summ 
, 
 pekz_path.PPODescription  
pekz_path_PPODescription_ID, 
 Func.PEKD_POSTTYPE_BRIEF_F(pekz_path.PPODescription) 
pekz_path_PPODescription 
, 
pekz_path.SupSummNDS 
pekz_path_SupSummNDS 
, 
 pekz_def.TRType  
pekz_def_TRType_ID, 
 Func.PEKD_TRTYPE_BRIEF_F(pekz_def.TRType) 
pekz_def_TRType 
, 
 pekz_def.PlatType  
pekz_def_PlatType_VAL, 
 decode(pekz_def.PlatType 
, 0 ,'Отправитель'
, 1 ,'Получатель'
, 2 ,'Другой'
, '???') 
pekz_def_PlatType 
, 
pekz_path.PPOWeight 
pekz_path_PPOWeight 
, 
 pekz_def.TRF  
pekz_def_TRF_ID, 
 Func.PEKD_TRFTYPE_BRIEF_F(pekz_def.TRF) 
pekz_def_TRF 
, 
pekz_path.InfoDate 
pekz_path_InfoDate 
, 
 pekz_def.IsNal  
pekz_def_IsNal_VAL, 
 decode(pekz_def.IsNal 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
pekz_def_IsNal 
, 
pekz_def.LoadTime 
pekz_def_LoadTime 
, 
pekz_path.PPONum 
pekz_path_PPONum 
, 
pekz_path.RcvDate 
pekz_path_RcvDate 
, 
pekz_def.PEKCode 
pekz_def_PEKCode 
, 
pekz_path.PPOVol 
pekz_path_PPOVol 
, 
 pekz_def.IncludeInOrder  
pekz_def_IncludeInOrder_VAL, 
 decode(pekz_def.IncludeInOrder 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
pekz_def_IncludeInOrder 
, 
 pekz_def.ClientPayed  
pekz_def_ClientPayed_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientPayed) 
pekz_def_ClientPayed 
, 
pekz_def.LoadDate 
pekz_def_LoadDate 
, 
 pekz_path.TheDirection  
pekz_path_TheDirection_ID, 
 Func.PEKD_DIRECTION_BRIEF_F(pekz_path.TheDirection) 
pekz_path_TheDirection 
, 
pekz_path.InforRcvFIO 
pekz_path_InforRcvFIO 
, 
pekz_path.SupTRF 
pekz_path_SupTRF 
, pekz_path.InstanceID InstanceID 
, pekz_path.pekz_pathID ID 
, 'pekz_path' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from pekz_path
 join INSTANCE on pekz_path.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join pekz_def ON pekz_def.InstanceID=pekz_path.InstanceID 
;
create or replace view V_AUTOpekz_path as 
select   pekz_pathID
, 
pekz_path.TRF 
pekz_path_TRF 
, 
pekz_path.SupSummNDS 
pekz_path_SupSummNDS 
, 
pekz_path.RcvWaitDate 
pekz_path_RcvWaitDate 
, 
 pekz_path.TransSupplier  
pekz_path_TransSupplier_ID, 
 Func.INSTANCE_BRIEF_F(pekz_path.TransSupplier) 
pekz_path_TransSupplier 
, 
 pekz_path.PathFilial  
pekz_path_PathFilial_ID, 
 Func.PEKD_DEPT_BRIEF_F(pekz_path.PathFilial) 
pekz_path_PathFilial 
, 
pekz_path.PPOVol 
pekz_path_PPOVol 
, 
pekz_path.SupTRF 
pekz_path_SupTRF 
, 
 pekz_path.trainNo  
pekz_path_trainNo_ID, 
 Func.PEKD_TRAINS_BRIEF_F(pekz_path.trainNo) 
pekz_path_trainNo 
, 
pekz_path.RCVInfo 
pekz_path_RCVInfo 
, 
pekz_path.InfoDate 
pekz_path_InfoDate 
, 
pekz_path.RcvDate 
pekz_path_RcvDate 
, 
pekz_path.PPONum 
pekz_path_PPONum 
, 
pekz_path.vagNo 
pekz_path_vagNo 
, 
pekz_path.SupSumm 
pekz_path_SupSumm 
, 
 pekz_path.IsTranzit  
pekz_path_IsTranzit_VAL, 
 decode(pekz_path.IsTranzit 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
pekz_path_IsTranzit 
, 
 pekz_path.InfoSendType  
pekz_path_InfoSendType_ID, 
 Func.PEKD_INFOSENDTYPE_BRIEF_F(pekz_path.InfoSendType) 
pekz_path_InfoSendType 
, 
 pekz_path.PPODescription  
pekz_path_PPODescription_ID, 
 Func.PEKD_POSTTYPE_BRIEF_F(pekz_path.PPODescription) 
pekz_path_PPODescription 
, 
 pekz_path.TheDirection  
pekz_path_TheDirection_ID, 
 Func.PEKD_DIRECTION_BRIEF_F(pekz_path.TheDirection) 
pekz_path_TheDirection 
, 
pekz_path.InforRcvFIO 
pekz_path_InforRcvFIO 
, 
 pekz_path.Receiver  
pekz_path_Receiver_ID, 
 Func.INSTANCE_BRIEF_F(pekz_path.Receiver) 
pekz_path_Receiver 
, 
pekz_path.sequence 
pekz_path_sequence 
, 
 pekz_path.ValueEDIZM  
pekz_path_ValueEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(pekz_path.ValueEDIZM) 
pekz_path_ValueEDIZM 
, 
pekz_path.SummNDS 
pekz_path_SummNDS 
, 
pekz_path.PassFIO 
pekz_path_PassFIO 
, 
pekz_path.SendDate 
pekz_path_SendDate 
, 
pekz_path.RcvFIO 
pekz_path_RcvFIO 
, 
 pekz_path.DestStation  
pekz_path_DestStation_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(pekz_path.DestStation) 
pekz_path_DestStation 
, 
 pekz_path.TheCurrency  
pekz_path_TheCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(pekz_path.TheCurrency) 
pekz_path_TheCurrency 
, 
 pekz_path.WeightEDIZM  
pekz_path_WeightEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(pekz_path.WeightEDIZM) 
pekz_path_WeightEDIZM 
, 
pekz_path.Summ 
pekz_path_Summ 
, 
pekz_path.PPOWeight 
pekz_path_PPOWeight 
, 
pekz_path.PassDate 
pekz_path_PassDate 
, 
pekz_path.PathPlanedDate 
pekz_path_PathPlanedDate 
, pekz_path.InstanceID InstanceID 
, pekz_path.pekz_pathID ID 
, 'pekz_path' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from pekz_path
 join INSTANCE on pekz_path.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewMessageForCLI as 
select   pekz_pathID
, 
pekz_def.QueryDate 
pekz_def_QueryDate 
, 
pekz_path.RcvWaitDate 
pekz_path_RcvWaitDate 
, 
pekz_path.PPOWeight 
pekz_path_PPOWeight 
, 
pekz_path.RcvDate 
pekz_path_RcvDate 
, 
 pekz_def.ClientPayed  
pekz_def_ClientPayed_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientPayed) 
pekz_def_ClientPayed 
, 
pekz_path.RCVInfo 
pekz_path_RCVInfo 
, 
pekz_def.VRCFinfo 
pekz_def_VRCFinfo 
, 
pekz_path.PassFIO 
pekz_path_PassFIO 
, 
pekz_path.RcvFIO 
pekz_path_RcvFIO 
, 
pekz_def.SummDopNDS 
pekz_def_SummDopNDS 
, 
 pekz_path.TheDirection  
pekz_path_TheDirection_ID, 
 Func.PEKD_DIRECTION_BRIEF_F(pekz_path.TheDirection) 
pekz_path_TheDirection 
, 
 pekz_def.ClientTo  
pekz_def_ClientTo_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientTo) 
pekz_def_ClientTo 
, 
pekz_def.AcceptDate 
pekz_def_AcceptDate 
, 
pekz_def.RcvInfo 
pekz_def_RcvInfo 
, 
 pekz_path.TransSupplier  
pekz_path_TransSupplier_ID, 
 Func.INSTANCE_BRIEF_F(pekz_path.TransSupplier) 
pekz_path_TransSupplier 
, 
 pekz_path.Receiver  
pekz_path_Receiver_ID, 
 Func.INSTANCE_BRIEF_F(pekz_path.Receiver) 
pekz_path_Receiver 
, 
 pekz_path.PPODescription  
pekz_path_PPODescription_ID, 
 Func.PEKD_POSTTYPE_BRIEF_F(pekz_path.PPODescription) 
pekz_path_PPODescription 
, 
pekz_path.PassDate 
pekz_path_PassDate 
, 
pekz_def.LoadDate 
pekz_def_LoadDate 
, 
pekz_path.PathPlanedDate 
pekz_path_PathPlanedDate 
, 
 pekz_path.PathFilial  
pekz_path_PathFilial_ID, 
 Func.PEKD_DEPT_BRIEF_F(pekz_path.PathFilial) 
pekz_path_PathFilial 
, 
pekz_path.PPOVol 
pekz_path_PPOVol 
, 
 pekz_path.WeightEDIZM  
pekz_path_WeightEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(pekz_path.WeightEDIZM) 
pekz_path_WeightEDIZM 
, 
 pekz_def.TheDogovor  
pekz_def_TheDogovor_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.TheDogovor) 
pekz_def_TheDogovor 
, 
 pekz_def.ClientFrom  
pekz_def_ClientFrom_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientFrom) 
pekz_def_ClientFrom 
, 
 pekz_def.Fillial  
pekz_def_Fillial_ID, 
 Func.PEKD_DEPT_BRIEF_F(pekz_def.Fillial) 
pekz_def_Fillial 
, 
pekz_def.PEKCode 
pekz_def_PEKCode 
, 
pekz_path.InfoDate 
pekz_path_InfoDate 
, 
 pekz_path.DestStation  
pekz_path_DestStation_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(pekz_path.DestStation) 
pekz_path_DestStation 
, 
 pekz_path.trainNo  
pekz_path_trainNo_ID, 
 Func.PEKD_TRAINS_BRIEF_F(pekz_path.trainNo) 
pekz_path_trainNo 
, 
pekz_def.AcceptTime 
pekz_def_AcceptTime 
, 
 pekz_path.InfoSendType  
pekz_path_InfoSendType_ID, 
 Func.PEKD_INFOSENDTYPE_BRIEF_F(pekz_path.InfoSendType) 
pekz_path_InfoSendType 
, 
 pekz_path.ValueEDIZM  
pekz_path_ValueEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(pekz_path.ValueEDIZM) 
pekz_path_ValueEDIZM 
, 
pekz_def.TheComment 
pekz_def_TheComment 
, 
pekz_path.SendDate 
pekz_path_SendDate 
, 
pekz_path.InforRcvFIO 
pekz_path_InforRcvFIO 
, 
pekz_path.SummNDS 
pekz_path_SummNDS 
, 
pekz_def.LoadTime 
pekz_def_LoadTime 
, 
pekz_path.vagNo 
pekz_path_vagNo 
, pekz_path.InstanceID InstanceID 
, pekz_path.pekz_pathID ID 
, 'pekz_path' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from pekz_path
 join INSTANCE on pekz_path.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join pekz_def ON pekz_def.InstanceID=pekz_path.InstanceID 
;
create or replace view V_AUTOPEKZ_WLIST as 
select   PEKZ_WLISTID,pekz_pathID
, 
PEKZ_WLIST.ItemDescription 
PEKZ_WLIST_ItemDescription 
, 
 PEKZ_WLIST.IsProchee  
PEKZ_WLIST_IsProchee_VAL, 
 decode(PEKZ_WLIST.IsProchee 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKZ_WLIST_IsProchee 
, 
PEKZ_WLIST.NettoWeight 
PEKZ_WLIST_NettoWeight 
, 
PEKZ_WLIST.theWeight 
PEKZ_WLIST_theWeight 
, 
PEKZ_WLIST.shCode 
PEKZ_WLIST_shCode 
, 
 PEKZ_WLIST.TheCountry  
PEKZ_WLIST_TheCountry_ID, 
 Func.ENTDIC_COUNTRY_BRIEF_F(PEKZ_WLIST.TheCountry) 
PEKZ_WLIST_TheCountry 
, 
PEKZ_WLIST.QDocs 
PEKZ_WLIST_QDocs 
, 
 PEKZ_WLIST.TheCurrency  
PEKZ_WLIST_TheCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(PEKZ_WLIST.TheCurrency) 
PEKZ_WLIST_TheCurrency 
, 
 PEKZ_WLIST.IsDocument  
PEKZ_WLIST_IsDocument_VAL, 
 decode(PEKZ_WLIST.IsDocument 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKZ_WLIST_IsDocument 
, 
PEKZ_WLIST.VozmCost 
PEKZ_WLIST_VozmCost 
, 
PEKZ_WLIST.OrderNum 
PEKZ_WLIST_OrderNum 
, 
PEKZ_WLIST.sequence 
PEKZ_WLIST_sequence 
, 
 PEKZ_WLIST.IsObrazec  
PEKZ_WLIST_IsObrazec_VAL, 
 decode(PEKZ_WLIST.IsObrazec 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKZ_WLIST_IsObrazec 
, 
PEKZ_WLIST.QSertif 
PEKZ_WLIST_QSertif 
, 
PEKZ_WLIST.QLicense 
PEKZ_WLIST_QLicense 
, 
PEKZ_WLIST.ItemPrice 
PEKZ_WLIST_ItemPrice 
, 
 PEKZ_WLIST.IsPodarok  
PEKZ_WLIST_IsPodarok_VAL, 
 decode(PEKZ_WLIST.IsPodarok 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKZ_WLIST_IsPodarok 
, 
 PEKZ_WLIST.IsVozvrat  
PEKZ_WLIST_IsVozvrat_VAL, 
 decode(PEKZ_WLIST.IsVozvrat 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKZ_WLIST_IsVozvrat 
, 
PEKZ_WLIST.TNBED 
PEKZ_WLIST_TNBED 
, pekz_path.InstanceID InstanceID 
, PEKZ_WLIST.PEKZ_WLISTID ID 
, 'PEKZ_WLIST' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKZ_WLIST
 join pekz_path on pekz_path.pekz_pathID=PEKZ_WLIST.ParentStructRowID 
 join INSTANCE on pekz_path.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKZ_WLADDS as 
select   PEKZ_WLADDSID,PEKZ_WLISTID,pekz_pathID
, 
 PEKZ_WLADDS.TheAdds  
PEKZ_WLADDS_TheAdds_ID, 
 Func.PEKD_ADDS_BRIEF_F(PEKZ_WLADDS.TheAdds) 
PEKZ_WLADDS_TheAdds 
, pekz_path.InstanceID InstanceID 
, PEKZ_WLADDS.PEKZ_WLADDSID ID 
, 'PEKZ_WLADDS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKZ_WLADDS
 join PEKZ_WLIST on PEKZ_WLIST.PEKZ_WLISTID=PEKZ_WLADDS.ParentStructRowID 
 join pekz_path on pekz_path.pekz_pathID=PEKZ_WLIST.ParentStructRowID 
 join INSTANCE on pekz_path.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKZ_DOCS as 
select   PEKZ_DOCSID
, 
 PEKZ_DOCS.TheDoc  
PEKZ_DOCS_TheDoc_ID, 
 Func.INSTANCE_BRIEF_F(PEKZ_DOCS.TheDoc) 
PEKZ_DOCS_TheDoc 
, PEKZ_DOCS.InstanceID InstanceID 
, PEKZ_DOCS.PEKZ_DOCSID ID 
, 'PEKZ_DOCS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKZ_DOCS
 join INSTANCE on PEKZ_DOCS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOpekz_def as 
select   pekz_defID
, 
 pekz_def.PlatType  
pekz_def_PlatType_VAL, 
 decode(pekz_def.PlatType 
, 0 ,'Отправитель'
, 1 ,'Получатель'
, 2 ,'Другой'
, '???') 
pekz_def_PlatType 
, 
pekz_def.AcceptDate 
pekz_def_AcceptDate 
, 
pekz_def.SummDop 
pekz_def_SummDop 
, 
pekz_def.TheComment 
pekz_def_TheComment 
, 
 pekz_def.Fillial  
pekz_def_Fillial_ID, 
 Func.PEKD_DEPT_BRIEF_F(pekz_def.Fillial) 
pekz_def_Fillial 
, 
 pekz_def.TRType  
pekz_def_TRType_ID, 
 Func.PEKD_TRTYPE_BRIEF_F(pekz_def.TRType) 
pekz_def_TRType 
, 
 pekz_def.ClientPayed  
pekz_def_ClientPayed_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientPayed) 
pekz_def_ClientPayed 
, 
 pekz_def.TRF  
pekz_def_TRF_ID, 
 Func.PEKD_TRFTYPE_BRIEF_F(pekz_def.TRF) 
pekz_def_TRF 
, 
pekz_def.Summ 
pekz_def_Summ 
, 
pekz_def.SummDopNDS 
pekz_def_SummDopNDS 
, 
 pekz_def.IsPayed  
pekz_def_IsPayed_VAL, 
 decode(pekz_def.IsPayed 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
pekz_def_IsPayed 
, 
pekz_def.RcvInfo 
pekz_def_RcvInfo 
, 
 pekz_def.theActWork  
pekz_def_theActWork_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.theActWork) 
pekz_def_theActWork 
, 
 pekz_def.IncludeInAct  
pekz_def_IncludeInAct_VAL, 
 decode(pekz_def.IncludeInAct 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
pekz_def_IncludeInAct 
, 
pekz_def.SummNDS 
pekz_def_SummNDS 
, 
pekz_def.LoadDate 
pekz_def_LoadDate 
, 
pekz_def.AcceptTime 
pekz_def_AcceptTime 
, 
 pekz_def.PayDept  
pekz_def_PayDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(pekz_def.PayDept) 
pekz_def_PayDept 
, 
pekz_def.VRCFinfo 
pekz_def_VRCFinfo 
, 
 pekz_def.ClientTo  
pekz_def_ClientTo_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientTo) 
pekz_def_ClientTo 
, 
pekz_def.PEKCode 
pekz_def_PEKCode 
, 
 pekz_def.TheDogovor  
pekz_def_TheDogovor_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.TheDogovor) 
pekz_def_TheDogovor 
, 
 pekz_def.ClientFrom  
pekz_def_ClientFrom_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientFrom) 
pekz_def_ClientFrom 
, 
 pekz_def.IsNal  
pekz_def_IsNal_VAL, 
 decode(pekz_def.IsNal 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
pekz_def_IsNal 
, 
 pekz_def.Supplier  
pekz_def_Supplier_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.Supplier) 
pekz_def_Supplier 
, 
pekz_def.Code1C 
pekz_def_Code1C 
, 
pekz_def.QueryDate 
pekz_def_QueryDate 
, 
 pekz_def.IncludeInOrder  
pekz_def_IncludeInOrder_VAL, 
 decode(pekz_def.IncludeInOrder 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
pekz_def_IncludeInOrder 
, 
pekz_def.LoadTime 
pekz_def_LoadTime 
, 
pekz_def.PlanedDate 
pekz_def_PlanedDate 
, pekz_def.InstanceID InstanceID 
, pekz_def.pekz_defID ID 
, 'pekz_def' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from pekz_def
 join INSTANCE on pekz_def.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKZ_pekz_def as 
select   pekz_defID
, 
 pekz_def.Supplier  
pekz_def_Supplier_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.Supplier) 
pekz_def_Supplier 
, 
 pekz_def.TRType  
pekz_def_TRType_ID, 
 Func.PEKD_TRTYPE_BRIEF_F(pekz_def.TRType) 
pekz_def_TRType 
, 
 pekz_def.IncludeInAct  
pekz_def_IncludeInAct_VAL, 
 decode(pekz_def.IncludeInAct 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
pekz_def_IncludeInAct 
, 
pekz_def.SummDop 
pekz_def_SummDop 
, 
 pekz_def.IncludeInOrder  
pekz_def_IncludeInOrder_VAL, 
 decode(pekz_def.IncludeInOrder 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
pekz_def_IncludeInOrder 
, 
pekz_def.RcvInfo 
pekz_def_RCVInfo 
, 
 pekz_def.IsNal  
pekz_def_IsNal_VAL, 
 decode(pekz_def.IsNal 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
pekz_def_IsNal 
, 
 pekz_def.Fillial  
pekz_def_filial_ID, 
 Func.PEKD_DEPT_BRIEF_F(pekz_def.Fillial) 
pekz_def_filial 
, 
pekz_def.LoadTime 
pekz_def_LoadTime 
, 
pekz_def.SummDopNDS 
pekz_def_SummDopNDS 
, 
pekz_def.PEKCode 
pekz_def_PEKCode 
, 
pekz_def.SummNDS 
pekz_def_SummNDS 
, 
 pekz_def.PayDept  
pekz_def_paydept_ID, 
 Func.PEKD_DEPT_BRIEF_F(pekz_def.PayDept) 
pekz_def_paydept 
, 
pekz_def.AcceptDate 
pekz_def_AcceptDate 
, 
pekz_def.LoadDate 
pekz_def_LoadDate 
, 
pekz_def.PlanedDate 
pekz_def_PlanedDate 
, 
 pekz_def.TRF  
pekz_def_TRF_ID, 
 Func.PEKD_TRFTYPE_BRIEF_F(pekz_def.TRF) 
pekz_def_TRF 
, 
pekz_def.AcceptTime 
pekz_def_AcceptTime 
, 
pekz_def.Summ 
pekz_def_Summ 
, 
 pekz_def.ClientFrom  
pekz_def_ClientFrom_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientFrom) 
pekz_def_ClientFrom 
, 
 pekz_def.ClientTo  
pekz_def_ClientTo_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientTo) 
pekz_def_ClientTo 
, 
pekz_def.TheComment 
pekz_def_TheComment 
, 
 pekz_def.ClientPayed  
pekz_def_ClientPayed_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.ClientPayed) 
pekz_def_ClientPayed 
, 
 pekz_def.TheDogovor  
pekz_def_TheDogovor_ID, 
 Func.INSTANCE_BRIEF_F(pekz_def.TheDogovor) 
pekz_def_TheDogovor 
, 
pekz_def.QueryDate 
pekz_def_QueryDate 
, pekz_def.InstanceID InstanceID 
, pekz_def.pekz_defID ID 
, 'pekz_def' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from pekz_def
 join INSTANCE on pekz_def.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKZ_ACLCT as 
select   PEKZ_ACLCTID
, 
PEKZ_ACLCT.TheDuration 
PEKZ_ACLCT_TheDuration 
, 
 PEKZ_ACLCT.AutoSuplier  
PEKZ_ACLCT_AutoSuplier_ID, 
 Func.INSTANCE_BRIEF_F(PEKZ_ACLCT.AutoSuplier) 
PEKZ_ACLCT_AutoSuplier 
, 
PEKZ_ACLCT.SupSumm 
PEKZ_ACLCT_SupSumm 
, 
PEKZ_ACLCT.CollectTimeTo 
PEKZ_ACLCT_CollectTimeTo 
, 
PEKZ_ACLCT.SupSummNDS 
PEKZ_ACLCT_SupSummNDS 
, 
PEKZ_ACLCT.CollectTimeFrom 
PEKZ_ACLCT_CollectTimeFrom 
, 
 PEKZ_ACLCT.AutoType  
PEKZ_ACLCT_AutoType_ID, 
 Func.PEKD_AUTO_BRIEF_F(PEKZ_ACLCT.AutoType) 
PEKZ_ACLCT_AutoType 
, 
PEKZ_ACLCT.Summ 
PEKZ_ACLCT_Summ 
, 
PEKZ_ACLCT.SummNDS 
PEKZ_ACLCT_SummNDS 
, 
PEKZ_ACLCT.Info 
PEKZ_ACLCT_Info 
, 
PEKZ_ACLCT.TheComment 
PEKZ_ACLCT_TheComment 
, 
PEKZ_ACLCT.TheLength 
PEKZ_ACLCT_TheLength 
, 
PEKZ_ACLCT.Phone 
PEKZ_ACLCT_Phone 
, 
PEKZ_ACLCT.CollectDate 
PEKZ_ACLCT_CollectDate 
, 
 PEKZ_ACLCT.TheFilial  
PEKZ_ACLCT_TheFilial_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKZ_ACLCT.TheFilial) 
PEKZ_ACLCT_TheFilial 
, 
PEKZ_ACLCT.TheAddress 
PEKZ_ACLCT_TheAddress 
, 
PEKZ_ACLCT.ThePerson 
PEKZ_ACLCT_ThePerson 
, PEKZ_ACLCT.InstanceID InstanceID 
, PEKZ_ACLCT.PEKZ_ACLCTID ID 
, 'PEKZ_ACLCT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKZ_ACLCT
 join INSTANCE on PEKZ_ACLCT.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKZ_ADLVR as 
select   PEKZ_ADLVRID
, 
PEKZ_ADLVR.SupSumm 
PEKZ_ADLVR_SupSumm 
, 
PEKZ_ADLVR.ThePerson 
PEKZ_ADLVR_ThePerson 
, 
 PEKZ_ADLVR.AutoType  
PEKZ_ADLVR_AutoType_ID, 
 Func.PEKD_AUTO_BRIEF_F(PEKZ_ADLVR.AutoType) 
PEKZ_ADLVR_AutoType 
, 
PEKZ_ADLVR.CollectTimeFrom 
PEKZ_ADLVR_CollectTimeFrom 
, 
PEKZ_ADLVR.Summ 
PEKZ_ADLVR_Summ 
, 
PEKZ_ADLVR.Info 
PEKZ_ADLVR_Info 
, 
 PEKZ_ADLVR.TheFilial  
PEKZ_ADLVR_TheFilial_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKZ_ADLVR.TheFilial) 
PEKZ_ADLVR_TheFilial 
, 
PEKZ_ADLVR.CollectDate 
PEKZ_ADLVR_CollectDate 
, 
PEKZ_ADLVR.SupSummNDS 
PEKZ_ADLVR_SupSummNDS 
, 
 PEKZ_ADLVR.AutoSuplier  
PEKZ_ADLVR_AutoSuplier_ID, 
 Func.INSTANCE_BRIEF_F(PEKZ_ADLVR.AutoSuplier) 
PEKZ_ADLVR_AutoSuplier 
, 
PEKZ_ADLVR.TheAddress 
PEKZ_ADLVR_TheAddress 
, 
PEKZ_ADLVR.SummNDS 
PEKZ_ADLVR_SummNDS 
, 
PEKZ_ADLVR.TheLength 
PEKZ_ADLVR_TheLength 
, 
PEKZ_ADLVR.Phone 
PEKZ_ADLVR_Phone 
, 
PEKZ_ADLVR.TheDuration 
PEKZ_ADLVR_TheDuration 
, 
PEKZ_ADLVR.CollectTimeTo 
PEKZ_ADLVR_CollectTimeTo 
, 
PEKZ_ADLVR.TheComment 
PEKZ_ADLVR_TheComment 
, PEKZ_ADLVR.InstanceID InstanceID 
, PEKZ_ADLVR.PEKZ_ADLVRID ID 
, 'PEKZ_ADLVR' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKZ_ADLVR
 join INSTANCE on PEKZ_ADLVR.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOpekz_dop as 
select   pekz_dopID
, 
pekz_dop.sequence 
pekz_dop_sequence 
, 
pekz_dop.TRF 
pekz_dop_TRF 
, 
pekz_dop.Quantity 
pekz_dop_Quantity 
, 
 pekz_dop.PathFilial  
pekz_dop_PathFilial_ID, 
 Func.PEKD_DEPT_BRIEF_F(pekz_dop.PathFilial) 
pekz_dop_PathFilial 
, 
pekz_dop.SupTRF 
pekz_dop_SupTRF 
, 
pekz_dop.TheComment 
pekz_dop_TheComment 
, 
pekz_dop.Summ 
pekz_dop_Summ 
, 
 pekz_dop.DopSupplier  
pekz_dop_DopSupplier_ID, 
 Func.INSTANCE_BRIEF_F(pekz_dop.DopSupplier) 
pekz_dop_DopSupplier 
, 
 pekz_dop.EDIZM  
pekz_dop_EDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(pekz_dop.EDIZM) 
pekz_dop_EDIZM 
, 
pekz_dop.SummNDS 
pekz_dop_SummNDS 
, 
pekz_dop.SupSummNDS 
pekz_dop_SupSummNDS 
, 
 pekz_dop.TheCurrency  
pekz_dop_TheCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(pekz_dop.TheCurrency) 
pekz_dop_TheCurrency 
, 
pekz_dop.SupSumm 
pekz_dop_SupSumm 
, 
 pekz_dop.SRV  
pekz_dop_SRV_ID, 
 Func.PEKD_SRV_BRIEF_F(pekz_dop.SRV) 
pekz_dop_SRV 
, pekz_dop.InstanceID InstanceID 
, pekz_dop.pekz_dopID ID 
, 'pekz_dop' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from pekz_dop
 join INSTANCE on pekz_dop.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOREPD_LOCKED as 
select   REPD_LOCKEDID
, 
REPD_LOCKED.LastTry 
REPD_LOCKED_LastTry 
, 
REPD_LOCKED.SourceFile 
REPD_LOCKED_SourceFile 
, 
REPD_LOCKED.FirstTry 
REPD_LOCKED_FirstTry 
, 
REPD_LOCKED.ObjectType 
REPD_LOCKED_ObjectType 
, 
REPD_LOCKED.PartCount 
REPD_LOCKED_PartCount 
, 
REPD_LOCKED.StructType 
REPD_LOCKED_StructType 
, 
REPD_LOCKED.ReplicaPackID 
REPD_LOCKED_ReplicaPackID 
, 
REPD_LOCKED.The_InstanceID 
REPD_LOCKED_The_InstanceID 
, 
REPD_LOCKED.The_RowID 
REPD_LOCKED_The_RowID 
, 
REPD_LOCKED.PartNumber 
REPD_LOCKED_PartNumber 
, 
REPD_LOCKED.ReplicaRowID 
REPD_LOCKED_ReplicaRowID 
, REPD_LOCKED.InstanceID InstanceID 
, REPD_LOCKED.REPD_LOCKEDID ID 
, 'REPD_LOCKED' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_LOCKED
 join INSTANCE on REPD_LOCKED.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOREPD_RequestQuery as 
select   REPD_RequestQueryID
, 
 REPD_RequestQuery.DestSrv  
REPD_RequestQuery_DestSrv_ID, 
 Func.REPD_SRV_BRIEF_F(REPD_RequestQuery.DestSrv) 
REPD_RequestQuery_DestSrv 
, 
 REPD_RequestQuery.Provider  
REPD_RequestQuery_Provider_ID, 
 Func.REPD_PROV_BRIEF_F(REPD_RequestQuery.Provider) 
REPD_RequestQuery_Provider 
, 
REPD_RequestQuery.ReqTypeName 
REPD_RequestQuery_ReqTypeName 
, 
 REPD_RequestQuery.SourceSrv  
REPD_RequestQuery_SourceSrv_ID, 
 Func.REPD_SRV_BRIEF_F(REPD_RequestQuery.SourceSrv) 
REPD_RequestQuery_SourceSrv 
, 
REPD_RequestQuery.ObjectID 
REPD_RequestQuery_ObjectID 
, 
REPD_RequestQuery.TheRowID 
REPD_RequestQuery_TheRowID 
, 
REPD_RequestQuery.ReqPartName 
REPD_RequestQuery_ReqPartName 
, 
 REPD_RequestQuery.SendRecord  
REPD_RequestQuery_SendRecord_ID, 
 Func.REPD_SendQ_BRIEF_F(REPD_RequestQuery.SendRecord) 
REPD_RequestQuery_SendRecord 
, REPD_RequestQuery.InstanceID InstanceID 
, REPD_RequestQuery.REPD_RequestQueryID ID 
, 'REPD_RequestQuery' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_RequestQuery
 join INSTANCE on REPD_RequestQuery.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOREPD_ResQueryRcv as 
select   REPD_ResQueryRcvID,REPD_RequestQueryID
, 
 REPD_ResQueryRcv.ReceiveRec  
REPD_ResQueryRcv_ReceiveRec_ID, 
 Func.REPD_RecvQ_BRIEF_F(REPD_ResQueryRcv.ReceiveRec) 
REPD_ResQueryRcv_ReceiveRec 
, REPD_RequestQuery.InstanceID InstanceID 
, REPD_ResQueryRcv.REPD_ResQueryRcvID ID 
, 'REPD_ResQueryRcv' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_ResQueryRcv
 join REPD_RequestQuery on REPD_RequestQuery.REPD_RequestQueryID=REPD_ResQueryRcv.ParentStructRowID 
 join INSTANCE on REPD_RequestQuery.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOREPD_PROV as 
select   REPD_PROVID
, 
REPD_PROV.Name 
REPD_PROV_Name 
, 
REPD_PROV.AssemblyName 
REPD_PROV_AssemblyName 
, 
REPD_PROV.ClassName 
REPD_PROV_ClassName 
, REPD_PROV.InstanceID InstanceID 
, REPD_PROV.REPD_PROVID ID 
, 'REPD_PROV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_PROV
 join INSTANCE on REPD_PROV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOREPD_SRV as 
select   REPD_SRVID
, 
 REPD_SRV.Obj1  
REPD_SRV_Obj1_ID, 
 Func.INSTANCE_BRIEF_F(REPD_SRV.Obj1) 
REPD_SRV_Obj1 
, 
 REPD_SRV.Obj2  
REPD_SRV_Obj2_ID, 
 Func.INSTANCE_BRIEF_F(REPD_SRV.Obj2) 
REPD_SRV_Obj2 
, 
 REPD_SRV.Obj3  
REPD_SRV_Obj3_ID, 
 Func.INSTANCE_BRIEF_F(REPD_SRV.Obj3) 
REPD_SRV_Obj3 
, 
REPD_SRV.name 
REPD_SRV_name 
, REPD_SRV.InstanceID InstanceID 
, REPD_SRV.REPD_SRVID ID 
, 'REPD_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_SRV
 join INSTANCE on REPD_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOREPD_SNDTO as 
select   REPD_SNDTOID,REPD_SRVID
, 
REPD_SNDTO.LastReceive 
REPD_SNDTO_LastReceive 
, 
 REPD_SNDTO.Provider  
REPD_SNDTO_Provider_ID, 
 Func.REPD_PROV_BRIEF_F(REPD_SNDTO.Provider) 
REPD_SNDTO_Provider 
, 
REPD_SNDTO.Config 
REPD_SNDTO_Config 
, 
REPD_SNDTO.LastScan 
REPD_SNDTO_LastScan 
, 
REPD_SNDTO.The_Interval 
REPD_SNDTO_The_Interval 
, 
REPD_SNDTO.Work_Start 
REPD_SNDTO_Work_Start 
, 
REPD_SNDTO.Work_End 
REPD_SNDTO_Work_End 
, 
 REPD_SNDTO.DestSrv  
REPD_SNDTO_DestSrv_ID, 
 Func.REPD_SRV_BRIEF_F(REPD_SNDTO.DestSrv) 
REPD_SNDTO_DestSrv 
, REPD_SRV.InstanceID InstanceID 
, REPD_SNDTO.REPD_SNDTOID ID 
, 'REPD_SNDTO' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_SNDTO
 join REPD_SRV on REPD_SRV.REPD_SRVID=REPD_SNDTO.ParentStructRowID 
 join INSTANCE on REPD_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOREPD_CONST as 
select   REPD_CONSTID,REPD_SNDTOID,REPD_SRVID
, 
REPD_CONST.TheValue 
REPD_CONST_TheValue 
, 
REPD_CONST.Name 
REPD_CONST_Name 
, REPD_SRV.InstanceID InstanceID 
, REPD_CONST.REPD_CONSTID ID 
, 'REPD_CONST' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_CONST
 join REPD_SNDTO on REPD_SNDTO.REPD_SNDTOID=REPD_CONST.ParentStructRowID 
 join REPD_SRV on REPD_SRV.REPD_SRVID=REPD_SNDTO.ParentStructRowID 
 join INSTANCE on REPD_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOREPD_REPTYPE as 
select   REPD_REPTYPEID,REPD_SNDTOID,REPD_SRVID
, 
 REPD_REPTYPE.ReplicaType  
REPD_REPTYPE_ReplicaType_VAL, 
 decode(REPD_REPTYPE.ReplicaType 
, 0 ,'Весь документ'
, 2 ,'Локальный'
, 1 ,'Построчно'
, '???') 
REPD_REPTYPE_ReplicaType 
, 
 REPD_REPTYPE.TheObjectType  
REPD_REPTYPE_TheObjectType_ID, 
 Func.OBJECTTYPE_BRIEF_F(REPD_REPTYPE.TheObjectType) 
REPD_REPTYPE_TheObjectType 
, 
 REPD_REPTYPE.UseFilter  
REPD_REPTYPE_UseFilter_VAL, 
 decode(REPD_REPTYPE.UseFilter 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
REPD_REPTYPE_UseFilter 
, 
REPD_REPTYPE.RepConditonQRY 
REPD_REPTYPE_RepConditonQRY 
, REPD_SRV.InstanceID InstanceID 
, REPD_REPTYPE.REPD_REPTYPEID ID 
, 'REPD_REPTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_REPTYPE
 join REPD_SNDTO on REPD_SNDTO.REPD_SNDTOID=REPD_REPTYPE.ParentStructRowID 
 join REPD_SRV on REPD_SRV.REPD_SRVID=REPD_SNDTO.ParentStructRowID 
 join INSTANCE on REPD_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOREPD_SendQ as 
select   REPD_SendQID
, 
REPD_SendQ.PartNumber 
REPD_SendQ_PartNumber 
, 
REPD_SendQ.FileName 
REPD_SendQ_FileName 
, 
REPD_SendQ.ReplicatorPointer 
REPD_SendQ_ReplicatorPointer 
, 
REPD_SendQ.SentDate 
REPD_SendQ_SentDate 
, 
REPD_SendQ.SendSize 
REPD_SendQ_SendSize 
, 
REPD_SendQ.ReplicaPackID 
REPD_SendQ_ReplicaPackID 
, 
 REPD_SendQ.DestSrv  
REPD_SendQ_DestSrv_ID, 
 Func.REPD_SRV_BRIEF_F(REPD_SendQ.DestSrv) 
REPD_SendQ_DestSrv 
, 
 REPD_SendQ.Acknowelge  
REPD_SendQ_Acknowelge_VAL, 
 decode(REPD_SendQ.Acknowelge 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
REPD_SendQ_Acknowelge 
, 
REPD_SendQ.CheckDate 
REPD_SendQ_CheckDate 
, 
 REPD_SendQ.Sent  
REPD_SendQ_Sent_VAL, 
 decode(REPD_SendQ.Sent 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
REPD_SendQ_Sent 
, 
REPD_SendQ.Config 
REPD_SendQ_Config 
, 
 REPD_SendQ.Provider  
REPD_SendQ_Provider_ID, 
 Func.REPD_PROV_BRIEF_F(REPD_SendQ.Provider) 
REPD_SendQ_Provider 
, 
REPD_SendQ.PartCount 
REPD_SendQ_PartCount 
, 
 REPD_SendQ.SourceSrv  
REPD_SendQ_SourceSrv_ID, 
 Func.REPD_SRV_BRIEF_F(REPD_SendQ.SourceSrv) 
REPD_SendQ_SourceSrv 
, REPD_SendQ.InstanceID InstanceID 
, REPD_SendQ.REPD_SendQID ID 
, 'REPD_SendQ' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_SendQ
 join INSTANCE on REPD_SendQ.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOREPD_RecvQ as 
select   REPD_RecvQID
, 
REPD_RecvQ.PartCount 
REPD_RecvQ_PartCount 
, 
REPD_RecvQ.ReplicaPackID 
REPD_RecvQ_ReplicaPackID 
, 
REPD_RecvQ.TheRowID 
REPD_RecvQ_TheRowID 
, 
 REPD_RecvQ.Acknowelge  
REPD_RecvQ_Acknowelge_VAL, 
 decode(REPD_RecvQ.Acknowelge 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
REPD_RecvQ_Acknowelge 
, 
REPD_RecvQ.FileName 
REPD_RecvQ_FileName 
, 
 REPD_RecvQ.Completed  
REPD_RecvQ_Completed_VAL, 
 decode(REPD_RecvQ.Completed 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
REPD_RecvQ_Completed 
, 
REPD_RecvQ.PartNumber 
REPD_RecvQ_PartNumber 
, 
REPD_RecvQ.RecvSize 
REPD_RecvQ_RecvSize 
, 
 REPD_RecvQ.SourceSrv  
REPD_RecvQ_SourceSrv_ID, 
 Func.REPD_SRV_BRIEF_F(REPD_RecvQ.SourceSrv) 
REPD_RecvQ_SourceSrv 
, 
 REPD_RecvQ.Provider  
REPD_RecvQ_Provider_ID, 
 Func.REPD_PROV_BRIEF_F(REPD_RecvQ.Provider) 
REPD_RecvQ_Provider 
, 
 REPD_RecvQ.DestSrv  
REPD_RecvQ_DestSrv_ID, 
 Func.REPD_SRV_BRIEF_F(REPD_RecvQ.DestSrv) 
REPD_RecvQ_DestSrv 
, 
REPD_RecvQ.Received 
REPD_RecvQ_Received 
, REPD_RecvQ.InstanceID InstanceID 
, REPD_RecvQ.REPD_RecvQID ID 
, 'REPD_RecvQ' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_RecvQ
 join INSTANCE on REPD_RecvQ.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOStateAction as 
select   StateActionID
, 
 StateAction.OnDocStatus  
StateAction_OnDocStatus_ID, 
 Func.OBJSTATUS_BRIEF_F(StateAction.OnDocStatus) 
StateAction_OnDocStatus 
, 
 StateAction.NewSecurityStyle  
StateAction_NewSecurityStyle_ID, 
 Func.INSTANCE_BRIEF_F(StateAction.NewSecurityStyle) 
StateAction_NewSecurityStyle 
, 
StateAction.ActionScript 
StateAction_ActionScript 
, 
StateAction.ActionClass 
StateAction_ActionClass 
, 
StateAction.LibraryFile 
StateAction_LibraryFile 
, 
 StateAction.ClearSecurity  
StateAction_ClearSecurity_VAL, 
 decode(StateAction.ClearSecurity 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
StateAction_ClearSecurity 
, StateAction.InstanceID InstanceID 
, StateAction.StateActionID ID 
, 'StateAction' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from StateAction
 join INSTANCE on StateAction.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOTheDiffPath as 
select   TheDiffPathID
, 
 TheDiffPath.Transporter  
TheDiffPath_Transporter_ID, 
 Func.INSTANCE_BRIEF_F(TheDiffPath.Transporter) 
TheDiffPath_Transporter 
, 
 TheDiffPath.TempDirStation  
TheDiffPath_TempDirStation_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(TheDiffPath.TempDirStation) 
TheDiffPath_TempDirStation 
, 
 TheDiffPath.Direction  
TheDiffPath_Direction_ID, 
 Func.PEKD_DIRECTION_BRIEF_F(TheDiffPath.Direction) 
TheDiffPath_Direction 
, 
 TheDiffPath.Transport  
TheDiffPath_Transport_ID, 
 Func.ENTDIC_TransportType_BRIEF_F(TheDiffPath.Transport) 
TheDiffPath_Transport 
, 
TheDiffPath.TheNumber 
TheDiffPath_TheNumber 
, 
 TheDiffPath.TempTownFrom  
TheDiffPath_TempTownFrom_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(TheDiffPath.TempTownFrom) 
TheDiffPath_TempTownFrom 
, TheDiffPath.InstanceID InstanceID 
, TheDiffPath.TheDiffPathID ID 
, 'TheDiffPath' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from TheDiffPath
 join INSTANCE on TheDiffPath.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewDifficultPath_TheDiffPath as 
select   TheDiffPathID
, 
TheDefenitionDiffP.TheComment 
TheDefenitionDiffP_TheComment 
, 
 TheDiffPath.TempDirStation  
TheDiffPath_TempDirStation_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(TheDiffPath.TempDirStation) 
TheDiffPath_TempDirStation 
, 
 TheDefenitionDiffP.DirStation  
TheDefenitionDiffP_DirStation_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(TheDefenitionDiffP.DirStation) 
TheDefenitionDiffP_DirStation 
, 
 TheDiffPath.TempTownFrom  
TheDiffPath_TempTownFrom_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(TheDiffPath.TempTownFrom) 
TheDiffPath_TempTownFrom 
, 
TheDefenitionDiffP.TheNumeric 
TheDefenitionDiffP_TheNumeric 
, 
 TheDiffPath.Transport  
TheDiffPath_Transport_ID, 
 Func.ENTDIC_TransportType_BRIEF_F(TheDiffPath.Transport) 
TheDiffPath_Transport 
, 
TheDiffPath.TheNumber 
TheDiffPath_TheNumber 
, 
 TheDiffPath.Direction  
TheDiffPath_Direction_ID, 
 Func.PEKD_DIRECTION_BRIEF_F(TheDiffPath.Direction) 
TheDiffPath_Direction 
, 
 TheDefenitionDiffP.TownFrom  
TheDefenitionDiffP_TownFrom_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(TheDefenitionDiffP.TownFrom) 
TheDefenitionDiffP_TownFrom 
, 
 TheDiffPath.Transporter  
TheDiffPath_Transporter_ID, 
 Func.INSTANCE_BRIEF_F(TheDiffPath.Transporter) 
TheDiffPath_Transporter 
, 
TheDefenitionDiffP.CountParticles 
TheDefenitionDiffP_CountParticles 
, TheDiffPath.InstanceID InstanceID 
, TheDiffPath.TheDiffPathID ID 
, 'TheDiffPath' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from TheDiffPath
 join INSTANCE on TheDiffPath.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join TheDefenitionDiffP ON TheDefenitionDiffP.InstanceID=TheDiffPath.InstanceID 
;
create or replace view V_AUTODopUslTo as 
select   DopUslToID,TheDiffPathID
, 
 DopUslTo.DopUsluga  
DopUslTo_DopUsluga_ID, 
 Func.PEKD_SRV_BRIEF_F(DopUslTo.DopUsluga) 
DopUslTo_DopUsluga 
, TheDiffPath.InstanceID InstanceID 
, DopUslTo.DopUslToID ID 
, 'DopUslTo' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from DopUslTo
 join TheDiffPath on TheDiffPath.TheDiffPathID=DopUslTo.ParentStructRowID 
 join INSTANCE on TheDiffPath.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTODopUslFrom as 
select   DopUslFromID,TheDiffPathID
, 
 DopUslFrom.DopUsluga  
DopUslFrom_DopUsluga_ID, 
 Func.PEKD_SRV_BRIEF_F(DopUslFrom.DopUsluga) 
DopUslFrom_DopUsluga 
, TheDiffPath.InstanceID InstanceID 
, DopUslFrom.DopUslFromID ID 
, 'DopUslFrom' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from DopUslFrom
 join TheDiffPath on TheDiffPath.TheDiffPathID=DopUslFrom.ParentStructRowID 
 join INSTANCE on TheDiffPath.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOTheDefenitionDiffP as 
select   TheDefenitionDiffPID
, 
TheDefenitionDiffP.TheComment 
TheDefenitionDiffP_TheComment 
, 
TheDefenitionDiffP.TheNumeric 
TheDefenitionDiffP_TheNumeric 
, 
 TheDefenitionDiffP.DirStation  
TheDefenitionDiffP_DirStation_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(TheDefenitionDiffP.DirStation) 
TheDefenitionDiffP_DirStation 
, 
 TheDefenitionDiffP.TownFrom  
TheDefenitionDiffP_TownFrom_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(TheDefenitionDiffP.TownFrom) 
TheDefenitionDiffP_TownFrom 
, 
TheDefenitionDiffP.CountParticles 
TheDefenitionDiffP_CountParticles 
, TheDefenitionDiffP.InstanceID InstanceID 
, TheDefenitionDiffP.TheDefenitionDiffPID ID 
, 'TheDefenitionDiffP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from TheDefenitionDiffP
 join INSTANCE on TheDefenitionDiffP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewDifficultPath_TheDefenitionDiffP as 
select   TheDefenitionDiffPID
, 
TheDefenitionDiffP.TheComment 
TheDefenitionDiffP_TheComment 
, 
 TheDefenitionDiffP.TownFrom  
TheDefenitionDiffP_TownFrom_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(TheDefenitionDiffP.TownFrom) 
TheDefenitionDiffP_TownFrom 
, 
 TheDefenitionDiffP.DirStation  
TheDefenitionDiffP_DirStation_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(TheDefenitionDiffP.DirStation) 
TheDefenitionDiffP_DirStation 
, 
TheDefenitionDiffP.TheNumeric 
TheDefenitionDiffP_TheNumeric 
, TheDefenitionDiffP.InstanceID InstanceID 
, TheDefenitionDiffP.TheDefenitionDiffPID ID 
, 'TheDefenitionDiffP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from TheDefenitionDiffP
 join INSTANCE on TheDefenitionDiffP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKAKT_CONTROLLIST as 
select   PEKACT_DEFID
, 
PEKACT_DEF.FIO 
PEKACT_DEF_FIO 
, 
PEKACT_DEF.Date_FROM 
PEKACT_DEF_Date_FROM 
, 
PEKACT_DEF.dateCreate 
PEKACT_DEF_dateCreate 
, 
PEKACT_DEF.dateSend 
PEKACT_DEF_dateSend 
, 
 PEKACT_DEF.Podrazdelenie  
PEKACT_DEF_Podrazdelenie_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKACT_DEF.Podrazdelenie) 
PEKACT_DEF_Podrazdelenie 
, 
PEKACT_DEF.Number_of_akt 
PEKACT_DEF_Number_of_akt 
, 
 PEKACT_DEF.TheDgovor  
PEKACT_DEF_TheDgovor_ID, 
 Func.INSTANCE_BRIEF_F(PEKACT_DEF.TheDgovor) 
PEKACT_DEF_TheDgovor 
, 
PEKACT_DEF.dateReceive 
PEKACT_DEF_dateReceive 
, 
PEKACT_DEF.Date_TO 
PEKACT_DEF_Date_TO 
, 
 PEKACT_DEF.Client  
PEKACT_DEF_Client_ID, 
 Func.INSTANCE_BRIEF_F(PEKACT_DEF.Client) 
PEKACT_DEF_Client 
, PEKACT_DEF.InstanceID InstanceID 
, PEKACT_DEF.PEKACT_DEFID ID 
, 'PEKACT_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKACT_DEF
 join INSTANCE on PEKACT_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKAKT_PEKACT_DEF as 
select   PEKACT_DEFID
, 
 PEKACT_DEF.Client  
PEKACT_DEF_Client_ID, 
 Func.INSTANCE_BRIEF_F(PEKACT_DEF.Client) 
PEKACT_DEF_Client 
, 
PEKACT_DEF.Number_of_akt 
PEKACT_DEF_Number_of_akt 
, 
PEKACT_DEF.Date_TO 
PEKACT_DEF_Date_TO 
, 
PEKACT_DEF.Date_FROM 
PEKACT_DEF_Date_FROM 
, 
 PEKACT_DEF.Podrazdelenie  
PEKACT_DEF_Podrazdelenie_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKACT_DEF.Podrazdelenie) 
PEKACT_DEF_Podrazdelenie 
, PEKACT_DEF.InstanceID InstanceID 
, PEKACT_DEF.PEKACT_DEFID ID 
, 'PEKACT_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKACT_DEF
 join INSTANCE on PEKACT_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKACT_DEF as 
select   PEKACT_DEFID
, 
PEKACT_DEF.Code1C 
PEKACT_DEF_Code1C 
, 
PEKACT_DEF.dateReceive 
PEKACT_DEF_dateReceive 
, 
PEKACT_DEF.Number_of_akt 
PEKACT_DEF_Number_of_akt 
, 
 PEKACT_DEF.TheDgovor  
PEKACT_DEF_TheDgovor_ID, 
 Func.INSTANCE_BRIEF_F(PEKACT_DEF.TheDgovor) 
PEKACT_DEF_TheDgovor 
, 
PEKACT_DEF.FIO 
PEKACT_DEF_FIO 
, 
PEKACT_DEF.dateSend 
PEKACT_DEF_dateSend 
, 
 PEKACT_DEF.Client  
PEKACT_DEF_Client_ID, 
 Func.INSTANCE_BRIEF_F(PEKACT_DEF.Client) 
PEKACT_DEF_Client 
, 
PEKACT_DEF.dateCreate 
PEKACT_DEF_dateCreate 
, 
PEKACT_DEF.Date_TO 
PEKACT_DEF_Date_TO 
, 
 PEKACT_DEF.Podrazdelenie  
PEKACT_DEF_Podrazdelenie_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKACT_DEF.Podrazdelenie) 
PEKACT_DEF_Podrazdelenie 
, 
PEKACT_DEF.Date_FROM 
PEKACT_DEF_Date_FROM 
, PEKACT_DEF.InstanceID InstanceID 
, PEKACT_DEF.PEKACT_DEFID ID 
, 'PEKACT_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKACT_DEF
 join INSTANCE on PEKACT_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKAKT_PEKACT_ITOG as 
select   PEKACT_ITOGID
, 
PEKACT_DEF.Date_TO 
PEKACT_DEF_Date_TO 
, 
PEKACT_DEF.Date_FROM 
PEKACT_DEF_Date_FROM 
, 
PEKACT_ITOG.SupSUMM 
PEKACT_ITOG_SupSUMM 
, 
PEKACT_DEF.Number_of_akt 
PEKACT_DEF_Number_of_akt 
, 
 PEKACT_DEF.Podrazdelenie  
PEKACT_DEF_Podrazdelenie_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKACT_DEF.Podrazdelenie) 
PEKACT_DEF_Podrazdelenie 
, 
 PEKACT_DEF.Client  
PEKACT_DEF_Client_ID, 
 Func.INSTANCE_BRIEF_F(PEKACT_DEF.Client) 
PEKACT_DEF_Client 
, 
 PEKACT_ITOG.SRV  
PEKACT_ITOG_SRV_ID, 
 Func.PEKD_SRV_BRIEF_F(PEKACT_ITOG.SRV) 
PEKACT_ITOG_SRV 
, 
PEKACT_ITOG.SummNDS 
PEKACT_ITOG_SummNDS 
, 
PEKACT_ITOG.Summ 
PEKACT_ITOG_Summ 
, 
PEKACT_ITOG.SupSummNDS 
PEKACT_ITOG_SupSummNDS 
, PEKACT_ITOG.InstanceID InstanceID 
, PEKACT_ITOG.PEKACT_ITOGID ID 
, 'PEKACT_ITOG' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKACT_ITOG
 join INSTANCE on PEKACT_ITOG.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join PEKACT_DEF ON PEKACT_DEF.InstanceID=PEKACT_ITOG.InstanceID 
;
create or replace view V_AUTOPEKACT_ITOG as 
select   PEKACT_ITOGID
, 
PEKACT_ITOG.Quantity 
PEKACT_ITOG_Quantity 
, 
PEKACT_ITOG.SummNDS 
PEKACT_ITOG_SummNDS 
, 
PEKACT_ITOG.SupSUMM 
PEKACT_ITOG_SupSUMM 
, 
PEKACT_ITOG.SupSummNDS 
PEKACT_ITOG_SupSummNDS 
, 
 PEKACT_ITOG.edizm  
PEKACT_ITOG_edizm_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKACT_ITOG.edizm) 
PEKACT_ITOG_edizm 
, 
 PEKACT_ITOG.SRV  
PEKACT_ITOG_SRV_ID, 
 Func.PEKD_SRV_BRIEF_F(PEKACT_ITOG.SRV) 
PEKACT_ITOG_SRV 
, 
PEKACT_ITOG.Summ 
PEKACT_ITOG_Summ 
, PEKACT_ITOG.InstanceID InstanceID 
, PEKACT_ITOG.PEKACT_ITOGID ID 
, 'PEKACT_ITOG' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKACT_ITOG
 join INSTANCE on PEKACT_ITOG.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKACT_LINES as 
select   PEKACT_LINESID
, 
 PEKACT_LINES.Zayavka  
PEKACT_LINES_Zayavka_ID, 
 Func.INSTANCE_BRIEF_F(PEKACT_LINES.Zayavka) 
PEKACT_LINES_Zayavka 
, PEKACT_LINES.InstanceID InstanceID 
, PEKACT_LINES.PEKACT_LINESID ID 
, 'PEKACT_LINES' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKACT_LINES
 join INSTANCE on PEKACT_LINES.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindFieldType as 
select   FIELDTYPEID
, 
 FIELDTYPE.TypeStyle  
FIELDTYPE_TypeStyle_VAL, 
 decode(FIELDTYPE.TypeStyle 
, 3 ,'Интервал'
, 0 ,'Скалярный тип'
, 4 ,'Ссылка'
, 2 ,'Перечисление'
, 1 ,'Выражение'
, 5 ,'Элемент оформления'
, '???') 
FIELDTYPE_TypeStyle 
, 
FIELDTYPE.Name 
FIELDTYPE_Name 
, 
FIELDTYPE.the_Comment 
FIELDTYPE_Comment 
, FIELDTYPE.InstanceID InstanceID 
, FIELDTYPE.FIELDTYPEID ID 
, 'FIELDTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELDTYPE
 join INSTANCE on FIELDTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindMethod as 
select   SHAREDMETHODID
, 
SHAREDMETHOD.Name 
SHAREDMETHOD_Name 
, 
SHAREDMETHOD.the_Comment 
SHAREDMETHOD_Comment 
, SHAREDMETHOD.InstanceID InstanceID 
, SHAREDMETHOD.SHAREDMETHODID ID 
, 'SHAREDMETHOD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from SHAREDMETHOD
 join INSTANCE on SHAREDMETHOD.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindOBJECTTYPE as 
select   OBJECTTYPEID
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_Comment 
, 
 OBJECTTYPE.Package  
OBJECTTYPE_Package_ID, 
 Func.MTZAPP_BRIEF_F(OBJECTTYPE.Package) 
OBJECTTYPE_Package 
, 
OBJECTTYPE.Name 
OBJECTTYPE_Name 
, OBJECTTYPE.InstanceID InstanceID 
, OBJECTTYPE.OBJECTTYPEID ID 
, 'OBJECTTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from OBJECTTYPE
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindPart as 
select   PARTID,OBJECTTYPEID
, 
OBJECTTYPE.Name 
OBJECTTYPE_Name 
, 
PART.Caption 
PART_Caption 
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_Comment 
, 
PART.the_Comment 
PART_Comment 
, 
PART.Name 
PART_Name 
, OBJECTTYPE.InstanceID InstanceID 
, PART.PARTID ID 
, 'PART' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PART
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindPARTMENU as 
select   PARTMENUID,PARTID,OBJECTTYPEID
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_Comment 
, 
PARTMENU.Name 
PARTMENU_Name 
, 
PART.the_Comment 
PART_Comment 
, OBJECTTYPE.InstanceID InstanceID 
, PARTMENU.PARTMENUID ID 
, 'PARTMENU' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PARTMENU
 join PART on PART.PARTID=PARTMENU.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindField as 
select   FIELDID,PARTID,OBJECTTYPEID
, 
FIELD.Name 
FIELD_Name 
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_Comment 
, 
FIELD.Caption 
FIELD_Caption 
, 
PART.the_Comment 
PART_Comment 
, OBJECTTYPE.InstanceID InstanceID 
, FIELD.FIELDID ID 
, 'FIELD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELD
 join PART on PART.PARTID=FIELD.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewMTZMetaModel_OBJECTMODE as 
select   OBJECTMODEID,OBJECTTYPEID
, 
 OBJECTTYPE.AllowSearch  
OBJECTTYPE_AllowSearch_VAL, 
 decode(OBJECTTYPE.AllowSearch 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTTYPE_AllowSearch 
, 
 OBJECTTYPE.ReplicaType  
OBJECTTYPE_ReplicaType_VAL, 
 decode(OBJECTTYPE.ReplicaType 
, 0 ,'Весь документ'
, 2 ,'Локальный'
, 1 ,'Построчно'
, '???') 
OBJECTTYPE_ReplicaType 
, 
 OBJECTTYPE.Package  
OBJECTTYPE_Package_ID, 
 Func.MTZAPP_BRIEF_F(OBJECTTYPE.Package) 
OBJECTTYPE_Package 
, 
 OBJECTMODE.DefaultMode  
OBJECTMODE_DefaultMode_VAL, 
 decode(OBJECTMODE.DefaultMode 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTMODE_DefaultMode 
, 
 OBJECTTYPE.IsSingleInstance  
OBJECTTYPE_IsSingleInstance_VAL, 
 decode(OBJECTTYPE.IsSingleInstance 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTTYPE_IsSingleInstance 
, 
 OBJECTTYPE.OnRun  
OBJECTTYPE_OnRun_ID, 
 Func.TYPEMENU_BRIEF_F(OBJECTTYPE.OnRun) 
OBJECTTYPE_OnRun 
, 
 OBJECTTYPE.ChooseView  
OBJECTTYPE_ChooseView_ID, 
 Func.PARTVIEW_BRIEF_F(OBJECTTYPE.ChooseView) 
OBJECTTYPE_ChooseView 
, 
 OBJECTTYPE.OnDelete  
OBJECTTYPE_OnDelete_ID, 
 Func.TYPEMENU_BRIEF_F(OBJECTTYPE.OnDelete) 
OBJECTTYPE_OnDelete 
, 
OBJECTMODE.Name 
OBJECTMODE_Name 
, 
 OBJECTTYPE.OnCreate  
OBJECTTYPE_OnCreate_ID, 
 Func.TYPEMENU_BRIEF_F(OBJECTTYPE.OnCreate) 
OBJECTTYPE_OnCreate 
, 
 OBJECTTYPE.AllowRefToObject  
OBJECTTYPE_AllowRefToObject_VAL, 
 decode(OBJECTTYPE.AllowRefToObject 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTTYPE_AllowRefToObject 
, 
OBJECTTYPE.Name 
OBJECTTYPE_Name 
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_the_Comment 
, OBJECTTYPE.InstanceID InstanceID 
, OBJECTMODE.OBJECTMODEID ID 
, 'OBJECTMODE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from OBJECTMODE
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=OBJECTMODE.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindTYPEMENU as 
select   TYPEMENUID,OBJECTTYPEID
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_Comment 
, 
TYPEMENU.Name 
TYPEMENU_Name 
, OBJECTTYPE.InstanceID InstanceID 
, TYPEMENU.TYPEMENUID ID 
, 'TYPEMENU' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from TYPEMENU
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=TYPEMENU.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindMTZAPP as 
select   MTZAPPID
, 
MTZAPP.Name 
MTZAPP_Name 
, MTZAPP.InstanceID InstanceID 
, MTZAPP.MTZAPPID ID 
, 'MTZAPP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZAPP
 join INSTANCE on MTZAPP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindGENPACKAGE as 
select   GENPACKAGEID
, 
GENPACKAGE.Name 
GENPACKAGE_Name 
, GENPACKAGE.InstanceID InstanceID 
, GENPACKAGE.GENPACKAGEID ID 
, 'GENPACKAGE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GENPACKAGE
 join INSTANCE on GENPACKAGE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindGENERATOR_TARGET as 
select   GENERATOR_TARGETID,GENPACKAGEID
, 
GENERATOR_TARGET.Name 
GENERATOR_TARGET_Name 
, 
GENPACKAGE.Name 
GENPACKAGE_Name 
, GENPACKAGE.InstanceID InstanceID 
, GENERATOR_TARGET.GENERATOR_TARGETID ID 
, 'GENERATOR_TARGET' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GENERATOR_TARGET
 join GENPACKAGE on GENPACKAGE.GENPACKAGEID=GENERATOR_TARGET.ParentStructRowID 
 join INSTANCE on GENPACKAGE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKPQ_PEKPQ_DEF as 
select   PEKPQ_DEFID
, 
PEKPQ_DEF.TheDate 
PEKPQ_DEF_TheDate 
, 
PEKPQ_DEF.TheComment 
PEKPQ_DEF_TheComment 
, 
 PEKPQ_DEF.TheDept  
PEKPQ_DEF_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKPQ_DEF.TheDept) 
PEKPQ_DEF_TheDept 
, 
 PEKPQ_DEF.ToSuplier  
PEKPQ_DEF_ToSuplier_ID, 
 Func.INSTANCE_BRIEF_F(PEKPQ_DEF.ToSuplier) 
PEKPQ_DEF_ToSuplier 
, 
PEKPQ_DEF.TheSumm 
PEKPQ_DEF_TheSumm 
, 
PEKPQ_DEF.sequence 
PEKPQ_DEF_sequence 
, PEKPQ_DEF.InstanceID InstanceID 
, PEKPQ_DEF.PEKPQ_DEFID ID 
, 'PEKPQ_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKPQ_DEF
 join INSTANCE on PEKPQ_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKPQ_DEF as 
select   PEKPQ_DEFID
, 
 PEKPQ_DEF.TheDogovor  
PEKPQ_DEF_TheDogovor_ID, 
 Func.INSTANCE_BRIEF_F(PEKPQ_DEF.TheDogovor) 
PEKPQ_DEF_TheDogovor 
, 
 PEKPQ_DEF.TheDept  
PEKPQ_DEF_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKPQ_DEF.TheDept) 
PEKPQ_DEF_TheDept 
, 
PEKPQ_DEF.TheComment 
PEKPQ_DEF_TheComment 
, 
PEKPQ_DEF.Code1C 
PEKPQ_DEF_Code1C 
, 
PEKPQ_DEF.sequence 
PEKPQ_DEF_sequence 
, 
PEKPQ_DEF.TheSumm 
PEKPQ_DEF_TheSumm 
, 
PEKPQ_DEF.TheDate 
PEKPQ_DEF_TheDate 
, 
PEKPQ_DEF.TheDescription 
PEKPQ_DEF_TheDescription 
, 
 PEKPQ_DEF.ToSuplier  
PEKPQ_DEF_ToSuplier_ID, 
 Func.INSTANCE_BRIEF_F(PEKPQ_DEF.ToSuplier) 
PEKPQ_DEF_ToSuplier 
, PEKPQ_DEF.InstanceID InstanceID 
, PEKPQ_DEF.PEKPQ_DEFID ID 
, 'PEKPQ_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKPQ_DEF
 join INSTANCE on PEKPQ_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOENTDIC_BANK as 
select   ENTDIC_BANKID
, 
ENTDIC_BANK.Addr 
ENTDIC_BANK_Addr 
, 
ENTDIC_BANK.BIC 
ENTDIC_BANK_BIC 
, 
ENTDIC_BANK.Code1C 
ENTDIC_BANK_Code1C 
, 
ENTDIC_BANK.SUBKORACC 
ENTDIC_BANK_SUBKORACC 
, 
ENTDIC_BANK.RKC 
ENTDIC_BANK_RKC 
, 
ENTDIC_BANK.ACC 
ENTDIC_BANK_ACC 
, 
ENTDIC_BANK.name 
ENTDIC_BANK_name 
, 
ENTDIC_BANK.KORACC 
ENTDIC_BANK_KORACC 
, ENTDIC_BANK.InstanceID InstanceID 
, ENTDIC_BANK.ENTDIC_BANKID ID 
, 'ENTDIC_BANK' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_BANK
 join INSTANCE on ENTDIC_BANK.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewENTDIC_ENTDIC_BANK as 
select   ENTDIC_BANKID
, 
ENTDIC_BANK.KORACC 
ENTDIC_BANK_KORACC 
, 
ENTDIC_BANK.Addr 
ENTDIC_BANK_Addr 
, 
ENTDIC_BANK.name 
ENTDIC_BANK_name 
, 
ENTDIC_BANK.BIC 
ENTDIC_BANK_BIC 
, 
ENTDIC_BANK.SUBKORACC 
ENTDIC_BANK_SUBKORACC 
, 
ENTDIC_BANK.ACC 
ENTDIC_BANK_ACC 
, 
ENTDIC_BANK.RKC 
ENTDIC_BANK_RKC 
, ENTDIC_BANK.InstanceID InstanceID 
, ENTDIC_BANK.ENTDIC_BANKID ID 
, 'ENTDIC_BANK' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_BANK
 join INSTANCE on ENTDIC_BANK.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOENTDIC_DOST as 
select   ENTDIC_DOSTID
, 
ENTDIC_DOST.Code 
ENTDIC_DOST_Code 
, 
ENTDIC_DOST.name 
ENTDIC_DOST_name 
, ENTDIC_DOST.InstanceID InstanceID 
, ENTDIC_DOST.ENTDIC_DOSTID ID 
, 'ENTDIC_DOST' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_DOST
 join INSTANCE on ENTDIC_DOST.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewENTDIC_ENTDIC_DOST as 
select   ENTDIC_DOSTID
, 
ENTDIC_DOST.name 
ENTDIC_DOST_name 
, ENTDIC_DOST.InstanceID InstanceID 
, ENTDIC_DOST.ENTDIC_DOSTID ID 
, 'ENTDIC_DOST' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_DOST
 join INSTANCE on ENTDIC_DOST.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOENTDIC_TOWN as 
select   ENTDIC_TOWNID
, 
 ENTDIC_TOWN.country  
ENTDIC_TOWN_country_ID, 
 Func.ENTDIC_COUNTRY_BRIEF_F(ENTDIC_TOWN.country) 
ENTDIC_TOWN_country 
, 
ENTDIC_TOWN.name 
ENTDIC_TOWN_name 
, ENTDIC_TOWN.InstanceID InstanceID 
, ENTDIC_TOWN.ENTDIC_TOWNID ID 
, 'ENTDIC_TOWN' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_TOWN
 join INSTANCE on ENTDIC_TOWN.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewENTDIC_ENTDIC_TOWN as 
select   ENTDIC_TOWNID
, 
 ENTDIC_TOWN.country  
ENTDIC_TOWN_country_ID, 
 Func.ENTDIC_COUNTRY_BRIEF_F(ENTDIC_TOWN.country) 
ENTDIC_TOWN_country 
, 
ENTDIC_TOWN.name 
ENTDIC_TOWN_name 
, ENTDIC_TOWN.InstanceID InstanceID 
, ENTDIC_TOWN.ENTDIC_TOWNID ID 
, 'ENTDIC_TOWN' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_TOWN
 join INSTANCE on ENTDIC_TOWN.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOENTDIC_TransportType as 
select   ENTDIC_TransportTypeID
, 
ENTDIC_TransportType.TheName 
ENTDIC_TransportType_TheName 
, ENTDIC_TransportType.InstanceID InstanceID 
, ENTDIC_TransportType.ENTDIC_TransportTypeID ID 
, 'ENTDIC_TransportType' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_TransportType
 join INSTANCE on ENTDIC_TransportType.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewENTDIC_ENTDIC_TransportType as 
select   ENTDIC_TransportTypeID
, 
ENTDIC_TransportType.TheName 
ENTDIC_TransportType_TheName 
, ENTDIC_TransportType.InstanceID InstanceID 
, ENTDIC_TransportType.ENTDIC_TransportTypeID ID 
, 'ENTDIC_TransportType' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_TransportType
 join INSTANCE on ENTDIC_TransportType.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewENTDIC_ENTDIC_OPF as 
select   ENTDIC_OPFID
, 
ENTDIC_OPF.name 
ENTDIC_OPF_name 
, ENTDIC_OPF.InstanceID InstanceID 
, ENTDIC_OPF.ENTDIC_OPFID ID 
, 'ENTDIC_OPF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_OPF
 join INSTANCE on ENTDIC_OPF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOENTDIC_EDIZM as 
select   ENTDIC_EDIZMID
, 
ENTDIC_EDIZM.Netto 
ENTDIC_EDIZM_Netto 
, 
ENTDIC_EDIZM.name 
ENTDIC_EDIZM_name 
, 
ENTDIC_EDIZM.code 
ENTDIC_EDIZM_code 
, 
 ENTDIC_EDIZM.baseEDIZM  
ENTDIC_EDIZM_baseEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(ENTDIC_EDIZM.baseEDIZM) 
ENTDIC_EDIZM_baseEDIZM 
, ENTDIC_EDIZM.InstanceID InstanceID 
, ENTDIC_EDIZM.ENTDIC_EDIZMID ID 
, 'ENTDIC_EDIZM' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_EDIZM
 join INSTANCE on ENTDIC_EDIZM.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewENTDIC_ENTDIC_EDIZM as 
select   ENTDIC_EDIZMID
, 
ENTDIC_EDIZM.Netto 
ENTDIC_EDIZM_Netto 
, 
ENTDIC_EDIZM.name 
ENTDIC_EDIZM_name 
, 
ENTDIC_EDIZM.code 
ENTDIC_EDIZM_code 
, ENTDIC_EDIZM.InstanceID InstanceID 
, ENTDIC_EDIZM.ENTDIC_EDIZMID ID 
, 'ENTDIC_EDIZM' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_EDIZM
 join INSTANCE on ENTDIC_EDIZM.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOENTDIC_CURRENCY as 
select   ENTDIC_CURRENCYID
, 
ENTDIC_CURRENCY.Code 
ENTDIC_CURRENCY_Code 
, 
ENTDIC_CURRENCY.name 
ENTDIC_CURRENCY_name 
, ENTDIC_CURRENCY.InstanceID InstanceID 
, ENTDIC_CURRENCY.ENTDIC_CURRENCYID ID 
, 'ENTDIC_CURRENCY' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_CURRENCY
 join INSTANCE on ENTDIC_CURRENCY.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewENTDIC_ENTDIC_CURRENCY as 
select   ENTDIC_CURRENCYID
, 
ENTDIC_CURRENCY.Code 
ENTDIC_CURRENCY_Code 
, 
ENTDIC_CURRENCY.name 
ENTDIC_CURRENCY_name 
, ENTDIC_CURRENCY.InstanceID InstanceID 
, ENTDIC_CURRENCY.ENTDIC_CURRENCYID ID 
, 'ENTDIC_CURRENCY' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_CURRENCY
 join INSTANCE on ENTDIC_CURRENCY.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOENTDIC_CURCOURCE as 
select   ENTDIC_CURCOURCEID,ENTDIC_CURRENCYID
, 
ENTDIC_CURCOURCE.the_Value 
ENTDIC_CURCOURCE_the_Value 
, 
ENTDIC_CURCOURCE.CourceDate 
ENTDIC_CURCOURCE_CourceDate 
, 
ENTDIC_CURCOURCE.Quantity 
ENTDIC_CURCOURCE_Quantity 
, ENTDIC_CURRENCY.InstanceID InstanceID 
, ENTDIC_CURCOURCE.ENTDIC_CURCOURCEID ID 
, 'ENTDIC_CURCOURCE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_CURCOURCE
 join ENTDIC_CURRENCY on ENTDIC_CURRENCY.ENTDIC_CURRENCYID=ENTDIC_CURCOURCE.ParentStructRowID 
 join INSTANCE on ENTDIC_CURRENCY.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewENTDIC_ENTDIC_COUNTRY as 
select   ENTDIC_COUNTRYID
, 
ENTDIC_COUNTRY.name 
ENTDIC_COUNTRY_name 
, ENTDIC_COUNTRY.InstanceID InstanceID 
, ENTDIC_COUNTRY.ENTDIC_COUNTRYID ID 
, 'ENTDIC_COUNTRY' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_COUNTRY
 join INSTANCE on ENTDIC_COUNTRY.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOENTDIC_COUNTRY as 
select   ENTDIC_COUNTRYID
, 
ENTDIC_COUNTRY.name 
ENTDIC_COUNTRY_name 
, 
ENTDIC_COUNTRY.Code 
ENTDIC_COUNTRY_Code 
, ENTDIC_COUNTRY.InstanceID InstanceID 
, ENTDIC_COUNTRY.ENTDIC_COUNTRYID ID 
, 'ENTDIC_COUNTRY' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_COUNTRY
 join INSTANCE on ENTDIC_COUNTRY.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewENTDIC_ENTDIC_REGION as 
select   ENTDIC_REGIONID
, 
ENTDIC_REGION.name 
ENTDIC_REGION_name 
, ENTDIC_REGION.InstanceID InstanceID 
, ENTDIC_REGION.ENTDIC_REGIONID ID 
, 'ENTDIC_REGION' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_REGION
 join INSTANCE on ENTDIC_REGION.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOENTDIC_REGION as 
select   ENTDIC_REGIONID
, 
ENTDIC_REGION.name 
ENTDIC_REGION_name 
, 
ENTDIC_REGION.Code 
ENTDIC_REGION_Code 
, ENTDIC_REGION.InstanceID InstanceID 
, ENTDIC_REGION.ENTDIC_REGIONID ID 
, 'ENTDIC_REGION' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENTDIC_REGION
 join INSTANCE on ENTDIC_REGION.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOST_MAIN as 
select   ST_MAINID
, 
ST_MAIN.UrlReferer 
ST_MAIN_UrlReferer 
, 
ST_MAIN.AccessDate 
ST_MAIN_AccessDate 
, 
ST_MAIN.UserHostName 
ST_MAIN_UserHostName 
, 
 ST_MAIN.WEBS_Page  
ST_MAIN_WEBS_Page_ID, 
 Func.WEBS_PAGEDEF_BRIEF_F(ST_MAIN.WEBS_Page) 
ST_MAIN_WEBS_Page 
, 
ST_MAIN.UserAgent 
ST_MAIN_UserAgent 
, 
ST_MAIN.the_Description 
ST_MAIN_the_Description 
, 
ST_MAIN.UserHostAddress 
ST_MAIN_UserHostAddress 
, ST_MAIN.InstanceID InstanceID 
, ST_MAIN.ST_MAINID ID 
, 'ST_MAIN' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ST_MAIN
 join INSTANCE on ST_MAIN.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOST_DEF as 
select   ST_DEFID
, 
ST_DEF.the_Description 
ST_DEF_the_Description 
, 
 ST_DEF.IsActive  
ST_DEF_IsActive_VAL, 
 decode(ST_DEF.IsActive 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ST_DEF_IsActive 
, 
 ST_DEF.WEBS  
ST_DEF_WEBS_ID, 
 Func.INSTANCE_BRIEF_F(ST_DEF.WEBS) 
ST_DEF_WEBS 
, 
ST_DEF.Name 
ST_DEF_Name 
, ST_DEF.InstanceID InstanceID 
, ST_DEF.ST_DEFID ID 
, 'ST_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ST_DEF
 join INSTANCE on ST_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOST_PAGES as 
select   ST_PAGESID
, 
ST_PAGES.AccessDate 
ST_PAGES_AccessDate 
, 
ST_PAGES.UserAgent 
ST_PAGES_UserAgent 
, 
ST_PAGES.UserHostName 
ST_PAGES_UserHostName 
, 
ST_PAGES.UserHostAddress 
ST_PAGES_UserHostAddress 
, 
ST_PAGES.UrlReferer 
ST_PAGES_UrlReferer 
, 
ST_PAGES.the_Description 
ST_PAGES_the_Description 
, 
 ST_PAGES.WEBS_Page  
ST_PAGES_WEBS_Page_ID, 
 Func.WEBS_PAGEDEF_BRIEF_F(ST_PAGES.WEBS_Page) 
ST_PAGES_WEBS_Page 
, ST_PAGES.InstanceID InstanceID 
, ST_PAGES.ST_PAGESID ID 
, 'ST_PAGES' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ST_PAGES
 join INSTANCE on ST_PAGES.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOSTDJournlaExtInfo as 
select   STDJournlaExtInfoID
, 
STDJournlaExtInfo.TheName 
STDJournlaExtInfo_TheName 
, 
 STDJournlaExtInfo.TheJournalRef  
STDJournlaExtInfo_TheJournalRef_ID, 
 Func.INSTANCE_BRIEF_F(STDJournlaExtInfo.TheJournalRef) 
STDJournlaExtInfo_TheJournalRef 
, STDJournlaExtInfo.InstanceID InstanceID 
, STDJournlaExtInfo.STDJournlaExtInfoID ID 
, 'STDJournlaExtInfo' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from STDJournlaExtInfo
 join INSTANCE on STDJournlaExtInfo.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOSTDJournalExtParam as 
select   STDJournalExtParamID
, 
STDJournalExtParam.FieldName 
STDJournalExtParam_FieldName 
, 
STDJournalExtParam.ParamName 
STDJournalExtParam_ParamName 
, 
 STDJournalExtParam.TargetPlatform  
STDJournalExtParam_TargetPlatform_ID, 
 Func.GENERATOR_TARGET_BRIEF_F(STDJournalExtParam.TargetPlatform) 
STDJournalExtParam_TargetPlatform 
, STDJournalExtParam.InstanceID InstanceID 
, STDJournalExtParam.STDJournalExtParamID ID 
, 'STDJournalExtParam' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from STDJournalExtParam
 join INSTANCE on STDJournalExtParam.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOSTDJournalExtFlt as 
select   STDJournalExtFltID
, 
STDJournalExtFlt.ViewSource 
STDJournalExtFlt_ViewSource 
, STDJournalExtFlt.InstanceID InstanceID 
, STDJournalExtFlt.STDJournalExtFltID ID 
, 'STDJournalExtFlt' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from STDJournalExtFlt
 join INSTANCE on STDJournalExtFlt.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOSTDJournalExtField as 
select   STDJournalExtFieldID,STDJournalExtFltID
, 
 STDJournalExtField.ConditionType  
STDJournalExtField_ConditionType_VAL, 
 decode(STDJournalExtField.ConditionType 
, 2 ,'&lt;&gt;'
, 3 ,'&gt;'
, 1 ,'='
, 4 ,'&gt;='
, 7 ,'&lt;='
, 8 ,'like'
, 6 ,'&lt;'
, 0 ,'none'
, '???') 
STDJournalExtField_ConditionType 
, 
STDJournalExtField.ViewField 
STDJournalExtField_ViewField 
, 
STDJournalExtField.ConstantValue 
STDJournalExtField_ConstantValue 
, 
STDJournalExtField.FieldSource 
STDJournalExtField_FieldSource 
, 
 STDJournalExtField.TargetPlatform  
STDJournalExtField_TargetPlatform_ID, 
 Func.GENERATOR_TARGET_BRIEF_F(STDJournalExtField.TargetPlatform) 
STDJournalExtField_TargetPlatform 
, STDJournalExtFlt.InstanceID InstanceID 
, STDJournalExtField.STDJournalExtFieldID ID 
, 'STDJournalExtField' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from STDJournalExtField
 join STDJournalExtFlt on STDJournalExtFlt.STDJournalExtFltID=STDJournalExtField.ParentStructRowID 
 join INSTANCE on STDJournalExtFlt.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOCAL_DAYS as 
select   CAL_DAYSID
, 
CAL_DAYS.TheDate 
CAL_DAYS_TheDate 
, 
 CAL_DAYS.IsHoliday  
CAL_DAYS_IsHoliday_VAL, 
 decode(CAL_DAYS.IsHoliday 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
CAL_DAYS_IsHoliday 
, CAL_DAYS.InstanceID InstanceID 
, CAL_DAYS.CAL_DAYSID ID 
, 'CAL_DAYS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from CAL_DAYS
 join INSTANCE on CAL_DAYS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOCAL_TIME as 
select   CAL_TIMEID,CAL_DAYSID
, 
CAL_TIME.ToTime 
CAL_TIME_ToTime 
, 
CAL_TIME.FromTime 
CAL_TIME_FromTime 
, CAL_DAYS.InstanceID InstanceID 
, CAL_TIME.CAL_TIMEID ID 
, 'CAL_TIME' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from CAL_TIME
 join CAL_DAYS on CAL_DAYS.CAL_DAYSID=CAL_TIME.ParentStructRowID 
 join INSTANCE on CAL_DAYS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOCAL_HEAD as 
select   CAL_HEADID
, 
CAL_HEAD.Name 
CAL_HEAD_Name 
, 
CAL_HEAD.FillStyle 
CAL_HEAD_FillStyle 
, CAL_HEAD.InstanceID InstanceID 
, CAL_HEAD.CAL_HEADID ID 
, 'CAL_HEAD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from CAL_HEAD
 join INSTANCE on CAL_HEAD.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindCAL_HEAD as 
select   CAL_HEADID
, 
CAL_HEAD.Name 
CAL_HEAD_Name 
, CAL_HEAD.InstanceID InstanceID 
, CAL_HEAD.CAL_HEADID ID 
, 'CAL_HEAD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from CAL_HEAD
 join INSTANCE on CAL_HEAD.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOSrvMessageInfo as 
select   SrvMessageInfoID
, 
SrvMessageInfo.MsgInfo 
SrvMessageInfo_MsgInfo 
, 
 SrvMessageInfo.ForUser  
SrvMessageInfo_ForUser_ID, 
 Func.Users_BRIEF_F(SrvMessageInfo.ForUser) 
SrvMessageInfo_ForUser 
, 
 SrvMessageInfo.TheDocument  
SrvMessageInfo_TheDocument_ID, 
 Func.INSTANCE_BRIEF_F(SrvMessageInfo.TheDocument) 
SrvMessageInfo_TheDocument 
, 
SrvMessageInfo.msgDate 
SrvMessageInfo_msgDate 
, 
SrvMessageInfo.ReadTime 
SrvMessageInfo_ReadTime 
, SrvMessageInfo.InstanceID InstanceID 
, SrvMessageInfo.SrvMessageInfoID ID 
, 'SrvMessageInfo' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from SrvMessageInfo
 join INSTANCE on SrvMessageInfo.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKNAL_PEKNAL_DEF as 
select   PEKNAL_DEFID
, 
PEKNAL_DEF.TheNumber 
PEKNAL_DEF_THENUMBER 
, 
 PEKNAL_DEF.ThePEKZ  
PEKNAL_DEF_ThePEKZ_ID, 
 Func.INSTANCE_BRIEF_F(PEKNAL_DEF.ThePEKZ) 
PEKNAL_DEF_ThePEKZ 
, 
 PEKNAL_DEF.TheDept  
PEKNAL_DEF_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKNAL_DEF.TheDept) 
PEKNAL_DEF_TheDept 
, 
PEKNAL_DEF.TheDate 
PEKNAL_DEF_TheDate 
, 
 PEKNAL_DEF.FromClient  
PEKNAL_DEF_FromClient_ID, 
 Func.INSTANCE_BRIEF_F(PEKNAL_DEF.FromClient) 
PEKNAL_DEF_FromClient 
, 
PEKNAL_DEF.TheSumm 
PEKNAL_DEF_TheSumm 
, PEKNAL_DEF.InstanceID InstanceID 
, PEKNAL_DEF.PEKNAL_DEFID ID 
, 'PEKNAL_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKNAL_DEF
 join INSTANCE on PEKNAL_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKNAL_DEF as 
select   PEKNAL_DEFID
, 
 PEKNAL_DEF.TheDept  
PEKNAL_DEF_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKNAL_DEF.TheDept) 
PEKNAL_DEF_TheDept 
, 
PEKNAL_DEF.TheDate 
PEKNAL_DEF_TheDate 
, 
 PEKNAL_DEF.FromClient  
PEKNAL_DEF_FromClient_ID, 
 Func.INSTANCE_BRIEF_F(PEKNAL_DEF.FromClient) 
PEKNAL_DEF_FromClient 
, 
PEKNAL_DEF.TheNumber 
PEKNAL_DEF_TheNumber 
, 
 PEKNAL_DEF.RceivedBy  
PEKNAL_DEF_RceivedBy_ID, 
 Func.Users_BRIEF_F(PEKNAL_DEF.RceivedBy) 
PEKNAL_DEF_RceivedBy 
, 
PEKNAL_DEF.Code1C 
PEKNAL_DEF_Code1C 
, 
PEKNAL_DEF.TheComment 
PEKNAL_DEF_TheComment 
, 
PEKNAL_DEF.TheSumm 
PEKNAL_DEF_TheSumm 
, 
 PEKNAL_DEF.ThePEKZ  
PEKNAL_DEF_ThePEKZ_ID, 
 Func.INSTANCE_BRIEF_F(PEKNAL_DEF.ThePEKZ) 
PEKNAL_DEF_ThePEKZ 
, PEKNAL_DEF.InstanceID InstanceID 
, PEKNAL_DEF.PEKNAL_DEFID ID 
, 'PEKNAL_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKNAL_DEF
 join INSTANCE on PEKNAL_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKNAL_PZ as 
select   PEKNAL_PZID
, 
 PEKNAL_PZ.PZ  
PEKNAL_PZ_PZ_ID, 
 Func.INSTANCE_BRIEF_F(PEKNAL_PZ.PZ) 
PEKNAL_PZ_PZ 
, 
PEKNAL_PZ.TheSumm 
PEKNAL_PZ_TheSumm 
, PEKNAL_PZ.InstanceID InstanceID 
, PEKNAL_PZ.PEKNAL_PZID ID 
, 'PEKNAL_PZ' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKNAL_PZ
 join INSTANCE on PEKNAL_PZ.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKNAL_ROWS as 
select   PEKNAL_ROWSID
, 
PEKNAL_ROWS.TheDate 
PEKNAL_ROWS_TheDate 
, 
PEKNAL_ROWS.TheSumm 
PEKNAL_ROWS_TheSumm 
, 
 PEKNAL_ROWS.FromClient  
PEKNAL_ROWS_FromClient_ID, 
 Func.INSTANCE_BRIEF_F(PEKNAL_ROWS.FromClient) 
PEKNAL_ROWS_FromClient 
, 
 PEKNAL_ROWS.TheDogovor  
PEKNAL_ROWS_TheDogovor_ID, 
 Func.INSTANCE_BRIEF_F(PEKNAL_ROWS.TheDogovor) 
PEKNAL_ROWS_TheDogovor 
, 
PEKNAL_ROWS.TheNumber 
PEKNAL_ROWS_TheNumber 
, 
 PEKNAL_ROWS.TheDept  
PEKNAL_ROWS_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKNAL_ROWS.TheDept) 
PEKNAL_ROWS_TheDept 
, PEKNAL_ROWS.InstanceID InstanceID 
, PEKNAL_ROWS.PEKNAL_ROWSID ID 
, 'PEKNAL_ROWS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKNAL_ROWS
 join INSTANCE on PEKNAL_ROWS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindFileDef as 
select   FileDefID
, 
FileDef.Name 
FileDef_Name 
, 
FileDef.the_Comment 
FileDef_Comment 
, FileDef.InstanceID InstanceID 
, FileDef.FileDefID ID 
, 'FileDef' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FileDef
 join INSTANCE on FileDef.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOFileDef as 
select   FileDefID
, 
FileDef.the_Comment 
FileDef_the_Comment 
, 
FileDef.Name 
FileDef_Name 
, FileDef.InstanceID InstanceID 
, FileDef.FileDefID ID 
, 'FileDef' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FileDef
 join INSTANCE on FileDef.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOFileVersion as 
select   FileVersionID
, 
FileVersion.the_Comment 
FileVersion_the_Comment 
, 
FileVersion.FileData 
FileVersion_FileData 
, 
FileVersion.Ext 
FileVersion_Ext 
, 
 FileVersion.CurrentVersion  
FileVersion_CurrentVersion_VAL, 
 decode(FileVersion.CurrentVersion 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FileVersion_CurrentVersion 
, 
FileVersion.Version 
FileVersion_Version 
, FileVersion.InstanceID InstanceID 
, FileVersion.FileVersionID ID 
, 'FileVersion' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FileVersion
 join INSTANCE on FileVersion.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTONum_zones as 
select   Num_zonesID
, 
Num_zones.ZoneMask 
Num_zones_ZoneMask 
, Num_zones.InstanceID InstanceID 
, Num_zones.Num_zonesID ID 
, 'Num_zones' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Num_zones
 join INSTANCE on Num_zones.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTONum_Values as 
select   Num_ValuesID,Num_zonesID
, 
Num_Values.OwnerRowID 
Num_Values_OwnerRowID 
, 
Num_Values.OwnerPartName 
Num_Values_OwnerPartName 
, 
Num_Values.the_Value 
Num_Values_the_Value 
, Num_zones.InstanceID InstanceID 
, Num_Values.Num_ValuesID ID 
, 'Num_Values' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Num_Values
 join Num_zones on Num_zones.Num_zonesID=Num_Values.ParentStructRowID 
 join INSTANCE on Num_zones.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewSTDNumerator_Num_Values as 
select   Num_ValuesID,Num_zonesID
, 
Num_zones.ZoneMask 
Num_zones_ZoneMask 
, 
Num_Values.the_Value 
Num_Values_Value 
, 
 Num_head.Shema  
Num_head_Shema_VAL, 
 decode(Num_head.Shema 
, 0 ,'Единая зона'
, 1 ,'По году'
, 4 ,'По дню'
, 2 ,'По кварталу'
, 3 ,'По месяцу'
, 10 ,'Произвольные зоны'
, '???') 
Num_head_Shema 
, 
Num_head.Name 
Num_head_Name 
, Num_zones.InstanceID InstanceID 
, Num_Values.Num_ValuesID ID 
, 'Num_Values' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Num_Values
 join Num_zones on Num_zones.Num_zonesID=Num_Values.ParentStructRowID 
 join INSTANCE on Num_zones.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join Num_head ON Num_head.InstanceID=Num_zones.InstanceID 
;
create or replace view V_AUTONum_head as 
select   Num_headID
, 
 Num_head.Shema  
Num_head_Shema_VAL, 
 decode(Num_head.Shema 
, 0 ,'Единая зона'
, 1 ,'По году'
, 4 ,'По дню'
, 2 ,'По кварталу'
, 3 ,'По месяцу'
, 10 ,'Произвольные зоны'
, '???') 
Num_head_Shema 
, 
Num_head.Name 
Num_head_Name 
, Num_head.InstanceID InstanceID 
, Num_head.Num_headID ID 
, 'Num_head' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Num_head
 join INSTANCE on Num_head.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewSTDNumerator_Num_head as 
select   Num_headID
, 
 Num_head.Shema  
Num_head_Shema_VAL, 
 decode(Num_head.Shema 
, 0 ,'Единая зона'
, 1 ,'По году'
, 4 ,'По дню'
, 2 ,'По кварталу'
, 3 ,'По месяцу'
, 10 ,'Произвольные зоны'
, '???') 
Num_head_Shema 
, 
Num_head.Name 
Num_head_Name 
, Num_head.InstanceID InstanceID 
, Num_head.Num_headID ID 
, 'Num_head' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Num_head
 join INSTANCE on Num_head.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOBaseSetting as 
select   BaseSettingID
, 
BaseSetting.Passport 
BaseSetting_Passport 
, 
 BaseSetting.TrTypeDef  
BaseSetting_TrTypeDef_ID, 
 Func.PEKD_TRTYPE_BRIEF_F(BaseSetting.TrTypeDef) 
BaseSetting_TrTypeDef 
, 
BaseSetting.Count103 
BaseSetting_Count103 
, 
 BaseSetting.Direction  
BaseSetting_Direction_ID, 
 Func.PEKD_DIRECTION_BRIEF_F(BaseSetting.Direction) 
BaseSetting_Direction 
, 
BaseSetting.addInvoiceInfo 
BaseSetting_addInvoiceInfo 
, 
 BaseSetting.WED  
BaseSetting_WED_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(BaseSetting.WED) 
BaseSetting_WED 
, 
 BaseSetting.Code  
BaseSetting_Code_VAL, 
 decode(BaseSetting.Code 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
BaseSetting_Code 
, 
 BaseSetting.FIL  
BaseSetting_FIL_ID, 
 Func.PEKD_DEPT_BRIEF_F(BaseSetting.FIL) 
BaseSetting_FIL 
, 
 BaseSetting.SingleSendTRF  
BaseSetting_SingleSendTRF_ID, 
 Func.PEKD_TRFTYPE_BRIEF_F(BaseSetting.SingleSendTRF) 
BaseSetting_SingleSendTRF 
, 
BaseSetting.CashMan 
BaseSetting_CashMan 
, 
BaseSetting.NDS 
BaseSetting_NDS 
, 
 BaseSetting.SingleSendCli  
BaseSetting_SingleSendCli_ID, 
 Func.INSTANCE_BRIEF_F(BaseSetting.SingleSendCli) 
BaseSetting_SingleSendCli 
, 
 BaseSetting.Round500  
BaseSetting_Round500_VAL, 
 decode(BaseSetting.Round500 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
BaseSetting_Round500 
, 
 BaseSetting.VED  
BaseSetting_VED_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(BaseSetting.VED) 
BaseSetting_VED 
, 
BaseSetting.AccountGeneral 
BaseSetting_AccountGeneral 
, 
BaseSetting.DateSHCode 
BaseSetting_DateSHCode 
, 
 BaseSetting.NewClientTRF  
BaseSetting_NewClientTRF_ID, 
 Func.PEKD_TRFTYPE_BRIEF_F(BaseSetting.NewClientTRF) 
BaseSetting_NewClientTRF 
, 
 BaseSetting.NDS103  
BaseSetting_NDS103_VAL, 
 decode(BaseSetting.NDS103 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
BaseSetting_NDS103 
, 
BaseSetting.IDX 
BaseSetting_IDX 
, 
BaseSetting.genDirector 
BaseSetting_genDirector 
, BaseSetting.InstanceID InstanceID 
, BaseSetting.BaseSettingID ID 
, 'BaseSetting' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from BaseSetting
 join INSTANCE on BaseSetting.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOReports as 
select   ReportsID
, 
Reports.TheComment 
Reports_TheComment 
, 
 Reports.ReportType  
Reports_ReportType_VAL, 
 decode(Reports.ReportType 
, 1 ,'Двумерная матрица'
, 0 ,'Таблица'
, 3 ,'Экспорт по WORD шаблону'
, 2 ,'Только расчет'
, 4 ,'Экспорт по Excel шаблону'
, '???') 
Reports_ReportType 
, 
 Reports.PrepareMethod  
Reports_PrepareMethod_ID, 
 Func.SHAREDMETHOD_BRIEF_F(Reports.PrepareMethod) 
Reports_PrepareMethod 
, 
Reports.ReportView 
Reports_ReportView 
, 
 Reports.TheReportExt  
Reports_TheReportExt_ID, 
 Func.INSTANCE_BRIEF_F(Reports.TheReportExt) 
Reports_TheReportExt 
, 
Reports.Caption 
Reports_Caption 
, 
Reports.ReportFile 
Reports_ReportFile 
, 
Reports.Name 
Reports_Name 
, Reports.InstanceID InstanceID 
, Reports.ReportsID ID 
, 'Reports' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Reports
 join INSTANCE on Reports.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindReports as 
select   ReportsID
, 
Reports.Name 
Reports_Name 
, Reports.InstanceID InstanceID 
, Reports.ReportsID ID 
, 'Reports' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Reports
 join INSTANCE on Reports.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTORPTStruct as 
select   RPTStructID
, 
RPTStruct.Caption 
RPTStruct_Caption 
, 
RPTStruct.Name 
RPTStruct_Name 
, RPTStruct.InstanceID InstanceID 
, RPTStruct.RPTStructID ID 
, 'RPTStruct' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from RPTStruct
 join INSTANCE on RPTStruct.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTORPTFields as 
select   RPTFieldsID,RPTStructID
, 
 RPTFields.FieldType  
RPTFields_FieldType_ID, 
 Func.FIELDTYPE_BRIEF_F(RPTFields.FieldType) 
RPTFields_FieldType 
, 
RPTFields.Caption 
RPTFields_Caption 
, 
RPTFields.FieldSize 
RPTFields_FieldSize 
, 
RPTFields.Name 
RPTFields_Name 
, RPTStruct.InstanceID InstanceID 
, RPTFields.RPTFieldsID ID 
, 'RPTFields' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from RPTFields
 join RPTStruct on RPTStruct.RPTStructID=RPTFields.ParentStructRowID 
 join INSTANCE on RPTStruct.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTORPTFormula as 
select   RPTFormulaID
, 
RPTFormula.Name 
RPTFormula_Name 
, 
 RPTFormula.Platform  
RPTFormula_Platform_ID, 
 Func.GENERATOR_TARGET_BRIEF_F(RPTFormula.Platform) 
RPTFormula_Platform 
, 
RPTFormula.Code 
RPTFormula_Code 
, RPTFormula.InstanceID InstanceID 
, RPTFormula.RPTFormulaID ID 
, 'RPTFormula' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from RPTFormula
 join INSTANCE on RPTFormula.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKRKO_DEF as 
select   PEKRKO_DEFID
, 
 PEKRKO_DEF.EmpPayed  
PEKRKO_DEF_EmpPayed_ID, 
 Func.Users_BRIEF_F(PEKRKO_DEF.EmpPayed) 
PEKRKO_DEF_EmpPayed 
, 
 PEKRKO_DEF.TheDept  
PEKRKO_DEF_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKRKO_DEF.TheDept) 
PEKRKO_DEF_TheDept 
, 
PEKRKO_DEF.TheNumber 
PEKRKO_DEF_TheNumber 
, 
 PEKRKO_DEF.FromClient  
PEKRKO_DEF_FromClient_ID, 
 Func.INSTANCE_BRIEF_F(PEKRKO_DEF.FromClient) 
PEKRKO_DEF_FromClient 
, 
PEKRKO_DEF.TheSumm 
PEKRKO_DEF_TheSumm 
, 
 PEKRKO_DEF.ThePEKZ  
PEKRKO_DEF_ThePEKZ_ID, 
 Func.INSTANCE_BRIEF_F(PEKRKO_DEF.ThePEKZ) 
PEKRKO_DEF_ThePEKZ 
, 
PEKRKO_DEF.TheComment 
PEKRKO_DEF_TheComment 
, 
PEKRKO_DEF.TheDate 
PEKRKO_DEF_TheDate 
, 
PEKRKO_DEF.Code1C 
PEKRKO_DEF_Code1C 
, PEKRKO_DEF.InstanceID InstanceID 
, PEKRKO_DEF.PEKRKO_DEFID ID 
, 'PEKRKO_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKRKO_DEF
 join INSTANCE on PEKRKO_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKRKO_ROWS as 
select   PEKRKO_ROWSID
, 
 PEKRKO_ROWS.FromClient  
PEKRKO_ROWS_FromClient_ID, 
 Func.INSTANCE_BRIEF_F(PEKRKO_ROWS.FromClient) 
PEKRKO_ROWS_FromClient 
, 
 PEKRKO_ROWS.TheDept  
PEKRKO_ROWS_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKRKO_ROWS.TheDept) 
PEKRKO_ROWS_TheDept 
, 
 PEKRKO_ROWS.TheDogovor  
PEKRKO_ROWS_TheDogovor_ID, 
 Func.INSTANCE_BRIEF_F(PEKRKO_ROWS.TheDogovor) 
PEKRKO_ROWS_TheDogovor 
, 
PEKRKO_ROWS.TheNumber 
PEKRKO_ROWS_TheNumber 
, 
PEKRKO_ROWS.TheSumm 
PEKRKO_ROWS_TheSumm 
, 
PEKRKO_ROWS.TheDate 
PEKRKO_ROWS_TheDate 
, PEKRKO_ROWS.InstanceID InstanceID 
, PEKRKO_ROWS.PEKRKO_ROWSID ID 
, 'PEKRKO_ROWS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKRKO_ROWS
 join INSTANCE on PEKRKO_ROWS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKTRF_REGALL as 
select   PEKTRF_REGALLID
, 
 PEKTRF_REGALL.WeightEDIZM  
PEKTRF_REGALL_WeightEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKTRF_REGALL.WeightEDIZM) 
PEKTRF_REGALL_WeightEDIZM 
, 
 PEKTRF_REGALL.PriceCurrency  
PEKTRF_REGALL_PriceCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(PEKTRF_REGALL.PriceCurrency) 
PEKTRF_REGALL_PriceCurrency 
, 
PEKTRF_REGALL.WeightFrom 
PEKTRF_REGALL_WeightFrom 
, 
PEKTRF_REGALL.WeightTo 
PEKTRF_REGALL_WeightTo 
, 
PEKTRF_REGALL.FixedPrice 
PEKTRF_REGALL_FixedPrice 
, 
PEKTRF_REGALL.PricePercent 
PEKTRF_REGALL_PricePercent 
, PEKTRF_REGALL.InstanceID InstanceID 
, PEKTRF_REGALL.PEKTRF_REGALLID ID 
, 'PEKTRF_REGALL' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKTRF_REGALL
 join INSTANCE on PEKTRF_REGALL.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKTRF_DECR as 
select   PEKTRF_DECRID
, 
PEKTRF_DECR.DecrPercent 
PEKTRF_DECR_DecrPercent 
, 
PEKTRF_DECR.Name 
PEKTRF_DECR_Name 
, PEKTRF_DECR.InstanceID InstanceID 
, PEKTRF_DECR.PEKTRF_DECRID ID 
, 'PEKTRF_DECR' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKTRF_DECR
 join INSTANCE on PEKTRF_DECR.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKTRF_ADDS as 
select   PEKTRF_ADDSID
, 
 PEKTRF_ADDS.Name  
PEKTRF_ADDS_Name_ID, 
 Func.PEKD_ADDS_BRIEF_F(PEKTRF_ADDS.Name) 
PEKTRF_ADDS_Name 
, 
PEKTRF_ADDS.MaxValue 
PEKTRF_ADDS_MaxValue 
, 
PEKTRF_ADDS.AddPercent 
PEKTRF_ADDS_AddPercent 
, 
PEKTRF_ADDS.MinValue 
PEKTRF_ADDS_MinValue 
, PEKTRF_ADDS.InstanceID InstanceID 
, PEKTRF_ADDS.PEKTRF_ADDSID ID 
, 'PEKTRF_ADDS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKTRF_ADDS
 join INSTANCE on PEKTRF_ADDS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKTRF_DEF as 
select   PEKTRF_DEFID
, 
 PEKTRF_DEF.TheFilial  
PEKTRF_DEF_TheFilial_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKTRF_DEF.TheFilial) 
PEKTRF_DEF_TheFilial 
, 
 PEKTRF_DEF.SupplierTarif  
PEKTRF_DEF_SupplierTarif_VAL, 
 decode(PEKTRF_DEF.SupplierTarif 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKTRF_DEF_SupplierTarif 
, 
PEKTRF_DEF.NalAdds 
PEKTRF_DEF_NalAdds 
, 
PEKTRF_DEF.EndDate 
PEKTRF_DEF_EndDate 
, 
PEKTRF_DEF.MinPPOWeight 
PEKTRF_DEF_MinPPOWeight 
, 
 PEKTRF_DEF.TType  
PEKTRF_DEF_TType_ID, 
 Func.PEKD_TRFTYPE_BRIEF_F(PEKTRF_DEF.TType) 
PEKTRF_DEF_TType 
, 
 PEKTRF_DEF.VolumeTarif  
PEKTRF_DEF_VolumeTarif_VAL, 
 decode(PEKTRF_DEF.VolumeTarif 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKTRF_DEF_VolumeTarif 
, 
PEKTRF_DEF.StartDate 
PEKTRF_DEF_StartDate 
, 
 PEKTRF_DEF.TRType  
PEKTRF_DEF_TRType_ID, 
 Func.PEKD_TRTYPE_BRIEF_F(PEKTRF_DEF.TRType) 
PEKTRF_DEF_TRType 
, 
 PEKTRF_DEF.Supplier  
PEKTRF_DEF_Supplier_ID, 
 Func.INSTANCE_BRIEF_F(PEKTRF_DEF.Supplier) 
PEKTRF_DEF_Supplier 
, 
 PEKTRF_DEF.IncludeNDS  
PEKTRF_DEF_IncludeNDS_VAL, 
 decode(PEKTRF_DEF.IncludeNDS 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKTRF_DEF_IncludeNDS 
, PEKTRF_DEF.InstanceID InstanceID 
, PEKTRF_DEF.PEKTRF_DEFID ID 
, 'PEKTRF_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKTRF_DEF
 join INSTANCE on PEKTRF_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKTRF_PEKTRF_DEF as 
select   PEKTRF_DEFID
, 
PEKTRF_DEF.StartDate 
PEKTRF_DEF_StartDate 
, 
 PEKTRF_DEF.Supplier  
PEKTRF_DEF_Supplier_ID, 
 Func.INSTANCE_BRIEF_F(PEKTRF_DEF.Supplier) 
PEKTRF_DEF_Supplier 
, 
PEKTRF_DEF.MinPPOWeight 
PEKTRF_DEF_MinPPOWeight 
, 
 PEKTRF_DEF.SupplierTarif  
PEKTRF_DEF_SupplierTarif_VAL, 
 decode(PEKTRF_DEF.SupplierTarif 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKTRF_DEF_SupplierTarif 
, 
 PEKTRF_DEF.IncludeNDS  
PEKTRF_DEF_IncludeNDS_VAL, 
 decode(PEKTRF_DEF.IncludeNDS 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKTRF_DEF_IncludeNDS 
, 
PEKTRF_DEF.EndDate 
PEKTRF_DEF_EndDate 
, 
 PEKTRF_DEF.TheFilial  
PEKTRF_DEF_TheFILIAL_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKTRF_DEF.TheFilial) 
PEKTRF_DEF_TheFILIAL 
, 
 PEKTRF_DEF.TRType  
PEKTRF_DEF_TRType_ID, 
 Func.PEKD_TRTYPE_BRIEF_F(PEKTRF_DEF.TRType) 
PEKTRF_DEF_TRType 
, 
 PEKTRF_DEF.TType  
PEKTRF_DEF_TType_ID, 
 Func.PEKD_TRFTYPE_BRIEF_F(PEKTRF_DEF.TType) 
PEKTRF_DEF_TType 
, PEKTRF_DEF.InstanceID InstanceID 
, PEKTRF_DEF.PEKTRF_DEFID ID 
, 'PEKTRF_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKTRF_DEF
 join INSTANCE on PEKTRF_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKTRF_AUTO as 
select   PEKTRF_AUTOID
, 
 PEKTRF_AUTO.ByLength  
PEKTRF_AUTO_ByLength_VAL, 
 decode(PEKTRF_AUTO.ByLength 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKTRF_AUTO_ByLength 
, 
PEKTRF_AUTO.LengthPrice 
PEKTRF_AUTO_LengthPrice 
, 
PEKTRF_AUTO.HourPrice 
PEKTRF_AUTO_HourPrice 
, 
 PEKTRF_AUTO.AutoType  
PEKTRF_AUTO_AutoType_ID, 
 Func.PEKD_AUTO_BRIEF_F(PEKTRF_AUTO.AutoType) 
PEKTRF_AUTO_AutoType 
, 
 PEKTRF_AUTO.ForTime  
PEKTRF_AUTO_ForTime_VAL, 
 decode(PEKTRF_AUTO.ForTime 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKTRF_AUTO_ForTime 
, PEKTRF_AUTO.InstanceID InstanceID 
, PEKTRF_AUTO.PEKTRF_AUTOID ID 
, 'PEKTRF_AUTO' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKTRF_AUTO
 join INSTANCE on PEKTRF_AUTO.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKTRF_PEKTRF_SRV as 
select   PEKTRF_SRVID
, 
 PEKTRF_DEF.TType  
PEKTRF_DEF_TType_ID, 
 Func.PEKD_TRFTYPE_BRIEF_F(PEKTRF_DEF.TType) 
PEKTRF_DEF_TType 
, 
PEKTRF_DEF.StartDate 
PEKTRF_DEF_StartDate 
, 
 PEKTRF_SRV.SrvTYPE  
PEKTRF_SRV_SrvTYPE_ID, 
 Func.PEKD_SRV_BRIEF_F(PEKTRF_SRV.SrvTYPE) 
PEKTRF_SRV_SrvTYPE 
, 
 PEKTRF_SRV.EDIZM  
PEKTRF_SRV_EDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKTRF_SRV.EDIZM) 
PEKTRF_SRV_EDIZM 
, 
 PEKTRF_SRV.TheCurrency  
PEKTRF_SRV_TheCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(PEKTRF_SRV.TheCurrency) 
PEKTRF_SRV_TheCurrency 
, 
PEKTRF_SRV.Quant 
PEKTRF_SRV_Quant 
, 
PEKTRF_SRV.Price 
PEKTRF_SRV_Price 
, PEKTRF_SRV.InstanceID InstanceID 
, PEKTRF_SRV.PEKTRF_SRVID ID 
, 'PEKTRF_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKTRF_SRV
 join INSTANCE on PEKTRF_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join PEKTRF_DEF ON PEKTRF_DEF.InstanceID=PEKTRF_SRV.InstanceID 
;
create or replace view V_AUTOPEKTRF_SRV as 
select   PEKTRF_SRVID
, 
 PEKTRF_SRV.EDIZM  
PEKTRF_SRV_EDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKTRF_SRV.EDIZM) 
PEKTRF_SRV_EDIZM 
, 
PEKTRF_SRV.Quant 
PEKTRF_SRV_Quant 
, 
 PEKTRF_SRV.TheCurrency  
PEKTRF_SRV_TheCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(PEKTRF_SRV.TheCurrency) 
PEKTRF_SRV_TheCurrency 
, 
 PEKTRF_SRV.SrvTYPE  
PEKTRF_SRV_SrvTYPE_ID, 
 Func.PEKD_SRV_BRIEF_F(PEKTRF_SRV.SrvTYPE) 
PEKTRF_SRV_SrvTYPE 
, 
PEKTRF_SRV.Price 
PEKTRF_SRV_Price 
, PEKTRF_SRV.InstanceID InstanceID 
, PEKTRF_SRV.PEKTRF_SRVID ID 
, 'PEKTRF_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKTRF_SRV
 join INSTANCE on PEKTRF_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKTRF_TR as 
select   PEKTRF_TRID
, 
 PEKTRF_TR.TheCurrency  
PEKTRF_TR_TheCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(PEKTRF_TR.TheCurrency) 
PEKTRF_TR_TheCurrency 
, 
 PEKTRF_TR.Train  
PEKTRF_TR_Train_ID, 
 Func.PEKD_DIRECTION_BRIEF_F(PEKTRF_TR.Train) 
PEKTRF_TR_Train 
, 
 PEKTRF_TR.ToST  
PEKTRF_TR_ToST_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(PEKTRF_TR.ToST) 
PEKTRF_TR_ToST 
, 
PEKTRF_TR.Price 
PEKTRF_TR_Price 
, 
PEKTRF_TR.TheQuantity 
PEKTRF_TR_TheQuantity 
, 
 PEKTRF_TR.EDIZM  
PEKTRF_TR_EDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKTRF_TR.EDIZM) 
PEKTRF_TR_EDIZM 
, PEKTRF_TR.InstanceID InstanceID 
, PEKTRF_TR.PEKTRF_TRID ID 
, 'PEKTRF_TR' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKTRF_TR
 join INSTANCE on PEKTRF_TR.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKTRF_PEKTRF_TR as 
select   PEKTRF_TRID
, 
 PEKTRF_TR.ToST  
PEKTRF_TR_ToST_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(PEKTRF_TR.ToST) 
PEKTRF_TR_ToST 
, 
PEKTRF_DEF.StartDate 
PEKTRF_DEF_StartDate 
, 
 PEKTRF_DEF.TType  
PEKTRF_DEF_TType_ID, 
 Func.PEKD_TRFTYPE_BRIEF_F(PEKTRF_DEF.TType) 
PEKTRF_DEF_TType 
, 
PEKTRF_TR.Price 
PEKTRF_TR_Price 
, 
 PEKTRF_TR.EDIZM  
PEKTRF_TR_EDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKTRF_TR.EDIZM) 
PEKTRF_TR_EDIZM 
, 
 PEKTRF_TR.TheCurrency  
PEKTRF_TR_TheCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(PEKTRF_TR.TheCurrency) 
PEKTRF_TR_TheCurrency 
, 
 PEKTRF_TR.Train  
PEKTRF_TR__ID, 
 Func.PEKD_DIRECTION_BRIEF_F(PEKTRF_TR.Train) 
PEKTRF_TR_ 
, PEKTRF_TR.InstanceID InstanceID 
, PEKTRF_TR.PEKTRF_TRID ID 
, 'PEKTRF_TR' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKTRF_TR
 join INSTANCE on PEKTRF_TR.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join PEKTRF_DEF ON PEKTRF_DEF.InstanceID=PEKTRF_TR.InstanceID 
;
create or replace view V_AUTOPEKTRF_REGRTR as 
select   PEKTRF_REGRTRID,PEKTRF_TRID
, 
PEKTRF_REGRTR.PricePercent 
PEKTRF_REGRTR_PricePercent 
, 
 PEKTRF_REGRTR.WeightEDIZM  
PEKTRF_REGRTR_WeightEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKTRF_REGRTR.WeightEDIZM) 
PEKTRF_REGRTR_WeightEDIZM 
, 
PEKTRF_REGRTR.WeightTo 
PEKTRF_REGRTR_WeightTo 
, 
 PEKTRF_REGRTR.PriceCurrency  
PEKTRF_REGRTR_PriceCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(PEKTRF_REGRTR.PriceCurrency) 
PEKTRF_REGRTR_PriceCurrency 
, 
PEKTRF_REGRTR.WeightFrom 
PEKTRF_REGRTR_WeightFrom 
, 
PEKTRF_REGRTR.FixedPrice 
PEKTRF_REGRTR_FixedPrice 
, PEKTRF_TR.InstanceID InstanceID 
, PEKTRF_REGRTR.PEKTRF_REGRTRID ID 
, 'PEKTRF_REGRTR' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKTRF_REGRTR
 join PEKTRF_TR on PEKTRF_TR.PEKTRF_TRID=PEKTRF_REGRTR.ParentStructRowID 
 join INSTANCE on PEKTRF_TR.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKCL_DEF as 
select   PEKCL_DEFID
, 
 PEKCL_DEF.TheDep  
PEKCL_DEF_TheDep_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKCL_DEF.TheDep) 
PEKCL_DEF_TheDep 
, 
PEKCL_DEF.LimDate 
PEKCL_DEF_LimDate 
, PEKCL_DEF.InstanceID InstanceID 
, PEKCL_DEF.PEKCL_DEFID ID 
, 'PEKCL_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKCL_DEF
 join INSTANCE on PEKCL_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKCL_PEKCL_DEF as 
select   PEKCL_DEFID
, 
PEKCL_DEF.LimDate 
PEKCL_DEF_LimDate 
, 
 PEKCL_DEF.TheDep  
PEKCL_DEF_TheDep_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKCL_DEF.TheDep) 
PEKCL_DEF_TheDep 
, PEKCL_DEF.InstanceID InstanceID 
, PEKCL_DEF.PEKCL_DEFID ID 
, 'PEKCL_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKCL_DEF
 join INSTANCE on PEKCL_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKCL_DAYLY as 
select   PEKCL_DAYLYID
, 
 PEKCL_DAYLY.Train  
PEKCL_DAYLY_Train_ID, 
 Func.PEKD_TRAINS_BRIEF_F(PEKCL_DAYLY.Train) 
PEKCL_DAYLY_Train 
, 
PEKCL_DAYLY.WeightValue 
PEKCL_DAYLY_WeightValue 
, 
PEKCL_DAYLY.the_Description 
PEKCL_DAYLY_the_Description 
, 
 PEKCL_DAYLY.GOTYPE  
PEKCL_DAYLY_GOTYPE_ID, 
 Func.PEKD_GOTYPE_BRIEF_F(PEKCL_DAYLY.GOTYPE) 
PEKCL_DAYLY_GOTYPE 
, 
 PEKCL_DAYLY.ValueEDIZM  
PEKCL_DAYLY_ValueEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKCL_DAYLY.ValueEDIZM) 
PEKCL_DAYLY_ValueEDIZM 
, 
PEKCL_DAYLY.TheValue 
PEKCL_DAYLY_TheValue 
, 
 PEKCL_DAYLY.WeightEDIZM  
PEKCL_DAYLY_WeightEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKCL_DAYLY.WeightEDIZM) 
PEKCL_DAYLY_WeightEDIZM 
, PEKCL_DAYLY.InstanceID InstanceID 
, PEKCL_DAYLY.PEKCL_DAYLYID ID 
, 'PEKCL_DAYLY' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKCL_DAYLY
 join INSTANCE on PEKCL_DAYLY.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKL_TOLOAD as 
select   PEKL_TOLOADID,PEKCL_DAYLYID
, 
PEKL_TOLOAD.WeightValue 
PEKL_TOLOAD_WeightValue 
, 
 PEKL_TOLOAD.ValueEDIZM  
PEKL_TOLOAD_ValueEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKL_TOLOAD.ValueEDIZM) 
PEKL_TOLOAD_ValueEDIZM 
, 
 PEKL_TOLOAD.WeightEDIZM  
PEKL_TOLOAD_WeightEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKL_TOLOAD.WeightEDIZM) 
PEKL_TOLOAD_WeightEDIZM 
, 
 PEKL_TOLOAD.SRCPekZ  
PEKL_TOLOAD_SRCPekZ_ID, 
 Func.INSTANCE_BRIEF_F(PEKL_TOLOAD.SRCPekZ) 
PEKL_TOLOAD_SRCPekZ 
, 
PEKL_TOLOAD.TheValue 
PEKL_TOLOAD_TheValue 
, PEKCL_DAYLY.InstanceID InstanceID 
, PEKL_TOLOAD.PEKL_TOLOADID ID 
, 'PEKL_TOLOAD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKL_TOLOAD
 join PEKCL_DAYLY on PEKCL_DAYLY.PEKCL_DAYLYID=PEKL_TOLOAD.ParentStructRowID 
 join INSTANCE on PEKCL_DAYLY.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewMTZExt_MTZExt_def as 
select   MTZExt_defID
, 
MTZExt_def.TheDescription 
MTZExt_def_TheDescription 
, 
 MTZExt_def.ExtType  
MTZExt_def_ExtType_VAL, 
 decode(MTZExt_def.ExtType 
, 1 ,'OnFormExt'
, 7 ,'CodeGenerator'
, 3 ,'JrnlAddExt'
, 6 ,'VerifyRowExt'
, 0 ,'StatusExt'
, 8 ,'ARMGenerator'
, 5 ,'DefaultExt'
, 2 ,'CustomExt'
, 4 ,'JrnlRunExt'
, '???') 
MTZExt_def_ExtType 
, 
MTZExt_def.Name 
MTZExt_def_Name 
, MTZExt_def.InstanceID InstanceID 
, MTZExt_def.MTZExt_defID ID 
, 'MTZExt_def' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZExt_def
 join INSTANCE on MTZExt_def.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOMTZExt_def as 
select   MTZExt_defID
, 
MTZExt_def.Name 
MTZExt_def_Name 
, 
MTZExt_def.TheDescription 
MTZExt_def_TheDescription 
, 
 MTZExt_def.ExtType  
MTZExt_def_ExtType_VAL, 
 decode(MTZExt_def.ExtType 
, 1 ,'OnFormExt'
, 7 ,'CodeGenerator'
, 3 ,'JrnlAddExt'
, 6 ,'VerifyRowExt'
, 0 ,'StatusExt'
, 8 ,'ARMGenerator'
, 5 ,'DefaultExt'
, 2 ,'CustomExt'
, 4 ,'JrnlRunExt'
, '???') 
MTZExt_def_ExtType 
, MTZExt_def.InstanceID InstanceID 
, MTZExt_def.MTZExt_defID ID 
, 'MTZExt_def' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZExt_def
 join INSTANCE on MTZExt_def.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOMTZExtRel as 
select   MTZExtRelID
, 
MTZExtRel.TheLibraryName 
MTZExtRel_TheLibraryName 
, 
 MTZExtRel.ThePlatform  
MTZExtRel_ThePlatform_VAL, 
 decode(MTZExtRel.ThePlatform 
, 2 ,'JAVA'
, 3 ,'OTHER'
, 1 ,'DOTNET'
, 0 ,'VB6'
, '???') 
MTZExtRel_ThePlatform 
, 
MTZExtRel.TheClassName 
MTZExtRel_TheClassName 
, MTZExtRel.InstanceID InstanceID 
, MTZExtRel.MTZExtRelID ID 
, 'MTZExtRel' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZExtRel
 join INSTANCE on MTZExtRel.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOInfoStoreDef as 
select   InfoStoreDefID
, 
 InfoStoreDef.TheGroup  
InfoStoreDef_TheGroup_ID, 
 Func.Groups_BRIEF_F(InfoStoreDef.TheGroup) 
InfoStoreDef_TheGroup 
, 
 InfoStoreDef.InfoStoreType  
InfoStoreDef_InfoStoreType_VAL, 
 decode(InfoStoreDef.InfoStoreType 
, 2 ,'Групповой'
, 1 ,'Персональный'
, 0 ,' Общий'
, '???') 
InfoStoreDef_InfoStoreType 
, 
 InfoStoreDef.TheUser  
InfoStoreDef_TheUser_ID, 
 Func.Users_BRIEF_F(InfoStoreDef.TheUser) 
InfoStoreDef_TheUser 
, 
InfoStoreDef.Name 
InfoStoreDef_Name 
, InfoStoreDef.InstanceID InstanceID 
, InfoStoreDef.InfoStoreDefID ID 
, 'InfoStoreDef' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from InfoStoreDef
 join INSTANCE on InfoStoreDef.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewSTDInfoStore_Folder as 
select   FolderID
, 
 InfoStoreDef.TheUser  
InfoStoreDef_TheUser_ID, 
 Func.Users_BRIEF_F(InfoStoreDef.TheUser) 
InfoStoreDef_TheUser 
, 
 InfoStoreDef.TheGroup  
InfoStoreDef_TheGroup_ID, 
 Func.Groups_BRIEF_F(InfoStoreDef.TheGroup) 
InfoStoreDef_TheGroup 
, 
 InfoStoreDef.InfoStoreType  
InfoStoreDef_InfoStoreType_VAL, 
 decode(InfoStoreDef.InfoStoreType 
, 2 ,'Групповой'
, 1 ,'Персональный'
, 0 ,' Общий'
, '???') 
InfoStoreDef_InfoStoreType 
, 
InfoStoreDef.Name 
InfoStoreDef_Name 
, 
Folder.Name 
Folder_Name 
, 
 Folder.FolderType  
Folder_FolderType_VAL, 
 decode(Folder.FolderType 
, 2 ,'Исходящие'
, 10 ,'Завершенные'
, 5 ,'Календарь'
, 0 ,' '
, 1 ,'Входящие'
, 9 ,'Отложенные'
, 4 ,'Журнал'
, 8 ,'В работе'
, 7 ,'Черновики'
, 6 ,'Отправленные'
, 3 ,'Удаленные'
, '???') 
Folder_FolderType 
, Folder.InstanceID InstanceID 
, Folder.FolderID ID 
, 'Folder' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Folder
 join INSTANCE on Folder.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join InfoStoreDef ON InfoStoreDef.InstanceID=Folder.InstanceID 
;
create or replace view V_AUTOFolder as 
select   FolderID
, 
 Folder.FolderType  
Folder_FolderType_VAL, 
 decode(Folder.FolderType 
, 2 ,'Исходящие'
, 10 ,'Завершенные'
, 5 ,'Календарь'
, 0 ,' '
, 1 ,'Входящие'
, 9 ,'Отложенные'
, 4 ,'Журнал'
, 8 ,'В работе'
, 7 ,'Черновики'
, 6 ,'Отправленные'
, 3 ,'Удаленные'
, '???') 
Folder_FolderType 
, 
Folder.Name 
Folder_Name 
, Folder.InstanceID InstanceID 
, Folder.FolderID ID 
, 'Folder' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Folder
 join INSTANCE on Folder.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOShortcut as 
select   ShortcutID,FolderID
, 
 Shortcut.DocItem  
Shortcut_DocItem_ID, 
 Func.INSTANCE_BRIEF_F(Shortcut.DocItem) 
Shortcut_DocItem 
, 
Shortcut.StartMode 
Shortcut_StartMode 
, Folder.InstanceID InstanceID 
, Shortcut.ShortcutID ID 
, 'Shortcut' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Shortcut
 join Folder on Folder.FolderID=Shortcut.ParentStructRowID 
 join INSTANCE on Folder.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKP_DEF as 
select   PEKP_DEFID
, 
 PEKP_DEF.FromClient  
PEKP_DEF_FromClient_ID, 
 Func.INSTANCE_BRIEF_F(PEKP_DEF.FromClient) 
PEKP_DEF_FromClient 
, 
 PEKP_DEF.TheDogovor  
PEKP_DEF_TheDogovor_ID, 
 Func.INSTANCE_BRIEF_F(PEKP_DEF.TheDogovor) 
PEKP_DEF_TheDogovor 
, 
PEKP_DEF.PLPDate 
PEKP_DEF_PLPDate 
, 
PEKP_DEF.Code1C 
PEKP_DEF_Code1C 
, 
 PEKP_DEF.TheCurrncy  
PEKP_DEF_TheCurrncy_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(PEKP_DEF.TheCurrncy) 
PEKP_DEF_TheCurrncy 
, 
PEKP_DEF.PLPSumm 
PEKP_DEF_PLPSumm 
, 
 PEKP_DEF.TheDept  
PEKP_DEF_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKP_DEF.TheDept) 
PEKP_DEF_TheDept 
, 
PEKP_DEF.PLPNUM 
PEKP_DEF_PLPNUM 
, 
PEKP_DEF.TheComment 
PEKP_DEF_TheComment 
, PEKP_DEF.InstanceID InstanceID 
, PEKP_DEF.PEKP_DEFID ID 
, 'PEKP_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKP_DEF
 join INSTANCE on PEKP_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKP_PEKP_DEF as 
select   PEKP_DEFID
, 
PEKP_DEF.PLPNUM 
PEKP_DEF_PLPNUM 
, 
PEKP_DEF.PLPDate 
PEKP_DEF_PLPDate 
, 
 PEKP_DEF.TheCurrncy  
PEKP_DEF_TheCurrncy_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(PEKP_DEF.TheCurrncy) 
PEKP_DEF_TheCurrncy 
, 
PEKP_DEF.TheComment 
PEKP_DEF_TheComment 
, 
 PEKP_DEF.TheDogovor  
PEKP_DEF_TheDogovor_ID, 
 Func.INSTANCE_BRIEF_F(PEKP_DEF.TheDogovor) 
PEKP_DEF_TheDogovor 
, 
PEKP_DEF.PLPSumm 
PEKP_DEF_PLPSumm 
, 
 PEKP_DEF.FromClient  
PEKP_DEF_FromClient_ID, 
 Func.INSTANCE_BRIEF_F(PEKP_DEF.FromClient) 
PEKP_DEF_FromClient 
, 
 PEKP_DEF.TheDept  
PEKP_DEF_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKP_DEF.TheDept) 
PEKP_DEF_TheDept 
, 
PEKP_DEF.Code1C 
PEKP_DEF_Code1C 
, PEKP_DEF.InstanceID InstanceID 
, PEKP_DEF.PEKP_DEFID ID 
, 'PEKP_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKP_DEF
 join INSTANCE on PEKP_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKP_PZ as 
select   PEKP_PZID
, 
PEKP_PZ.TheSumm 
PEKP_PZ_TheSumm 
, 
 PEKP_PZ.PZ  
PEKP_PZ_PZ_ID, 
 Func.INSTANCE_BRIEF_F(PEKP_PZ.PZ) 
PEKP_PZ_PZ 
, PEKP_PZ.InstanceID InstanceID 
, PEKP_PZ.PEKP_PZID ID 
, 'PEKP_PZ' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKP_PZ
 join INSTANCE on PEKP_PZ.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindUsers as 
select   UsersID
, 
Users.LocalPhone 
Users_LocalPhone 
, 
Users.Family 
Users_Family 
, 
Users.SurName 
Users_SurName 
, 
Users.MobilePhone 
Users_MobilePhone 
, 
Users.EMail 
Users_EMail 
, 
Users.Phone 
Users_Phone 
, 
Users.Name 
Users_Name 
, Users.InstanceID InstanceID 
, Users.UsersID ID 
, 'Users' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Users
 join INSTANCE on Users.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOUsers as 
select   UsersID
, 
Users.Photo 
Users_Photo 
, 
Users.CertData 
Users_CertData 
, 
Users.Password 
Users_Password 
, 
 Users.PersonaData  
Users_PersonaData_ID, 
 Func.INSTANCE_BRIEF_F(Users.PersonaData) 
Users_PersonaData 
, 
Users.CertificateID 
Users_CertificateID 
, 
Users.DomaiName 
Users_DomaiName 
, 
Users.LocalPhone 
Users_LocalPhone 
, 
 Users.Activity  
Users_Activity_ID, 
 Func.INSTANCE_BRIEF_F(Users.Activity) 
Users_Activity 
, 
Users.MobilePhone 
Users_MobilePhone 
, 
 Users.ClientDef  
Users_ClientDef_ID, 
 Func.INSTANCE_BRIEF_F(Users.ClientDef) 
Users_ClientDef 
, 
Users.SurName 
Users_SurName 
, 
Users.BirthDay 
Users_BirthDay 
, 
Users.Phone 
Users_Phone 
, 
Users.Family 
Users_Family 
, 
Users.EMail 
Users_EMail 
, 
Users.Login 
Users_Login 
, 
Users.Name 
Users_Name 
, Users.InstanceID InstanceID 
, Users.UsersID ID 
, 'Users' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Users
 join INSTANCE on Users.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOGroups as 
select   GroupsID
, 
Groups.Name 
Groups_Name 
, Groups.InstanceID InstanceID 
, Groups.GroupsID ID 
, 'Groups' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Groups
 join INSTANCE on Groups.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindGroups as 
select   GroupsID
, 
Groups.Name 
Groups_Name 
, Groups.InstanceID InstanceID 
, Groups.GroupsID ID 
, 'Groups' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Groups
 join INSTANCE on Groups.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewMTZUsers_GroupUser as 
select   GroupUserID,GroupsID
, 
 GroupUser.TheUser  
GroupUser_TheUser_ID, 
 Func.Users_BRIEF_F(GroupUser.TheUser) 
GroupUser_TheUser 
, 
Groups.Name 
Groups_Name 
, Groups.InstanceID InstanceID 
, GroupUser.GroupUserID ID 
, 'GroupUser' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GroupUser
 join Groups on Groups.GroupsID=GroupUser.ParentStructRowID 
 join INSTANCE on Groups.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOGroupUser as 
select   GroupUserID,GroupsID
, 
 GroupUser.TheUser  
GroupUser_TheUser_ID, 
 Func.Users_BRIEF_F(GroupUser.TheUser) 
GroupUser_TheUser 
, Groups.InstanceID InstanceID 
, GroupUser.GroupUserID ID 
, 'GroupUser' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GroupUser
 join Groups on Groups.GroupsID=GroupUser.ParentStructRowID 
 join INSTANCE on Groups.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindVRDDogSatge as 
select   VRDContractStageID
, 
VRDContractStage.Name 
VRDContractStage_Name 
, VRDContractStage.InstanceID InstanceID 
, VRDContractStage.VRDContractStageID ID 
, 'VRDContractStage' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDContractStage
 join INSTANCE on VRDContractStage.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDContractStage as 
select   VRDContractStageID
, 
VRDContractStage.Name 
VRDContractStage_Name 
, VRDContractStage.InstanceID InstanceID 
, VRDContractStage.VRDContractStageID ID 
, 'VRDContractStage' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDContractStage
 join INSTANCE on VRDContractStage.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDRreportType as 
select   VRDRreportTypeID
, 
VRDRreportType.Name 
VRDRreportType_Name 
, VRDRreportType.InstanceID InstanceID 
, VRDRreportType.VRDRreportTypeID ID 
, 'VRDRreportType' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDRreportType
 join INSTANCE on VRDRreportType.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewVRD_VRDRreportType as 
select   VRDRreportTypeID
, 
VRDRreportType.Name 
VRDRreportType_Name 
, VRDRreportType.InstanceID InstanceID 
, VRDRreportType.VRDRreportTypeID ID 
, 'VRDRreportType' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDRreportType
 join INSTANCE on VRDRreportType.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDPrjType as 
select   VRDPrjTypeID
, 
VRDPrjType.Name 
VRDPrjType_Name 
, VRDPrjType.InstanceID InstanceID 
, VRDPrjType.VRDPrjTypeID ID 
, 'VRDPrjType' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDPrjType
 join INSTANCE on VRDPrjType.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewVRDPrjType as 
select   VRDPrjTypeID
, 
VRDPrjType.Name 
VRDPrjType_Name 
, VRDPrjType.InstanceID InstanceID 
, VRDPrjType.VRDPrjTypeID ID 
, 'VRDPrjType' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDPrjType
 join INSTANCE on VRDPrjType.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_findVRDStream as 
select   VRDStreamID
, 
VRDStream.Name 
VRDStream_Name 
, VRDStream.InstanceID InstanceID 
, VRDStream.VRDStreamID ID 
, 'VRDStream' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDStream
 join INSTANCE on VRDStream.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDStream as 
select   VRDStreamID
, 
VRDStream.Name 
VRDStream_Name 
, VRDStream.InstanceID InstanceID 
, VRDStream.VRDStreamID ID 
, 'VRDStream' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDStream
 join INSTANCE on VRDStream.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindVRDInterest as 
select   VRDInterestID
, 
VRDInterest.Name 
VRDInterest_Name 
, VRDInterest.InstanceID InstanceID 
, VRDInterest.VRDInterestID ID 
, 'VRDInterest' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDInterest
 join INSTANCE on VRDInterest.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDInterest as 
select   VRDInterestID
, 
VRDInterest.Name 
VRDInterest_Name 
, VRDInterest.InstanceID InstanceID 
, VRDInterest.VRDInterestID ID 
, 'VRDInterest' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDInterest
 join INSTANCE on VRDInterest.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDDocType as 
select   VRDDocTypeID
, 
VRDDocType.Name 
VRDDocType_Name 
, VRDDocType.InstanceID InstanceID 
, VRDDocType.VRDDocTypeID ID 
, 'VRDDocType' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDDocType
 join INSTANCE on VRDDocType.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewVRDDocType as 
select   VRDDocTypeID
, 
VRDDocType.Name 
VRDDocType_Name 
, VRDDocType.InstanceID InstanceID 
, VRDDocType.VRDDocTypeID ID 
, 'VRDDocType' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDDocType
 join INSTANCE on VRDDocType.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDLoyalty as 
select   VRDLoyaltyID
, 
VRDLoyalty.the_Level 
VRDLoyalty_the_Level 
, VRDLoyalty.InstanceID InstanceID 
, VRDLoyalty.VRDLoyaltyID ID 
, 'VRDLoyalty' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDLoyalty
 join INSTANCE on VRDLoyalty.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindVRDLoyalty as 
select   VRDLoyaltyID
, 
VRDLoyalty.the_Level 
VRDLoyalty_Level 
, VRDLoyalty.InstanceID InstanceID 
, VRDLoyalty.VRDLoyaltyID ID 
, 'VRDLoyalty' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDLoyalty
 join INSTANCE on VRDLoyalty.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewVRD_VRDMarket as 
select   VRDMarketID
, 
VRDMarket.Name 
VRDMarket_Name 
, VRDMarket.InstanceID InstanceID 
, VRDMarket.VRDMarketID ID 
, 'VRDMarket' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDMarket
 join INSTANCE on VRDMarket.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRDMarket as 
select   VRDMarketID
, 
VRDMarket.Name 
VRDMarket_Name 
, VRDMarket.InstanceID InstanceID 
, VRDMarket.VRDMarketID ID 
, 'VRDMarket' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRDMarket
 join INSTANCE on VRDMarket.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_FindMTZSEC_RIGHT as 
select   MTZSEC_RIGHTID
, 
MTZSEC_RIGHT.ProtectedItem 
MTZSEC_RIGHT_ProtectedItem 
, 
MTZSEC_RIGHT.Piority 
MTZSEC_RIGHT_Piority 
, 
 MTZSEC_RIGHT.Allow  
MTZSEC_RIGHT_Allow_VAL, 
 decode(MTZSEC_RIGHT.Allow 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZSEC_RIGHT_Allow 
, 
 MTZSEC_RIGHT.TheGroup  
MTZSEC_RIGHT_TheGroup_ID, 
 Func.Groups_BRIEF_F(MTZSEC_RIGHT.TheGroup) 
MTZSEC_RIGHT_TheGroup 
, MTZSEC_RIGHT.InstanceID InstanceID 
, MTZSEC_RIGHT.MTZSEC_RIGHTID ID 
, 'MTZSEC_RIGHT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZSEC_RIGHT
 join INSTANCE on MTZSEC_RIGHT.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOMTZSEC_RIGHT as 
select   MTZSEC_RIGHTID
, 
 MTZSEC_RIGHT.TheGroup  
MTZSEC_RIGHT_TheGroup_ID, 
 Func.Groups_BRIEF_F(MTZSEC_RIGHT.TheGroup) 
MTZSEC_RIGHT_TheGroup 
, 
 MTZSEC_RIGHT.Allow  
MTZSEC_RIGHT_Allow_VAL, 
 decode(MTZSEC_RIGHT.Allow 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZSEC_RIGHT_Allow 
, 
MTZSEC_RIGHT.Piority 
MTZSEC_RIGHT_Piority 
, 
MTZSEC_RIGHT.ProtectedItem 
MTZSEC_RIGHT_ProtectedItem 
, MTZSEC_RIGHT.InstanceID InstanceID 
, MTZSEC_RIGHT.MTZSEC_RIGHTID ID 
, 'MTZSEC_RIGHT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZSEC_RIGHT
 join INSTANCE on MTZSEC_RIGHT.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRCAccounts as 
select   VRCAccountsID
, 
 VRCAccounts.BANK  
VRCAccounts_BANK_ID, 
 Func.ENTDIC_BANK_BRIEF_F(VRCAccounts.BANK) 
VRCAccounts_BANK 
, 
VRCAccounts.Code1C 
VRCAccounts_Code1C 
, 
 VRCAccounts.DefaultAccount  
VRCAccounts_DefaultAccount_VAL, 
 decode(VRCAccounts.DefaultAccount 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRCAccounts_DefaultAccount 
, 
VRCAccounts.fillial 
VRCAccounts_fillial 
, 
VRCAccounts.acc 
VRCAccounts_acc 
, VRCAccounts.InstanceID InstanceID 
, VRCAccounts.VRCAccountsID ID 
, 'VRCAccounts' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCAccounts
 join INSTANCE on VRCAccounts.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRCTorg as 
select   VRCTorgID
, 
VRCTorg.name 
VRCTorg_name 
, 
VRCTorg.Address 
VRCTorg_Address 
, 
 VRCTorg.Town  
VRCTorg_Town_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(VRCTorg.Town) 
VRCTorg_Town 
, VRCTorg.InstanceID InstanceID 
, VRCTorg.VRCTorgID ID 
, 'VRCTorg' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCTorg
 join INSTANCE on VRCTorg.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRCAditional as 
select   VRCAditionalID
, 
VRCAditional.regsved 
VRCAditional_regsved 
, 
VRCAditional.KPP 
VRCAditional_KPP 
, 
VRCAditional.uraddr 
VRCAditional_uraddr 
, 
 VRCAditional.regby  
VRCAditional_regby_ID, 
 Func.Users_BRIEF_F(VRCAditional.regby) 
VRCAditional_regby 
, 
VRCAditional.townphonecode 
VRCAditional_townphonecode 
, 
VRCAditional.mobTelephone 
VRCAditional_mobTelephone 
, 
 VRCAditional.Stream  
VRCAditional_Stream_ID, 
 Func.VRDStream_BRIEF_F(VRCAditional.Stream) 
VRCAditional_Stream 
, 
VRCAditional.maxcreditlen 
VRCAditional_maxcreditlen 
, 
VRCAditional.phone2 
VRCAditional_phone2 
, 
 VRCAditional.Concurent  
VRCAditional_Concurent_VAL, 
 decode(VRCAditional.Concurent 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRCAditional_Concurent 
, 
 VRCAditional.prnActWork  
VRCAditional_prnActWork_VAL, 
 decode(VRCAditional.prnActWork 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRCAditional_prnActWork 
, 
VRCAditional.OKPO 
VRCAditional_OKPO 
, 
VRCAditional.WEBSite 
VRCAditional_WEBSite 
, 
VRCAditional.OKONH 
VRCAditional_OKONH 
, 
VRCAditional.regdate 
VRCAditional_regdate 
, 
VRCAditional.district 
VRCAditional_district 
, 
 VRCAditional.Country  
VRCAditional_Country_ID, 
 Func.ENTDIC_COUNTRY_BRIEF_F(VRCAditional.Country) 
VRCAditional_Country 
, 
VRCAditional.creditlimit 
VRCAditional_creditlimit 
, 
 VRCAditional.town  
VRCAditional_town_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(VRCAditional.town) 
VRCAditional_town 
, 
VRCAditional.urphone 
VRCAditional_urphone 
, 
VRCAditional.POSTINDEX 
VRCAditional_POSTINDEX 
, 
VRCAditional.eMail 
VRCAditional_eMail 
, VRCAditional.InstanceID InstanceID 
, VRCAditional.VRCAditionalID ID 
, 'VRCAditional' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCAditional
 join INSTANCE on VRCAditional.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRCTarif as 
select   VRCTarifID
, 
 VRCTarif.TheDept  
VRCTarif_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(VRCTarif.TheDept) 
VRCTarif_TheDept 
, 
 VRCTarif.TheTarifType  
VRCTarif_TheTarifType_ID, 
 Func.PEKD_TRFTYPE_BRIEF_F(VRCTarif.TheTarifType) 
VRCTarif_TheTarifType 
, VRCTarif.InstanceID InstanceID 
, VRCTarif.VRCTarifID ID 
, 'VRCTarif' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCTarif
 join INSTANCE on VRCTarif.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewVRC_VRCCommonInfo as 
select   VRCCommonInfoID
, 
VRCCommonInfo.fullname 
VRCCommonInfo_fullname 
, 
VRCAditional.regdate 
VRCAditional_regdate 
, 
VRCCommonInfo.Phone 
VRCCommonInfo_Phone 
, 
VRCCommonInfo.the_Comment 
VRCCommonInfo_the_Comment 
, 
VRCAditional.townphonecode 
VRCAditional_townphonecode 
, 
VRCAditional.OKONH 
VRCAditional_OKONH 
, 
 VRCCommonInfo.Curator  
VRCCommonInfo_Curator_ID, 
 Func.Users_BRIEF_F(VRCCommonInfo.Curator) 
VRCCommonInfo_Curator 
, 
VRCAditional.creditlimit 
VRCAditional_creditlimit 
, 
 VRCAditional.Country  
VRCAditional_Country_ID, 
 Func.ENTDIC_COUNTRY_BRIEF_F(VRCAditional.Country) 
VRCAditional_Country 
, 
VRCCommonInfo.Name 
VRCCommonInfo_Name 
, 
VRCCommonInfo.INN 
VRCCommonInfo_INN 
, 
VRCAditional.OKPO 
VRCAditional_OKPO 
, 
VRCCommonInfo.fax 
VRCCommonInfo_fax 
, 
 VRCCommonInfo.Transporter  
VRCCommonInfo_Transporter_VAL, 
 decode(VRCCommonInfo.Transporter 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRCCommonInfo_Transporter 
, 
VRCAditional.POSTINDEX 
VRCAditional_POSTINDEX 
, 
VRCAditional.maxcreditlen 
VRCAditional_maxcreditlen 
, 
VRCAditional.urphone 
VRCAditional_urphone 
, 
VRCAditional.phone2 
VRCAditional_phone2 
, 
 VRCAditional.regby  
VRCAditional_regby_ID, 
 Func.Users_BRIEF_F(VRCAditional.regby) 
VRCAditional_regby 
, 
VRCAditional.uraddr 
VRCAditional_uraddr 
, 
 VRCAditional.Stream  
VRCAditional_Stream_ID, 
 Func.VRDStream_BRIEF_F(VRCAditional.Stream) 
VRCAditional_Stream 
, 
VRCAditional.WEBSite 
VRCAditional_WEBSite 
, 
 VRCAditional.Concurent  
VRCAditional_Concurent_VAL, 
 decode(VRCAditional.Concurent 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRCAditional_Concurent 
, 
VRCAditional.district 
VRCAditional_district 
, 
VRCCommonInfo.Address 
VRCCommonInfo_Address 
, 
 VRCAditional.town  
VRCAditional_town_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(VRCAditional.town) 
VRCAditional_town 
, 
VRCAditional.regsved 
VRCAditional_regsved 
, VRCCommonInfo.InstanceID InstanceID 
, VRCCommonInfo.VRCCommonInfoID ID 
, 'VRCCommonInfo' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCCommonInfo
 join INSTANCE on VRCCommonInfo.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join VRCAditional ON VRCAditional.InstanceID=VRCCommonInfo.InstanceID 
;
create or replace view V_AUTOVRCCommonInfo as 
select   VRCCommonInfoID
, 
VRCCommonInfo.fax 
VRCCommonInfo_fax 
, 
 VRCCommonInfo.Transporter  
VRCCommonInfo_Transporter_VAL, 
 decode(VRCCommonInfo.Transporter 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRCCommonInfo_Transporter 
, 
VRCCommonInfo.Address 
VRCCommonInfo_Address 
, 
VRCCommonInfo.Code1C 
VRCCommonInfo_Code1C 
, 
VRCCommonInfo.PassportInfo 
VRCCommonInfo_PassportInfo 
, 
VRCCommonInfo.Phone 
VRCCommonInfo_Phone 
, 
 VRCCommonInfo.Curator  
VRCCommonInfo_Curator_ID, 
 Func.Users_BRIEF_F(VRCCommonInfo.Curator) 
VRCCommonInfo_Curator 
, 
VRCCommonInfo.Name 
VRCCommonInfo_Name 
, 
 VRCCommonInfo.IsPhizical  
VRCCommonInfo_IsPhizical_VAL, 
 decode(VRCCommonInfo.IsPhizical 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRCCommonInfo_IsPhizical 
, 
VRCCommonInfo.fullname 
VRCCommonInfo_fullname 
, 
VRCCommonInfo.INN 
VRCCommonInfo_INN 
, 
VRCCommonInfo.the_Comment 
VRCCommonInfo_the_Comment 
, 
VRCCommonInfo.KPP 
VRCCommonInfo_KPP 
, VRCCommonInfo.InstanceID InstanceID 
, VRCCommonInfo.VRCCommonInfoID ID 
, 'VRCCommonInfo' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCCommonInfo
 join INSTANCE on VRCCommonInfo.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOROLES_USER as 
select   ROLES_USERID
, 
 ROLES_USER.TheUser  
ROLES_USER_TheUser_ID, 
 Func.Users_BRIEF_F(ROLES_USER.TheUser) 
ROLES_USER_TheUser 
, ROLES_USER.InstanceID InstanceID 
, ROLES_USER.ROLES_USERID ID 
, 'ROLES_USER' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_USER
 join INSTANCE on ROLES_USER.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOROLES_MAP as 
select   ROLES_MAPID
, 
 ROLES_MAP.TheGroup  
ROLES_MAP_TheGroup_ID, 
 Func.Groups_BRIEF_F(ROLES_MAP.TheGroup) 
ROLES_MAP_TheGroup 
, ROLES_MAP.InstanceID InstanceID 
, ROLES_MAP.ROLES_MAPID ID 
, 'ROLES_MAP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_MAP
 join INSTANCE on ROLES_MAP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOROLES_DOC as 
select   ROLES_DOCID
, 
 ROLES_DOC.The_Document  
ROLES_DOC_The_Document_ID, 
 Func.OBJECTTYPE_BRIEF_F(ROLES_DOC.The_Document) 
ROLES_DOC_The_Document 
, 
 ROLES_DOC.AllowDeleteDoc  
ROLES_DOC_AllowDeleteDoc_VAL, 
 decode(ROLES_DOC.AllowDeleteDoc 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_AllowDeleteDoc 
, 
 ROLES_DOC.The_Denied  
ROLES_DOC_The_Denied_VAL, 
 decode(ROLES_DOC.The_Denied 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_The_Denied 
, ROLES_DOC.InstanceID InstanceID 
, ROLES_DOC.ROLES_DOCID ID 
, 'ROLES_DOC' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_DOC
 join INSTANCE on ROLES_DOC.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOROLES_DOC_STATE as 
select   ROLES_DOC_STATEID,ROLES_DOCID
, 
 ROLES_DOC_STATE.The_Mode  
ROLES_DOC_STATE_The_Mode_ID, 
 Func.OBJECTMODE_BRIEF_F(ROLES_DOC_STATE.The_Mode) 
ROLES_DOC_STATE_The_Mode 
, 
 ROLES_DOC_STATE.StateChangeDisabled  
ROLES_DOC_STATE_StateChangeDisabled_VAL, 
 decode(ROLES_DOC_STATE.StateChangeDisabled 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_STATE_StateChangeDisabled 
, 
 ROLES_DOC_STATE.AllowDelete  
ROLES_DOC_STATE_AllowDelete_VAL, 
 decode(ROLES_DOC_STATE.AllowDelete 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_STATE_AllowDelete 
, 
 ROLES_DOC_STATE.The_State  
ROLES_DOC_STATE_The_State_ID, 
 Func.OBJSTATUS_BRIEF_F(ROLES_DOC_STATE.The_State) 
ROLES_DOC_STATE_The_State 
, ROLES_DOC.InstanceID InstanceID 
, ROLES_DOC_STATE.ROLES_DOC_STATEID ID 
, 'ROLES_DOC_STATE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_DOC_STATE
 join ROLES_DOC on ROLES_DOC.ROLES_DOCID=ROLES_DOC_STATE.ParentStructRowID 
 join INSTANCE on ROLES_DOC.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOROLES_DEF as 
select   ROLES_DEFID
, 
 ROLES_DEF.ListCFG_Denied  
ROLES_DEF_ListCFG_Denied_VAL, 
 decode(ROLES_DEF.ListCFG_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_ListCFG_Denied 
, 
ROLES_DEF.TheComment 
ROLES_DEF_TheComment 
, 
 ROLES_DEF.FormCFG_Denied  
ROLES_DEF_FormCFG_Denied_VAL, 
 decode(ROLES_DEF.FormCFG_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_FormCFG_Denied 
, 
 ROLES_DEF.FileExch_Denied  
ROLES_DEF_FileExch_Denied_VAL, 
 decode(ROLES_DEF.FileExch_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_FileExch_Denied 
, 
 ROLES_DEF.RightsSet_Denied  
ROLES_DEF_RightsSet_Denied_VAL, 
 decode(ROLES_DEF.RightsSet_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_RightsSet_Denied 
, 
ROLES_DEF.name 
ROLES_DEF_name 
, ROLES_DEF.InstanceID InstanceID 
, ROLES_DEF.ROLES_DEFID ID 
, 'ROLES_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_DEF
 join INSTANCE on ROLES_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewROLES_ROLES_DEF as 
select   ROLES_DEFID
, 
ROLES_DEF.name 
ROLES_DEF_name 
, 
 ROLES_DEF.RightsSet_Denied  
ROLES_DEF_RightsSet_Denied_VAL, 
 decode(ROLES_DEF.RightsSet_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_RightsSet_Denied 
, 
ROLES_DEF.TheComment 
ROLES_DEF_TheComment 
, 
 ROLES_DEF.FileExch_Denied  
ROLES_DEF_FileExch_Denied_VAL, 
 decode(ROLES_DEF.FileExch_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_FileExch_Denied 
, ROLES_DEF.InstanceID InstanceID 
, ROLES_DEF.ROLES_DEFID ID 
, 'ROLES_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_DEF
 join INSTANCE on ROLES_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOROLES_REPORTS as 
select   ROLES_REPORTSID
, 
 ROLES_REPORTS.The_Report  
ROLES_REPORTS_The_Report_ID, 
 Func.INSTANCE_BRIEF_F(ROLES_REPORTS.The_Report) 
ROLES_REPORTS_The_Report 
, ROLES_REPORTS.InstanceID InstanceID 
, ROLES_REPORTS.ROLES_REPORTSID ID 
, 'ROLES_REPORTS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_REPORTS
 join INSTANCE on ROLES_REPORTS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOROLES_WP as 
select   ROLES_WPID
, 
 ROLES_WP.WP  
ROLES_WP_WP_ID, 
 Func.INSTANCE_BRIEF_F(ROLES_WP.WP) 
ROLES_WP_WP 
, ROLES_WP.InstanceID InstanceID 
, ROLES_WP.ROLES_WPID ID 
, 'ROLES_WP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_WP
 join INSTANCE on ROLES_WP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOROLES_ACT as 
select   ROLES_ACTID,ROLES_WPID
, 
 ROLES_ACT.Accesible  
ROLES_ACT_Accesible_VAL, 
 decode(ROLES_ACT.Accesible 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_ACT_Accesible 
, 
 ROLES_ACT.EntryPoints  
ROLES_ACT_EntryPoints_ID, 
 Func.EntryPoints_BRIEF_F(ROLES_ACT.EntryPoints) 
ROLES_ACT_EntryPoints 
, ROLES_WP.InstanceID InstanceID 
, ROLES_ACT.ROLES_ACTID ID 
, 'ROLES_ACT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_ACT
 join ROLES_WP on ROLES_WP.ROLES_WPID=ROLES_ACT.ParentStructRowID 
 join INSTANCE on ROLES_WP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewMtzRptQry_RptSrvMsg as 
select   RptSrvMsgID
, 
RptQuery.AcceptDate 
RptQuery_AcceptDate 
, 
RptQuery.FinDate 
RptQuery_FinDate 
, 
 RptQuery.QueryUser  
RptQuery_QueryUser_ID, 
 Func.Users_BRIEF_F(RptQuery.QueryUser) 
RptQuery_QueryUser 
, 
RptSrvMsg.Msgdate 
RptSrvMsg_Msgdate 
, 
RptQuery.QryDate 
RptQuery_QryDate 
, 
RptSrvMsg.Info 
RptSrvMsg_Info 
, RptSrvMsg.InstanceID InstanceID 
, RptSrvMsg.RptSrvMsgID ID 
, 'RptSrvMsg' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from RptSrvMsg
 join INSTANCE on RptSrvMsg.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join RptQuery ON RptQuery.InstanceID=RptSrvMsg.InstanceID 
;
create or replace view V_AUTORptSrvMsg as 
select   RptSrvMsgID
, 
RptSrvMsg.Info 
RptSrvMsg_Info 
, 
RptSrvMsg.Msgdate 
RptSrvMsg_Msgdate 
, RptSrvMsg.InstanceID InstanceID 
, RptSrvMsg.RptSrvMsgID ID 
, 'RptSrvMsg' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from RptSrvMsg
 join INSTANCE on RptSrvMsg.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewMtzRptQry_RptQuery as 
select   RptQueryID
, 
RptQuery.QryDate 
RptQuery_QryDate 
, 
 RptQuery.QueryUser  
RptQuery_QueryUser_ID, 
 Func.Users_BRIEF_F(RptQuery.QueryUser) 
RptQuery_QueryUser 
, 
 RptQuery.ReportType  
RptQuery_ReportType_ID, 
 Func.INSTANCE_BRIEF_F(RptQuery.ReportType) 
RptQuery_ReportType 
, 
RptQuery.AcceptDate 
RptQuery_AcceptDate 
, 
RptQuery.FinDate 
RptQuery_FinDate 
, RptQuery.InstanceID InstanceID 
, RptQuery.RptQueryID ID 
, 'RptQuery' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from RptQuery
 join INSTANCE on RptQuery.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTORptQuery as 
select   RptQueryID
, 
 RptQuery.QueryUser  
RptQuery_QueryUser_ID, 
 Func.Users_BRIEF_F(RptQuery.QueryUser) 
RptQuery_QueryUser 
, 
 RptQuery.ReportType  
RptQuery_ReportType_ID, 
 Func.INSTANCE_BRIEF_F(RptQuery.ReportType) 
RptQuery_ReportType 
, 
RptQuery.AcceptDate 
RptQuery_AcceptDate 
, 
RptQuery.ResultID 
RptQuery_ResultID 
, 
RptQuery.FinDate 
RptQuery_FinDate 
, 
RptQuery.QryDate 
RptQuery_QryDate 
, RptQuery.InstanceID InstanceID 
, RptQuery.RptQueryID ID 
, 'RptQuery' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from RptQuery
 join INSTANCE on RptQuery.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTORptQryParam as 
select   RptQryParamID
, 
RptQryParam.Name 
RptQryParam_Name 
, 
RptQryParam.TheValue 
RptQryParam_TheValue 
, RptQryParam.InstanceID InstanceID 
, RptQryParam.RptQryParamID ID 
, 'RptQryParam' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from RptQryParam
 join INSTANCE on RptQryParam.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKORD_PEKORD_DEF as 
select   PEKORD_DEFID
, 
PEKORD_DEF.docnumber 
PEKORD_DEF_docnumber 
, 
PEKORD_DEF.TarifStartDate 
PEKORD_DEF_TarifStartDate 
, 
PEKORD_DEF.regdate 
PEKORD_DEF_regdate 
, 
PEKORD_DEF.docname 
PEKORD_DEF_docname 
, 
PEKORD_DEF.comments 
PEKORD_DEF_comments 
, 
 PEKORD_DEF.author  
PEKORD_DEF_author_ID, 
 Func.Users_BRIEF_F(PEKORD_DEF.author) 
PEKORD_DEF_author 
, PEKORD_DEF.InstanceID InstanceID 
, PEKORD_DEF.PEKORD_DEFID ID 
, 'PEKORD_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKORD_DEF
 join INSTANCE on PEKORD_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKORD_DEF as 
select   PEKORD_DEFID
, 
PEKORD_DEF.docnumber 
PEKORD_DEF_docnumber 
, 
PEKORD_DEF.comments 
PEKORD_DEF_comments 
, 
PEKORD_DEF.TarifStartDate 
PEKORD_DEF_TarifStartDate 
, 
PEKORD_DEF.regdate 
PEKORD_DEF_regdate 
, 
 PEKORD_DEF.author  
PEKORD_DEF_author_ID, 
 Func.Users_BRIEF_F(PEKORD_DEF.author) 
PEKORD_DEF_author 
, 
PEKORD_DEF.docname 
PEKORD_DEF_docname 
, PEKORD_DEF.InstanceID InstanceID 
, PEKORD_DEF.PEKORD_DEFID ID 
, 'PEKORD_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKORD_DEF
 join INSTANCE on PEKORD_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKORD_DATA as 
select   PEKORD_DATAID
, 
 PEKORD_DATA.TheDept  
PEKORD_DATA_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKORD_DATA.TheDept) 
PEKORD_DATA_TheDept 
, 
 PEKORD_DATA.Cient  
PEKORD_DATA_Cient_ID, 
 Func.INSTANCE_BRIEF_F(PEKORD_DATA.Cient) 
PEKORD_DATA_Cient 
, 
 PEKORD_DATA.NewTarifType  
PEKORD_DATA_NewTarifType_ID, 
 Func.PEKD_TRFTYPE_BRIEF_F(PEKORD_DATA.NewTarifType) 
PEKORD_DATA_NewTarifType 
, PEKORD_DATA.InstanceID InstanceID 
, PEKORD_DATA.PEKORD_DATAID ID 
, 'PEKORD_DATA' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKORD_DATA
 join INSTANCE on PEKORD_DATA.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWorkPlace as 
select   WorkPlaceID
, 
WorkPlace.TheComment 
WorkPlace_TheComment 
, 
WorkPlace.TheVersion 
WorkPlace_TheVersion 
, 
WorkPlace.Caption 
WorkPlace_Caption 
, 
WorkPlace.Name 
WorkPlace_Name 
, 
 WorkPlace.ThePlatform  
WorkPlace_ThePlatform_VAL, 
 decode(WorkPlace.ThePlatform 
, 2 ,'JAVA'
, 3 ,'OTHER'
, 1 ,'DOTNET'
, 0 ,'VB6'
, '???') 
WorkPlace_ThePlatform 
, WorkPlace.InstanceID InstanceID 
, WorkPlace.WorkPlaceID ID 
, 'WorkPlace' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WorkPlace
 join INSTANCE on WorkPlace.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewMTZwp_WorkPlace as 
select   WorkPlaceID
, 
 WorkPlace.ThePlatform  
WorkPlace_ThePlatform_VAL, 
 decode(WorkPlace.ThePlatform 
, 2 ,'JAVA'
, 3 ,'OTHER'
, 1 ,'DOTNET'
, 0 ,'VB6'
, '???') 
WorkPlace_ThePlatform 
, 
WorkPlace.Name 
WorkPlace_Name 
, 
WorkPlace.TheVersion 
WorkPlace_TheVersion 
, WorkPlace.InstanceID InstanceID 
, WorkPlace.WorkPlaceID ID 
, 'WorkPlace' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WorkPlace
 join INSTANCE on WorkPlace.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOEntryPoints as 
select   EntryPointsID
, 
 EntryPoints.Document  
EntryPoints_Document_ID, 
 Func.INSTANCE_BRIEF_F(EntryPoints.Document) 
EntryPoints_Document 
, 
EntryPoints.Name 
EntryPoints_Name 
, 
 EntryPoints.TheFilter  
EntryPoints_TheFilter_ID, 
 Func.INSTANCE_BRIEF_F(EntryPoints.TheFilter) 
EntryPoints_TheFilter 
, 
 EntryPoints.TheExtention  
EntryPoints_TheExtention_ID, 
 Func.INSTANCE_BRIEF_F(EntryPoints.TheExtention) 
EntryPoints_TheExtention 
, 
 EntryPoints.Report  
EntryPoints_Report_ID, 
 Func.INSTANCE_BRIEF_F(EntryPoints.Report) 
EntryPoints_Report 
, 
 EntryPoints.ActionType  
EntryPoints_ActionType_VAL, 
 decode(EntryPoints.ActionType 
, 5 ,'Открыть отчет'
, 0 ,'Ничего не делать'
, 2 ,'Выполнить метод'
, 1 ,'Открыть документ'
, 4 ,'Запустить АРМ'
, 3 ,'Открыть журнал'
, '???') 
EntryPoints_ActionType 
, 
 EntryPoints.ARM  
EntryPoints_ARM_ID, 
 Func.INSTANCE_BRIEF_F(EntryPoints.ARM) 
EntryPoints_ARM 
, 
EntryPoints.IconFile 
EntryPoints_IconFile 
, 
EntryPoints.sequence 
EntryPoints_sequence 
, 
 EntryPoints.AsToolbarItem  
EntryPoints_AsToolbarItem_VAL, 
 decode(EntryPoints.AsToolbarItem 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
EntryPoints_AsToolbarItem 
, 
 EntryPoints.Method  
EntryPoints_Method_ID, 
 Func.SHAREDMETHOD_BRIEF_F(EntryPoints.Method) 
EntryPoints_Method 
, 
 EntryPoints.ObjectType  
EntryPoints_ObjectType_ID, 
 Func.OBJECTTYPE_BRIEF_F(EntryPoints.ObjectType) 
EntryPoints_ObjectType 
, 
EntryPoints.Caption 
EntryPoints_Caption 
, 
 EntryPoints.Journal  
EntryPoints_Journal_ID, 
 Func.INSTANCE_BRIEF_F(EntryPoints.Journal) 
EntryPoints_Journal 
, 
EntryPoints.TheComment 
EntryPoints_TheComment 
, 
EntryPoints.JournalFixedQuery 
EntryPoints_JournalFixedQuery 
, EntryPoints.InstanceID InstanceID 
, EntryPoints.EntryPointsID ID 
, 'EntryPoints' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from EntryPoints
 join INSTANCE on EntryPoints.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOEPFilterLink as 
select   EPFilterLinkID,EntryPointsID
, 
EPFilterLink.RowSource 
EPFilterLink_RowSource 
, 
EPFilterLink.FilterField 
EPFilterLink_FilterField 
, 
EPFilterLink.TheExpression 
EPFilterLink_TheExpression 
, EntryPoints.InstanceID InstanceID 
, EPFilterLink.EPFilterLinkID ID 
, 'EPFilterLink' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from EPFilterLink
 join EntryPoints on EntryPoints.EntryPointsID=EPFilterLink.ParentStructRowID 
 join INSTANCE on EntryPoints.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOARMTypes as 
select   ARMTypesID
, 
 ARMTypes.TheDocumentType  
ARMTypes_TheDocumentType_ID, 
 Func.OBJECTTYPE_BRIEF_F(ARMTypes.TheDocumentType) 
ARMTypes_TheDocumentType 
, ARMTypes.InstanceID InstanceID 
, ARMTypes.ARMTypesID ID 
, 'ARMTypes' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ARMTypes
 join INSTANCE on ARMTypes.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOARMJournal as 
select   ARMJournalID
, 
 ARMJournal.TheJournal  
ARMJournal_TheJournal_ID, 
 Func.INSTANCE_BRIEF_F(ARMJournal.TheJournal) 
ARMJournal_TheJournal 
, ARMJournal.InstanceID InstanceID 
, ARMJournal.ARMJournalID ID 
, 'ARMJournal' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ARMJournal
 join INSTANCE on ARMJournal.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOARMJRNLADD as 
select   ARMJRNLADDID,ARMJournalID
, 
 ARMJRNLADD.TheExtention  
ARMJRNLADD_TheExtention_ID, 
 Func.INSTANCE_BRIEF_F(ARMJRNLADD.TheExtention) 
ARMJRNLADD_TheExtention 
, 
ARMJRNLADD.Name 
ARMJRNLADD_Name 
, ARMJournal.InstanceID InstanceID 
, ARMJRNLADD.ARMJRNLADDID ID 
, 'ARMJRNLADD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ARMJRNLADD
 join ARMJournal on ARMJournal.ARMJournalID=ARMJRNLADD.ParentStructRowID 
 join INSTANCE on ARMJournal.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOARMJRNLREP as 
select   ARMJRNLREPID,ARMJournalID
, 
 ARMJRNLREP.TheReport  
ARMJRNLREP_TheReport_ID, 
 Func.INSTANCE_BRIEF_F(ARMJRNLREP.TheReport) 
ARMJRNLREP_TheReport 
, 
ARMJRNLREP.repname 
ARMJRNLREP_repname 
, ARMJournal.InstanceID InstanceID 
, ARMJRNLREP.ARMJRNLREPID ID 
, 'ARMJRNLREP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ARMJRNLREP
 join ARMJournal on ARMJournal.ARMJournalID=ARMJRNLREP.ParentStructRowID 
 join INSTANCE on ARMJournal.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOARMJRNLRUN as 
select   ARMJRNLRUNID,ARMJournalID
, 
ARMJRNLRUN.Name 
ARMJRNLRUN_Name 
, 
 ARMJRNLRUN.TheExtention  
ARMJRNLRUN_TheExtention_ID, 
 Func.INSTANCE_BRIEF_F(ARMJRNLRUN.TheExtention) 
ARMJRNLRUN_TheExtention 
, ARMJournal.InstanceID InstanceID 
, ARMJRNLRUN.ARMJRNLRUNID ID 
, 'ARMJRNLRUN' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ARMJRNLRUN
 join ARMJournal on ARMJournal.ARMJournalID=ARMJRNLRUN.ParentStructRowID 
 join INSTANCE on ARMJournal.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_NZONE as 
select   PEKD_NZONEID
, 
PEKD_NZONE.POIDX 
PEKD_NZONE_POIDX 
, 
 PEKD_NZONE.TheMonth  
PEKD_NZONE_TheMonth_VAL, 
 decode(PEKD_NZONE.TheMonth 
, 11 ,'Ноябрь'
, 2 ,'Февраль'
, 12 ,'Декабрь'
, 3 ,'Март'
, 1 ,'Январь'
, 9 ,'Сентябрь'
, 6 ,'Июнь'
, 10 ,'Октябрь'
, 5 ,'Май'
, 8 ,'Август'
, 7 ,'Июль'
, 4 ,'Апрель'
, '???') 
PEKD_NZONE_TheMonth 
, 
 PEKD_NZONE.Dept  
PEKD_NZONE_Dept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKD_NZONE.Dept) 
PEKD_NZONE_Dept 
, 
PEKD_NZONE.FromPPOIDX 
PEKD_NZONE_FromPPOIDX 
, 
PEKD_NZONE.ToPPOIdx 
PEKD_NZONE_ToPPOIdx 
, 
PEKD_NZONE.TheYear 
PEKD_NZONE_TheYear 
, PEKD_NZONE.InstanceID InstanceID 
, PEKD_NZONE.PEKD_NZONEID ID 
, 'PEKD_NZONE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_NZONE
 join INSTANCE on PEKD_NZONE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKN_PEKD_NZONE as 
select   PEKD_NZONEID
, 
PEKD_NZONE.POIDX 
PEKD_NZONE_POIDX 
, 
PEKD_NZONE.TheYear 
PEKD_NZONE_TheYear 
, 
 PEKD_NZONE.TheMonth  
PEKD_NZONE_TheMonth_VAL, 
 decode(PEKD_NZONE.TheMonth 
, 11 ,'Ноябрь'
, 2 ,'Февраль'
, 12 ,'Декабрь'
, 3 ,'Март'
, 1 ,'Январь'
, 9 ,'Сентябрь'
, 6 ,'Июнь'
, 10 ,'Октябрь'
, 5 ,'Май'
, 8 ,'Август'
, 7 ,'Июль'
, 4 ,'Апрель'
, '???') 
PEKD_NZONE_TheMonth 
, 
PEKD_NZONE.ToPPOIdx 
PEKD_NZONE_ToPPOIdx 
, 
PEKD_NZONE.FromPPOIDX 
PEKD_NZONE_FromPPOIDX 
, 
 PEKD_NZONE.Dept  
PEKD_NZONE_Dept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKD_NZONE.Dept) 
PEKD_NZONE_Dept 
, PEKD_NZONE.InstanceID InstanceID 
, PEKD_NZONE.PEKD_NZONEID ID 
, 'PEKD_NZONE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_NZONE
 join INSTANCE on PEKD_NZONE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_USEDNUM as 
select   PEKD_USEDNUMID
, 
PEKD_USEDNUM.UsedNumber 
PEKD_USEDNUM_UsedNumber 
, PEKD_USEDNUM.InstanceID InstanceID 
, PEKD_USEDNUM.PEKD_USEDNUMID ID 
, 'PEKD_USEDNUM' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_USEDNUM
 join INSTANCE on PEKD_USEDNUM.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOJournalColumn as 
select   JournalColumnID
, 
 JournalColumn.ColumnAlignment  
JournalColumn_ColumnAlignment_VAL, 
 decode(JournalColumn.ColumnAlignment 
, 4 ,'Center Center'
, 3 ,'Center Top'
, 6 ,'Right Top'
, 8 ,'Right Bottom'
, 2 ,'Left Bottom'
, 7 ,'Right Center'
, 5 ,'Center Bottom'
, 1 ,'Left Center'
, 0 ,'Left Top'
, '???') 
JournalColumn_ColumnAlignment 
, 
 JournalColumn.GroupAggregation  
JournalColumn_GroupAggregation_VAL, 
 decode(JournalColumn.GroupAggregation 
, 5 ,'MAX'
, 1 ,'AVG'
, 3 ,'SUM'
, 2 ,'COUNT'
, 4 ,'MIN'
, 6 ,'CUSTOM'
, 0 ,'none'
, '???') 
JournalColumn_GroupAggregation 
, 
 JournalColumn.ColSort  
JournalColumn_ColSort_VAL, 
 decode(JournalColumn.ColSort 
, 0 ,'As String'
, 1 ,'As Numeric'
, 2 ,'As Date'
, '???') 
JournalColumn_ColSort 
, 
JournalColumn.name 
JournalColumn_name 
, 
JournalColumn.sequence 
JournalColumn_sequence 
, JournalColumn.InstanceID InstanceID 
, JournalColumn.JournalColumnID ID 
, 'JournalColumn' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from JournalColumn
 join INSTANCE on JournalColumn.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOJColumnSource as 
select   JColumnSourceID,JournalColumnID
, 
JColumnSource.ViewField 
JColumnSource_ViewField 
, 
 JColumnSource.SrcPartView  
JColumnSource_SrcPartView_ID, 
 Func.JournalSrc_BRIEF_F(JColumnSource.SrcPartView) 
JColumnSource_SrcPartView 
, JournalColumn.InstanceID InstanceID 
, JColumnSource.JColumnSourceID ID 
, 'JColumnSource' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from JColumnSource
 join JournalColumn on JournalColumn.JournalColumnID=JColumnSource.ParentStructRowID 
 join INSTANCE on JournalColumn.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOJournal as 
select   JournalID
, 
Journal.TheComment 
Journal_TheComment 
, 
Journal.Name 
Journal_Name 
, 
Journal.the_Alias 
Journal_the_Alias 
, Journal.InstanceID InstanceID 
, Journal.JournalID ID 
, 'Journal' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Journal
 join INSTANCE on Journal.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOJournalSrc as 
select   JournalSrcID
, 
JournalSrc.ViewAlias 
JournalSrc_ViewAlias 
, 
 JournalSrc.OnRun  
JournalSrc_OnRun_VAL, 
 decode(JournalSrc.OnRun 
, 2 ,'Открыть документ'
, 1 ,'Открыть строку'
, 0 ,'Ничего не делать'
, '???') 
JournalSrc_OnRun 
, 
JournalSrc.OpenMode 
JournalSrc_OpenMode 
, 
JournalSrc.PartView 
JournalSrc_PartView 
, JournalSrc.InstanceID InstanceID 
, JournalSrc.JournalSrcID ID 
, 'JournalSrc' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from JournalSrc
 join INSTANCE on JournalSrc.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOpekmsg_path as 
select   pekmsg_pathID
, 
 pekmsg_path.PathFilial  
pekmsg_path_PathFilial_ID, 
 Func.PEKD_DEPT_BRIEF_F(pekmsg_path.PathFilial) 
pekmsg_path_PathFilial 
, 
 pekmsg_path.trainNo  
pekmsg_path_trainNo_ID, 
 Func.PEKD_TRAINS_BRIEF_F(pekmsg_path.trainNo) 
pekmsg_path_trainNo 
, 
 pekmsg_path.InfoSendType  
pekmsg_path_InfoSendType_ID, 
 Func.PEKD_INFOSENDTYPE_BRIEF_F(pekmsg_path.InfoSendType) 
pekmsg_path_InfoSendType 
, 
pekmsg_path.vagNo 
pekmsg_path_vagNo 
, 
 pekmsg_path.PPODescription  
pekmsg_path_PPODescription_ID, 
 Func.PEKD_POSTTYPE_BRIEF_F(pekmsg_path.PPODescription) 
pekmsg_path_PPODescription 
, 
pekmsg_path.PPOVol 
pekmsg_path_PPOVol 
, 
pekmsg_path.PassDate 
pekmsg_path_PassDate 
, 
pekmsg_path.SendDate 
pekmsg_path_SendDate 
, 
 pekmsg_path.TheDirection  
pekmsg_path_TheDirection_ID, 
 Func.PEKD_DIRECTION_BRIEF_F(pekmsg_path.TheDirection) 
pekmsg_path_TheDirection 
, 
 pekmsg_path.Receiver  
pekmsg_path_Receiver_ID, 
 Func.INSTANCE_BRIEF_F(pekmsg_path.Receiver) 
pekmsg_path_Receiver 
, 
pekmsg_path.RcvFIO 
pekmsg_path_RcvFIO 
, 
pekmsg_path.InforRcvFIO 
pekmsg_path_InforRcvFIO 
, 
 pekmsg_path.TransSupplier  
pekmsg_path_TransSupplier_ID, 
 Func.INSTANCE_BRIEF_F(pekmsg_path.TransSupplier) 
pekmsg_path_TransSupplier 
, 
pekmsg_path.InfoDate 
pekmsg_path_InfoDate 
, 
 pekmsg_path.ValueEDIZM  
pekmsg_path_ValueEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(pekmsg_path.ValueEDIZM) 
pekmsg_path_ValueEDIZM 
, 
pekmsg_path.PPONum 
pekmsg_path_PPONum 
, 
pekmsg_path.PassFIO 
pekmsg_path_PassFIO 
, 
pekmsg_path.RcvDate 
pekmsg_path_RcvDate 
, 
pekmsg_path.PPOWeight 
pekmsg_path_PPOWeight 
, 
pekmsg_path.RcvWaitDate 
pekmsg_path_RcvWaitDate 
, 
 pekmsg_path.DestStation  
pekmsg_path_DestStation_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(pekmsg_path.DestStation) 
pekmsg_path_DestStation 
, 
 pekmsg_path.WeightEDIZM  
pekmsg_path_WeightEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(pekmsg_path.WeightEDIZM) 
pekmsg_path_WeightEDIZM 
, pekmsg_path.InstanceID InstanceID 
, pekmsg_path.pekmsg_pathID ID 
, 'pekmsg_path' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from pekmsg_path
 join INSTANCE on pekmsg_path.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_MAILLIST as 
select   WEBS_MAILLISTID
, 
WEBS_MAILLIST.Email 
WEBS_MAILLIST_Email 
, WEBS_MAILLIST.InstanceID InstanceID 
, WEBS_MAILLIST.WEBS_MAILLISTID ID 
, 'WEBS_MAILLIST' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_MAILLIST
 join INSTANCE on WEBS_MAILLIST.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_RECLAME as 
select   WEBS_RECLAMEID
, 
 WEBS_RECLAME.Path  
WEBS_RECLAME_Path_ID, 
 Func.TheDefenitionDiffP_BRIEF_F(WEBS_RECLAME.Path) 
WEBS_RECLAME_Path 
, 
WEBS_RECLAME.queque 
WEBS_RECLAME_queque 
, WEBS_RECLAME.InstanceID InstanceID 
, WEBS_RECLAME.WEBS_RECLAMEID ID 
, 'WEBS_RECLAME' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_RECLAME
 join INSTANCE on WEBS_RECLAME.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewWEBS_WEBS_PAGEDEF as 
select   WEBS_PAGEDEFID
, 
WEBS_PAGEDEF.Name 
WEBS_PAGEDEF_Name 
, 
WEBS_PAGEDEF.QueueNumber 
WEBS_PAGEDEF_QueueNumber 
, 
WEBS_PAGEDEF.Url 
WEBS_PAGEDEF_Url 
, WEBS_PAGEDEF.InstanceID InstanceID 
, WEBS_PAGEDEF.WEBS_PAGEDEFID ID 
, 'WEBS_PAGEDEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_PAGEDEF
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_PAGEDEF as 
select   WEBS_PAGEDEFID
, 
 WEBS_PAGEDEF.IsOnMap  
WEBS_PAGEDEF_IsOnMap_VAL, 
 decode(WEBS_PAGEDEF.IsOnMap 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGEDEF_IsOnMap 
, 
 WEBS_PAGEDEF.ObjectCode  
WEBS_PAGEDEF_ObjectCode_ID, 
 Func.PART_BRIEF_F(WEBS_PAGEDEF.ObjectCode) 
WEBS_PAGEDEF_ObjectCode 
, 
WEBS_PAGEDEF.QueueNumber 
WEBS_PAGEDEF_QueueNumber 
, 
WEBS_PAGEDEF.SelectIDParameterName 
WEBS_PAGEDEF_SelectIDParameterName 
, 
 WEBS_PAGEDEF.IsShowHisory  
WEBS_PAGEDEF_IsShowHisory_VAL, 
 decode(WEBS_PAGEDEF.IsShowHisory 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGEDEF_IsShowHisory 
, 
WEBS_PAGEDEF.ShortName 
WEBS_PAGEDEF_ShortName 
, 
WEBS_PAGEDEF.Title 
WEBS_PAGEDEF_Title 
, 
 WEBS_PAGEDEF.the_IsLocked  
WEBS_PAGEDEF_the_IsLocked_VAL, 
 decode(WEBS_PAGEDEF.the_IsLocked 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGEDEF_the_IsLocked 
, 
WEBS_PAGEDEF.ControlPath 
WEBS_PAGEDEF_ControlPath 
, 
 WEBS_PAGEDEF.AllowHeader  
WEBS_PAGEDEF_AllowHeader_VAL, 
 decode(WEBS_PAGEDEF.AllowHeader 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGEDEF_AllowHeader 
, 
 WEBS_PAGEDEF.RedirectToFirstChild  
WEBS_PAGEDEF_RedirectToFirstChild_VAL, 
 decode(WEBS_PAGEDEF.RedirectToFirstChild 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGEDEF_RedirectToFirstChild 
, 
 WEBS_PAGEDEF.PageType  
WEBS_PAGEDEF_PageType_VAL, 
 decode(WEBS_PAGEDEF.PageType 
, 0 ,'Не существенно'
, 1 ,'Объект'
, 3 ,'Раздел'
, 2 ,'Таблица'
, '???') 
WEBS_PAGEDEF_PageType 
, 
WEBS_PAGEDEF.the_Mode 
WEBS_PAGEDEF_the_Mode 
, 
WEBS_PAGEDEF.Name 
WEBS_PAGEDEF_Name 
, 
WEBS_PAGEDEF.PageContent 
WEBS_PAGEDEF_PageContent 
, 
 WEBS_PAGEDEF.ObjectName  
WEBS_PAGEDEF_ObjectName_ID, 
 Func.OBJECTTYPE_BRIEF_F(WEBS_PAGEDEF.ObjectName) 
WEBS_PAGEDEF_ObjectName 
, 
 WEBS_PAGEDEF.AllowAddPage  
WEBS_PAGEDEF_AllowAddPage_VAL, 
 decode(WEBS_PAGEDEF.AllowAddPage 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGEDEF_AllowAddPage 
, 
WEBS_PAGEDEF.Url 
WEBS_PAGEDEF_Url 
, WEBS_PAGEDEF.InstanceID InstanceID 
, WEBS_PAGEDEF.WEBS_PAGEDEFID ID 
, 'WEBS_PAGEDEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_PAGEDEF
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_PICS as 
select   WEBS_PICSID,WEBS_PAGEDEFID
, 
WEBS_PICS.Name 
WEBS_PICS_Name 
, 
WEBS_PICS.FileContent 
WEBS_PICS_FileContent 
, WEBS_PAGEDEF.InstanceID InstanceID 
, WEBS_PICS.WEBS_PICSID ID 
, 'WEBS_PICS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_PICS
 join WEBS_PAGEDEF on WEBS_PAGEDEF.WEBS_PAGEDEFID=WEBS_PICS.ParentStructRowID 
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_PAGEMENU as 
select   WEBS_PAGEMENUID,WEBS_PAGEDEFID
, 
WEBS_PAGEMENU.UsePartRowsSort 
WEBS_PAGEMENU_UsePartRowsSort 
, 
 WEBS_PAGEMENU.AllowInMenu  
WEBS_PAGEMENU_AllowInMenu_VAL, 
 decode(WEBS_PAGEMENU.AllowInMenu 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGEMENU_AllowInMenu 
, 
WEBS_PAGEMENU.UsePartRowsTextField 
WEBS_PAGEMENU_UsePartRowsTextField 
, 
 WEBS_PAGEMENU.AllowInBottomMenu  
WEBS_PAGEMENU_AllowInBottomMenu_VAL, 
 decode(WEBS_PAGEMENU.AllowInBottomMenu 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGEMENU_AllowInBottomMenu 
, 
 WEBS_PAGEMENU.UsePartRowsInMenu  
WEBS_PAGEMENU_UsePartRowsInMenu_VAL, 
 decode(WEBS_PAGEMENU.UsePartRowsInMenu 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGEMENU_UsePartRowsInMenu 
, 
WEBS_PAGEMENU.UsePartRowsRowIDField 
WEBS_PAGEMENU_UsePartRowsRowIDField 
, 
 WEBS_PAGEMENU.UsePartRowsEditForm  
WEBS_PAGEMENU_UsePartRowsEditForm_ID, 
 Func.WEBS_PAGEDEF_BRIEF_F(WEBS_PAGEMENU.UsePartRowsEditForm) 
WEBS_PAGEMENU_UsePartRowsEditForm 
, WEBS_PAGEDEF.InstanceID InstanceID 
, WEBS_PAGEMENU.WEBS_PAGEMENUID ID 
, 'WEBS_PAGEMENU' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_PAGEMENU
 join WEBS_PAGEDEF on WEBS_PAGEDEF.WEBS_PAGEDEFID=WEBS_PAGEMENU.ParentStructRowID 
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_PAGECONTENT as 
select   WEBS_PAGECONTENTID,WEBS_PAGEDEFID
, 
WEBS_PAGECONTENT.Content 
WEBS_PAGECONTENT_Content 
, WEBS_PAGEDEF.InstanceID InstanceID 
, WEBS_PAGECONTENT.WEBS_PAGECONTENTID ID 
, 'WEBS_PAGECONTENT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_PAGECONTENT
 join WEBS_PAGEDEF on WEBS_PAGEDEF.WEBS_PAGEDEFID=WEBS_PAGECONTENT.ParentStructRowID 
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_PAGEPARS as 
select   WEBS_PAGEPARSID,WEBS_PAGEDEFID
, 
WEBS_PAGEPARS.TheValue 
WEBS_PAGEPARS_TheValue 
, 
WEBS_PAGEPARS.Name 
WEBS_PAGEPARS_Name 
, WEBS_PAGEDEF.InstanceID InstanceID 
, WEBS_PAGEPARS.WEBS_PAGEPARSID ID 
, 'WEBS_PAGEPARS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_PAGEPARS
 join WEBS_PAGEDEF on WEBS_PAGEDEF.WEBS_PAGEDEFID=WEBS_PAGEPARS.ParentStructRowID 
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_PAGECOMP as 
select   WEBS_PAGECOMPID,WEBS_PAGEDEFID
, 
 WEBS_PAGECOMP.IsCollection  
WEBS_PAGECOMP_IsCollection_VAL, 
 decode(WEBS_PAGECOMP.IsCollection 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGECOMP_IsCollection 
, 
 WEBS_PAGECOMP.Visible  
WEBS_PAGECOMP_Visible_VAL, 
 decode(WEBS_PAGECOMP.Visible 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGECOMP_Visible 
, 
WEBS_PAGECOMP.Title 
WEBS_PAGECOMP_Title 
, 
 WEBS_PAGECOMP.Selected  
WEBS_PAGECOMP_Selected_VAL, 
 decode(WEBS_PAGECOMP.Selected 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGECOMP_Selected 
, 
 WEBS_PAGECOMP.the_PartName  
WEBS_PAGECOMP_the_PartName_ID, 
 Func.PART_BRIEF_F(WEBS_PAGECOMP.the_PartName) 
WEBS_PAGECOMP_the_PartName 
, 
WEBS_PAGECOMP.UserIdField 
WEBS_PAGECOMP_UserIdField 
, 
WEBS_PAGECOMP.Name 
WEBS_PAGECOMP_Name 
, 
WEBS_PAGECOMP.IDField 
WEBS_PAGECOMP_IDField 
, WEBS_PAGEDEF.InstanceID InstanceID 
, WEBS_PAGECOMP.WEBS_PAGECOMPID ID 
, 'WEBS_PAGECOMP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_PAGECOMP
 join WEBS_PAGEDEF on WEBS_PAGEDEF.WEBS_PAGEDEFID=WEBS_PAGECOMP.ParentStructRowID 
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOTablePart as 
select   TablePartID,WEBS_PAGECOMPID,WEBS_PAGEDEFID
, 
 TablePart.EditForm  
TablePart_EditForm_ID, 
 Func.WEBS_PAGEDEF_BRIEF_F(TablePart.EditForm) 
TablePart_EditForm 
, 
TablePart.AllowEditRowStatusNameValue 
TablePart_AllowEditRowStatusNameValue 
, 
 TablePart.AllowAddNew  
TablePart_AllowAddNew_VAL, 
 decode(TablePart.AllowAddNew 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
TablePart_AllowAddNew 
, 
TablePart.SelectIDParameterName 
TablePart_SelectIDParameterName 
, 
TablePart.Filter_ 
TablePart_Filter_ 
, 
TablePart.FilterUserIDFieldName_ 
TablePart_FilterUserIDFieldName_ 
, 
TablePart.DataNavigateUrlField 
TablePart_DataNavigateUrlField 
, 
TablePart.ClientDefField 
TablePart_ClientDefField 
, 
 TablePart.AllowEditUserClientDef  
TablePart_AllowEditUserClientDef_VAL, 
 decode(TablePart.AllowEditUserClientDef 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
TablePart_AllowEditUserClientDef 
, 
TablePart.PagerSize 
TablePart_PagerSize 
, 
TablePart.AllowEditField 
TablePart_AllowEditField 
, 
TablePart.DeleteCaption 
TablePart_DeleteCaption 
, 
 TablePart.JournalID  
TablePart_JournalID_ID, 
 Func.INSTANCE_BRIEF_F(TablePart.JournalID) 
TablePart_JournalID 
, 
TablePart.ViewCaption 
TablePart_ViewCaption 
, 
TablePart.EditCaption 
TablePart_EditCaption 
, 
 TablePart.AddStatusColumn_  
TablePart_AddStatusColumn__VAL, 
 decode(TablePart.AddStatusColumn_ 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
TablePart_AddStatusColumn_ 
, 
 TablePart.AllowDelete  
TablePart_AllowDelete_VAL, 
 decode(TablePart.AllowDelete 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
TablePart_AllowDelete 
, 
TablePart.FilterUserClientDef 
TablePart_FilterUserClientDef 
, WEBS_PAGEDEF.InstanceID InstanceID 
, TablePart.TablePartID ID 
, 'TablePart' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from TablePart
 join WEBS_PAGECOMP on WEBS_PAGECOMP.WEBS_PAGECOMPID=TablePart.ParentStructRowID 
 join WEBS_PAGEDEF on WEBS_PAGEDEF.WEBS_PAGEDEFID=WEBS_PAGECOMP.ParentStructRowID 
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOReplaceValues as 
select   ReplaceValuesID,WEBS_PAGECOMPID,WEBS_PAGEDEFID
, 
ReplaceValues.SourceName 
ReplaceValues_SourceName 
, 
ReplaceValues.Name 
ReplaceValues_Name 
, WEBS_PAGEDEF.InstanceID InstanceID 
, ReplaceValues.ReplaceValuesID ID 
, 'ReplaceValues' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ReplaceValues
 join WEBS_PAGECOMP on WEBS_PAGECOMP.WEBS_PAGECOMPID=ReplaceValues.ParentStructRowID 
 join WEBS_PAGEDEF on WEBS_PAGEDEF.WEBS_PAGEDEFID=WEBS_PAGECOMP.ParentStructRowID 
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTODenyEdit as 
select   DenyEditID,WEBS_PAGECOMPID,WEBS_PAGEDEFID
, 
DenyEdit.Name 
DenyEdit_Name 
, WEBS_PAGEDEF.InstanceID InstanceID 
, DenyEdit.DenyEditID ID 
, 'DenyEdit' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from DenyEdit
 join WEBS_PAGECOMP on WEBS_PAGECOMP.WEBS_PAGECOMPID=DenyEdit.ParentStructRowID 
 join WEBS_PAGEDEF on WEBS_PAGEDEF.WEBS_PAGEDEFID=WEBS_PAGECOMP.ParentStructRowID 
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTODenyVisible as 
select   DenyVisibleID,WEBS_PAGECOMPID,WEBS_PAGEDEFID
, 
DenyVisible.Name 
DenyVisible_Name 
, WEBS_PAGEDEF.InstanceID InstanceID 
, DenyVisible.DenyVisibleID ID 
, 'DenyVisible' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from DenyVisible
 join WEBS_PAGECOMP on WEBS_PAGECOMP.WEBS_PAGECOMPID=DenyVisible.ParentStructRowID 
 join WEBS_PAGEDEF on WEBS_PAGEDEF.WEBS_PAGEDEFID=WEBS_PAGECOMP.ParentStructRowID 
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOAllowEditFieldValues as 
select   AllowEditFieldValuesID,WEBS_PAGECOMPID,WEBS_PAGEDEFID
, 
AllowEditFieldValues.Name 
AllowEditFieldValues_Name 
, WEBS_PAGEDEF.InstanceID InstanceID 
, AllowEditFieldValues.AllowEditFieldValuesID ID 
, 'AllowEditFieldValues' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from AllowEditFieldValues
 join WEBS_PAGECOMP on WEBS_PAGECOMP.WEBS_PAGECOMPID=AllowEditFieldValues.ParentStructRowID 
 join WEBS_PAGEDEF on WEBS_PAGEDEF.WEBS_PAGEDEFID=WEBS_PAGECOMP.ParentStructRowID 
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOComboFields as 
select   ComboFieldsID,WEBS_PAGECOMPID,WEBS_PAGEDEFID
, 
ComboFields.SourceName 
ComboFields_SourceName 
, 
ComboFields.Name 
ComboFields_Name 
, WEBS_PAGEDEF.InstanceID InstanceID 
, ComboFields.ComboFieldsID ID 
, 'ComboFields' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ComboFields
 join WEBS_PAGECOMP on WEBS_PAGECOMP.WEBS_PAGECOMPID=ComboFields.ParentStructRowID 
 join WEBS_PAGEDEF on WEBS_PAGEDEF.WEBS_PAGEDEFID=WEBS_PAGECOMP.ParentStructRowID 
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_ANKETA as 
select   WEBS_ANKETAID
, 
WEBS_ANKETA.Message 
WEBS_ANKETA_Message 
, 
 WEBS_ANKETA.AnketaDef  
WEBS_ANKETA_AnketaDef_ID, 
 Func.INSTANCE_BRIEF_F(WEBS_ANKETA.AnketaDef) 
WEBS_ANKETA_AnketaDef 
, 
WEBS_ANKETA.Name 
WEBS_ANKETA_Name 
, 
WEBS_ANKETA.the_Description 
WEBS_ANKETA_the_Description 
, WEBS_ANKETA.InstanceID InstanceID 
, WEBS_ANKETA.WEBS_ANKETAID ID 
, 'WEBS_ANKETA' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_ANKETA
 join INSTANCE on WEBS_ANKETA.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewWEBS_WEBS_ANKETA as 
select   WEBS_ANKETAID
, 
WEBS_ANKETA.the_Description 
WEBS_ANKETA_the_Description 
, 
WEBS_ANKETA.Name 
WEBS_ANKETA_Name 
, WEBS_ANKETA.InstanceID InstanceID 
, WEBS_ANKETA.WEBS_ANKETAID ID 
, 'WEBS_ANKETA' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_ANKETA
 join INSTANCE on WEBS_ANKETA.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_QUESTIONS as 
select   WEBS_QUESTIONSID,WEBS_ANKETAID
, 
WEBS_QUESTIONS.QuestionType 
WEBS_QUESTIONS_QuestionType 
, 
 WEBS_QUESTIONS.Required  
WEBS_QUESTIONS_Required_VAL, 
 decode(WEBS_QUESTIONS.Required 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_QUESTIONS_Required 
, 
WEBS_QUESTIONS.Style 
WEBS_QUESTIONS_Style 
, 
WEBS_QUESTIONS.the_Number 
WEBS_QUESTIONS_the_Number 
, 
WEBS_QUESTIONS.Name 
WEBS_QUESTIONS_Name 
, WEBS_ANKETA.InstanceID InstanceID 
, WEBS_QUESTIONS.WEBS_QUESTIONSID ID 
, 'WEBS_QUESTIONS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_QUESTIONS
 join WEBS_ANKETA on WEBS_ANKETA.WEBS_ANKETAID=WEBS_QUESTIONS.ParentStructRowID 
 join INSTANCE on WEBS_ANKETA.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_ANSWERS as 
select   WEBS_ANSWERSID,WEBS_QUESTIONSID,WEBS_ANKETAID
, 
WEBS_ANSWERS.the_Description 
WEBS_ANSWERS_the_Description 
, 
WEBS_ANSWERS.the_Number 
WEBS_ANSWERS_the_Number 
, 
WEBS_ANSWERS.Name 
WEBS_ANSWERS_Name 
, WEBS_ANKETA.InstanceID InstanceID 
, WEBS_ANSWERS.WEBS_ANSWERSID ID 
, 'WEBS_ANSWERS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_ANSWERS
 join WEBS_QUESTIONS on WEBS_QUESTIONS.WEBS_QUESTIONSID=WEBS_ANSWERS.ParentStructRowID 
 join WEBS_ANKETA on WEBS_ANKETA.WEBS_ANKETAID=WEBS_QUESTIONS.ParentStructRowID 
 join INSTANCE on WEBS_ANKETA.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_DDOC as 
select   WEBS_DDOCID
, 
WEBS_DDOC.Title 
WEBS_DDOC_Title 
, 
WEBS_DDOC.FileContract 
WEBS_DDOC_FileContract 
, 
WEBS_DDOC.Name 
WEBS_DDOC_Name 
, 
WEBS_DDOC.FileName 
WEBS_DDOC_FileName 
, WEBS_DDOC.InstanceID InstanceID 
, WEBS_DDOC.WEBS_DDOCID ID 
, 'WEBS_DDOC' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_DDOC
 join INSTANCE on WEBS_DDOC.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewWEBS_WEBS_DDOC as 
select   WEBS_DDOCID
, 
WEBS_DDOC.FileName 
WEBS_DDOC_FileName 
, 
WEBS_DDOC.Name 
WEBS_DDOC_Name 
, 
WEBS_DDOC.Title 
WEBS_DDOC_Title 
, WEBS_DDOC.InstanceID InstanceID 
, WEBS_DDOC.WEBS_DDOCID ID 
, 'WEBS_DDOC' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_DDOC
 join INSTANCE on WEBS_DDOC.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBS_NEWS as 
select   WEBS_NEWSID
, 
WEBS_NEWS.PageContent 
WEBS_NEWS_PageContent 
, 
WEBS_NEWS.NewsDate 
WEBS_NEWS_NewsDate 
, 
WEBS_NEWS.the_Mode 
WEBS_NEWS_the_Mode 
, 
WEBS_NEWS.QueueNumber 
WEBS_NEWS_QueueNumber 
, 
WEBS_NEWS.ShortName 
WEBS_NEWS_ShortName 
, 
WEBS_NEWS.Title 
WEBS_NEWS_Title 
, 
WEBS_NEWS.NewsDescription 
WEBS_NEWS_NewsDescription 
, 
 WEBS_NEWS.the_IsLocked  
WEBS_NEWS_the_IsLocked_VAL, 
 decode(WEBS_NEWS.the_IsLocked 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_NEWS_the_IsLocked 
, 
WEBS_NEWS.Name 
WEBS_NEWS_Name 
, 
 WEBS_NEWS.IsShowHisory  
WEBS_NEWS_IsShowHisory_VAL, 
 decode(WEBS_NEWS.IsShowHisory 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_NEWS_IsShowHisory 
, WEBS_NEWS.InstanceID InstanceID 
, WEBS_NEWS.WEBS_NEWSID ID 
, 'WEBS_NEWS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_NEWS
 join INSTANCE on WEBS_NEWS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTONEWS_PICS as 
select   NEWS_PICSID,WEBS_NEWSID
, 
NEWS_PICS.FileContent 
NEWS_PICS_FileContent 
, 
NEWS_PICS.Name 
NEWS_PICS_Name 
, WEBS_NEWS.InstanceID InstanceID 
, NEWS_PICS.NEWS_PICSID ID 
, 'NEWS_PICS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from NEWS_PICS
 join WEBS_NEWS on WEBS_NEWS.WEBS_NEWSID=NEWS_PICS.ParentStructRowID 
 join INSTANCE on WEBS_NEWS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRCPSeeAlso as 
select   VRCPSeeAlsoID
, 
VRCPSeeAlso.the_Comment 
VRCPSeeAlso_the_Comment 
, 
 VRCPSeeAlso.Document  
VRCPSeeAlso_Document_ID, 
 Func.INSTANCE_BRIEF_F(VRCPSeeAlso.Document) 
VRCPSeeAlso_Document 
, VRCPSeeAlso.InstanceID InstanceID 
, VRCPSeeAlso.VRCPSeeAlsoID ID 
, 'VRCPSeeAlso' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCPSeeAlso
 join INSTANCE on VRCPSeeAlso.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRCPSpecial as 
select   VRCPSpecialID
, 
VRCPSpecial.DateOF 
VRCPSpecial_DateOF 
, 
VRCPSpecial.InfoSrc 
VRCPSpecial_InfoSrc 
, 
VRCPSpecial.theFile 
VRCPSpecial_theFile 
, 
VRCPSpecial.Info 
VRCPSpecial_Info 
, VRCPSpecial.InstanceID InstanceID 
, VRCPSpecial.VRCPSpecialID ID 
, 'VRCPSpecial' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCPSpecial
 join INSTANCE on VRCPSpecial.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRCPPresents as 
select   VRCPPresentsID
, 
VRCPPresents.PresentCost 
VRCPPresents_PresentCost 
, 
VRCPPresents.DateOF 
VRCPPresents_DateOF 
, 
VRCPPresents.Gift 
VRCPPresents_Gift 
, 
VRCPPresents.reason 
VRCPPresents_reason 
, VRCPPresents.InstanceID InstanceID 
, VRCPPresents.VRCPPresentsID ID 
, 'VRCPPresents' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCPPresents
 join INSTANCE on VRCPPresents.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRCPReports as 
select   VRCPReportsID
, 
 VRCPReports.Report  
VRCPReports_Report_ID, 
 Func.INSTANCE_BRIEF_F(VRCPReports.Report) 
VRCPReports_Report 
, VRCPReports.InstanceID InstanceID 
, VRCPReports.VRCPReportsID ID 
, 'VRCPReports' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCPReports
 join INSTANCE on VRCPReports.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewVRCPDates as 
select   VRCPDatesID
, 
VRCPCommon.Family 
VRCPCommon_Family 
, 
VRCPCommon.phone 
VRCPCommon_phone 
, 
VRCPCommon.email 
VRCPCommon_email 
, 
VRCPDates.DateEvent 
VRCPDates_DateEvent 
, 
VRCPCommon.the_Comment 
VRCPCommon_Comment 
, 
VRCPCommon.SurName 
VRCPCommon_SurName 
, 
VRCPCommon.mobile 
VRCPCommon_mobile 
, 
VRCPCommon.Privelegie 
VRCPCommon_Privelegie 
, 
VRCPDates.DateOf 
VRCPDates_DateOf 
, 
 VRCPCommon.Curator  
VRCPCommon_Curator_ID, 
 Func.Users_BRIEF_F(VRCPCommon.Curator) 
VRCPCommon_Curator 
, 
VRCPCommon.Name 
VRCPCommon_Name 
, 
VRCPCommon.fax 
VRCPCommon_fax 
, VRCPDates.InstanceID InstanceID 
, VRCPDates.VRCPDatesID ID 
, 'VRCPDates' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCPDates
 join INSTANCE on VRCPDates.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join VRCPCommon ON VRCPCommon.InstanceID=VRCPDates.InstanceID 
;
create or replace view V_AUTOVRCPDates as 
select   VRCPDatesID
, 
VRCPDates.DateEvent 
VRCPDates_DateEvent 
, 
VRCPDates.DateOf 
VRCPDates_DateOf 
, VRCPDates.InstanceID InstanceID 
, VRCPDates.VRCPDatesID ID 
, 'VRCPDates' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCPDates
 join INSTANCE on VRCPDates.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRCPNeigborhood as 
select   VRCPNeigborhoodID
, 
 VRCPNeigborhood.person  
VRCPNeigborhood_person_ID, 
 Func.INSTANCE_BRIEF_F(VRCPNeigborhood.person) 
VRCPNeigborhood_person 
, 
VRCPNeigborhood.the_Level 
VRCPNeigborhood_the_Level 
, VRCPNeigborhood.InstanceID InstanceID 
, VRCPNeigborhood.VRCPNeigborhoodID ID 
, 'VRCPNeigborhood' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCPNeigborhood
 join INSTANCE on VRCPNeigborhood.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRCPInterest as 
select   VRCPInterestID
, 
VRCPInterest.Info 
VRCPInterest_Info 
, VRCPInterest.InstanceID InstanceID 
, VRCPInterest.VRCPInterestID ID 
, 'VRCPInterest' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCPInterest
 join INSTANCE on VRCPInterest.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewVRCPInterest as 
select   VRCPInterestID
, 
VRCPCommon.Privelegie 
VRCPCommon_Privelegie 
, 
VRCPCommon.email 
VRCPCommon_email 
, 
 VRCPCommon.Loyality  
VRCPCommon_Loyality_ID, 
 Func.VRDLoyalty_BRIEF_F(VRCPCommon.Loyality) 
VRCPCommon_Loyality 
, 
VRCPCommon.the_Comment 
VRCPCommon_Comment 
, 
VRCPCommon.Name 
VRCPCommon_Name 
, 
VRCPCommon.phone 
VRCPCommon_phone 
, 
VRCPCommon.fax 
VRCPCommon_fax 
, 
VRCPInterest.Info 
VRCPInterest_Info 
, 
VRCPCommon.SurName 
VRCPCommon_SurName 
, 
VRCPCommon.Family 
VRCPCommon_Family 
, VRCPInterest.InstanceID InstanceID 
, VRCPInterest.VRCPInterestID ID 
, 'VRCPInterest' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCPInterest
 join INSTANCE on VRCPInterest.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join VRCPCommon ON VRCPCommon.InstanceID=VRCPInterest.InstanceID 
;
create or replace view V_viewVRCPCommon as 
select   VRCPCommonID
, 
VRCPCommon.Privelegie 
VRCPCommon_Privelegie 
, 
VRCPCommon.the_Comment 
VRCPCommon_Comment 
, 
VRCPCommon.email 
VRCPCommon_email 
, 
VRCPCommon.Family 
VRCPCommon_Family 
, 
VRCPCommon.SurName 
VRCPCommon_SurName 
, 
 VRCPCommon.Curator  
VRCPCommon_Curator_ID, 
 Func.Users_BRIEF_F(VRCPCommon.Curator) 
VRCPCommon_Curator 
, 
 VRCPCommon.Loyality  
VRCPCommon_Loyality_ID, 
 Func.VRDLoyalty_BRIEF_F(VRCPCommon.Loyality) 
VRCPCommon_Loyality 
, 
VRCPCommon.Name 
VRCPCommon_Name 
, 
VRCPCommon.fax 
VRCPCommon_fax 
, 
VRCPCommon.phone 
VRCPCommon_phone 
, VRCPCommon.InstanceID InstanceID 
, VRCPCommon.VRCPCommonID ID 
, 'VRCPCommon' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCPCommon
 join INSTANCE on VRCPCommon.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOVRCPCommon as 
select   VRCPCommonID
, 
VRCPCommon.ActionReason 
VRCPCommon_ActionReason 
, 
VRCPCommon.the_Comment 
VRCPCommon_the_Comment 
, 
VRCPCommon.email 
VRCPCommon_email 
, 
VRCPCommon.phone 
VRCPCommon_phone 
, 
 VRCPCommon.Curator  
VRCPCommon_Curator_ID, 
 Func.Users_BRIEF_F(VRCPCommon.Curator) 
VRCPCommon_Curator 
, 
VRCPCommon.ActionStart 
VRCPCommon_ActionStart 
, 
 VRCPCommon.PersonDeYuro  
VRCPCommon_PersonDeYuro_VAL, 
 decode(VRCPCommon.PersonDeYuro 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
VRCPCommon_PersonDeYuro 
, 
VRCPCommon.SurName 
VRCPCommon_SurName 
, 
VRCPCommon.mobile 
VRCPCommon_mobile 
, 
VRCPCommon.fax 
VRCPCommon_fax 
, 
VRCPCommon.Family 
VRCPCommon_Family 
, 
VRCPCommon.ActionEnd 
VRCPCommon_ActionEnd 
, 
VRCPCommon.Privelegie 
VRCPCommon_Privelegie 
, 
VRCPCommon.Name 
VRCPCommon_Name 
, 
VRCPCommon.Address 
VRCPCommon_Address 
, 
 VRCPCommon.Loyality  
VRCPCommon_Loyality_ID, 
 Func.VRDLoyalty_BRIEF_F(VRCPCommon.Loyality) 
VRCPCommon_Loyality 
, 
VRCPCommon.PassportInfo 
VRCPCommon_PassportInfo 
, VRCPCommon.InstanceID InstanceID 
, VRCPCommon.VRCPCommonID ID 
, 'VRCPCommon' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VRCPCommon
 join INSTANCE on VRCPCommon.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKZR_DATA as 
select   PEKZR_DATAID
, 
PEKZR_DATA.TheDate 
PEKZR_DATA_TheDate 
, 
 PEKZR_DATA.TheDept  
PEKZR_DATA_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKZR_DATA.TheDept) 
PEKZR_DATA_TheDept 
, 
PEKZR_DATA.TheValue 
PEKZR_DATA_TheValue 
, PEKZR_DATA.InstanceID InstanceID 
, PEKZR_DATA.PEKZR_DATAID ID 
, 'PEKZR_DATA' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKZR_DATA
 join INSTANCE on PEKZR_DATA.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKZR_PEKZR_DATA as 
select   PEKZR_DATAID
, 
PEKZR_DATA.TheValue 
PEKZR_DATA_TheValue 
, 
PEKZR_DATA.TheDate 
PEKZR_DATA_TheDate 
, 
 PEKZR_DATA.TheDept  
PEKZR_DATA_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKZR_DATA.TheDept) 
PEKZR_DATA_TheDept 
, PEKZR_DATA.InstanceID InstanceID 
, PEKZR_DATA.PEKZR_DATAID ID 
, 'PEKZR_DATA' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKZR_DATA
 join INSTANCE on PEKZR_DATA.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWEBCRD_NUM as 
select   WEBCRD_NUMID
, 
WEBCRD_NUM.ActivationTime 
WEBCRD_NUM_ActivationTime 
, 
WEBCRD_NUM.TheNumber 
WEBCRD_NUM_TheNumber 
, 
 WEBCRD_NUM.Activated  
WEBCRD_NUM_Activated_VAL, 
 decode(WEBCRD_NUM.Activated 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBCRD_NUM_Activated 
, 
 WEBCRD_NUM.ActivatedBy  
WEBCRD_NUM_ActivatedBy_ID, 
 Func.INSTANCE_BRIEF_F(WEBCRD_NUM.ActivatedBy) 
WEBCRD_NUM_ActivatedBy 
, WEBCRD_NUM.InstanceID InstanceID 
, WEBCRD_NUM.WEBCRD_NUMID ID 
, 'WEBCRD_NUM' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBCRD_NUM
 join INSTANCE on WEBCRD_NUM.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOWBCRD_DEF as 
select   WBCRD_DEFID
, 
 WBCRD_DEF.TheCurrency  
WBCRD_DEF_TheCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(WBCRD_DEF.TheCurrency) 
WBCRD_DEF_TheCurrency 
, 
WBCRD_DEF.ExpDate 
WBCRD_DEF_ExpDate 
, 
WBCRD_DEF.TheDate 
WBCRD_DEF_TheDate 
, 
WBCRD_DEF.CardSumm 
WBCRD_DEF_CardSumm 
, WBCRD_DEF.InstanceID InstanceID 
, WBCRD_DEF.WBCRD_DEFID ID 
, 'WBCRD_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WBCRD_DEF
 join INSTANCE on WBCRD_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewWEBCRD_WBCRD_DEF as 
select   WBCRD_DEFID
, 
WBCRD_DEF.ExpDate 
WBCRD_DEF_ExpDate 
, 
 WBCRD_DEF.TheCurrency  
WBCRD_DEF_TheCurrency_ID, 
 Func.ENTDIC_CURRENCY_BRIEF_F(WBCRD_DEF.TheCurrency) 
WBCRD_DEF_TheCurrency 
, 
WBCRD_DEF.TheDate 
WBCRD_DEF_TheDate 
, 
WBCRD_DEF.CardSumm 
WBCRD_DEF_CardSumm 
, WBCRD_DEF.InstanceID InstanceID 
, WBCRD_DEF.WBCRD_DEFID ID 
, 'WBCRD_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WBCRD_DEF
 join INSTANCE on WBCRD_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKO_DEF as 
select   PEKO_DEFID
, 
PEKO_DEF.Code1C 
PEKO_DEF_Code1C 
, 
 PEKO_DEF.ToClient  
PEKO_DEF_ToClient_ID, 
 Func.INSTANCE_BRIEF_F(PEKO_DEF.ToClient) 
PEKO_DEF_ToClient 
, 
 PEKO_DEF.TheDept  
PEKO_DEF_TheDept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKO_DEF.TheDept) 
PEKO_DEF_TheDept 
, 
PEKO_DEF.PLPNUM 
PEKO_DEF_PLPNUM 
, 
PEKO_DEF.PLPDate 
PEKO_DEF_PLPDate 
, 
PEKO_DEF.TheComment 
PEKO_DEF_TheComment 
, 
PEKO_DEF.PLPSumm 
PEKO_DEF_PLPSumm 
, PEKO_DEF.InstanceID InstanceID 
, PEKO_DEF.PEKO_DEFID ID 
, 'PEKO_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKO_DEF
 join INSTANCE on PEKO_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKL_DEF as 
select   PEKL_DEFID
, 
PEKL_DEF.ToDate 
PEKL_DEF_ToDate 
, 
PEKL_DEF.FromDate 
PEKL_DEF_FromDate 
, 
 PEKL_DEF.TheDep  
PEKL_DEF_TheDep_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKL_DEF.TheDep) 
PEKL_DEF_TheDep 
, PEKL_DEF.InstanceID InstanceID 
, PEKL_DEF.PEKL_DEFID ID 
, 'PEKL_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKL_DEF
 join INSTANCE on PEKL_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKL_PEKL_DEF as 
select   PEKL_DEFID
, 
PEKL_DEF.FromDate 
PEKL_DEF_FromDate 
, 
 PEKL_DEF.TheDep  
PEKL_DEF_TheDep_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKL_DEF.TheDep) 
PEKL_DEF_TheDep 
, 
PEKL_DEF.ToDate 
PEKL_DEF_ToDate 
, PEKL_DEF.InstanceID InstanceID 
, PEKL_DEF.PEKL_DEFID ID 
, 'PEKL_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKL_DEF
 join INSTANCE on PEKL_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKL_WDAY as 
select   PEKL_WDAYID
, 
 PEKL_WDAY.GOTYPE  
PEKL_WDAY_GOTYPE_ID, 
 Func.PEKD_GOTYPE_BRIEF_F(PEKL_WDAY.GOTYPE) 
PEKL_WDAY_GOTYPE 
, 
PEKL_WDAY.WeightValue 
PEKL_WDAY_WeightValue 
, 
PEKL_WDAY.TheValue 
PEKL_WDAY_TheValue 
, 
 PEKL_WDAY.Train  
PEKL_WDAY_Train_ID, 
 Func.PEKD_TRAINS_BRIEF_F(PEKL_WDAY.Train) 
PEKL_WDAY_Train 
, 
PEKL_WDAY.the_Description 
PEKL_WDAY_the_Description 
, 
 PEKL_WDAY.WeightEDIZM  
PEKL_WDAY_WeightEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKL_WDAY.WeightEDIZM) 
PEKL_WDAY_WeightEDIZM 
, 
 PEKL_WDAY.TheValueEDIZM  
PEKL_WDAY_TheValueEDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKL_WDAY.TheValueEDIZM) 
PEKL_WDAY_TheValueEDIZM 
, PEKL_WDAY.InstanceID InstanceID 
, PEKL_WDAY.PEKL_WDAYID ID 
, 'PEKL_WDAY' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKL_WDAY
 join INSTANCE on PEKL_WDAY.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_ADDS as 
select   PEKD_ADDSID
, 
PEKD_ADDS.Name 
PEKD_ADDS_Name 
, 
 PEKD_ADDS.CalcType  
PEKD_ADDS_CalcType_VAL, 
 decode(PEKD_ADDS.CalcType 
, 1 ,'Объем'
, 2 ,'Плотность'
, 3 ,'Прочее'
, 0 ,'Вес'
, '???') 
PEKD_ADDS_CalcType 
, PEKD_ADDS.InstanceID InstanceID 
, PEKD_ADDS.PEKD_ADDSID ID 
, 'PEKD_ADDS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_ADDS
 join INSTANCE on PEKD_ADDS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_TRAINTYPE as 
select   PEKD_TRAINTYPEID
, 
PEKD_TRAINTYPE.name 
PEKD_TRAINTYPE_name 
, PEKD_TRAINTYPE.InstanceID InstanceID 
, PEKD_TRAINTYPE.PEKD_TRAINTYPEID ID 
, 'PEKD_TRAINTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_TRAINTYPE
 join INSTANCE on PEKD_TRAINTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_TRAINTYPE as 
select   PEKD_TRAINTYPEID
, 
PEKD_TRAINTYPE.name 
PEKD_TRAINTYPE_name 
, PEKD_TRAINTYPE.InstanceID InstanceID 
, PEKD_TRAINTYPE.PEKD_TRAINTYPEID ID 
, 'PEKD_TRAINTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_TRAINTYPE
 join INSTANCE on PEKD_TRAINTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_AUTO as 
select   PEKD_AUTOID
, 
PEKD_AUTO.TheDimentions 
PEKD_AUTO_TheDimentions 
, 
PEKD_AUTO.TheVolume 
PEKD_AUTO_TheVolume 
, 
PEKD_AUTO.Name 
PEKD_AUTO_Name 
, PEKD_AUTO.InstanceID InstanceID 
, PEKD_AUTO.PEKD_AUTOID ID 
, 'PEKD_AUTO' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_AUTO
 join INSTANCE on PEKD_AUTO.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_AUTO as 
select   PEKD_AUTOID
, 
PEKD_AUTO.TheDimentions 
PEKD_AUTO_TheDimentions 
, 
PEKD_AUTO.TheVolume 
PEKD_AUTO_TheVolume 
, 
PEKD_AUTO.Name 
PEKD_AUTO_Name 
, PEKD_AUTO.InstanceID InstanceID 
, PEKD_AUTO.PEKD_AUTOID ID 
, 'PEKD_AUTO' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_AUTO
 join INSTANCE on PEKD_AUTO.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_GOTYPE as 
select   PEKD_GOTYPEID
, 
PEKD_GOTYPE.name 
PEKD_GOTYPE_name 
, PEKD_GOTYPE.InstanceID InstanceID 
, PEKD_GOTYPE.PEKD_GOTYPEID ID 
, 'PEKD_GOTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_GOTYPE
 join INSTANCE on PEKD_GOTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_GOTYPE as 
select   PEKD_GOTYPEID
, 
PEKD_GOTYPE.name 
PEKD_GOTYPE_name 
, PEKD_GOTYPE.InstanceID InstanceID 
, PEKD_GOTYPE.PEKD_GOTYPEID ID 
, 'PEKD_GOTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_GOTYPE
 join INSTANCE on PEKD_GOTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_INFOSENDTYPE as 
select   PEKD_INFOSENDTYPEID
, 
PEKD_INFOSENDTYPE.Name 
PEKD_INFOSENDTYPE_Name 
, PEKD_INFOSENDTYPE.InstanceID InstanceID 
, PEKD_INFOSENDTYPE.PEKD_INFOSENDTYPEID ID 
, 'PEKD_INFOSENDTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_INFOSENDTYPE
 join INSTANCE on PEKD_INFOSENDTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_INFOSENDTYPE as 
select   PEKD_INFOSENDTYPEID
, 
PEKD_INFOSENDTYPE.Name 
PEKD_INFOSENDTYPE_Name 
, PEKD_INFOSENDTYPE.InstanceID InstanceID 
, PEKD_INFOSENDTYPE.PEKD_INFOSENDTYPEID ID 
, 'PEKD_INFOSENDTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_INFOSENDTYPE
 join INSTANCE on PEKD_INFOSENDTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_TRTYPE as 
select   PEKD_TRTYPEID
, 
PEKD_TRTYPE.name 
PEKD_TRTYPE_name 
, PEKD_TRTYPE.InstanceID InstanceID 
, PEKD_TRTYPE.PEKD_TRTYPEID ID 
, 'PEKD_TRTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_TRTYPE
 join INSTANCE on PEKD_TRTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_TRTYPE as 
select   PEKD_TRTYPEID
, 
PEKD_TRTYPE.name 
PEKD_TRTYPE_name 
, PEKD_TRTYPE.InstanceID InstanceID 
, PEKD_TRTYPE.PEKD_TRTYPEID ID 
, 'PEKD_TRTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_TRTYPE
 join INSTANCE on PEKD_TRTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_POSTTYPE as 
select   PEKD_POSTTYPEID
, 
PEKD_POSTTYPE.Name 
PEKD_POSTTYPE_Name 
, PEKD_POSTTYPE.InstanceID InstanceID 
, PEKD_POSTTYPE.PEKD_POSTTYPEID ID 
, 'PEKD_POSTTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_POSTTYPE
 join INSTANCE on PEKD_POSTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_POSTTYPE as 
select   PEKD_POSTTYPEID
, 
PEKD_POSTTYPE.Name 
PEKD_POSTTYPE_Name 
, PEKD_POSTTYPE.InstanceID InstanceID 
, PEKD_POSTTYPE.PEKD_POSTTYPEID ID 
, 'PEKD_POSTTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_POSTTYPE
 join INSTANCE on PEKD_POSTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_TRFGRP as 
select   PEKD_TRFGRPID
, 
PEKD_TRFGRP.name 
PEKD_TRFGRP_name 
, PEKD_TRFGRP.InstanceID InstanceID 
, PEKD_TRFGRP.PEKD_TRFGRPID ID 
, 'PEKD_TRFGRP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_TRFGRP
 join INSTANCE on PEKD_TRFGRP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_TRFGRP as 
select   PEKD_TRFGRPID
, 
PEKD_TRFGRP.name 
PEKD_TRFGRP_name 
, PEKD_TRFGRP.InstanceID InstanceID 
, PEKD_TRFGRP.PEKD_TRFGRPID ID 
, 'PEKD_TRFGRP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_TRFGRP
 join INSTANCE on PEKD_TRFGRP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_TRFTYPE as 
select   PEKD_TRFTYPEID,PEKD_TRFGRPID
, 
PEKD_TRFGRP.name 
PEKD_TRFGRP_name 
, 
PEKD_TRFTYPE.name 
PEKD_TRFTYPE_name 
, PEKD_TRFGRP.InstanceID InstanceID 
, PEKD_TRFTYPE.PEKD_TRFTYPEID ID 
, 'PEKD_TRFTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_TRFTYPE
 join PEKD_TRFGRP on PEKD_TRFGRP.PEKD_TRFGRPID=PEKD_TRFTYPE.ParentStructRowID 
 join INSTANCE on PEKD_TRFGRP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_TRFTYPE as 
select   PEKD_TRFTYPEID,PEKD_TRFGRPID
, 
PEKD_TRFTYPE.name 
PEKD_TRFTYPE_name 
, PEKD_TRFGRP.InstanceID InstanceID 
, PEKD_TRFTYPE.PEKD_TRFTYPEID ID 
, 'PEKD_TRFTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_TRFTYPE
 join PEKD_TRFGRP on PEKD_TRFGRP.PEKD_TRFGRPID=PEKD_TRFTYPE.ParentStructRowID 
 join INSTANCE on PEKD_TRFGRP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_DEPT as 
select   PEKD_DEPTID
, 
PEKD_DEPT.name 
PEKD_DEPT_name 
, 
PEKD_DEPT.Address 
PEKD_DEPT_Address 
, PEKD_DEPT.InstanceID InstanceID 
, PEKD_DEPT.PEKD_DEPTID ID 
, 'PEKD_DEPT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_DEPT
 join INSTANCE on PEKD_DEPT.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_DEPT as 
select   PEKD_DEPTID
, 
PEKD_DEPT.PGDPName 
PEKD_DEPT_PGDPName 
, 
 PEKD_DEPT.town  
PEKD_DEPT_town_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(PEKD_DEPT.town) 
PEKD_DEPT_town 
, 
PEKD_DEPT.Address 
PEKD_DEPT_Address 
, 
 PEKD_DEPT.Supplier  
PEKD_DEPT_Supplier_ID, 
 Func.INSTANCE_BRIEF_F(PEKD_DEPT.Supplier) 
PEKD_DEPT_Supplier 
, 
PEKD_DEPT.Code1C 
PEKD_DEPT_Code1C 
, 
PEKD_DEPT.DocPrefix 
PEKD_DEPT_DocPrefix 
, 
PEKD_DEPT.name 
PEKD_DEPT_name 
, PEKD_DEPT.InstanceID InstanceID 
, PEKD_DEPT.PEKD_DEPTID ID 
, 'PEKD_DEPT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_DEPT
 join INSTANCE on PEKD_DEPT.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_DEPLIMITS as 
select   PEKD_DEPLIMITSID,PEKD_DEPTID
, 
 PEKD_DEPLIMITS.Supplier  
PEKD_DEPLIMITS_Supplier_ID, 
 Func.INSTANCE_BRIEF_F(PEKD_DEPLIMITS.Supplier) 
PEKD_DEPLIMITS_Supplier 
, 
PEKD_DEPLIMITS.DaysToCrash 
PEKD_DEPLIMITS_DaysToCrash 
, 
PEKD_DEPLIMITS.LimitMark 
PEKD_DEPLIMITS_LimitMark 
, PEKD_DEPT.InstanceID InstanceID 
, PEKD_DEPLIMITS.PEKD_DEPLIMITSID ID 
, 'PEKD_DEPLIMITS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_DEPLIMITS
 join PEKD_DEPT on PEKD_DEPT.PEKD_DEPTID=PEKD_DEPLIMITS.ParentStructRowID 
 join INSTANCE on PEKD_DEPT.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_DEPDOG as 
select   PEKD_DEPDOGID,PEKD_DEPTID
, 
 PEKD_DEPDOG.TheDogovor  
PEKD_DEPDOG_TheDogovor_ID, 
 Func.INSTANCE_BRIEF_F(PEKD_DEPDOG.TheDogovor) 
PEKD_DEPDOG_TheDogovor 
, 
 PEKD_DEPDOG.Supplier  
PEKD_DEPDOG_Supplier_ID, 
 Func.INSTANCE_BRIEF_F(PEKD_DEPDOG.Supplier) 
PEKD_DEPDOG_Supplier 
, PEKD_DEPT.InstanceID InstanceID 
, PEKD_DEPDOG.PEKD_DEPDOGID ID 
, 'PEKD_DEPDOG' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_DEPDOG
 join PEKD_DEPT on PEKD_DEPT.PEKD_DEPTID=PEKD_DEPDOG.ParentStructRowID 
 join INSTANCE on PEKD_DEPT.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_DIRECTION as 
select   PEKD_DIRECTIONID
, 
 PEKD_DIRECTION.Town  
PEKD_DIRECTION_Town_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(PEKD_DIRECTION.Town) 
PEKD_DIRECTION_Town 
, 
 PEKD_DIRECTION.Dept  
PEKD_DIRECTION_Dept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKD_DIRECTION.Dept) 
PEKD_DIRECTION_Dept 
, 
 PEKD_DIRECTION.TheTransport  
PEKD_DIRECTION_TheTransport_ID, 
 Func.ENTDIC_TransportType_BRIEF_F(PEKD_DIRECTION.TheTransport) 
PEKD_DIRECTION_TheTransport 
, 
PEKD_DIRECTION.the_Rule 
PEKD_DIRECTION_the_Rule 
, 
PEKD_DIRECTION.Name 
PEKD_DIRECTION_Name 
, 
PEKD_DIRECTION.POSTINDEX 
PEKD_DIRECTION_POSTINDEX 
, 
PEKD_DIRECTION.Srok 
PEKD_DIRECTION_Srok 
, 
 PEKD_DIRECTION.TheAgent  
PEKD_DIRECTION_TheAgent_ID, 
 Func.INSTANCE_BRIEF_F(PEKD_DIRECTION.TheAgent) 
PEKD_DIRECTION_TheAgent 
, PEKD_DIRECTION.InstanceID InstanceID 
, PEKD_DIRECTION.PEKD_DIRECTIONID ID 
, 'PEKD_DIRECTION' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_DIRECTION
 join INSTANCE on PEKD_DIRECTION.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_DIRECTION as 
select   PEKD_DIRECTIONID
, 
PEKD_DIRECTION.Srok 
PEKD_DIRECTION_Srok 
, 
PEKD_DIRECTION.Name 
PEKD_DIRECTION_Name 
, 
 PEKD_DIRECTION.Dept  
PEKD_DIRECTION_Dept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKD_DIRECTION.Dept) 
PEKD_DIRECTION_Dept 
, 
 PEKD_DIRECTION.Town  
PEKD_DIRECTION_Town_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(PEKD_DIRECTION.Town) 
PEKD_DIRECTION_Town 
, 
PEKD_DIRECTION.the_Rule 
PEKD_DIRECTION_Rule 
, PEKD_DIRECTION.InstanceID InstanceID 
, PEKD_DIRECTION.PEKD_DIRECTIONID ID 
, 'PEKD_DIRECTION' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_DIRECTION
 join INSTANCE on PEKD_DIRECTION.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_TRAINS as 
select   PEKD_TRAINSID,PEKD_DIRECTIONID
, 
PEKD_TRAINS.TheComment 
PEKD_TRAINS_TheComment 
, 
PEKD_TRAINS.TrainNo 
PEKD_TRAINS_TrainNo 
, 
 PEKD_TRAINS.TrainType  
PEKD_TRAINS_TrainType_ID, 
 Func.PEKD_TRAINTYPE_BRIEF_F(PEKD_TRAINS.TrainType) 
PEKD_TRAINS_TrainType 
, 
 PEKD_TRAINS.ToSTATION  
PEKD_TRAINS_ToSTATION_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(PEKD_TRAINS.ToSTATION) 
PEKD_TRAINS_ToSTATION 
, 
PEKD_TRAINS.the_Rule 
PEKD_TRAINS_the_Rule 
, 
PEKD_TRAINS.TheDesciption 
PEKD_TRAINS_TheDesciption 
, 
 PEKD_TRAINS.FromStation  
PEKD_TRAINS_FromStation_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(PEKD_TRAINS.FromStation) 
PEKD_TRAINS_FromStation 
, PEKD_DIRECTION.InstanceID InstanceID 
, PEKD_TRAINS.PEKD_TRAINSID ID 
, 'PEKD_TRAINS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_TRAINS
 join PEKD_DIRECTION on PEKD_DIRECTION.PEKD_DIRECTIONID=PEKD_TRAINS.ParentStructRowID 
 join INSTANCE on PEKD_DIRECTION.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_TRAINS as 
select   PEKD_TRAINSID,PEKD_DIRECTIONID
, 
 PEKD_TRAINS.FromStation  
PEKD_TRAINS_FromStation_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(PEKD_TRAINS.FromStation) 
PEKD_TRAINS_FromStation 
, 
PEKD_DIRECTION.the_Rule 
PEKD_DIRECTION_Rule 
, 
 PEKD_DIRECTION.Town  
PEKD_DIRECTION_Town_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(PEKD_DIRECTION.Town) 
PEKD_DIRECTION_Town 
, 
PEKD_DIRECTION.Name 
PEKD_DIRECTION_Name 
, 
PEKD_TRAINS.TheComment 
PEKD_TRAINS_TheComment 
, 
PEKD_TRAINS.TrainNo 
PEKD_TRAINS_TrainNo 
, 
 PEKD_DIRECTION.Dept  
PEKD_DIRECTION_Dept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKD_DIRECTION.Dept) 
PEKD_DIRECTION_Dept 
, 
PEKD_TRAINS.the_Rule 
PEKD_TRAINS_Rule 
, 
PEKD_DIRECTION.Srok 
PEKD_DIRECTION_Srok 
, 
 PEKD_TRAINS.ToSTATION  
PEKD_TRAINS_ToSTATION_ID, 
 Func.PEKD_DIRSTATION_BRIEF_F(PEKD_TRAINS.ToSTATION) 
PEKD_TRAINS_ToSTATION 
, 
PEKD_TRAINS.TheDesciption 
PEKD_TRAINS_TheDesciption 
, 
 PEKD_TRAINS.TrainType  
PEKD_TRAINS_TrainType_ID, 
 Func.PEKD_TRAINTYPE_BRIEF_F(PEKD_TRAINS.TrainType) 
PEKD_TRAINS_TrainType 
, PEKD_DIRECTION.InstanceID InstanceID 
, PEKD_TRAINS.PEKD_TRAINSID ID 
, 'PEKD_TRAINS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_TRAINS
 join PEKD_DIRECTION on PEKD_DIRECTION.PEKD_DIRECTIONID=PEKD_TRAINS.ParentStructRowID 
 join INSTANCE on PEKD_DIRECTION.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_DIRSTATION as 
select   PEKD_DIRSTATIONID,PEKD_DIRECTIONID
, 
 PEKD_DIRECTION.Dept  
PEKD_DIRECTION_Dept_ID, 
 Func.PEKD_DEPT_BRIEF_F(PEKD_DIRECTION.Dept) 
PEKD_DIRECTION_Dept 
, 
 PEKD_DIRECTION.Town  
PEKD_DIRECTION_Town_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(PEKD_DIRECTION.Town) 
PEKD_DIRECTION_Town 
, 
PEKD_DIRECTION.the_Rule 
PEKD_DIRECTION_Rule 
, 
 PEKD_DIRSTATION.TheNextTown  
PEKD_DIRSTATION_TheNextTown_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(PEKD_DIRSTATION.TheNextTown) 
PEKD_DIRSTATION_TheNextTown 
, 
PEKD_DIRECTION.Name 
PEKD_DIRECTION_Name 
, 
PEKD_DIRSTATION.name 
PEKD_DIRSTATION_name 
, 
PEKD_DIRECTION.Srok 
PEKD_DIRECTION_Srok 
, PEKD_DIRECTION.InstanceID InstanceID 
, PEKD_DIRSTATION.PEKD_DIRSTATIONID ID 
, 'PEKD_DIRSTATION' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_DIRSTATION
 join PEKD_DIRECTION on PEKD_DIRECTION.PEKD_DIRECTIONID=PEKD_DIRSTATION.ParentStructRowID 
 join INSTANCE on PEKD_DIRECTION.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_DIRSTATION as 
select   PEKD_DIRSTATIONID,PEKD_DIRECTIONID
, 
PEKD_DIRSTATION.POSTINDEX 
PEKD_DIRSTATION_POSTINDEX 
, 
 PEKD_DIRSTATION.TheNextTown  
PEKD_DIRSTATION_TheNextTown_ID, 
 Func.ENTDIC_TOWN_BRIEF_F(PEKD_DIRSTATION.TheNextTown) 
PEKD_DIRSTATION_TheNextTown 
, 
PEKD_DIRSTATION.name 
PEKD_DIRSTATION_name 
, 
 PEKD_DIRSTATION.region  
PEKD_DIRSTATION_region_ID, 
 Func.ENTDIC_REGION_BRIEF_F(PEKD_DIRSTATION.region) 
PEKD_DIRSTATION_region 
, 
PEKD_DIRSTATION.area 
PEKD_DIRSTATION_area 
, PEKD_DIRECTION.InstanceID InstanceID 
, PEKD_DIRSTATION.PEKD_DIRSTATIONID ID 
, 'PEKD_DIRSTATION' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_DIRSTATION
 join PEKD_DIRECTION on PEKD_DIRECTION.PEKD_DIRECTIONID=PEKD_DIRSTATION.ParentStructRowID 
 join INSTANCE on PEKD_DIRECTION.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_AUTOPEKD_SRV as 
select   PEKD_SRVID
, 
PEKD_SRV.Code1C 
PEKD_SRV_Code1C 
, 
 PEKD_SRV.DependOnWeight  
PEKD_SRV_DependOnWeight_VAL, 
 decode(PEKD_SRV.DependOnWeight 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PEKD_SRV_DependOnWeight 
, 
 PEKD_SRV.EDIZM  
PEKD_SRV_EDIZM_ID, 
 Func.ENTDIC_EDIZM_BRIEF_F(PEKD_SRV.EDIZM) 
PEKD_SRV_EDIZM 
, 
PEKD_SRV.name 
PEKD_SRV_name 
, PEKD_SRV.InstanceID InstanceID 
, PEKD_SRV.PEKD_SRVID ID 
, 'PEKD_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_SRV
 join INSTANCE on PEKD_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
create or replace view V_viewPEKD_PEKD_SRV as 
select   PEKD_SRVID
, 
PEKD_SRV.name 
PEKD_SRV_name 
, PEKD_SRV.InstanceID InstanceID 
, PEKD_SRV.PEKD_SRVID ID 
, 'PEKD_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PEKD_SRV
 join INSTANCE on PEKD_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
;
"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Procedures.Kernel.Header" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Procedures.Type.Header" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Procedures.Methods" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Custom" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Functions.Body" File=""><BlockHolder BlockName="--body" BlockCode=" 

 create or replace package body Func as

  function instance_BRIEF_F  (
 ainstanceid CHAR
)return varchar as  
 aBRIEF varchar(4000);
 atmpCnt numeric;
 begin
if ainstanceid is null then aBRIEF:=''; return (aBRIEF); end if;
 -- Brief body --
select count(*) into aTmpCnt from instance where instanceID=ainstanceID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
  select aBRIEF
  ||  nvl(Name,' ')||'; ' into aBrief
  from instance where  instanceID = ainstanceID;
else 
  aBRIEF:= 'неверный идентификатор';
End if;
 aBRIEF:=substr(aBRIEF,1,255);
  return (aBRIEF);
End;


function FilterFieldGroup_BRIEF_F  (
 aFilterFieldGroupid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFilterFieldGroupid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FilterFieldGroup where FilterFieldGroupID=aFilterFieldGroupID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from FilterFieldGroup  where  FilterFieldGroupID = aFilterFieldGroupID; 
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from FilterFieldGroup  where  FilterFieldGroupID = aFilterFieldGroupID; 
  select  aBRIEF ||
  Decode( AllowIgnore
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from FilterFieldGroup where FilterFieldGroupID=aFilterFieldGroupID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FileterField_BRIEF_F  (
 aFileterFieldid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFileterFieldid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FileterField where FileterFieldID=aFileterFieldID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from FileterField  where  FileterFieldID = aFileterFieldID; 
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from FileterField  where  FileterFieldID = aFileterFieldID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Filters_BRIEF_F  (
 aFiltersid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFiltersid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Filters where FiltersID=aFiltersID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Filters  where  FiltersID = aFiltersID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEK103_DEF_BRIEF_F  (
 aPEK103_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEK103_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEK103_DEF where PEK103_DEFID=aPEK103_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheNumber),' ') ||'; '
  into aBrief from PEK103_DEF  where  PEK103_DEFID = aPEK103_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(Sender),' ') ||'; '
  into aBrief from PEK103_DEF  where  PEK103_DEFID = aPEK103_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(RcvDate),' ') ||'; '
  into aBrief from PEK103_DEF  where  PEK103_DEFID = aPEK103_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEK103_LINES_BRIEF_F  (
 aPEK103_LINESid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEK103_LINESid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEK103_LINES where PEK103_LINESID=aPEK103_LINESID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select IndexTo
 into atmpID  from PEK103_LINES  where  PEK103_LINESID = aPEK103_LINESID ;
 atmpBrief := func.PEKD_DIRSTATION_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(Reciever),' ') ||'; '
  into aBrief from PEK103_LINES  where  PEK103_LINESID = aPEK103_LINESID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBC_BLOCK_BRIEF_F  (
 aWEBC_BLOCKid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBC_BLOCKid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBC_BLOCK where WEBC_BLOCKID=aWEBC_BLOCKID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from WEBC_BLOCK  where  WEBC_BLOCKID = aWEBC_BLOCKID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBC_NEWS_BRIEF_F  (
 aWEBC_NEWSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBC_NEWSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBC_NEWS where WEBC_NEWSID=aWEBC_NEWSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from WEBC_NEWS  where  WEBC_NEWSID = aWEBC_NEWSID; 
 select aBRIEF 
  ||  nvl(to_char(ShortName),' ') ||'; '
  into aBrief from WEBC_NEWS  where  WEBC_NEWSID = aWEBC_NEWSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBC_JOB_BRIEF_F  (
 aWEBC_JOBid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBC_JOBid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBC_JOB where WEBC_JOBID=aWEBC_JOBID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(JobName),' ') ||'; '
  into aBrief from WEBC_JOB  where  WEBC_JOBID = aWEBC_JOBID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBC_MESSAGES_BRIEF_F  (
 aWEBC_MESSAGESid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBC_MESSAGESid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBC_MESSAGES where WEBC_MESSAGESID=aWEBC_MESSAGESID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(MESSAGES_FIO),' ') ||'; '
  into aBrief from WEBC_MESSAGES  where  WEBC_MESSAGESID = aWEBC_MESSAGESID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBC_DOCS_BRIEF_F  (
 aWEBC_DOCSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBC_DOCSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBC_DOCS where WEBC_DOCSID=aWEBC_DOCSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DocsName),' ') ||'; '
  into aBrief from WEBC_DOCS  where  WEBC_DOCSID = aWEBC_DOCSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBC_FILIALS_BRIEF_F  (
 aWEBC_FILIALSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBC_FILIALSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBC_FILIALS where WEBC_FILIALSID=aWEBC_FILIALSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(OfficeName),' ') ||'; '
  into aBrief from WEBC_FILIALS  where  WEBC_FILIALSID = aWEBC_FILIALSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBC_LINKS_BRIEF_F  (
 aWEBC_LINKSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBC_LINKSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBC_LINKS where WEBC_LINKSID=aWEBC_LINKSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(LinkName),' ') ||'; '
  into aBrief from WEBC_LINKS  where  WEBC_LINKSID = aWEBC_LINKSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRRPT_COSTS_BRIEF_F  (
 aVRRPT_COSTSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRRPT_COSTSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRRPT_COSTS where VRRPT_COSTSID=aVRRPT_COSTSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Descrtiption),' ') ||'; '
  into aBrief from VRRPT_COSTS  where  VRRPT_COSTSID = aVRRPT_COSTSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRRPT_MeetingPlan_BRIEF_F  (
 aVRRPT_MeetingPlanid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRRPT_MeetingPlanid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRRPT_MeetingPlan where VRRPT_MeetingPlanID=aVRRPT_MeetingPlanID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DateOF),' ') ||'; '
  into aBrief from VRRPT_MeetingPlan  where  VRRPT_MeetingPlanID = aVRRPT_MeetingPlanID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRRPT_Meeters_BRIEF_F  (
 aVRRPT_Meetersid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRRPT_Meetersid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRRPT_Meeters where VRRPT_MeetersID=aVRRPT_MeetersID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Worker
 into atmpID  from VRRPT_Meeters  where  VRRPT_MeetersID = aVRRPT_MeetersID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
select Contact
 into atmpID  from VRRPT_Meeters  where  VRRPT_MeetersID = aVRRPT_MeetersID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( Mandatory
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from VRRPT_Meeters where VRRPT_MeetersID=aVRRPT_MeetersID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRRPT_MAIN_BRIEF_F  (
 aVRRPT_MAINid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRRPT_MAINid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRRPT_MAIN where VRRPT_MAINID=aVRRPT_MAINID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Author
 into atmpID  from VRRPT_MAIN  where  VRRPT_MAINID = aVRRPT_MAINID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from VRRPT_MAIN  where  VRRPT_MAINID = aVRRPT_MAINID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from VRRPT_MAIN  where  VRRPT_MAINID = aVRRPT_MAINID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDGCommon_BRIEF_F  (
 aVRDGCommonid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDGCommonid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDGCommon where VRDGCommonID=aVRDGCommonID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DogNum),' ') ||'; '
  into aBrief from VRDGCommon  where  VRDGCommonID = aVRDGCommonID; 
 select aBRIEF 
  ||  nvl(to_char(DogDate),' ') ||'; '
  into aBrief from VRDGCommon  where  VRDGCommonID = aVRDGCommonID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from VRDGCommon  where  VRDGCommonID = aVRDGCommonID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDGReport_BRIEF_F  (
 aVRDGReportid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDGReportid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDGReport where VRDGReportID=aVRDGReportID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Report
 into atmpID  from VRDGReport  where  VRDGReportID = aVRDGReportID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDGContractChanges_BRIEF_F  (
 aVRDGContractChangesid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDGContractChangesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDGContractChanges where VRDGContractChangesID=aVRDGContractChangesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Code),' ') ||'; '
  into aBrief from VRDGContractChanges  where  VRDGContractChangesID = aVRDGContractChangesID; 
 select aBRIEF 
  ||  nvl(to_char(DateOf),' ') ||'; '
  into aBrief from VRDGContractChanges  where  VRDGContractChangesID = aVRDGContractChangesID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDGContractVersion_BRIEF_F  (
 aVRDGContractVersionid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDGContractVersionid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDGContractVersion where VRDGContractVersionID=aVRDGContractVersionID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DateOf),' ') ||'; '
  into aBrief from VRDGContractVersion  where  VRDGContractVersionID = aVRDGContractVersionID; 
  select  aBRIEF ||
  Decode( Actual
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from VRDGContractVersion where VRDGContractVersionID=aVRDGContractVersionID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDGContractSpesial_BRIEF_F  (
 aVRDGContractSpesialid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDGContractSpesialid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDGContractSpesial where VRDGContractSpesialID=aVRDGContractSpesialID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DateOf),' ') ||'; '
  into aBrief from VRDGContractSpesial  where  VRDGContractSpesialID = aVRDGContractSpesialID; 
  select  aBRIEF ||
  Decode( IsDone
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from VRDGContractSpesial where VRDGContractSpesialID=aVRDGContractSpesialID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKSH_DATA_BRIEF_F  (
 aPEKSH_DATAid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKSH_DATAid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKSH_DATA where PEKSH_DATAID=aPEKSH_DATAID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Train
 into atmpID  from PEKSH_DATA  where  PEKSH_DATAID = aPEKSH_DATAID ;
 atmpBrief := func.PEKD_TRAINS_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKSH_START_BRIEF_F  (
 aPEKSH_STARTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKSH_STARTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKSH_START where PEKSH_STARTID=aPEKSH_STARTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DayInYear),' ') ||'; '
  into aBrief from PEKSH_START  where  PEKSH_STARTID = aPEKSH_STARTID; 
 select aBRIEF 
  ||  nvl(to_char(StartTime),' ') ||'; '
  into aBrief from PEKSH_START  where  PEKSH_STARTID = aPEKSH_STARTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKSH_DEF_BRIEF_F  (
 aPEKSH_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKSH_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKSH_DEF where PEKSH_DEFID=aPEKSH_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select DIRECTION
 into atmpID  from PEKSH_DEF  where  PEKSH_DEFID = aPEKSH_DEFID ;
 atmpBrief := func.PEKD_DIRECTION_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(TheYear),' ') ||'; '
  into aBrief from PEKSH_DEF  where  PEKSH_DEFID = aPEKSH_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZ2JOB_DEF_BRIEF_F  (
 aMTZ2JOB_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZ2JOB_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZ2JOB_DEF where MTZ2JOB_DEFID=aMTZ2JOB_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(EventDate),' ') ||'; '
  into aBrief from MTZ2JOB_DEF  where  MTZ2JOB_DEFID = aMTZ2JOB_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(EvenType),' ') ||'; '
  into aBrief from MTZ2JOB_DEF  where  MTZ2JOB_DEFID = aMTZ2JOB_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKPAY_DEF_BRIEF_F  (
 aPEKPAY_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKPAY_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKPAY_DEF where PEKPAY_DEFID=aPEKPAY_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select ToClient
 into atmpID  from PEKPAY_DEF  where  PEKPAY_DEFID = aPEKPAY_DEFID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(PLPNUM),' ') ||'; '
  into aBrief from PEKPAY_DEF  where  PEKPAY_DEFID = aPEKPAY_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(PLPDate),' ') ||'; '
  into aBrief from PEKPAY_DEF  where  PEKPAY_DEFID = aPEKPAY_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBSDIC_DEF_BRIEF_F  (
 aWEBSDIC_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBSDIC_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBSDIC_DEF where WEBSDIC_DEFID=aWEBSDIC_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select WEBS
 into atmpID  from WEBSDIC_DEF  where  WEBSDIC_DEFID = aWEBSDIC_DEFID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PWUUSERS_BRIEF_F  (
 aPWUUSERSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPWUUSERSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PWUUSERS where PWUUSERSID=aPWUUSERSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(PWUUSERSOrderNum),' ') ||'; '
  into aBrief from PWUUSERS  where  PWUUSERSID = aPWUUSERSID; 
 select aBRIEF 
  ||  nvl(to_char(PWUUSERSLogin),' ') ||'; '
  into aBrief from PWUUSERS  where  PWUUSERSID = aPWUUSERSID; 
 select aBRIEF 
  ||  nvl(to_char(PWUUSERSEMail),' ') ||'; '
  into aBrief from PWUUSERS  where  PWUUSERSID = aPWUUSERSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function pekz_path_BRIEF_F  (
 apekz_pathid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if apekz_pathid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from pekz_path where pekz_pathID=apekz_pathID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheDirection
 into atmpID  from pekz_path  where  pekz_pathID = apekz_pathID ;
 atmpBrief := func.PEKD_DIRECTION_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(vagNo),' ') ||'; '
  into aBrief from pekz_path  where  pekz_pathID = apekz_pathID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKZ_WLIST_BRIEF_F  (
 aPEKZ_WLISTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKZ_WLISTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKZ_WLIST where PEKZ_WLISTID=aPEKZ_WLISTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(sequence),' ') ||'; '
  into aBrief from PEKZ_WLIST  where  PEKZ_WLISTID = aPEKZ_WLISTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKZ_WLADDS_BRIEF_F  (
 aPEKZ_WLADDSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKZ_WLADDSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKZ_WLADDS where PEKZ_WLADDSID=aPEKZ_WLADDSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheAdds
 into atmpID  from PEKZ_WLADDS  where  PEKZ_WLADDSID = aPEKZ_WLADDSID ;
 atmpBrief := func.PEKD_ADDS_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKZ_DOCS_BRIEF_F  (
 aPEKZ_DOCSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKZ_DOCSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKZ_DOCS where PEKZ_DOCSID=aPEKZ_DOCSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheDoc
 into atmpID  from PEKZ_DOCS  where  PEKZ_DOCSID = aPEKZ_DOCSID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function pekz_def_BRIEF_F  (
 apekz_defid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if apekz_defid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from pekz_def where pekz_defID=apekz_defID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(PEKCode),' ') ||'; '
  into aBrief from pekz_def  where  pekz_defID = apekz_defID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKZ_ACLCT_BRIEF_F  (
 aPEKZ_ACLCTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKZ_ACLCTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKZ_ACLCT where PEKZ_ACLCTID=aPEKZ_ACLCTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(CollectDate),' ') ||'; '
  into aBrief from PEKZ_ACLCT  where  PEKZ_ACLCTID = aPEKZ_ACLCTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKZ_ADLVR_BRIEF_F  (
 aPEKZ_ADLVRid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKZ_ADLVRid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKZ_ADLVR where PEKZ_ADLVRID=aPEKZ_ADLVRID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(CollectDate),' ') ||'; '
  into aBrief from PEKZ_ADLVR  where  PEKZ_ADLVRID = aPEKZ_ADLVRID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function pekz_dop_BRIEF_F  (
 apekz_dopid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if apekz_dopid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from pekz_dop where pekz_dopID=apekz_dopID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select SRV
 into atmpID  from pekz_dop  where  pekz_dopID = apekz_dopID ;
 atmpBrief := func.PEKD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_LOCKED_BRIEF_F  (
 aREPD_LOCKEDid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_LOCKEDid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_LOCKED where REPD_LOCKEDID=aREPD_LOCKEDID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(StructType),' ') ||'; '
  into aBrief from REPD_LOCKED  where  REPD_LOCKEDID = aREPD_LOCKEDID; 
 select aBRIEF 
  ||  nvl(to_char(ObjectType),' ') ||'; '
  into aBrief from REPD_LOCKED  where  REPD_LOCKEDID = aREPD_LOCKEDID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_RequestQuery_BRIEF_F  (
 aREPD_RequestQueryid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_RequestQueryid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_RequestQuery where REPD_RequestQueryID=aREPD_RequestQueryID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select SourceSrv
 into atmpID  from REPD_RequestQuery  where  REPD_RequestQueryID = aREPD_RequestQueryID ;
 atmpBrief := func.REPD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_ResQueryRcv_BRIEF_F  (
 aREPD_ResQueryRcvid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_ResQueryRcvid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_ResQueryRcv where REPD_ResQueryRcvID=aREPD_ResQueryRcvID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select ReceiveRec
 into atmpID  from REPD_ResQueryRcv  where  REPD_ResQueryRcvID = aREPD_ResQueryRcvID ;
 atmpBrief := func.REPD_RecvQ_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_PROV_BRIEF_F  (
 aREPD_PROVid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_PROVid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_PROV where REPD_PROVID=aREPD_PROVID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from REPD_PROV  where  REPD_PROVID = aREPD_PROVID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_SRV_BRIEF_F  (
 aREPD_SRVid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_SRVid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_SRV where REPD_SRVID=aREPD_SRVID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from REPD_SRV  where  REPD_SRVID = aREPD_SRVID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_SNDTO_BRIEF_F  (
 aREPD_SNDTOid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_SNDTOid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_SNDTO where REPD_SNDTOID=aREPD_SNDTOID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select DestSrv
 into atmpID  from REPD_SNDTO  where  REPD_SNDTOID = aREPD_SNDTOID ;
 atmpBrief := func.REPD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_CONST_BRIEF_F  (
 aREPD_CONSTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_CONSTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_CONST where REPD_CONSTID=aREPD_CONSTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from REPD_CONST  where  REPD_CONSTID = aREPD_CONSTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_REPTYPE_BRIEF_F  (
 aREPD_REPTYPEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_REPTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_REPTYPE where REPD_REPTYPEID=aREPD_REPTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
  select  aBRIEF ||
  Decode( ReplicaType
 ,0
 ,'Весь документ'
 ,2
 ,'Локальный'
 ,1
 ,'Построчно'
,'.') into aBrief from REPD_REPTYPE where REPD_REPTYPEID=aREPD_REPTYPEID;
select TheObjectType
 into atmpID  from REPD_REPTYPE  where  REPD_REPTYPEID = aREPD_REPTYPEID ;
 atmpBrief := func.OBJECTTYPE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_SendQ_BRIEF_F  (
 aREPD_SendQid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_SendQid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_SendQ where REPD_SendQID=aREPD_SendQID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FileName),' ') ||'; '
  into aBrief from REPD_SendQ  where  REPD_SendQID = aREPD_SendQID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_RecvQ_BRIEF_F  (
 aREPD_RecvQid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_RecvQid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_RecvQ where REPD_RecvQID=aREPD_RecvQID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select SourceSrv
 into atmpID  from REPD_RecvQ  where  REPD_RecvQID = aREPD_RecvQID ;
 atmpBrief := func.REPD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function StateAction_BRIEF_F  (
 aStateActionid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aStateActionid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from StateAction where StateActionID=aStateActionID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select OnDocStatus
 into atmpID  from StateAction  where  StateActionID = aStateActionID ;
 atmpBrief := func.OBJSTATUS_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function TheDiffPath_BRIEF_F  (
 aTheDiffPathid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aTheDiffPathid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from TheDiffPath where TheDiffPathID=aTheDiffPathID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheNumber),' ') ||'; '
  into aBrief from TheDiffPath  where  TheDiffPathID = aTheDiffPathID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function DopUslTo_BRIEF_F  (
 aDopUslToid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aDopUslToid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from DopUslTo where DopUslToID=aDopUslToID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select DopUsluga
 into atmpID  from DopUslTo  where  DopUslToID = aDopUslToID ;
 atmpBrief := func.PEKD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function DopUslFrom_BRIEF_F  (
 aDopUslFromid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aDopUslFromid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from DopUslFrom where DopUslFromID=aDopUslFromID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select DopUsluga
 into atmpID  from DopUslFrom  where  DopUslFromID = aDopUslFromID ;
 atmpBrief := func.PEKD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function TheDefenitionDiffP_BRIEF_F  (
 aTheDefenitionDiffPid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aTheDefenitionDiffPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from TheDefenitionDiffP where TheDefenitionDiffPID=aTheDefenitionDiffPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TownFrom
 into atmpID  from TheDefenitionDiffP  where  TheDefenitionDiffPID = aTheDefenitionDiffPID ;
 atmpBrief := func.ENTDIC_TOWN_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
select DirStation
 into atmpID  from TheDefenitionDiffP  where  TheDefenitionDiffPID = aTheDefenitionDiffPID ;
 atmpBrief := func.PEKD_DIRSTATION_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKACT_DEF_BRIEF_F  (
 aPEKACT_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKACT_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKACT_DEF where PEKACT_DEFID=aPEKACT_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Client
 into atmpID  from PEKACT_DEF  where  PEKACT_DEFID = aPEKACT_DEFID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(Number_of_akt),' ') ||'; '
  into aBrief from PEKACT_DEF  where  PEKACT_DEFID = aPEKACT_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKACT_ITOG_BRIEF_F  (
 aPEKACT_ITOGid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKACT_ITOGid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKACT_ITOG where PEKACT_ITOGID=aPEKACT_ITOGID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select SRV
 into atmpID  from PEKACT_ITOG  where  PEKACT_ITOGID = aPEKACT_ITOGID ;
 atmpBrief := func.PEKD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKACT_LINES_BRIEF_F  (
 aPEKACT_LINESid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKACT_LINESid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKACT_LINES where PEKACT_LINESID=aPEKACT_LINESID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Zayavka
 into atmpID  from PEKACT_LINES  where  PEKACT_LINESID = aPEKACT_LINESID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDTYPE_BRIEF_F  (
 aFIELDTYPEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDTYPE where FIELDTYPEID=aFIELDTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from FIELDTYPE  where  FIELDTYPEID = aFIELDTYPEID; 
  select  aBRIEF ||
  Decode( TypeStyle
 ,3
 ,'Интервал'
 ,0
 ,'Скалярный тип'
 ,4
 ,'Ссылка'
 ,2
 ,'Перечисление'
 ,1
 ,'Выражение'
 ,5
 ,'Элемент оформления'
,'.') into aBrief from FIELDTYPE where FIELDTYPEID=aFIELDTYPEID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDTYPEMAP_BRIEF_F  (
 aFIELDTYPEMAPid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDTYPEMAPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDTYPEMAP where FIELDTYPEMAPID=aFIELDTYPEMAPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from FIELDTYPEMAP  where  FIELDTYPEMAPID = aFIELDTYPEMAPID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(StoageType),' ') ||'; '
  into aBrief from FIELDTYPEMAP  where  FIELDTYPEMAPID = aFIELDTYPEMAPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENUMITEM_BRIEF_F  (
 aENUMITEMid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENUMITEMid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENUMITEM where ENUMITEMID=aENUMITEMID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ENUMITEM  where  ENUMITEMID = aENUMITEMID; 
 select aBRIEF 
  ||  nvl(to_char(NameValue),' ') ||'; '
  into aBrief from ENUMITEM  where  ENUMITEMID = aENUMITEMID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function SHAREDMETHOD_BRIEF_F  (
 aSHAREDMETHODid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSHAREDMETHODid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from SHAREDMETHOD where SHAREDMETHODID=aSHAREDMETHODID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from SHAREDMETHOD  where  SHAREDMETHODID = aSHAREDMETHODID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function SCRIPT_BRIEF_F  (
 aSCRIPTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSCRIPTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from SCRIPT where SCRIPTID=aSCRIPTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from SCRIPT  where  SCRIPTID = aSCRIPTID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PARAMETERS_BRIEF_F  (
 aPARAMETERSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARAMETERSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PARAMETERS where PARAMETERSID=aPARAMETERSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PARAMETERS  where  PARAMETERSID = aPARAMETERSID; 
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from PARAMETERS  where  PARAMETERSID = aPARAMETERSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function OBJECTTYPE_BRIEF_F  (
 aOBJECTTYPEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aOBJECTTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from OBJECTTYPE where OBJECTTYPEID=aOBJECTTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Package
 into atmpID  from OBJECTTYPE  where  OBJECTTYPEID = aOBJECTTYPEID ;
 atmpBrief := func.MTZAPP_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(the_Comment),' ') ||'; '
  into aBrief from OBJECTTYPE  where  OBJECTTYPEID = aOBJECTTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PART_BRIEF_F  (
 aPARTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PART where PARTID=aPARTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from PART  where  PARTID = aPARTID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PART  where  PARTID = aPARTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PARTMENU_BRIEF_F  (
 aPARTMENUid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARTMENUid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PARTMENU where PARTMENUID=aPARTMENUID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PARTMENU  where  PARTMENUID = aPARTMENUID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PARTPARAMMAP_BRIEF_F  (
 aPARTPARAMMAPid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARTPARAMMAPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PARTPARAMMAP where PARTPARAMMAPID=aPARTPARAMMAPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FieldName),' ') ||'; '
  into aBrief from PARTPARAMMAP  where  PARTPARAMMAPID = aPARTPARAMMAPID; 
 select aBRIEF 
  ||  nvl(to_char(ParamName),' ') ||'; '
  into aBrief from PARTPARAMMAP  where  PARTPARAMMAPID = aPARTPARAMMAPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELD_BRIEF_F  (
 aFIELDid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELD where FIELDID=aFIELDID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from FIELD  where  FIELDID = aFIELDID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from FIELD  where  FIELDID = aFIELDID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDVALIDATOR_BRIEF_F  (
 aFIELDVALIDATORid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDVALIDATORid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDVALIDATOR where FIELDVALIDATORID=aFIELDVALIDATORID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from FIELDVALIDATOR  where  FIELDVALIDATORID = aFIELDVALIDATORID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDMENU_BRIEF_F  (
 aFIELDMENUid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDMENUid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDMENU where FIELDMENUID=aFIELDMENUID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from FIELDMENU  where  FIELDMENUID = aFIELDMENUID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDPARAMMAP_BRIEF_F  (
 aFIELDPARAMMAPid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDPARAMMAPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDPARAMMAP where FIELDPARAMMAPID=aFIELDPARAMMAPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FieldName),' ') ||'; '
  into aBrief from FIELDPARAMMAP  where  FIELDPARAMMAPID = aFIELDPARAMMAPID; 
 select aBRIEF 
  ||  nvl(to_char(ParamName),' ') ||'; '
  into aBrief from FIELDPARAMMAP  where  FIELDPARAMMAPID = aFIELDPARAMMAPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FldExtenders_BRIEF_F  (
 aFldExtendersid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFldExtendersid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FldExtenders where FldExtendersID=aFldExtendersID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheName),' ') ||'; '
  into aBrief from FldExtenders  where  FldExtendersID = aFldExtendersID; 
select TargetPlatform
 into atmpID  from FldExtenders  where  FldExtendersID = aFldExtendersID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(TheObject),' ') ||'; '
  into aBrief from FldExtenders  where  FldExtendersID = aFldExtendersID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDEXPRESSION_BRIEF_F  (
 aFIELDEXPRESSIONid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDEXPRESSIONid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDEXPRESSION where FIELDEXPRESSIONID=aFIELDEXPRESSIONID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from FIELDEXPRESSION  where  FIELDEXPRESSIONID = aFIELDEXPRESSIONID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function DINAMICFILTERSCRIPT_BRIEF_F  (
 aDINAMICFILTERSCRIPTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aDINAMICFILTERSCRIPTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from DINAMICFILTERSCRIPT where DINAMICFILTERSCRIPTID=aDINAMICFILTERSCRIPTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from DINAMICFILTERSCRIPT  where  DINAMICFILTERSCRIPTID = aDINAMICFILTERSCRIPTID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDSRCDEF_BRIEF_F  (
 aFIELDSRCDEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDSRCDEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDSRCDEF where FIELDSRCDEFID=aFIELDSRCDEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DataSource),' ') ||'; '
  into aBrief from FIELDSRCDEF  where  FIELDSRCDEFID = aFIELDSRCDEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PARTVIEW_BRIEF_F  (
 aPARTVIEWid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARTVIEWid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PARTVIEW where PARTVIEWID=aPARTVIEWID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PARTVIEW  where  PARTVIEWID = aPARTVIEWID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ViewColumn_BRIEF_F  (
 aViewColumnid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aViewColumnid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ViewColumn where ViewColumnID=aViewColumnID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ViewColumn  where  ViewColumnID = aViewColumnID; 
select FromPart
 into atmpID  from ViewColumn  where  ViewColumnID = aViewColumnID ;
 atmpBrief := func.PART_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( Aggregation
 ,5
 ,'MAX'
 ,1
 ,'AVG'
 ,3
 ,'SUM'
 ,2
 ,'COUNT'
 ,4
 ,'MIN'
 ,6
 ,'CUSTOM'
 ,0
 ,'none'
,'.') into aBrief from ViewColumn where ViewColumnID=aViewColumnID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PARTVIEW_LNK_BRIEF_F  (
 aPARTVIEW_LNKid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARTVIEW_LNKid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PARTVIEW_LNK where PARTVIEW_LNKID=aPARTVIEW_LNKID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheView
 into atmpID  from PARTVIEW_LNK  where  PARTVIEW_LNKID = aPARTVIEW_LNKID ;
 atmpBrief := func.PARTVIEW_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ExtenderInterface_BRIEF_F  (
 aExtenderInterfaceid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aExtenderInterfaceid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ExtenderInterface where ExtenderInterfaceID=aExtenderInterfaceID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheName),' ') ||'; '
  into aBrief from ExtenderInterface  where  ExtenderInterfaceID = aExtenderInterfaceID; 
select TargetPlatform
 into atmpID  from ExtenderInterface  where  ExtenderInterfaceID = aExtenderInterfaceID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(TheObject),' ') ||'; '
  into aBrief from ExtenderInterface  where  ExtenderInterfaceID = aExtenderInterfaceID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VALIDATOR_BRIEF_F  (
 aVALIDATORid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVALIDATORid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VALIDATOR where VALIDATORID=aVALIDATORID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from VALIDATOR  where  VALIDATORID = aVALIDATORID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function UNIQUECONSTRAINT_BRIEF_F  (
 aUNIQUECONSTRAINTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aUNIQUECONSTRAINTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from UNIQUECONSTRAINT where UNIQUECONSTRAINTID=aUNIQUECONSTRAINTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from UNIQUECONSTRAINT  where  UNIQUECONSTRAINTID = aUNIQUECONSTRAINTID; 
  select  aBRIEF ||
  Decode( PerParent
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from UNIQUECONSTRAINT where UNIQUECONSTRAINTID=aUNIQUECONSTRAINTID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function CONSTRAINTFIELD_BRIEF_F  (
 aCONSTRAINTFIELDid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aCONSTRAINTFIELDid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from CONSTRAINTFIELD where CONSTRAINTFIELDID=aCONSTRAINTFIELDID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheField
 into atmpID  from CONSTRAINTFIELD  where  CONSTRAINTFIELDID = aCONSTRAINTFIELDID ;
 atmpBrief := func.FIELD_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function INSTANCEVALIDATOR_BRIEF_F  (
 aINSTANCEVALIDATORid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aINSTANCEVALIDATORid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from INSTANCEVALIDATOR where INSTANCEVALIDATORID=aINSTANCEVALIDATORID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from INSTANCEVALIDATOR  where  INSTANCEVALIDATORID = aINSTANCEVALIDATORID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function OBJSTATUS_BRIEF_F  (
 aOBJSTATUSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aOBJSTATUSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from OBJSTATUS where OBJSTATUSID=aOBJSTATUSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from OBJSTATUS  where  OBJSTATUSID = aOBJSTATUSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function NEXTSTATE_BRIEF_F  (
 aNEXTSTATEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aNEXTSTATEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from NEXTSTATE where NEXTSTATEID=aNEXTSTATEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheState
 into atmpID  from NEXTSTATE  where  NEXTSTATEID = aNEXTSTATEID ;
 atmpBrief := func.OBJSTATUS_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function OBJECTMODE_BRIEF_F  (
 aOBJECTMODEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aOBJECTMODEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from OBJECTMODE where OBJECTMODEID=aOBJECTMODEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from OBJECTMODE  where  OBJECTMODEID = aOBJECTMODEID; 
  select  aBRIEF ||
  Decode( DefaultMode
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from OBJECTMODE where OBJECTMODEID=aOBJECTMODEID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STRUCTRESTRICTION_BRIEF_F  (
 aSTRUCTRESTRICTIONid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTRUCTRESTRICTIONid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STRUCTRESTRICTION where STRUCTRESTRICTIONID=aSTRUCTRESTRICTIONID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Struct
 into atmpID  from STRUCTRESTRICTION  where  STRUCTRESTRICTIONID = aSTRUCTRESTRICTIONID ;
 atmpBrief := func.PART_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( AllowRead
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from STRUCTRESTRICTION where STRUCTRESTRICTIONID=aSTRUCTRESTRICTIONID;
  select  aBRIEF ||
  Decode( AllowAdd
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from STRUCTRESTRICTION where STRUCTRESTRICTIONID=aSTRUCTRESTRICTIONID;
  select  aBRIEF ||
  Decode( AllowEdit
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from STRUCTRESTRICTION where STRUCTRESTRICTIONID=aSTRUCTRESTRICTIONID;
  select  aBRIEF ||
  Decode( AllowDelete
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from STRUCTRESTRICTION where STRUCTRESTRICTIONID=aSTRUCTRESTRICTIONID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDRESTRICTION_BRIEF_F  (
 aFIELDRESTRICTIONid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDRESTRICTIONid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDRESTRICTION where FIELDRESTRICTIONID=aFIELDRESTRICTIONID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select ThePart
 into atmpID  from FIELDRESTRICTION  where  FIELDRESTRICTIONID = aFIELDRESTRICTIONID ;
 atmpBrief := func.PART_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
select TheField
 into atmpID  from FIELDRESTRICTION  where  FIELDRESTRICTIONID = aFIELDRESTRICTIONID ;
 atmpBrief := func.FIELD_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( AllowRead
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from FIELDRESTRICTION where FIELDRESTRICTIONID=aFIELDRESTRICTIONID;
  select  aBRIEF ||
  Decode( AllowModify
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from FIELDRESTRICTION where FIELDRESTRICTIONID=aFIELDRESTRICTIONID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function METHODRESTRICTION_BRIEF_F  (
 aMETHODRESTRICTIONid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMETHODRESTRICTIONid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from METHODRESTRICTION where METHODRESTRICTIONID=aMETHODRESTRICTIONID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Method
 into atmpID  from METHODRESTRICTION  where  METHODRESTRICTIONID = aMETHODRESTRICTIONID ;
 atmpBrief := func.SHAREDMETHOD_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( IsRestricted
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from METHODRESTRICTION where METHODRESTRICTIONID=aMETHODRESTRICTIONID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function TYPEMENU_BRIEF_F  (
 aTYPEMENUid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aTYPEMENUid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from TYPEMENU where TYPEMENUID=aTYPEMENUID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from TYPEMENU  where  TYPEMENUID = aTYPEMENUID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZAPP_BRIEF_F  (
 aMTZAPPid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZAPPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZAPP where MTZAPPID=aMTZAPPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from MTZAPP  where  MTZAPPID = aMTZAPPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ParentPackage_BRIEF_F  (
 aParentPackageid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aParentPackageid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ParentPackage where ParentPackageID=aParentPackageID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Package
 into atmpID  from ParentPackage  where  ParentPackageID = aParentPackageID ;
 atmpBrief := func.MTZAPP_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GENPACKAGE_BRIEF_F  (
 aGENPACKAGEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGENPACKAGEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GENPACKAGE where GENPACKAGEID=aGENPACKAGEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from GENPACKAGE  where  GENPACKAGEID = aGENPACKAGEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GENERATOR_TARGET_BRIEF_F  (
 aGENERATOR_TARGETid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGENERATOR_TARGETid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GENERATOR_TARGET where GENERATOR_TARGETID=aGENERATOR_TARGETID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from GENERATOR_TARGET  where  GENERATOR_TARGETID = aGENERATOR_TARGETID; 
  select  aBRIEF ||
  Decode( TargetType
 ,0
 ,'СУБД'
 ,4
 ,'АРМ'
 ,3
 ,'Документация'
 ,1
 ,'МОДЕЛЬ'
 ,2
 ,'Приложение'
,'.') into aBrief from GENERATOR_TARGET where GENERATOR_TARGETID=aGENERATOR_TARGETID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GENMANUALCODE_BRIEF_F  (
 aGENMANUALCODEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGENMANUALCODEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GENMANUALCODE where GENMANUALCODEID=aGENMANUALCODEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from GENMANUALCODE  where  GENMANUALCODEID = aGENMANUALCODEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GENCONTROLS_BRIEF_F  (
 aGENCONTROLSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGENCONTROLSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GENCONTROLS where GENCONTROLSID=aGENCONTROLSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(ControlProgID),' ') ||'; '
  into aBrief from GENCONTROLS  where  GENCONTROLSID = aGENCONTROLSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GENREFERENCE_BRIEF_F  (
 aGENREFERENCEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGENREFERENCEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GENREFERENCE where GENREFERENCEID=aGENREFERENCEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from GENREFERENCE  where  GENREFERENCEID = aGENREFERENCEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function LocalizeInfo_BRIEF_F  (
 aLocalizeInfoid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aLocalizeInfoid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from LocalizeInfo where LocalizeInfoID=aLocalizeInfoID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(LangFull),' ') ||'; '
  into aBrief from LocalizeInfo  where  LocalizeInfoID = aLocalizeInfoID; 
 select aBRIEF 
  ||  nvl(to_char(LangShort),' ') ||'; '
  into aBrief from LocalizeInfo  where  LocalizeInfoID = aLocalizeInfoID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKPQ_DEF_BRIEF_F  (
 aPEKPQ_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKPQ_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKPQ_DEF where PEKPQ_DEFID=aPEKPQ_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(sequence),' ') ||'; '
  into aBrief from PEKPQ_DEF  where  PEKPQ_DEFID = aPEKPQ_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from PEKPQ_DEF  where  PEKPQ_DEFID = aPEKPQ_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENTDIC_BANK_BRIEF_F  (
 aENTDIC_BANKid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENTDIC_BANKid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENTDIC_BANK where ENTDIC_BANKID=aENTDIC_BANKID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from ENTDIC_BANK  where  ENTDIC_BANKID = aENTDIC_BANKID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENTDIC_DOST_BRIEF_F  (
 aENTDIC_DOSTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENTDIC_DOSTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENTDIC_DOST where ENTDIC_DOSTID=aENTDIC_DOSTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Code),' ') ||'; '
  into aBrief from ENTDIC_DOST  where  ENTDIC_DOSTID = aENTDIC_DOSTID; 
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from ENTDIC_DOST  where  ENTDIC_DOSTID = aENTDIC_DOSTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENTDIC_TOWN_BRIEF_F  (
 aENTDIC_TOWNid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENTDIC_TOWNid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENTDIC_TOWN where ENTDIC_TOWNID=aENTDIC_TOWNID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from ENTDIC_TOWN  where  ENTDIC_TOWNID = aENTDIC_TOWNID; 
select country
 into atmpID  from ENTDIC_TOWN  where  ENTDIC_TOWNID = aENTDIC_TOWNID ;
 atmpBrief := func.ENTDIC_COUNTRY_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENTDIC_TransportType_BRIEF_F  (
 aENTDIC_TransportTypeid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENTDIC_TransportTypeid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENTDIC_TransportType where ENTDIC_TransportTypeID=aENTDIC_TransportTypeID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheName),' ') ||'; '
  into aBrief from ENTDIC_TransportType  where  ENTDIC_TransportTypeID = aENTDIC_TransportTypeID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENTDIC_OPF_BRIEF_F  (
 aENTDIC_OPFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENTDIC_OPFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENTDIC_OPF where ENTDIC_OPFID=aENTDIC_OPFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from ENTDIC_OPF  where  ENTDIC_OPFID = aENTDIC_OPFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENTDIC_EDIZM_BRIEF_F  (
 aENTDIC_EDIZMid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENTDIC_EDIZMid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENTDIC_EDIZM where ENTDIC_EDIZMID=aENTDIC_EDIZMID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(code),' ') ||'; '
  into aBrief from ENTDIC_EDIZM  where  ENTDIC_EDIZMID = aENTDIC_EDIZMID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENTDIC_CURRENCY_BRIEF_F  (
 aENTDIC_CURRENCYid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENTDIC_CURRENCYid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENTDIC_CURRENCY where ENTDIC_CURRENCYID=aENTDIC_CURRENCYID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from ENTDIC_CURRENCY  where  ENTDIC_CURRENCYID = aENTDIC_CURRENCYID; 
 select aBRIEF 
  ||  nvl(to_char(Code),' ') ||'; '
  into aBrief from ENTDIC_CURRENCY  where  ENTDIC_CURRENCYID = aENTDIC_CURRENCYID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENTDIC_CURCOURCE_BRIEF_F  (
 aENTDIC_CURCOURCEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENTDIC_CURCOURCEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENTDIC_CURCOURCE where ENTDIC_CURCOURCEID=aENTDIC_CURCOURCEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(CourceDate),' ') ||'; '
  into aBrief from ENTDIC_CURCOURCE  where  ENTDIC_CURCOURCEID = aENTDIC_CURCOURCEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENTDIC_COUNTRY_BRIEF_F  (
 aENTDIC_COUNTRYid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENTDIC_COUNTRYid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENTDIC_COUNTRY where ENTDIC_COUNTRYID=aENTDIC_COUNTRYID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Code),' ') ||'; '
  into aBrief from ENTDIC_COUNTRY  where  ENTDIC_COUNTRYID = aENTDIC_COUNTRYID; 
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from ENTDIC_COUNTRY  where  ENTDIC_COUNTRYID = aENTDIC_COUNTRYID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENTDIC_REGION_BRIEF_F  (
 aENTDIC_REGIONid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENTDIC_REGIONid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENTDIC_REGION where ENTDIC_REGIONID=aENTDIC_REGIONID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Code),' ') ||'; '
  into aBrief from ENTDIC_REGION  where  ENTDIC_REGIONID = aENTDIC_REGIONID; 
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from ENTDIC_REGION  where  ENTDIC_REGIONID = aENTDIC_REGIONID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ST_MAIN_BRIEF_F  (
 aST_MAINid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aST_MAINid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ST_MAIN where ST_MAINID=aST_MAINID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(AccessDate),' ') ||'; '
  into aBrief from ST_MAIN  where  ST_MAINID = aST_MAINID; 
select WEBS_Page
 into atmpID  from ST_MAIN  where  ST_MAINID = aST_MAINID ;
 atmpBrief := func.WEBS_PAGEDEF_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ST_DEF_BRIEF_F  (
 aST_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aST_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ST_DEF where ST_DEFID=aST_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ST_DEF  where  ST_DEFID = aST_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ST_PAGES_BRIEF_F  (
 aST_PAGESid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aST_PAGESid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ST_PAGES where ST_PAGESID=aST_PAGESID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(AccessDate),' ') ||'; '
  into aBrief from ST_PAGES  where  ST_PAGESID = aST_PAGESID; 
select WEBS_Page
 into atmpID  from ST_PAGES  where  ST_PAGESID = aST_PAGESID ;
 atmpBrief := func.WEBS_PAGEDEF_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STDJournlaExtInfo_BRIEF_F  (
 aSTDJournlaExtInfoid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTDJournlaExtInfoid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STDJournlaExtInfo where STDJournlaExtInfoID=aSTDJournlaExtInfoID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheName),' ') ||'; '
  into aBrief from STDJournlaExtInfo  where  STDJournlaExtInfoID = aSTDJournlaExtInfoID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STDJournalExtParam_BRIEF_F  (
 aSTDJournalExtParamid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTDJournalExtParamid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STDJournalExtParam where STDJournalExtParamID=aSTDJournalExtParamID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FieldName),' ') ||'; '
  into aBrief from STDJournalExtParam  where  STDJournalExtParamID = aSTDJournalExtParamID; 
 select aBRIEF 
  ||  nvl(to_char(ParamName),' ') ||'; '
  into aBrief from STDJournalExtParam  where  STDJournalExtParamID = aSTDJournalExtParamID; 
select TargetPlatform
 into atmpID  from STDJournalExtParam  where  STDJournalExtParamID = aSTDJournalExtParamID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STDJournalExtFlt_BRIEF_F  (
 aSTDJournalExtFltid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTDJournalExtFltid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STDJournalExtFlt where STDJournalExtFltID=aSTDJournalExtFltID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(ViewSource),' ') ||'; '
  into aBrief from STDJournalExtFlt  where  STDJournalExtFltID = aSTDJournalExtFltID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STDJournalExtField_BRIEF_F  (
 aSTDJournalExtFieldid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTDJournalExtFieldid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STDJournalExtField where STDJournalExtFieldID=aSTDJournalExtFieldID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(ViewField),' ') ||'; '
  into aBrief from STDJournalExtField  where  STDJournalExtFieldID = aSTDJournalExtFieldID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function CAL_DAYS_BRIEF_F  (
 aCAL_DAYSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aCAL_DAYSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from CAL_DAYS where CAL_DAYSID=aCAL_DAYSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from CAL_DAYS  where  CAL_DAYSID = aCAL_DAYSID; 
  select  aBRIEF ||
  Decode( IsHoliday
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from CAL_DAYS where CAL_DAYSID=aCAL_DAYSID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function CAL_TIME_BRIEF_F  (
 aCAL_TIMEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aCAL_TIMEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from CAL_TIME where CAL_TIMEID=aCAL_TIMEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FromTime),' ') ||'; '
  into aBrief from CAL_TIME  where  CAL_TIMEID = aCAL_TIMEID; 
 select aBRIEF 
  ||  nvl(to_char(ToTime),' ') ||'; '
  into aBrief from CAL_TIME  where  CAL_TIMEID = aCAL_TIMEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function CAL_HEAD_BRIEF_F  (
 aCAL_HEADid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aCAL_HEADid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from CAL_HEAD where CAL_HEADID=aCAL_HEADID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from CAL_HEAD  where  CAL_HEADID = aCAL_HEADID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function SrvMessageInfo_BRIEF_F  (
 aSrvMessageInfoid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSrvMessageInfoid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from SrvMessageInfo where SrvMessageInfoID=aSrvMessageInfoID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select ForUser
 into atmpID  from SrvMessageInfo  where  SrvMessageInfoID = aSrvMessageInfoID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(msgDate),' ') ||'; '
  into aBrief from SrvMessageInfo  where  SrvMessageInfoID = aSrvMessageInfoID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKNAL_DEF_BRIEF_F  (
 aPEKNAL_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKNAL_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKNAL_DEF where PEKNAL_DEFID=aPEKNAL_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheNumber),' ') ||'; '
  into aBrief from PEKNAL_DEF  where  PEKNAL_DEFID = aPEKNAL_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from PEKNAL_DEF  where  PEKNAL_DEFID = aPEKNAL_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKNAL_PZ_BRIEF_F  (
 aPEKNAL_PZid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKNAL_PZid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKNAL_PZ where PEKNAL_PZID=aPEKNAL_PZID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select PZ
 into atmpID  from PEKNAL_PZ  where  PEKNAL_PZID = aPEKNAL_PZID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKNAL_ROWS_BRIEF_F  (
 aPEKNAL_ROWSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKNAL_ROWSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKNAL_ROWS where PEKNAL_ROWSID=aPEKNAL_ROWSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheNumber),' ') ||'; '
  into aBrief from PEKNAL_ROWS  where  PEKNAL_ROWSID = aPEKNAL_ROWSID; 
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from PEKNAL_ROWS  where  PEKNAL_ROWSID = aPEKNAL_ROWSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FileDef_BRIEF_F  (
 aFileDefid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFileDefid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FileDef where FileDefID=aFileDefID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from FileDef  where  FileDefID = aFileDefID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FileVersion_BRIEF_F  (
 aFileVersionid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFileVersionid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FileVersion where FileVersionID=aFileVersionID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
  select  aBRIEF ||
  Decode( CurrentVersion
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from FileVersion where FileVersionID=aFileVersionID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Num_zones_BRIEF_F  (
 aNum_zonesid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aNum_zonesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Num_zones where Num_zonesID=aNum_zonesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(ZoneMask),' ') ||'; '
  into aBrief from Num_zones  where  Num_zonesID = aNum_zonesID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Num_Values_BRIEF_F  (
 aNum_Valuesid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aNum_Valuesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Num_Values where Num_ValuesID=aNum_ValuesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(the_Value),' ') ||'; '
  into aBrief from Num_Values  where  Num_ValuesID = aNum_ValuesID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Num_head_BRIEF_F  (
 aNum_headid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aNum_headid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Num_head where Num_headID=aNum_headID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Num_head  where  Num_headID = aNum_headID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function BaseSetting_BRIEF_F  (
 aBaseSettingid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aBaseSettingid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from BaseSetting where BaseSettingID=aBaseSettingID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select FIL
 into atmpID  from BaseSetting  where  BaseSettingID = aBaseSettingID ;
 atmpBrief := func.PEKD_DEPT_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(NDS),' ') ||'; '
  into aBrief from BaseSetting  where  BaseSettingID = aBaseSettingID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Reports_BRIEF_F  (
 aReportsid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aReportsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Reports where ReportsID=aReportsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Reports  where  ReportsID = aReportsID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function RPTStruct_BRIEF_F  (
 aRPTStructid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aRPTStructid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from RPTStruct where RPTStructID=aRPTStructID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from RPTStruct  where  RPTStructID = aRPTStructID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function RPTFields_BRIEF_F  (
 aRPTFieldsid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aRPTFieldsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from RPTFields where RPTFieldsID=aRPTFieldsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from RPTFields  where  RPTFieldsID = aRPTFieldsID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function RPTFormula_BRIEF_F  (
 aRPTFormulaid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aRPTFormulaid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from RPTFormula where RPTFormulaID=aRPTFormulaID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from RPTFormula  where  RPTFormulaID = aRPTFormulaID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKRKO_DEF_BRIEF_F  (
 aPEKRKO_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKRKO_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKRKO_DEF where PEKRKO_DEFID=aPEKRKO_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheNumber),' ') ||'; '
  into aBrief from PEKRKO_DEF  where  PEKRKO_DEFID = aPEKRKO_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from PEKRKO_DEF  where  PEKRKO_DEFID = aPEKRKO_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKRKO_ROWS_BRIEF_F  (
 aPEKRKO_ROWSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKRKO_ROWSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKRKO_ROWS where PEKRKO_ROWSID=aPEKRKO_ROWSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheNumber),' ') ||'; '
  into aBrief from PEKRKO_ROWS  where  PEKRKO_ROWSID = aPEKRKO_ROWSID; 
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from PEKRKO_ROWS  where  PEKRKO_ROWSID = aPEKRKO_ROWSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKTRF_REGALL_BRIEF_F  (
 aPEKTRF_REGALLid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKTRF_REGALLid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKTRF_REGALL where PEKTRF_REGALLID=aPEKTRF_REGALLID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(WeightFrom),' ') ||'; '
  into aBrief from PEKTRF_REGALL  where  PEKTRF_REGALLID = aPEKTRF_REGALLID; 
 select aBRIEF 
  ||  nvl(to_char(WeightTo),' ') ||'; '
  into aBrief from PEKTRF_REGALL  where  PEKTRF_REGALLID = aPEKTRF_REGALLID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKTRF_DECR_BRIEF_F  (
 aPEKTRF_DECRid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKTRF_DECRid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKTRF_DECR where PEKTRF_DECRID=aPEKTRF_DECRID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PEKTRF_DECR  where  PEKTRF_DECRID = aPEKTRF_DECRID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKTRF_ADDS_BRIEF_F  (
 aPEKTRF_ADDSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKTRF_ADDSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKTRF_ADDS where PEKTRF_ADDSID=aPEKTRF_ADDSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Name
 into atmpID  from PEKTRF_ADDS  where  PEKTRF_ADDSID = aPEKTRF_ADDSID ;
 atmpBrief := func.PEKD_ADDS_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKTRF_DEF_BRIEF_F  (
 aPEKTRF_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKTRF_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKTRF_DEF where PEKTRF_DEFID=aPEKTRF_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(StartDate),' ') ||'; '
  into aBrief from PEKTRF_DEF  where  PEKTRF_DEFID = aPEKTRF_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKTRF_AUTO_BRIEF_F  (
 aPEKTRF_AUTOid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKTRF_AUTOid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKTRF_AUTO where PEKTRF_AUTOID=aPEKTRF_AUTOID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select AutoType
 into atmpID  from PEKTRF_AUTO  where  PEKTRF_AUTOID = aPEKTRF_AUTOID ;
 atmpBrief := func.PEKD_AUTO_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKTRF_SRV_BRIEF_F  (
 aPEKTRF_SRVid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKTRF_SRVid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKTRF_SRV where PEKTRF_SRVID=aPEKTRF_SRVID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select SrvTYPE
 into atmpID  from PEKTRF_SRV  where  PEKTRF_SRVID = aPEKTRF_SRVID ;
 atmpBrief := func.PEKD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKTRF_TR_BRIEF_F  (
 aPEKTRF_TRid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKTRF_TRid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKTRF_TR where PEKTRF_TRID=aPEKTRF_TRID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Train
 into atmpID  from PEKTRF_TR  where  PEKTRF_TRID = aPEKTRF_TRID ;
 atmpBrief := func.PEKD_DIRECTION_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
select ToST
 into atmpID  from PEKTRF_TR  where  PEKTRF_TRID = aPEKTRF_TRID ;
 atmpBrief := func.PEKD_DIRSTATION_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKTRF_REGRTR_BRIEF_F  (
 aPEKTRF_REGRTRid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKTRF_REGRTRid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKTRF_REGRTR where PEKTRF_REGRTRID=aPEKTRF_REGRTRID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(WeightFrom),' ') ||'; '
  into aBrief from PEKTRF_REGRTR  where  PEKTRF_REGRTRID = aPEKTRF_REGRTRID; 
 select aBRIEF 
  ||  nvl(to_char(WeightTo),' ') ||'; '
  into aBrief from PEKTRF_REGRTR  where  PEKTRF_REGRTRID = aPEKTRF_REGRTRID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKCL_DEF_BRIEF_F  (
 aPEKCL_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKCL_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKCL_DEF where PEKCL_DEFID=aPEKCL_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheDep
 into atmpID  from PEKCL_DEF  where  PEKCL_DEFID = aPEKCL_DEFID ;
 atmpBrief := func.PEKD_DEPT_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(LimDate),' ') ||'; '
  into aBrief from PEKCL_DEF  where  PEKCL_DEFID = aPEKCL_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKCL_DAYLY_BRIEF_F  (
 aPEKCL_DAYLYid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKCL_DAYLYid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKCL_DAYLY where PEKCL_DAYLYID=aPEKCL_DAYLYID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Train
 into atmpID  from PEKCL_DAYLY  where  PEKCL_DAYLYID = aPEKCL_DAYLYID ;
 atmpBrief := func.PEKD_TRAINS_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKL_TOLOAD_BRIEF_F  (
 aPEKL_TOLOADid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKL_TOLOADid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKL_TOLOAD where PEKL_TOLOADID=aPEKL_TOLOADID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select SRCPekZ
 into atmpID  from PEKL_TOLOAD  where  PEKL_TOLOADID = aPEKL_TOLOADID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZExt_def_BRIEF_F  (
 aMTZExt_defid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZExt_defid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZExt_def where MTZExt_defID=aMTZExt_defID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from MTZExt_def  where  MTZExt_defID = aMTZExt_defID; 
  select  aBRIEF ||
  Decode( ExtType
 ,1
 ,'OnFormExt'
 ,7
 ,'CodeGenerator'
 ,3
 ,'JrnlAddExt'
 ,6
 ,'VerifyRowExt'
 ,0
 ,'StatusExt'
 ,8
 ,'ARMGenerator'
 ,5
 ,'DefaultExt'
 ,2
 ,'CustomExt'
 ,4
 ,'JrnlRunExt'
,'.') into aBrief from MTZExt_def where MTZExt_defID=aMTZExt_defID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZExtRel_BRIEF_F  (
 aMTZExtRelid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZExtRelid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZExtRel where MTZExtRelID=aMTZExtRelID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
  select  aBRIEF ||
  Decode( ThePlatform
 ,2
 ,'JAVA'
 ,3
 ,'OTHER'
 ,1
 ,'DOTNET'
 ,0
 ,'VB6'
,'.') into aBrief from MTZExtRel where MTZExtRelID=aMTZExtRelID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function InfoStoreDef_BRIEF_F  (
 aInfoStoreDefid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aInfoStoreDefid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from InfoStoreDef where InfoStoreDefID=aInfoStoreDefID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from InfoStoreDef  where  InfoStoreDefID = aInfoStoreDefID; 
  select  aBRIEF ||
  Decode( InfoStoreType
 ,2
 ,'Групповой'
 ,1
 ,'Персональный'
 ,0
 ,' Общий'
,'.') into aBrief from InfoStoreDef where InfoStoreDefID=aInfoStoreDefID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Folder_BRIEF_F  (
 aFolderid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFolderid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Folder where FolderID=aFolderID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Folder  where  FolderID = aFolderID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Shortcut_BRIEF_F  (
 aShortcutid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aShortcutid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Shortcut where ShortcutID=aShortcutID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select DocItem
 into atmpID  from Shortcut  where  ShortcutID = aShortcutID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKP_DEF_BRIEF_F  (
 aPEKP_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKP_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKP_DEF where PEKP_DEFID=aPEKP_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select FromClient
 into atmpID  from PEKP_DEF  where  PEKP_DEFID = aPEKP_DEFID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(PLPNUM),' ') ||'; '
  into aBrief from PEKP_DEF  where  PEKP_DEFID = aPEKP_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(PLPDate),' ') ||'; '
  into aBrief from PEKP_DEF  where  PEKP_DEFID = aPEKP_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKP_PZ_BRIEF_F  (
 aPEKP_PZid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKP_PZid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKP_PZ where PEKP_PZID=aPEKP_PZID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select PZ
 into atmpID  from PEKP_PZ  where  PEKP_PZID = aPEKP_PZID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function SysLog_BRIEF_F  (
 aSysLogid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSysLogid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from SysLog where SysLogID=aSysLogID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheSession
 into atmpID  from SysLog  where  SysLogID = aSysLogID ;
 atmpBrief := func.the_Session_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(LogStructID),' ') ||'; '
  into aBrief from SysLog  where  SysLogID = aSysLogID; 
 select aBRIEF 
  ||  nvl(to_char(VERB),' ') ||'; '
  into aBrief from SysLog  where  SysLogID = aSysLogID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function the_Session_BRIEF_F  (
 athe_Sessionid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if athe_Sessionid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from the_Session where the_SessionID=athe_SessionID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select UserRole
 into atmpID  from the_Session  where  the_SessionID = athe_SessionID ;
 atmpBrief := func.Groups_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( Closed
 ,1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from the_Session where the_SessionID=athe_SessionID;
select Usersid
 into atmpID  from the_Session  where  the_SessionID = athe_SessionID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function LogReader_BRIEF_F  (
 aLogReaderid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aLogReaderid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from LogReader where LogReaderID=aLogReaderID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from LogReader  where  LogReaderID = aLogReaderID; 
 select aBRIEF 
  ||  nvl(to_char(ReadMarker),' ') ||'; '
  into aBrief from LogReader  where  LogReaderID = aLogReaderID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Verb_BRIEF_F  (
 aVerbid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVerbid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Verb where VerbID=aVerbID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Verb  where  VerbID = aVerbID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Users_BRIEF_F  (
 aUsersid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aUsersid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Users where UsersID=aUsersID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Family),' ') ||'; '
  into aBrief from Users  where  UsersID = aUsersID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Users  where  UsersID = aUsersID; 
 select aBRIEF 
  ||  nvl(to_char(SurName),' ') ||'; '
  into aBrief from Users  where  UsersID = aUsersID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Groups_BRIEF_F  (
 aGroupsid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGroupsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Groups where GroupsID=aGroupsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Groups  where  GroupsID = aGroupsID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GroupUser_BRIEF_F  (
 aGroupUserid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGroupUserid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GroupUser where GroupUserID=aGroupUserID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheUser
 into atmpID  from GroupUser  where  GroupUserID = aGroupUserID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDContractStage_BRIEF_F  (
 aVRDContractStageid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDContractStageid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDContractStage where VRDContractStageID=aVRDContractStageID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from VRDContractStage  where  VRDContractStageID = aVRDContractStageID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDRreportType_BRIEF_F  (
 aVRDRreportTypeid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDRreportTypeid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDRreportType where VRDRreportTypeID=aVRDRreportTypeID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from VRDRreportType  where  VRDRreportTypeID = aVRDRreportTypeID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDPrjType_BRIEF_F  (
 aVRDPrjTypeid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDPrjTypeid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDPrjType where VRDPrjTypeID=aVRDPrjTypeID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from VRDPrjType  where  VRDPrjTypeID = aVRDPrjTypeID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDStream_BRIEF_F  (
 aVRDStreamid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDStreamid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDStream where VRDStreamID=aVRDStreamID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from VRDStream  where  VRDStreamID = aVRDStreamID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDInterest_BRIEF_F  (
 aVRDInterestid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDInterestid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDInterest where VRDInterestID=aVRDInterestID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from VRDInterest  where  VRDInterestID = aVRDInterestID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDDocType_BRIEF_F  (
 aVRDDocTypeid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDDocTypeid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDDocType where VRDDocTypeID=aVRDDocTypeID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from VRDDocType  where  VRDDocTypeID = aVRDDocTypeID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDLoyalty_BRIEF_F  (
 aVRDLoyaltyid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDLoyaltyid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDLoyalty where VRDLoyaltyID=aVRDLoyaltyID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(the_Level),' ') ||'; '
  into aBrief from VRDLoyalty  where  VRDLoyaltyID = aVRDLoyaltyID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRDMarket_BRIEF_F  (
 aVRDMarketid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRDMarketid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRDMarket where VRDMarketID=aVRDMarketID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from VRDMarket  where  VRDMarketID = aVRDMarketID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZSEC_RIGHT_BRIEF_F  (
 aMTZSEC_RIGHTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZSEC_RIGHTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZSEC_RIGHT where MTZSEC_RIGHTID=aMTZSEC_RIGHTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheGroup
 into atmpID  from MTZSEC_RIGHT  where  MTZSEC_RIGHTID = aMTZSEC_RIGHTID ;
 atmpBrief := func.Groups_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(ProtectedItem),' ') ||'; '
  into aBrief from MTZSEC_RIGHT  where  MTZSEC_RIGHTID = aMTZSEC_RIGHTID; 
  select  aBRIEF ||
  Decode( Allow
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from MTZSEC_RIGHT where MTZSEC_RIGHTID=aMTZSEC_RIGHTID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCAccounts_BRIEF_F  (
 aVRCAccountsid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCAccountsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCAccounts where VRCAccountsID=aVRCAccountsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select BANK
 into atmpID  from VRCAccounts  where  VRCAccountsID = aVRCAccountsID ;
 atmpBrief := func.ENTDIC_BANK_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(acc),' ') ||'; '
  into aBrief from VRCAccounts  where  VRCAccountsID = aVRCAccountsID; 
  select  aBRIEF ||
  Decode( DefaultAccount
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from VRCAccounts where VRCAccountsID=aVRCAccountsID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCTorg_BRIEF_F  (
 aVRCTorgid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCTorgid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCTorg where VRCTorgID=aVRCTorgID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Address),' ') ||'; '
  into aBrief from VRCTorg  where  VRCTorgID = aVRCTorgID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCAditional_BRIEF_F  (
 aVRCAditionalid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCAditionalid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCAditional where VRCAditionalID=aVRCAditionalID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(regdate),' ') ||'; '
  into aBrief from VRCAditional  where  VRCAditionalID = aVRCAditionalID; 
select regby
 into atmpID  from VRCAditional  where  VRCAditionalID = aVRCAditionalID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCTarif_BRIEF_F  (
 aVRCTarifid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCTarifid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCTarif where VRCTarifID=aVRCTarifID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheDept
 into atmpID  from VRCTarif  where  VRCTarifID = aVRCTarifID ;
 atmpBrief := func.PEKD_DEPT_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCCommonInfo_BRIEF_F  (
 aVRCCommonInfoid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCCommonInfoid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCCommonInfo where VRCCommonInfoID=aVRCCommonInfoID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from VRCCommonInfo  where  VRCCommonInfoID = aVRCCommonInfoID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_USER_BRIEF_F  (
 aROLES_USERid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_USERid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_USER where ROLES_USERID=aROLES_USERID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheUser
 into atmpID  from ROLES_USER  where  ROLES_USERID = aROLES_USERID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_MAP_BRIEF_F  (
 aROLES_MAPid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_MAPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_MAP where ROLES_MAPID=aROLES_MAPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheGroup
 into atmpID  from ROLES_MAP  where  ROLES_MAPID = aROLES_MAPID ;
 atmpBrief := func.Groups_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_DOC_BRIEF_F  (
 aROLES_DOCid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_DOCid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_DOC where ROLES_DOCID=aROLES_DOCID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select The_Document
 into atmpID  from ROLES_DOC  where  ROLES_DOCID = aROLES_DOCID ;
 atmpBrief := func.OBJECTTYPE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_DOC_STATE_BRIEF_F  (
 aROLES_DOC_STATEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_DOC_STATEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_DOC_STATE where ROLES_DOC_STATEID=aROLES_DOC_STATEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select The_State
 into atmpID  from ROLES_DOC_STATE  where  ROLES_DOC_STATEID = aROLES_DOC_STATEID ;
 atmpBrief := func.OBJSTATUS_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
select The_Mode
 into atmpID  from ROLES_DOC_STATE  where  ROLES_DOC_STATEID = aROLES_DOC_STATEID ;
 atmpBrief := func.OBJECTMODE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_DEF_BRIEF_F  (
 aROLES_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_DEF where ROLES_DEFID=aROLES_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from ROLES_DEF  where  ROLES_DEFID = aROLES_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_REPORTS_BRIEF_F  (
 aROLES_REPORTSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_REPORTSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_REPORTS where ROLES_REPORTSID=aROLES_REPORTSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select The_Report
 into atmpID  from ROLES_REPORTS  where  ROLES_REPORTSID = aROLES_REPORTSID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_WP_BRIEF_F  (
 aROLES_WPid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_WPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_WP where ROLES_WPID=aROLES_WPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select WP
 into atmpID  from ROLES_WP  where  ROLES_WPID = aROLES_WPID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_ACT_BRIEF_F  (
 aROLES_ACTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_ACTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_ACT where ROLES_ACTID=aROLES_ACTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
  select  aBRIEF ||
  Decode( Accesible
 ,1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from ROLES_ACT where ROLES_ACTID=aROLES_ACTID;
select EntryPoints
 into atmpID  from ROLES_ACT  where  ROLES_ACTID = aROLES_ACTID ;
 atmpBrief := func.EntryPoints_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function RptSrvMsg_BRIEF_F  (
 aRptSrvMsgid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aRptSrvMsgid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from RptSrvMsg where RptSrvMsgID=aRptSrvMsgID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Msgdate),' ') ||'; '
  into aBrief from RptSrvMsg  where  RptSrvMsgID = aRptSrvMsgID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function RptQuery_BRIEF_F  (
 aRptQueryid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aRptQueryid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from RptQuery where RptQueryID=aRptQueryID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select ReportType
 into atmpID  from RptQuery  where  RptQueryID = aRptQueryID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function RptQryParam_BRIEF_F  (
 aRptQryParamid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aRptQryParamid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from RptQryParam where RptQryParamID=aRptQryParamID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from RptQryParam  where  RptQryParamID = aRptQryParamID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKORD_DEF_BRIEF_F  (
 aPEKORD_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKORD_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKORD_DEF where PEKORD_DEFID=aPEKORD_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(docnumber),' ') ||'; '
  into aBrief from PEKORD_DEF  where  PEKORD_DEFID = aPEKORD_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(docname),' ') ||'; '
  into aBrief from PEKORD_DEF  where  PEKORD_DEFID = aPEKORD_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(regdate),' ') ||'; '
  into aBrief from PEKORD_DEF  where  PEKORD_DEFID = aPEKORD_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKORD_DATA_BRIEF_F  (
 aPEKORD_DATAid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKORD_DATAid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKORD_DATA where PEKORD_DATAID=aPEKORD_DATAID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Cient
 into atmpID  from PEKORD_DATA  where  PEKORD_DATAID = aPEKORD_DATAID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
select NewTarifType
 into atmpID  from PEKORD_DATA  where  PEKORD_DATAID = aPEKORD_DATAID ;
 atmpBrief := func.PEKD_TRFTYPE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WorkPlace_BRIEF_F  (
 aWorkPlaceid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWorkPlaceid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WorkPlace where WorkPlaceID=aWorkPlaceID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from WorkPlace  where  WorkPlaceID = aWorkPlaceID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function EntryPoints_BRIEF_F  (
 aEntryPointsid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aEntryPointsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from EntryPoints where EntryPointsID=aEntryPointsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from EntryPoints  where  EntryPointsID = aEntryPointsID; 
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from EntryPoints  where  EntryPointsID = aEntryPointsID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function EPFilterLink_BRIEF_F  (
 aEPFilterLinkid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aEPFilterLinkid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from EPFilterLink where EPFilterLinkID=aEPFilterLinkID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(RowSource),' ') ||'; '
  into aBrief from EPFilterLink  where  EPFilterLinkID = aEPFilterLinkID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ARMTypes_BRIEF_F  (
 aARMTypesid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aARMTypesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ARMTypes where ARMTypesID=aARMTypesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheDocumentType
 into atmpID  from ARMTypes  where  ARMTypesID = aARMTypesID ;
 atmpBrief := func.OBJECTTYPE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ARMJournal_BRIEF_F  (
 aARMJournalid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aARMJournalid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ARMJournal where ARMJournalID=aARMJournalID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheJournal
 into atmpID  from ARMJournal  where  ARMJournalID = aARMJournalID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ARMJRNLADD_BRIEF_F  (
 aARMJRNLADDid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aARMJRNLADDid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ARMJRNLADD where ARMJRNLADDID=aARMJRNLADDID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ARMJRNLADD  where  ARMJRNLADDID = aARMJRNLADDID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ARMJRNLREP_BRIEF_F  (
 aARMJRNLREPid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aARMJRNLREPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ARMJRNLREP where ARMJRNLREPID=aARMJRNLREPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(repname),' ') ||'; '
  into aBrief from ARMJRNLREP  where  ARMJRNLREPID = aARMJRNLREPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ARMJRNLRUN_BRIEF_F  (
 aARMJRNLRUNid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aARMJRNLRUNid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ARMJRNLRUN where ARMJRNLRUNID=aARMJRNLRUNID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ARMJRNLRUN  where  ARMJRNLRUNID = aARMJRNLRUNID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_NZONE_BRIEF_F  (
 aPEKD_NZONEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_NZONEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_NZONE where PEKD_NZONEID=aPEKD_NZONEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheYear),' ') ||'; '
  into aBrief from PEKD_NZONE  where  PEKD_NZONEID = aPEKD_NZONEID; 
  select  aBRIEF ||
  Decode( TheMonth
 ,11
 ,'Ноябрь'
 ,2
 ,'Февраль'
 ,12
 ,'Декабрь'
 ,3
 ,'Март'
 ,1
 ,'Январь'
 ,9
 ,'Сентябрь'
 ,6
 ,'Июнь'
 ,10
 ,'Октябрь'
 ,5
 ,'Май'
 ,8
 ,'Август'
 ,7
 ,'Июль'
 ,4
 ,'Апрель'
,'.') into aBrief from PEKD_NZONE where PEKD_NZONEID=aPEKD_NZONEID;
 select aBRIEF 
  ||  nvl(to_char(POIDX),' ') ||'; '
  into aBrief from PEKD_NZONE  where  PEKD_NZONEID = aPEKD_NZONEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_USEDNUM_BRIEF_F  (
 aPEKD_USEDNUMid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_USEDNUMid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_USEDNUM where PEKD_USEDNUMID=aPEKD_USEDNUMID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(UsedNumber),' ') ||'; '
  into aBrief from PEKD_USEDNUM  where  PEKD_USEDNUMID = aPEKD_USEDNUMID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function JournalColumn_BRIEF_F  (
 aJournalColumnid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aJournalColumnid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from JournalColumn where JournalColumnID=aJournalColumnID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from JournalColumn  where  JournalColumnID = aJournalColumnID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function JColumnSource_BRIEF_F  (
 aJColumnSourceid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aJColumnSourceid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from JColumnSource where JColumnSourceID=aJColumnSourceID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(ViewField),' ') ||'; '
  into aBrief from JColumnSource  where  JColumnSourceID = aJColumnSourceID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Journal_BRIEF_F  (
 aJournalid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aJournalid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Journal where JournalID=aJournalID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Journal  where  JournalID = aJournalID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function JournalSrc_BRIEF_F  (
 aJournalSrcid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aJournalSrcid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from JournalSrc where JournalSrcID=aJournalSrcID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(PartView),' ') ||'; '
  into aBrief from JournalSrc  where  JournalSrcID = aJournalSrcID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function pekmsg_path_BRIEF_F  (
 apekmsg_pathid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if apekmsg_pathid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from pekmsg_path where pekmsg_pathID=apekmsg_pathID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(vagNo),' ') ||'; '
  into aBrief from pekmsg_path  where  pekmsg_pathID = apekmsg_pathID; 
select TheDirection
 into atmpID  from pekmsg_path  where  pekmsg_pathID = apekmsg_pathID ;
 atmpBrief := func.PEKD_DIRECTION_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_MAILLIST_BRIEF_F  (
 aWEBS_MAILLISTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_MAILLISTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_MAILLIST where WEBS_MAILLISTID=aWEBS_MAILLISTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Email),' ') ||'; '
  into aBrief from WEBS_MAILLIST  where  WEBS_MAILLISTID = aWEBS_MAILLISTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_RECLAME_BRIEF_F  (
 aWEBS_RECLAMEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_RECLAMEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_RECLAME where WEBS_RECLAMEID=aWEBS_RECLAMEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Path
 into atmpID  from WEBS_RECLAME  where  WEBS_RECLAMEID = aWEBS_RECLAMEID ;
 atmpBrief := func.TheDefenitionDiffP_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PAGEDEF_BRIEF_F  (
 aWEBS_PAGEDEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PAGEDEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PAGEDEF where WEBS_PAGEDEFID=aWEBS_PAGEDEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(QueueNumber),' ') ||'; '
  into aBrief from WEBS_PAGEDEF  where  WEBS_PAGEDEFID = aWEBS_PAGEDEFID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_PAGEDEF  where  WEBS_PAGEDEFID = aWEBS_PAGEDEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PICS_BRIEF_F  (
 aWEBS_PICSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PICSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PICS where WEBS_PICSID=aWEBS_PICSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_PICS  where  WEBS_PICSID = aWEBS_PICSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PAGEMENU_BRIEF_F  (
 aWEBS_PAGEMENUid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PAGEMENUid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PAGEMENU where WEBS_PAGEMENUID=aWEBS_PAGEMENUID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select UsePartRowsEditForm
 into atmpID  from WEBS_PAGEMENU  where  WEBS_PAGEMENUID = aWEBS_PAGEMENUID ;
 atmpBrief := func.WEBS_PAGEDEF_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PAGECONTENT_BRIEF_F  (
 aWEBS_PAGECONTENTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PAGECONTENTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PAGECONTENT where WEBS_PAGECONTENTID=aWEBS_PAGECONTENTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Content),' ') ||'; '
  into aBrief from WEBS_PAGECONTENT  where  WEBS_PAGECONTENTID = aWEBS_PAGECONTENTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PAGEPARS_BRIEF_F  (
 aWEBS_PAGEPARSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PAGEPARSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PAGEPARS where WEBS_PAGEPARSID=aWEBS_PAGEPARSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_PAGEPARS  where  WEBS_PAGEPARSID = aWEBS_PAGEPARSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PAGECOMP_BRIEF_F  (
 aWEBS_PAGECOMPid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PAGECOMPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PAGECOMP where WEBS_PAGECOMPID=aWEBS_PAGECOMPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_PAGECOMP  where  WEBS_PAGECOMPID = aWEBS_PAGECOMPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function TablePart_BRIEF_F  (
 aTablePartid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aTablePartid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from TablePart where TablePartID=aTablePartID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FilterUserIDFieldName_),' ') ||'; '
  into aBrief from TablePart  where  TablePartID = aTablePartID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ReplaceValues_BRIEF_F  (
 aReplaceValuesid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aReplaceValuesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ReplaceValues where ReplaceValuesID=aReplaceValuesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ReplaceValues  where  ReplaceValuesID = aReplaceValuesID; 
 select aBRIEF 
  ||  nvl(to_char(SourceName),' ') ||'; '
  into aBrief from ReplaceValues  where  ReplaceValuesID = aReplaceValuesID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function DenyEdit_BRIEF_F  (
 aDenyEditid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aDenyEditid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from DenyEdit where DenyEditID=aDenyEditID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from DenyEdit  where  DenyEditID = aDenyEditID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function DenyVisible_BRIEF_F  (
 aDenyVisibleid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aDenyVisibleid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from DenyVisible where DenyVisibleID=aDenyVisibleID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from DenyVisible  where  DenyVisibleID = aDenyVisibleID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function AllowEditFieldValues_BRIEF_F  (
 aAllowEditFieldValuesid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aAllowEditFieldValuesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from AllowEditFieldValues where AllowEditFieldValuesID=aAllowEditFieldValuesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from AllowEditFieldValues  where  AllowEditFieldValuesID = aAllowEditFieldValuesID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ComboFields_BRIEF_F  (
 aComboFieldsid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aComboFieldsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ComboFields where ComboFieldsID=aComboFieldsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ComboFields  where  ComboFieldsID = aComboFieldsID; 
 select aBRIEF 
  ||  nvl(to_char(SourceName),' ') ||'; '
  into aBrief from ComboFields  where  ComboFieldsID = aComboFieldsID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_ANKETA_BRIEF_F  (
 aWEBS_ANKETAid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_ANKETAid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_ANKETA where WEBS_ANKETAID=aWEBS_ANKETAID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_ANKETA  where  WEBS_ANKETAID = aWEBS_ANKETAID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_QUESTIONS_BRIEF_F  (
 aWEBS_QUESTIONSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_QUESTIONSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_QUESTIONS where WEBS_QUESTIONSID=aWEBS_QUESTIONSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(the_Number),' ') ||'; '
  into aBrief from WEBS_QUESTIONS  where  WEBS_QUESTIONSID = aWEBS_QUESTIONSID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_QUESTIONS  where  WEBS_QUESTIONSID = aWEBS_QUESTIONSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_ANSWERS_BRIEF_F  (
 aWEBS_ANSWERSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_ANSWERSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_ANSWERS where WEBS_ANSWERSID=aWEBS_ANSWERSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(the_Number),' ') ||'; '
  into aBrief from WEBS_ANSWERS  where  WEBS_ANSWERSID = aWEBS_ANSWERSID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_ANSWERS  where  WEBS_ANSWERSID = aWEBS_ANSWERSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_DDOC_BRIEF_F  (
 aWEBS_DDOCid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_DDOCid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_DDOC where WEBS_DDOCID=aWEBS_DDOCID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_DDOC  where  WEBS_DDOCID = aWEBS_DDOCID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_NEWS_BRIEF_F  (
 aWEBS_NEWSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_NEWSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_NEWS where WEBS_NEWSID=aWEBS_NEWSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(QueueNumber),' ') ||'; '
  into aBrief from WEBS_NEWS  where  WEBS_NEWSID = aWEBS_NEWSID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_NEWS  where  WEBS_NEWSID = aWEBS_NEWSID; 
 select aBRIEF 
  ||  nvl(to_char(NewsDate),' ') ||'; '
  into aBrief from WEBS_NEWS  where  WEBS_NEWSID = aWEBS_NEWSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function NEWS_PICS_BRIEF_F  (
 aNEWS_PICSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aNEWS_PICSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from NEWS_PICS where NEWS_PICSID=aNEWS_PICSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from NEWS_PICS  where  NEWS_PICSID = aNEWS_PICSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCPSeeAlso_BRIEF_F  (
 aVRCPSeeAlsoid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCPSeeAlsoid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCPSeeAlso where VRCPSeeAlsoID=aVRCPSeeAlsoID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Document
 into atmpID  from VRCPSeeAlso  where  VRCPSeeAlsoID = aVRCPSeeAlsoID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(the_Comment),' ') ||'; '
  into aBrief from VRCPSeeAlso  where  VRCPSeeAlsoID = aVRCPSeeAlsoID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCPSpecial_BRIEF_F  (
 aVRCPSpecialid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCPSpecialid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCPSpecial where VRCPSpecialID=aVRCPSpecialID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DateOF),' ') ||'; '
  into aBrief from VRCPSpecial  where  VRCPSpecialID = aVRCPSpecialID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCPPresents_BRIEF_F  (
 aVRCPPresentsid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCPPresentsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCPPresents where VRCPPresentsID=aVRCPPresentsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DateOF),' ') ||'; '
  into aBrief from VRCPPresents  where  VRCPPresentsID = aVRCPPresentsID; 
 select aBRIEF 
  ||  nvl(to_char(Gift),' ') ||'; '
  into aBrief from VRCPPresents  where  VRCPPresentsID = aVRCPPresentsID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCPReports_BRIEF_F  (
 aVRCPReportsid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCPReportsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCPReports where VRCPReportsID=aVRCPReportsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Report
 into atmpID  from VRCPReports  where  VRCPReportsID = aVRCPReportsID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCPDates_BRIEF_F  (
 aVRCPDatesid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCPDatesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCPDates where VRCPDatesID=aVRCPDatesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DateOf),' ') ||'; '
  into aBrief from VRCPDates  where  VRCPDatesID = aVRCPDatesID; 
 select aBRIEF 
  ||  nvl(to_char(DateEvent),' ') ||'; '
  into aBrief from VRCPDates  where  VRCPDatesID = aVRCPDatesID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCPNeigborhood_BRIEF_F  (
 aVRCPNeigborhoodid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCPNeigborhoodid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCPNeigborhood where VRCPNeigborhoodID=aVRCPNeigborhoodID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(the_Level),' ') ||'; '
  into aBrief from VRCPNeigborhood  where  VRCPNeigborhoodID = aVRCPNeigborhoodID; 
select person
 into atmpID  from VRCPNeigborhood  where  VRCPNeigborhoodID = aVRCPNeigborhoodID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCPInterest_BRIEF_F  (
 aVRCPInterestid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCPInterestid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCPInterest where VRCPInterestID=aVRCPInterestID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Info),' ') ||'; '
  into aBrief from VRCPInterest  where  VRCPInterestID = aVRCPInterestID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VRCPCommon_BRIEF_F  (
 aVRCPCommonid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVRCPCommonid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VRCPCommon where VRCPCommonID=aVRCPCommonID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Family),' ') ||'; '
  into aBrief from VRCPCommon  where  VRCPCommonID = aVRCPCommonID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from VRCPCommon  where  VRCPCommonID = aVRCPCommonID; 
 select aBRIEF 
  ||  nvl(to_char(SurName),' ') ||'; '
  into aBrief from VRCPCommon  where  VRCPCommonID = aVRCPCommonID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKZR_DATA_BRIEF_F  (
 aPEKZR_DATAid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKZR_DATAid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKZR_DATA where PEKZR_DATAID=aPEKZR_DATAID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheDept
 into atmpID  from PEKZR_DATA  where  PEKZR_DATAID = aPEKZR_DATAID ;
 atmpBrief := func.PEKD_DEPT_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from PEKZR_DATA  where  PEKZR_DATAID = aPEKZR_DATAID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBCRD_NUM_BRIEF_F  (
 aWEBCRD_NUMid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBCRD_NUMid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBCRD_NUM where WEBCRD_NUMID=aWEBCRD_NUMID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheNumber),' ') ||'; '
  into aBrief from WEBCRD_NUM  where  WEBCRD_NUMID = aWEBCRD_NUMID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WBCRD_DEF_BRIEF_F  (
 aWBCRD_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWBCRD_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WBCRD_DEF where WBCRD_DEFID=aWBCRD_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from WBCRD_DEF  where  WBCRD_DEFID = aWBCRD_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKO_DEF_BRIEF_F  (
 aPEKO_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKO_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKO_DEF where PEKO_DEFID=aPEKO_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select ToClient
 into atmpID  from PEKO_DEF  where  PEKO_DEFID = aPEKO_DEFID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(PLPNUM),' ') ||'; '
  into aBrief from PEKO_DEF  where  PEKO_DEFID = aPEKO_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(PLPDate),' ') ||'; '
  into aBrief from PEKO_DEF  where  PEKO_DEFID = aPEKO_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKL_DEF_BRIEF_F  (
 aPEKL_DEFid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKL_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKL_DEF where PEKL_DEFID=aPEKL_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheDep
 into atmpID  from PEKL_DEF  where  PEKL_DEFID = aPEKL_DEFID ;
 atmpBrief := func.PEKD_DEPT_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(FromDate),' ') ||'; '
  into aBrief from PEKL_DEF  where  PEKL_DEFID = aPEKL_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKL_WDAY_BRIEF_F  (
 aPEKL_WDAYid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKL_WDAYid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKL_WDAY where PEKL_WDAYID=aPEKL_WDAYID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Train
 into atmpID  from PEKL_WDAY  where  PEKL_WDAYID = aPEKL_WDAYID ;
 atmpBrief := func.PEKD_TRAINS_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_ADDS_BRIEF_F  (
 aPEKD_ADDSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_ADDSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_ADDS where PEKD_ADDSID=aPEKD_ADDSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PEKD_ADDS  where  PEKD_ADDSID = aPEKD_ADDSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_TRAINTYPE_BRIEF_F  (
 aPEKD_TRAINTYPEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_TRAINTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_TRAINTYPE where PEKD_TRAINTYPEID=aPEKD_TRAINTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from PEKD_TRAINTYPE  where  PEKD_TRAINTYPEID = aPEKD_TRAINTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_AUTO_BRIEF_F  (
 aPEKD_AUTOid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_AUTOid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_AUTO where PEKD_AUTOID=aPEKD_AUTOID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PEKD_AUTO  where  PEKD_AUTOID = aPEKD_AUTOID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_GOTYPE_BRIEF_F  (
 aPEKD_GOTYPEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_GOTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_GOTYPE where PEKD_GOTYPEID=aPEKD_GOTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from PEKD_GOTYPE  where  PEKD_GOTYPEID = aPEKD_GOTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_INFOSENDTYPE_BRIEF_F  (
 aPEKD_INFOSENDTYPEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_INFOSENDTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_INFOSENDTYPE where PEKD_INFOSENDTYPEID=aPEKD_INFOSENDTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PEKD_INFOSENDTYPE  where  PEKD_INFOSENDTYPEID = aPEKD_INFOSENDTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_TRTYPE_BRIEF_F  (
 aPEKD_TRTYPEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_TRTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_TRTYPE where PEKD_TRTYPEID=aPEKD_TRTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from PEKD_TRTYPE  where  PEKD_TRTYPEID = aPEKD_TRTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_GRPDpUSL_BRIEF_F  (
 aPEKD_GRPDpUSLid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_GRPDpUSLid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_GRPDpUSL where PEKD_GRPDpUSLID=aPEKD_GRPDpUSLID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from PEKD_GRPDpUSL  where  PEKD_GRPDpUSLID = aPEKD_GRPDpUSLID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_POSTTYPE_BRIEF_F  (
 aPEKD_POSTTYPEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_POSTTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_POSTTYPE where PEKD_POSTTYPEID=aPEKD_POSTTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PEKD_POSTTYPE  where  PEKD_POSTTYPEID = aPEKD_POSTTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_TRFGRP_BRIEF_F  (
 aPEKD_TRFGRPid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_TRFGRPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_TRFGRP where PEKD_TRFGRPID=aPEKD_TRFGRPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from PEKD_TRFGRP  where  PEKD_TRFGRPID = aPEKD_TRFGRPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_TRFTYPE_BRIEF_F  (
 aPEKD_TRFTYPEid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_TRFTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_TRFTYPE where PEKD_TRFTYPEID=aPEKD_TRFTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from PEKD_TRFTYPE  where  PEKD_TRFTYPEID = aPEKD_TRFTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_DEPT_BRIEF_F  (
 aPEKD_DEPTid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_DEPTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_DEPT where PEKD_DEPTID=aPEKD_DEPTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from PEKD_DEPT  where  PEKD_DEPTID = aPEKD_DEPTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_DEPLIMITS_BRIEF_F  (
 aPEKD_DEPLIMITSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_DEPLIMITSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_DEPLIMITS where PEKD_DEPLIMITSID=aPEKD_DEPLIMITSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Supplier
 into atmpID  from PEKD_DEPLIMITS  where  PEKD_DEPLIMITSID = aPEKD_DEPLIMITSID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_DEPDOG_BRIEF_F  (
 aPEKD_DEPDOGid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_DEPDOGid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_DEPDOG where PEKD_DEPDOGID=aPEKD_DEPDOGID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Supplier
 into atmpID  from PEKD_DEPDOG  where  PEKD_DEPDOGID = aPEKD_DEPDOGID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_DIRECTION_BRIEF_F  (
 aPEKD_DIRECTIONid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_DIRECTIONid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_DIRECTION where PEKD_DIRECTIONID=aPEKD_DIRECTIONID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PEKD_DIRECTION  where  PEKD_DIRECTIONID = aPEKD_DIRECTIONID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_TRAINS_BRIEF_F  (
 aPEKD_TRAINSid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_TRAINSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_TRAINS where PEKD_TRAINSID=aPEKD_TRAINSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TrainNo),' ') ||'; '
  into aBrief from PEKD_TRAINS  where  PEKD_TRAINSID = aPEKD_TRAINSID; 
select FromStation
 into atmpID  from PEKD_TRAINS  where  PEKD_TRAINSID = aPEKD_TRAINSID ;
 atmpBrief := func.PEKD_DIRSTATION_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
select ToSTATION
 into atmpID  from PEKD_TRAINS  where  PEKD_TRAINSID = aPEKD_TRAINSID ;
 atmpBrief := func.PEKD_DIRSTATION_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_DIRSTATION_BRIEF_F  (
 aPEKD_DIRSTATIONid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_DIRSTATIONid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_DIRSTATION where PEKD_DIRSTATIONID=aPEKD_DIRSTATIONID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from PEKD_DIRSTATION  where  PEKD_DIRSTATIONID = aPEKD_DIRSTATIONID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PEKD_SRV_BRIEF_F  (
 aPEKD_SRVid CHAR
) return varchar as 
 aBRIEF varchar(255);
 atmpStr varchar(255);
 atmpBrief varchar(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPEKD_SRVid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PEKD_SRV where PEKD_SRVID=aPEKD_SRVID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from PEKD_SRV  where  PEKD_SRVID = aPEKD_SRVID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;


 end Func;

;

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Procedures.Kernel.Body" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Procedures.Type.Body" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Init" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder></root>
