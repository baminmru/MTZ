VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "VRCCommonInfo"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit


'строка раздела Общая информация
Private m_ID As String
Private m_SecureStyleID As String
Private m_RowRetrived As Boolean
Private m_Changed As Boolean
Private m_Deleted As Boolean
Private m_RetriveTime As Date
Private m_ChangeTime As Date
Private m_AccessTime As Date
Private m_Parent As Object
Private m_Application As Application
Private m_IsPhizical As enumBoolean
Private m_OPF As Object
Dim m_OPF_ID As String
Dim m_OPF_ID_BRIEF As String
Private m_Name As String
Private m_INN As String
Private m_KPP As String
Private m_TheF As String
Private m_TheI As String
Private m_TheO As String
Private m_fullname As String
Private m_CompInfo As Object
Dim m_CompInfo_ID As String
Dim m_CompInfo_ID_BRIEF As String
Private m_PassSeria As String
Private m_PassNum As String
Private m_PassDate As Date
Private m_PassPlace As String
Private m_PassportInfo As String
Private m_Phone As String
Private m_fax As String
Private m_Address As String
Private m_Transporter As enumBoolean
Private m_the_Comment As String
Private m_Curator As Object
Dim m_Curator_ID As String
Dim m_Curator_ID_BRIEF As String
Private m_MarkToDelete As enumBoolean
Private m_Code1C As String
Private m_Brief As String

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string,
'[IN]   OldValue,, тип параметра: Variant
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Event Change(ByVal fieldName As String, ByVal OldValue, ByRef NewValue)
Private m_IsLocked As LockStyle






'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
Public Property Get Deleted() As Boolean
  Deleted = m_Deleted
End Property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
Public Property Get Changed() As Boolean
  Changed = m_Changed
End Property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
Friend Property Let Changed(newChanged As Boolean)
  m_Changed = newChanged
End Property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
Friend Property Let id(ByVal newID As String)
  If m_ID = "" Then
    m_ID = newID
  End If
End Property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
Public Property Get id() As String
  If m_ID = "" Then m_ID = CreateGUID2
  id = m_ID
End Property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
Friend Property Let SecureStyleID(ByVal newID As String)
    m_SecureStyleID = newID
End Property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
Public Property Get SecureStyleID() As String
  SecureStyleID = m_SecureStyleID
End Property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
Public Property Get PartName() As String
  PartName = "VRCCommonInfo"
End Property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
Friend Property Set Parent(newParent As Object)
  Set m_Parent = newParent
End Property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
Public Property Get Parent() As Object
  Set Parent = m_Parent
End Property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
Friend Property Set Application(newApplication As Application)
  Set m_Application = newApplication
  m_Application.Logger.Message "VRCCommonInfo.Init"
End Property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
Public Property Get Application() As Application
  Set Application = m_Application
End Property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
Private Sub CloseParents()
  Set m_Application = Nothing
  Set m_Parent = Nothing
End Sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
Friend Property Let RowRetrived(newRetrived As Boolean)
  m_RowRetrived = newRetrived
End Property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
Public Property Get RowRetrived() As Boolean
  RowRetrived = m_RowRetrived
End Property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
Friend Property Let RetriveTime(newRetriveTime As Date)
  m_RetriveTime = newRetriveTime
End Property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
Public Property Get RetriveTime() As Date
  RetriveTime = m_RetriveTime
End Property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
Friend Property Let ChangeTime(newChangeTime As Date)
  m_ChangeTime = newChangeTime
End Property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
Public Property Get ChangeTime() As Date
 ChangeTime = m_ChangeTime
End Property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
Friend Property Let AccessTime(newAccessTime As Date)
  m_AccessTime = newAccessTime
  If m_AccessTime <= m_RetriveTime Then m_AccessTime = m_RetriveTime + 0.001
End Property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
Public Property Get AccessTime() As Date
  AccessTime = m_AccessTime
End Property
Private Function GetFromXML(ByVal XML As String, ByVal TagName As String) As String
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim node As MSXML2.IXMLDOMNode
  For Each node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(node.baseName) = "BRIEF") Then
      res = node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End Function
' let
'Физическое лицо

'Физическое лицо
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let IsPhizical(ByVal NewValue As enumBoolean)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "IsPhizical", IsPhizical, NewValue

   m_IsPhizical = NewValue
End If
End Property

'Физическое лицо
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsPhizical
Public Property Get IsPhizical() As enumBoolean
 LoadFromDatabase
 AccessTime = Now

   IsPhizical = m_IsPhizical
End Property
' let
'ОПФ

'ОПФ
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Set OPF(ByVal NewValue As Object)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "OPF", OPF, NewValue
On Error Resume Next
m_OPF_ID = ""
m_OPF_ID = NewValue.id
'  set   m_OPF= newValue
End If
End Property

'ОПФ
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'See Also:
'Example:
' dim variable as object
' Set variable = me. OPF
Public Property Get OPF() As Object
 LoadFromDatabase
 AccessTime = Now
Dim tmp_OPF As Object
If m_OPF_ID <> "" Then
  Set tmp_OPF = Application.FindRowObject("ENTDIC_OPF", m_OPF_ID)
  If tmp_OPF Is Nothing Then
    m_OPF_ID_BRIEF = ""
  Else
    m_OPF_ID_BRIEF = tmp_OPF.Brief
  End If
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash "ENTDIC_OPF" & m_OPF_ID, tmp_OPF
  Set OPF = tmp_OPF
  Exit Property
End If
  '  set OPF = m_OPF
End Property
' let
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let Name(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "Name", Name, NewValue

   m_Name = NewValue
End If
End Property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
Public Property Get Name() As String
 LoadFromDatabase
 AccessTime = Now

   Name = m_Name
End Property
' let
'ИНН

'ИНН
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let INN(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "INN", INN, NewValue

   m_INN = NewValue
End If
End Property

'ИНН
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. INN
Public Property Get INN() As String
 LoadFromDatabase
 AccessTime = Now

   INN = m_INN
End Property
' let
'КПП

'КПП
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let KPP(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "KPP", KPP, NewValue

   m_KPP = NewValue
End If
End Property

'КПП
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. KPP
Public Property Get KPP() As String
 LoadFromDatabase
 AccessTime = Now

   KPP = m_KPP
End Property
' let
'Фамилия

'Фамилия
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let TheF(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "TheF", TheF, NewValue

   m_TheF = NewValue
End If
End Property

'Фамилия
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. TheF
Public Property Get TheF() As String
 LoadFromDatabase
 AccessTime = Now

   TheF = m_TheF
End Property
' let
'Имя

'Имя
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let TheI(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "TheI", TheI, NewValue

   m_TheI = NewValue
End If
End Property

'Имя
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. TheI
Public Property Get TheI() As String
 LoadFromDatabase
 AccessTime = Now

   TheI = m_TheI
End Property
' let
'Отчество

'Отчество
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let TheO(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "TheO", TheO, NewValue

   m_TheO = NewValue
End If
End Property

'Отчество
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. TheO
Public Property Get TheO() As String
 LoadFromDatabase
 AccessTime = Now

   TheO = m_TheO
End Property
' let
'Полное наименование

'Полное наименование
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let fullname(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "fullname", fullname, NewValue

   m_fullname = NewValue
End If
End Property

'Полное наименование
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. fullname
Public Property Get fullname() As String
 LoadFromDatabase
 AccessTime = Now

   fullname = m_fullname
End Property
' let
'Информация о компании

'Информация о компании
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Set CompInfo(ByVal NewValue As Object)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "CompInfo", CompInfo, NewValue
On Error Resume Next
m_CompInfo_ID = ""
m_CompInfo_ID = NewValue.id
'  set   m_CompInfo= newValue
End If
End Property

'Информация о компании
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'See Also:
'Example:
' dim variable as object
' Set variable = me. CompInfo
Public Property Get CompInfo() As Object
 LoadFromDatabase
 AccessTime = Now
Dim tmp_CompInfo As Object
If m_CompInfo_ID <> "" Then
  Set tmp_CompInfo = Application.FindRowObject("VRD_CompInfo", m_CompInfo_ID)
  If tmp_CompInfo Is Nothing Then
    m_CompInfo_ID_BRIEF = ""
  Else
    m_CompInfo_ID_BRIEF = tmp_CompInfo.Brief
  End If
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash "VRD_CompInfo" & m_CompInfo_ID, tmp_CompInfo
  Set CompInfo = tmp_CompInfo
  Exit Property
End If
  '  set CompInfo = m_CompInfo
End Property
' let
'Серия паспорта

'Серия паспорта
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let PassSeria(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "PassSeria", PassSeria, NewValue

   m_PassSeria = NewValue
End If
End Property

'Серия паспорта
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. PassSeria
Public Property Get PassSeria() As String
 LoadFromDatabase
 AccessTime = Now

   PassSeria = m_PassSeria
End Property
' let
'Номер пасспорта

'Номер пасспорта
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let PassNum(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "PassNum", PassNum, NewValue

   m_PassNum = NewValue
End If
End Property

'Номер пасспорта
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. PassNum
Public Property Get PassNum() As String
 LoadFromDatabase
 AccessTime = Now

   PassNum = m_PassNum
End Property
' let
'Дата выдачи пасспорта

'Дата выдачи пасспорта
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let PassDate(ByVal NewValue As Date)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "PassDate", PassDate, NewValue

   m_PassDate = NewValue
End If
End Property

'Дата выдачи пасспорта
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. PassDate
Public Property Get PassDate() As Date
 LoadFromDatabase
 AccessTime = Now

   PassDate = m_PassDate
End Property
' let
'Место выдачи пасспорта

'Место выдачи пасспорта
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let PassPlace(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "PassPlace", PassPlace, NewValue

   m_PassPlace = NewValue
End If
End Property

'Место выдачи пасспорта
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. PassPlace
Public Property Get PassPlace() As String
 LoadFromDatabase
 AccessTime = Now

   PassPlace = m_PassPlace
End Property
' let
'Паспортные данные

'Паспортные данные
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let PassportInfo(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "PassportInfo", PassportInfo, NewValue

   m_PassportInfo = NewValue
End If
End Property

'Паспортные данные
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. PassportInfo
Public Property Get PassportInfo() As String
 LoadFromDatabase
 AccessTime = Now

   PassportInfo = m_PassportInfo
End Property
' let
'Телефон

'Телефон
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let Phone(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "Phone", Phone, NewValue

   m_Phone = NewValue
End If
End Property

'Телефон
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Phone
Public Property Get Phone() As String
 LoadFromDatabase
 AccessTime = Now

   Phone = m_Phone
End Property
' let
'Факс

'Факс
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let fax(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "fax", fax, NewValue

   m_fax = NewValue
End If
End Property

'Факс
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. fax
Public Property Get fax() As String
 LoadFromDatabase
 AccessTime = Now

   fax = m_fax
End Property
' let
'Почтовый адрес

'Почтовый адрес
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let Address(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "Address", Address, NewValue

   m_Address = NewValue
End If
End Property

'Почтовый адрес
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Address
Public Property Get Address() As String
 LoadFromDatabase
 AccessTime = Now

   Address = m_Address
End Property
' let
'Поставщик тр. услуг

'Поставщик тр. услуг
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let Transporter(ByVal NewValue As enumBoolean)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "Transporter", Transporter, NewValue

   m_Transporter = NewValue
End If
End Property

'Поставщик тр. услуг
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. Transporter
Public Property Get Transporter() As enumBoolean
 LoadFromDatabase
 AccessTime = Now

   Transporter = m_Transporter
End Property
' let
'Примечание

'Примечание
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let the_Comment(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "the_Comment", the_Comment, NewValue

   m_the_Comment = NewValue
End If
End Property

'Примечание
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. the_Comment
Public Property Get the_Comment() As String
 LoadFromDatabase
 AccessTime = Now

   the_Comment = m_the_Comment
End Property
' let
'Ответственный

'Ответственный
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Set Curator(ByVal NewValue As Object)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "Curator", Curator, NewValue
On Error Resume Next
m_Curator_ID = ""
m_Curator_ID = NewValue.id
'  set   m_Curator= newValue
End If
End Property

'Ответственный
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'See Also:
'Example:
' dim variable as object
' Set variable = me. Curator
Public Property Get Curator() As Object
 LoadFromDatabase
 AccessTime = Now
Dim tmp_Curator As Object
If m_Curator_ID <> "" Then
  Set tmp_Curator = Application.FindRowObject("Users", m_Curator_ID)
  If tmp_Curator Is Nothing Then
    m_Curator_ID_BRIEF = ""
  Else
    m_Curator_ID_BRIEF = tmp_Curator.Brief
  End If
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash "Users" & m_Curator_ID, tmp_Curator
  Set Curator = tmp_Curator
  Exit Property
End If
  '  set Curator = m_Curator
End Property
' let
'Помечен на даление

'Помечен на даление
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let MarkToDelete(ByVal NewValue As enumBoolean)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "MarkToDelete", MarkToDelete, NewValue

   m_MarkToDelete = NewValue
End If
End Property

'Помечен на даление
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. MarkToDelete
Public Property Get MarkToDelete() As enumBoolean
 LoadFromDatabase
 AccessTime = Now

   MarkToDelete = m_MarkToDelete
End Property
' let
'Код1С

'Код1С
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа
'See Also:
'Example:
Public Property Let Code1C(ByVal NewValue As String)
 LoadFromDatabase
If CanChange Then
 ChangeTime = Now
 Changed = True
 OnChange "Code1C", Code1C, NewValue

   m_Code1C = NewValue
End If
End Property

'Код1С
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Code1C
Public Property Get Code1C() As String
 LoadFromDatabase
 AccessTime = Now

   Code1C = m_Code1C
End Property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
Public Sub Pack(ByRef nv As NamedValues)
  Dim nvi As NamedValue
  Set nv = Nothing
  Set nv = New NamedValues

  Set nvi = nv.Add("IsPhizical", m_IsPhizical)
nvi.ValueType = adInteger
 ' Reference to ENTDIC_OPF
    If m_OPF_ID = "" Then
       Set nvi = nv.Add("OPF", "")
    Else
       Set nvi = nv.Add("OPF", m_OPF_ID)
    End If
    nvi.ORACLE_GUID
  Set nvi = nv.Add("Name", m_Name)
nvi.ValueSize = 255
  Set nvi = nv.Add("INN", m_INN)
nvi.ValueSize = 12
  Set nvi = nv.Add("KPP", m_KPP)
nvi.ValueSize = 9
  Set nvi = nv.Add("TheF", m_TheF)
nvi.ValueSize = 80
  Set nvi = nv.Add("TheI", m_TheI)
nvi.ValueSize = 80
  Set nvi = nv.Add("TheO", m_TheO)
nvi.ValueSize = 80
  Set nvi = nv.Add("fullname", m_fullname)
 ' Reference to VRD_CompInfo
    If m_CompInfo_ID = "" Then
       Set nvi = nv.Add("CompInfo", "")
    Else
       Set nvi = nv.Add("CompInfo", m_CompInfo_ID)
    End If
    nvi.ORACLE_GUID
  Set nvi = nv.Add("PassSeria", m_PassSeria)
nvi.ValueSize = 5
  Set nvi = nv.Add("PassNum", m_PassNum)
nvi.ValueSize = 6
  Set nvi = nv.Add("PassDate", m_PassDate)
nvi.ValueType = adDate
  Set nvi = nv.Add("PassPlace", m_PassPlace)
nvi.ValueSize = 80
  Set nvi = nv.Add("PassportInfo", m_PassportInfo)
  Set nvi = nv.Add("Phone", m_Phone)
nvi.ValueSize = 25
  Set nvi = nv.Add("fax", m_fax)
nvi.ValueSize = 20
  Set nvi = nv.Add("Address", m_Address)
nvi.ValueSize = 255
  Set nvi = nv.Add("Transporter", m_Transporter)
nvi.ValueType = adInteger
  Set nvi = nv.Add("the_Comment", m_the_Comment)
 ' Reference to Users
    If m_Curator_ID = "" Then
       Set nvi = nv.Add("Curator", "")
    Else
       Set nvi = nv.Add("Curator", m_Curator_ID)
    End If
    nvi.ORACLE_GUID
  Set nvi = nv.Add("MarkToDelete", m_MarkToDelete)
nvi.ValueType = adInteger
  Set nvi = nv.Add("Code1C", m_Code1C)
nvi.ValueSize = 40
End Sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...)
Public Function Brief(Optional ByVal UseServer As Boolean = False) As String
 Dim s As String
 If Application.WorkOffline Then

  m_Brief = ""
 m_Brief = m_Brief & Name & "; "
 Brief = m_Brief
 Else
  On Error GoTo bye
   If UseServer Or m_Brief = "" Then
     Application.MTZSession.GetBrief PartName, id, s
     If Len(s) > 255 Then
       Brief = Left(s, 255) & "..."
     Else
       Brief = s
     End If
       m_Brief = Brief
   Else
     Brief = m_Brief
   End If
 End If
Exit Function
bye:
    Brief = "! доступ запрещен ! (" & err.Description & ")"
End Function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
Public Sub UnPack(ByRef nv As Object)
 On Error Resume Next
If TypeName(nv) = "NamedValues" Then

m_IsPhizical = nv.item("IsPhizical").Value
  m_OPF_ID = nv.item("OPF").Value
m_Name = nv.item("Name").Value
m_INN = nv.item("INN").Value
m_KPP = nv.item("KPP").Value
m_TheF = nv.item("TheF").Value
m_TheI = nv.item("TheI").Value
m_TheO = nv.item("TheO").Value
m_fullname = nv.item("fullname").Value
  m_CompInfo_ID = nv.item("CompInfo").Value
m_PassSeria = nv.item("PassSeria").Value
m_PassNum = nv.item("PassNum").Value
m_PassDate = nv.item("PassDate").Value
m_PassPlace = nv.item("PassPlace").Value
m_PassportInfo = nv.item("PassportInfo").Value
m_Phone = nv.item("Phone").Value
m_fax = nv.item("fax").Value
m_Address = nv.item("Address").Value
m_Transporter = nv.item("Transporter").Value
m_the_Comment = nv.item("the_Comment").Value
  m_Curator_ID = nv.item("Curator").Value
m_MarkToDelete = nv.item("MarkToDelete").Value
m_Code1C = nv.item("Code1C").Value
Else

m_IsPhizical = nv.Fields("IsPhizical").Value
  m_OPF_ID = nv.Fields("OPF").Value
m_Name = nv.Fields("Name").Value
m_INN = nv.Fields("INN").Value
m_KPP = nv.Fields("KPP").Value
m_TheF = nv.Fields("TheF").Value
m_TheI = nv.Fields("TheI").Value
m_TheO = nv.Fields("TheO").Value
m_fullname = nv.Fields("fullname").Value
  m_CompInfo_ID = nv.Fields("CompInfo").Value
m_PassSeria = nv.Fields("PassSeria").Value
m_PassNum = nv.Fields("PassNum").Value
m_PassDate = nv.Fields("PassDate").Value
m_PassPlace = nv.Fields("PassPlace").Value
m_PassportInfo = nv.Fields("PassportInfo").Value
m_Phone = nv.Fields("Phone").Value
m_fax = nv.Fields("fax").Value
m_Address = nv.Fields("Address").Value
m_Transporter = nv.Fields("Transporter").Value
m_the_Comment = nv.Fields("the_Comment").Value
  m_Curator_ID = nv.Fields("Curator").Value
m_MarkToDelete = nv.Fields("MarkToDelete").Value
m_Code1C = nv.Fields("Code1C").Value
End If
End Sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   Dim nv As NamedValues
   Dim o As VRCCommonInfo
   Set o = New VRCCommonInfo
   Set o.Application = Me.Application
   Set o.Parent = Me.Parent
   o.Pack nv
   UnPack nv
   Set o = Nothing
End Sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save()
Public Function Save() As Boolean
   LoadFromDatabase
   If Application.WorkOffline Then Exit Function
   If Not CanChangeONLine Then Exit Function
   Dim nv As NamedValues
   Pack nv
   On Error GoTo bye
     Application.MTZSession.SaveRow2 PartName, id, Me.Parent.Parent.id, nv, Application.id
   Changed = False
   Save = True
Exit Function
bye:
  err.Raise err.Number, "VRCCommonInfo.Save", err.Description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete()
Public Function Delete() As Boolean
   Dim i As Long, OK As Boolean
If Application.WorkOffline Then
  If Not CanChangeOffline Then Exit Function
   On Error GoTo bye
  m_Deleted = True
  Delete = True
Else
  If Not CanChangeONLine Then Exit Function
   Delete = Application.MTZSession.DeleteRow2(PartName, id, Application.id)
   Changed = False
   'Compact
   CloseClass
End If
Exit Function
bye:
  err.Raise err.Number, "VRCCommonInfo.Delete", err.Description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
Public Sub Secure(ByVal SecurityStyleID As String)
If Application.WorkOffline Then Exit Sub
On Error GoTo bye
  m_SecureStyleID = Application.MTZSession.Secure("VRCCommonInfo", id, SecurityStyleID)
Exit Sub
bye:
  err.Raise err.Number, "VRCCommonInfo.Secure", err.Description
End Sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
Public Sub Propagate()
If Application.WorkOffline Then Exit Sub
  Application.MTZSession.Propagate "VRCCommonInfo", id
Exit Sub
bye:
  err.Raise err.Number, "VRCCommonInfo.Propagate", err.Description
End Sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend Sub CloseClass()
 On Error Resume Next

 m_OPF_ID = ""
 Set m_OPF = Nothing
 m_CompInfo_ID = ""
 Set m_CompInfo = Nothing
 m_Curator_ID = ""
 Set m_Curator = Nothing
 If Not Application Is Nothing Then Application.Logger.Message "VRCCommonInfo.CloseClass"
 CloseParents
End Sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    RowRetrived = False
    m_Brief = ""
End Sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public Sub LoadFromDatabase()
    On Error Resume Next
   If id = "" Then Exit Sub
   If Application.WorkOffline Then
     RowRetrived = True
     RetriveTime = Now
     Exit Sub
   End If
   Dim rs As ADODB.Recordset
   If Not RowRetrived Then
     CleanFields
     Set rs = Application.MTZSession.GetRow(PartName, id)
     UnPack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = True
     RetriveTime = Now
   End If
End Sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string,
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
Public Function FindObject(ByVal StrID As String, ByVal InstID As String) As Object
 Dim m_FindObject As Object
 Static inFindObject As Boolean
 If StrID = "" Then Exit Function
 If InstID = "" Then Exit Function
 If inFindObject Then Exit Function
 inFindObject = True
 If StrID = PartName Then
   If InstID = id Then
     Set m_FindObject = Me
   End If
 End If

 Set FindObject = m_FindObject
 Set m_FindObject = Nothing
 inFindObject = False
End Function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
Public Sub Compact()
 If Not Changed Then
   CleanFields
   RowRetrived = False
 End If

End Sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string,
'[IN]   OldValue,, тип параметра: Variant
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
Friend Sub OnChange(ByVal fieldName As String, ByVal OldValue, ByRef NewValue)
RaiseEvent Change(fieldName, OldValue, NewValue)
End Sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode,
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(node As IXMLDOMNode, Optional ByVal LoadMode As Integer = 0)
  On Error Resume Next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  If LoadMode <> 2 Then m_ID = node.Attributes.getNamedItem("ID").nodeValue
  m_Deleted = node.Attributes.getNamedItem("Deleted").nodeValue
  m_IsLocked = node.Attributes.getNamedItem("IsLocked").nodeValue
  If m_IsLocked > 2 Then m_IsLocked = 0
  m_RetriveTime = node.Attributes.getNamedItem("RetriveTime").nodeValue
  m_ChangeTime = node.Attributes.getNamedItem("ChangeTime").nodeValue
  m_AccessTime = node.Attributes.getNamedItem("AccessTime").nodeValue
  If Application.WorkOffline And m_IsLocked = LockSession Then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem("SECURITYSTYLEID").nodeValue
  IsPhizical = node.Attributes.getNamedItem("ISPHIZICAL").nodeValue
  Set OPF = Nothing
  m_OPF_ID = node.Attributes.getNamedItem("OPF").nodeValue
  m_OPF_ID_BRIEF = node.Attributes.getNamedItem("OPF_BRIEF").nodeValue
  Name = Replace(node.Attributes.getNamedItem("NAME").nodeValue, vbLf, vbCrLf)
  INN = Replace(node.Attributes.getNamedItem("INN").nodeValue, vbLf, vbCrLf)
  KPP = Replace(node.Attributes.getNamedItem("KPP").nodeValue, vbLf, vbCrLf)
  TheF = Replace(node.Attributes.getNamedItem("THEF").nodeValue, vbLf, vbCrLf)
  TheI = Replace(node.Attributes.getNamedItem("THEI").nodeValue, vbLf, vbCrLf)
  TheO = Replace(node.Attributes.getNamedItem("THEO").nodeValue, vbLf, vbCrLf)
  fullname = Replace(node.Attributes.getNamedItem("FULLNAME").nodeValue, vbLf, vbCrLf)
  Set CompInfo = Nothing
  m_CompInfo_ID = node.Attributes.getNamedItem("COMPINFO").nodeValue
  m_CompInfo_ID_BRIEF = node.Attributes.getNamedItem("COMPINFO_BRIEF").nodeValue
  PassSeria = Replace(node.Attributes.getNamedItem("PASSSERIA").nodeValue, vbLf, vbCrLf)
  PassNum = Replace(node.Attributes.getNamedItem("PASSNUM").nodeValue, vbLf, vbCrLf)
  PassDate = node.Attributes.getNamedItem("PASSDATE").nodeValue
  PassPlace = Replace(node.Attributes.getNamedItem("PASSPLACE").nodeValue, vbLf, vbCrLf)
  PassportInfo = Replace(node.Attributes.getNamedItem("PASSPORTINFO").nodeValue, vbLf, vbCrLf)
  Phone = Replace(node.Attributes.getNamedItem("PHONE").nodeValue, vbLf, vbCrLf)
  fax = Replace(node.Attributes.getNamedItem("FAX").nodeValue, vbLf, vbCrLf)
  Address = Replace(node.Attributes.getNamedItem("ADDRESS").nodeValue, vbLf, vbCrLf)
  Transporter = node.Attributes.getNamedItem("TRANSPORTER").nodeValue
  the_Comment = Replace(node.Attributes.getNamedItem("THE_COMMENT").nodeValue, vbLf, vbCrLf)
  Set Curator = Nothing
  m_Curator_ID = node.Attributes.getNamedItem("CURATOR").nodeValue
  m_Curator_ID_BRIEF = node.Attributes.getNamedItem("CURATOR_BRIEF").nodeValue
  MarkToDelete = node.Attributes.getNamedItem("MARKTODELETE").nodeValue
  Code1C = Replace(node.Attributes.getNamedItem("CODE1C").nodeValue, vbLf, vbCrLf)
  On Error GoTo bye
  'if m_ChangeTime >= m_RetriveTime then m_Changed = true
  m_Changed = True
  m_RowRetrived = True
  m_Brief = ""
  On Error Resume Next
  Exit Sub
bye:
  DebugOutput err.Description
End Sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement,
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(node As IXMLDOMElement, xdom As DOMDocument)
On Error Resume Next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute "ID", m_ID
  node.setAttribute "Deleted", m_Deleted
  node.setAttribute "IsLocked", m_IsLocked
  node.setAttribute "RetriveTime", CDbl(m_RetriveTime)
  node.setAttribute "ChangeTime", CDbl(m_ChangeTime)
  node.setAttribute "SECURITYSTYLEID", m_SecureStyleID
  node.setAttribute "ISPHIZICAL", IsPhizical
  node.setAttribute "OPF", m_OPF_ID
  If Not (OPF Is Nothing) Then
    node.setAttribute "OPF_BRIEF", OPF.Brief
  Else
    node.setAttribute "OPF_BRIEF", m_OPF_ID_BRIEF
  End If
  node.setAttribute "NAME", Name
  node.setAttribute "INN", INN
  node.setAttribute "KPP", KPP
  node.setAttribute "THEF", TheF
  node.setAttribute "THEI", TheI
  node.setAttribute "THEO", TheO
  node.setAttribute "FULLNAME", fullname
  node.setAttribute "COMPINFO", m_CompInfo_ID
  If Not (CompInfo Is Nothing) Then
    node.setAttribute "COMPINFO_BRIEF", CompInfo.Brief
  Else
    node.setAttribute "COMPINFO_BRIEF", m_CompInfo_ID_BRIEF
  End If
  node.setAttribute "PASSSERIA", PassSeria
  node.setAttribute "PASSNUM", PassNum
  node.setAttribute "PASSDATE", CDbl(PassDate)
  node.setAttribute "PASSPLACE", PassPlace
  node.setAttribute "PASSPORTINFO", PassportInfo
  node.setAttribute "PHONE", Phone
  node.setAttribute "FAX", fax
  node.setAttribute "ADDRESS", Address
  node.setAttribute "TRANSPORTER", Transporter
  node.setAttribute "THE_COMMENT", the_Comment
  node.setAttribute "CURATOR", m_Curator_ID
  If Not (Curator Is Nothing) Then
    node.setAttribute "CURATOR_BRIEF", Curator.Brief
  Else
    node.setAttribute "CURATOR_BRIEF", m_Curator_ID_BRIEF
  End If
  node.setAttribute "MARKTODELETE", MarkToDelete
  node.setAttribute "CODE1C", Code1C
  node.setAttribute "AccessTime", CDbl(m_AccessTime)
End Sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
Public Property Get CanChange() As Boolean
   If Application.WorkOffline Then
     CanChange = CanChangeOffline
   Else
     CanChange = CanChangeONLine
   End If
End Property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
Public Property Get CanChangeOffline() As Boolean
  Dim test As Boolean
  If Not Parent Is Nothing Then
   test = Parent.CanChangeOffline
  End If
  If Not test Then
   test = (IsLocked = LockPermanent)
  End If
   CanChangeOffline = test
End Property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
Public Property Get CanChangeONLine() As Boolean
  Dim test As Boolean
  If Not Parent Is Nothing Then
   test = Parent.CanChangeONLine
  End If
  If Not test Then
   test = (IsLocked < ExternalLockSession)
  End If
   CanChangeONLine = test
End Property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
Friend Property Let IsLocked(newIsLocked As LockStyle)
  m_IsLocked = newIsLocked
End Property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
Public Property Get IsLocked() As LockStyle
  If m_IsLocked <> LockSession And m_IsLocked <> LockPermanent Then CheckLock
  IsLocked = m_IsLocked
End Property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
Private Sub CheckLock()
Static LastCheckTime As Date
If Application.WorkOffline Then Exit Sub
If Now - LastCheckTime < CDbl(CDate("00:00:10")) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked("VRCCommonInfo", id)
LastCheckTime = Now
End Sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...)
Public Function LockResource(Optional ByVal Permanent As Boolean = False) As Boolean
If Application.WorkOffline Then Exit Function
  Dim OK
OK = Application.MTZSession.LockResource("VRCCommonInfo", id, Permanent)
  If OK Then
    If Permanent Then m_IsLocked = LockPermanent Else m_IsLocked = LockSession
  Else
    m_IsLocked = NoLock
  End If
bye:
End Function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource()
Public Function UnLockResource() As Boolean
If Application.WorkOffline Then Exit Function
On Error GoTo bye
Application.MTZSession.UnLockResource "VRCCommonInfo", id
m_IsLocked = NoLock
bye:
End Function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock()
Public Function CanLock() As Boolean
If Application.WorkOffline Then Exit Function
On Error Resume Next
CanLock = Application.MTZSession.CanLock("VRCCommonInfo", id)
End Function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
Public Sub BatchUpdate()
If Not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End Sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
Friend Sub LoadAll()
If Not Application.WorkOffline Then
  LoadFromDatabase
End If
End Sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object,
'[IN]   key , тип параметра: string,
'[IN]   mode , тип параметра: string,
'[IN][OUT]   optional Mask , тип параметра: string = ""  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
Public Sub Expand(tree As Object, ByVal key As String, ByVal mode As String, Optional Mask As String = "")
 Dim id As String, struct As String, child As String
 Dim item As Object, i As Long, nid As String, tmpid As String
 Dim tidx As Long, tid As String 'only for tree styled structure
 On Error Resume Next
 id = Mid(key, 39, 38)
 struct = Right(tree.nodes.item(key).Parent.Parent.key, Len(tree.nodes.item(key).Parent.Parent.key) - 76)
 child = Right(key, Len(key) - 76)
 If id <> m_ID Then
   Exit Sub
 Else
    Set item = Me
 End If
 tree.nodes.item(key).Sorted = True
If mode = "ur" Then
 Select Case child
End Select
End If ' mode="ur"
If mode = "main" Then
 Select Case child
End Select
End If ' mode="main"
If mode = "phiz" Then
 Select Case child
End Select
End If ' mode="phiz"
If mode = "" Then
 Select Case child
 End Select
End If ' mode="" (Default)
End Sub



