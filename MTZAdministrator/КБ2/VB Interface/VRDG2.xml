<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Договор"/><AttributeHolder Name="Name" Value="VRDG2GUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Договор&quot;
End Sub

Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub
public property get IsModal() as boolean
 IsModal = mOpenModal
end property
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Договор)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRDG2:main&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;read&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRDG2:read&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmread_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRDG2:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Договор&quot; 
  end if
end if
if OpenModal then
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRDG2:main&quot;)) then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;read&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRDG2:read&quot;)) then
     set f = new frmread_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRDG2:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Договор&quot; 
  end if
end if
end sub
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;VRDGCOMMON&quot; Then
    Set f = New frmVRDGCommon_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;VRDGCONTRACTCHANGES&quot; Then
    Set f = New frmVRDGContractChanges_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;VRDGCONTRACTVERSION&quot; Then
    Set f = New frmVRDGContractVersion_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;VRDGCONTRACTSPESIAL&quot; Then
    Set f = New frmVRDGContractSpesial_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If

 If Mode = &quot;read&quot; Then
  If UCase(PartName) = &quot;VRDGCOMMON&quot; Then
    Set f = New frmVRDGCommon_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;VRDGCONTRACTCHANGES&quot; Then
    Set f = New frmVRDGContractChanges_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;VRDGCONTRACTVERSION&quot; Then
    Set f = New frmVRDGContractVersion_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;VRDGCONTRACTSPESIAL&quot; Then
    Set f = New frmVRDGContractSpesial_read
  End If

 If Mode = &quot;read&quot; Then
 End If
 End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;VRDGCOMMON&quot; Then
    Set f = New frmVRDGCommon_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRDGCONTRACTCHANGES&quot; Then
    Set f = New frmVRDGContractChanges_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRDGCONTRACTVERSION&quot; Then
    Set f = New frmVRDGContractVersion_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRDGCONTRACTSPESIAL&quot; Then
    Set f = New frmVRDGContractSpesial_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGCommon" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDogNum"/><Properties Name="Caption" PropValue="Номер договора:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDogNum"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Номер договора"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDogDate"/><Properties Name="Caption" PropValue="Дата договора:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDogDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата договора"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCurator"/><Properties Name="Caption" PropValue="Ответственный:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCurator"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ответственный"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCurator"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ответственный"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfo"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblClient"/><Properties Name="Caption" PropValue="Контрагент:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контрагент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4830"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контрагент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPZDog"/><Properties Name="Caption" PropValue="Договор к разовой заявке:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbPZDog"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Договор к разовой заявке"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStartDate"/><Properties Name="Caption" PropValue="Начало действия:"/><Properties Name="Top" PropValue="5910"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpStartDate"/><Properties Name="Top" PropValue="6240"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Начало действия"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEndDate"/><Properties Name="Caption" PropValue="Окончание действия договора:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpEndDate"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Окончание действия договора"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDogNum_Change()
  Changing

end sub
private sub dtpDogDate_Change()
  Changing

end sub
private sub txtName_Change()
  Changing

end sub
private sub txtCurator_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCurator_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtCurator.Tag = Left(id, 38)
          txtCurator = brief
        End If
end sub
private sub cmdCurator_MenuClick(ByVal sCaption As String)
          txtCurator.Tag = &quot;&quot;
          txtCurator = &quot;&quot;
End sub
private sub txtInfo_Change()
  Changing

end sub
private sub txtClient_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdClient_CLick()
  on error resume next
     If txtClient.Tag =&quot;&quot; then
       cmdClient_MenuClick &quot;Выбрать&quot; 
     Else
       cmdClient_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdClient_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtClient.Tag = &quot;&quot;
          txtClient = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtClient.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtClient.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtClient.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtClient.Tag = left(ID,38)
          txtClient = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtClient.Tag = ID
              txtClient = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtClient.Tag = obj.ID
              txtClient = obj.brief
          else
              txtClient.Tag = &quot;&quot;
              txtClient = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub cmbPZDog_Click()
  on error resume next
  Changing

end sub
private sub dtpStartDate_Change()
  Changing

end sub
private sub dtpEndDate_Change()
  Changing

end sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtDogNum.text)
if mIsOK then mIsOK = IsSet(dtpDogDate.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtDogNum = item.DogNum
dtpDogDate = date
if item.DogDate &lt;&gt; 0 then
 dtpDogDate = item.DogDate
end if
  on error resume next
txtName = item.Name
If Not item.Curator Is Nothing Then
  txtCurator.Tag = item.Curator.id
  txtCurator = item.Curator.brief
else
  txtCurator.Tag = &quot;&quot; 
  txtCurator = &quot;&quot; 
End If
 LoadBtnPictures cmdCurator,cmdCurator.tag
  cmdCurator.RemoveAllMenu
  cmdCurator.AddMenu &quot;Очистить&quot; 
txtInfo = item.Info
If Not item.Client Is Nothing Then
  txtClient.Tag = item.Client.id
  txtClient = item.Client.brief
else
  txtClient.Tag = &quot;&quot; 
  txtClient = &quot;&quot; 
End If
 LoadBtnPictures cmdClient,cmdClient.tag
  cmdClient.RemoveAllMenu
  cmdClient.AddMenu &quot;Очистить&quot; 
  cmdClient.AddMenu &quot;Создать&quot; 
  cmdClient.AddMenu &quot;Выбрать&quot; 
  cmdClient.AddMenu &quot;Открыть&quot; 
cmbPZDog.Clear
cmbPZDog.additem &quot;Да&quot;
cmbPZDog.itemdata(cmbPZDog.newindex)= -1
cmbPZDog.additem &quot;Нет&quot;
cmbPZDog.itemdata(cmbPZDog.newindex)= 0
 For iii = 0 To cmbPZDog.ListCount-1
  If Item.PZDog = cmbPZDog.ItemData(iii) Then
   cmbPZDog.ListIndex = iii
   Exit For
  End If
 Next
dtpStartDate = date
if item.StartDate &lt;&gt; 0 then
 dtpStartDate = item.StartDate
else
 dtpStartDate.value = null
end if
dtpEndDate = date
if item.EndDate &lt;&gt; 0 then
 dtpEndDate = item.EndDate
else
 dtpEndDate.value = null
end if
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.DogNum = txtDogNum
  if  isnull(dtpDogDate) then
    item.DogDate = 0
  else
    item.DogDate = dtpDogDate.value
  end if
item.Name = txtName
If txtCurator.Tag &lt;&gt; &quot;&quot; Then
  Set item.Curator = Item.Application.FindRowObject(&quot;Users&quot;,txtCurator.Tag)
Else
  Set item.Curator = Nothing
End If
item.Info = txtInfo
If txtClient.Tag &lt;&gt; &quot;&quot; Then
  Set item.Client = Item.Application.Manager.GetInstanceObject(txtClient.Tag)
Else
  Set item.Client = Nothing
End If
 if cmbPZDog.listindex&gt;=0 then
   item.PZDog = cmbPZDog.itemdata(cmbPZDog.listindex)
 end if
  if  isnull(dtpStartDate) then
    item.StartDate = 0
  else
    item.StartDate = dtpStartDate.value
  end if
  if  isnull(dtpEndDate) then
    item.EndDate = 0
  else
    item.EndDate = dtpEndDate.value
  end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGContractChanges" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Номер соглашения:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="80"/><Properties Name="ToolTipText" PropValue="Номер соглашения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOf"/><Properties Name="Caption" PropValue="Дата соглашения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOf"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата соглашения"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="theFile"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheFile"/><Properties Name="Caption" PropValue="Файл соглашения:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheFile"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Файл соглашения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdtheFile"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Файл соглашения"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="2040"/><Properties Name="Left" PropValue="300"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Comment"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Comment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PaththeFile as string 
  private ModtheFile as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub dtpDateOf_Change()
  Changing

end sub

Private Sub theFile_Timer()
    If PaththeFile &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PaththeFile For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PaththeFile)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        theFile.Enabled = False
        If ModtheFile &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.theFile = FileToArray(PaththeFile)
                item.theFile_ext = GetFileExtension2(PaththeFile)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdtheFile_Click()
  on error resume next
  if item.theFile_ext &lt;&gt;&quot;&quot; and not isnull(item.theFile)  then
    cmdtheFile_MenuClick &quot;Открыть&quot;
  else
    cmdtheFile_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdtheFile_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txttheFile = Dialog.FileName
   item.theFile = FileToArray(Dialog.FileName)
   item.theFile_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txttheFile = &quot;&quot; 
   item.theFile = null
   item.theFile_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    PaththeFile = DoOpenFile(item.theFile, item.theFile_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PaththeFile)
    ModtheFile = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PaththeFile, item.PartName, item.ID
    theFile.Enabled = True
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.theFile
  End If
End Sub
private sub txtthe_Comment_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK = IsSet(dtpDateOf.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
dtpDateOf = date
if item.DateOf &lt;&gt; 0 then
 dtpDateOf = item.DateOf
end if
 if  lenb(item.theFile)&gt;0 then 
   txttheFile=&quot;Данные (&quot; &amp; item.theFile_ext &amp; &quot;)&quot;
 else 
   txttheFile=&quot;&quot;
 end if 
 LoadBtnPictures cmdtheFile,cmdtheFile.tag
 cmdtheFile.RemoveAllMenu
 cmdtheFile.AddMenu &quot;Очистить&quot;
 cmdtheFile.AddMenu &quot;Выбрать&quot;
 cmdtheFile.AddMenu &quot;Сохранить&quot;
 cmdtheFile.AddMenu &quot;Открыть&quot;
txtthe_Comment = item.the_Comment
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Code = txtCode
  if  isnull(dtpDateOf) then
    item.DateOf = 0
  else
    item.DateOf = dtpDateOf.value
  end if
 ' SEE cmdtheFile_CLICK
item.the_Comment = txtthe_Comment
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGContractVersion" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOf"/><Properties Name="Caption" PropValue="Дата версии:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOf"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата версии"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="theFile"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheFile"/><Properties Name="Caption" PropValue="Файл:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheFile"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Файл"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdtheFile"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Файл"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="1335"/><Properties Name="Left" PropValue="300"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblActual"/><Properties Name="Caption" PropValue="Актуальная версия:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbActual"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Актуальная версия"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Comment"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Comment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PaththeFile as string 
  private ModtheFile as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOf_Change()
  Changing

end sub

Private Sub theFile_Timer()
    If PaththeFile &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PaththeFile For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PaththeFile)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        theFile.Enabled = False
        If ModtheFile &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.theFile = FileToArray(PaththeFile)
                item.theFile_ext = GetFileExtension2(PaththeFile)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdtheFile_Click()
  on error resume next
  if item.theFile_ext &lt;&gt;&quot;&quot; and not isnull(item.theFile)  then
    cmdtheFile_MenuClick &quot;Открыть&quot;
  else
    cmdtheFile_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdtheFile_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txttheFile = Dialog.FileName
   item.theFile = FileToArray(Dialog.FileName)
   item.theFile_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txttheFile = &quot;&quot; 
   item.theFile = null
   item.theFile_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    PaththeFile = DoOpenFile(item.theFile, item.theFile_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PaththeFile)
    ModtheFile = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PaththeFile, item.PartName, item.ID
    theFile.Enabled = True
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.theFile
  End If
End Sub
private sub cmbActual_Click()
  on error resume next
  Changing

end sub
private sub txtthe_Comment_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOf.value)
if mIsOK then mIsOK =(lenb(item.theFile)&gt;0)
if mIsOK then mIsOK =(cmbActual.ListIndex &gt;=0)
if mIsOK then mIsOK =IsSet(txtthe_Comment.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOf = date
if item.DateOf &lt;&gt; 0 then
 dtpDateOf = item.DateOf
end if
 if  lenb(item.theFile)&gt;0 then 
   txttheFile=&quot;Данные (&quot; &amp; item.theFile_ext &amp; &quot;)&quot;
 else 
   txttheFile=&quot;&quot;
 end if 
 LoadBtnPictures cmdtheFile,cmdtheFile.tag
 cmdtheFile.RemoveAllMenu
 cmdtheFile.AddMenu &quot;Выбрать&quot;
 cmdtheFile.AddMenu &quot;Сохранить&quot;
 cmdtheFile.AddMenu &quot;Открыть&quot;
cmbActual.Clear
cmbActual.additem &quot;Да&quot;
cmbActual.itemdata(cmbActual.newindex)= -1
cmbActual.additem &quot;Нет&quot;
cmbActual.itemdata(cmbActual.newindex)= 0
 For iii = 0 To cmbActual.ListCount-1
  If Item.Actual = cmbActual.ItemData(iii) Then
   cmbActual.ListIndex = iii
   Exit For
  End If
 Next
txtthe_Comment = item.the_Comment
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOf) then
    item.DateOf = 0
  else
    item.DateOf = dtpDateOf.value
  end if
 ' SEE cmdtheFile_CLICK
 if cmbActual.listindex&gt;=0 then
   item.Actual = cmbActual.itemdata(cmbActual.listindex)
 end if
item.the_Comment = txtthe_Comment
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGContractSpesial" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOf"/><Properties Name="Caption" PropValue="Дата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOf"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsDone"/><Properties Name="Caption" PropValue="Исполнено:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsDone"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Исполнено"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Comment"/><Properties Name="Caption" PropValue="Суть условия:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Comment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Суть условия"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOf_Change()
  Changing

end sub
private sub cmbIsDone_Click()
  on error resume next
  Changing

end sub
private sub txtthe_Comment_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOf.value)
if mIsOK then mIsOK =(cmbIsDone.ListIndex &gt;=0)
if mIsOK then mIsOK =IsSet(txtthe_Comment.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOf = date
if item.DateOf &lt;&gt; 0 then
 dtpDateOf = item.DateOf
end if
cmbIsDone.Clear
cmbIsDone.additem &quot;Да&quot;
cmbIsDone.itemdata(cmbIsDone.newindex)= -1
cmbIsDone.additem &quot;Нет&quot;
cmbIsDone.itemdata(cmbIsDone.newindex)= 0
 For iii = 0 To cmbIsDone.ListCount-1
  If Item.IsDone = cmbIsDone.ItemData(iii) Then
   cmbIsDone.ListIndex = iii
   Exit For
  End If
 Next
txtthe_Comment = item.the_Comment
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOf) then
    item.DateOf = 0
  else
    item.DateOf = dtpDateOf.value
  end if
 if cmbIsDone.listindex&gt;=0 then
   item.IsDone = cmbIsDone.itemdata(cmbIsDone.listindex)
 end if
item.the_Comment = txtthe_Comment
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGCommonmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDogNum"/><Properties Name="Caption" PropValue="Номер договора:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDogNum"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Номер договора"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDogDate"/><Properties Name="Caption" PropValue="Дата договора:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDogDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата договора"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCurator"/><Properties Name="Caption" PropValue="Ответственный:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCurator"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ответственный"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCurator"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ответственный"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfo"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblClient"/><Properties Name="Caption" PropValue="Контрагент:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контрагент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4830"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контрагент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPZDog"/><Properties Name="Caption" PropValue="Договор к разовой заявке:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbPZDog"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Договор к разовой заявке"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStartDate"/><Properties Name="Caption" PropValue="Начало действия:"/><Properties Name="Top" PropValue="5910"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpStartDate"/><Properties Name="Top" PropValue="6240"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Начало действия"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEndDate"/><Properties Name="Caption" PropValue="Окончание действия договора:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpEndDate"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Окончание действия договора"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDogNum_Change()
  Changing

end sub
private sub dtpDogDate_Change()
  Changing

end sub
private sub txtName_Change()
  Changing

end sub
private sub txtCurator_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCurator_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtCurator.Tag = Left(id, 38)
          txtCurator = brief
        End If
end sub
private sub cmdCurator_MenuClick(ByVal sCaption As String)
          txtCurator.Tag = &quot;&quot;
          txtCurator = &quot;&quot;
End sub
private sub txtInfo_Change()
  Changing

end sub
private sub txtClient_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdClient_CLick()
  on error resume next
     If txtClient.Tag =&quot;&quot; then
       cmdClient_MenuClick &quot;Выбрать&quot; 
     Else
       cmdClient_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdClient_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtClient.Tag = &quot;&quot;
          txtClient = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtClient.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtClient.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtClient.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtClient.Tag = left(ID,38)
          txtClient = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtClient.Tag = ID
              txtClient = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtClient.Tag = obj.ID
              txtClient = obj.brief
          else
              txtClient.Tag = &quot;&quot;
              txtClient = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub cmbPZDog_Click()
  on error resume next
  Changing

end sub
private sub dtpStartDate_Change()
  Changing

end sub
private sub dtpEndDate_Change()
  Changing

end sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtDogNum.text)
if mIsOK then mIsOK = IsSet(dtpDogDate.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtDogNum = item.DogNum
dtpDogDate = date
if item.DogDate &lt;&gt; 0 then
 dtpDogDate = item.DogDate
end if
  on error resume next
txtName = item.Name
If Not item.Curator Is Nothing Then
  txtCurator.Tag = item.Curator.id
  txtCurator = item.Curator.brief
else
  txtCurator.Tag = &quot;&quot; 
  txtCurator = &quot;&quot; 
End If
 LoadBtnPictures cmdCurator,cmdCurator.tag
  cmdCurator.RemoveAllMenu
  cmdCurator.AddMenu &quot;Очистить&quot; 
txtInfo = item.Info
If Not item.Client Is Nothing Then
  txtClient.Tag = item.Client.id
  txtClient = item.Client.brief
else
  txtClient.Tag = &quot;&quot; 
  txtClient = &quot;&quot; 
End If
 LoadBtnPictures cmdClient,cmdClient.tag
  cmdClient.RemoveAllMenu
  cmdClient.AddMenu &quot;Очистить&quot; 
  cmdClient.AddMenu &quot;Создать&quot; 
  cmdClient.AddMenu &quot;Выбрать&quot; 
  cmdClient.AddMenu &quot;Открыть&quot; 
cmbPZDog.Clear
cmbPZDog.additem &quot;Да&quot;
cmbPZDog.itemdata(cmbPZDog.newindex)= -1
cmbPZDog.additem &quot;Нет&quot;
cmbPZDog.itemdata(cmbPZDog.newindex)= 0
 For iii = 0 To cmbPZDog.ListCount-1
  If Item.PZDog = cmbPZDog.ItemData(iii) Then
   cmbPZDog.ListIndex = iii
   Exit For
  End If
 Next
dtpStartDate = date
if item.StartDate &lt;&gt; 0 then
 dtpStartDate = item.StartDate
else
 dtpStartDate.value = null
end if
dtpEndDate = date
if item.EndDate &lt;&gt; 0 then
 dtpEndDate = item.EndDate
else
 dtpEndDate.value = null
end if
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.DogNum = txtDogNum
  if  isnull(dtpDogDate) then
    item.DogDate = 0
  else
    item.DogDate = dtpDogDate.value
  end if
item.Name = txtName
If txtCurator.Tag &lt;&gt; &quot;&quot; Then
  Set item.Curator = Item.Application.FindRowObject(&quot;Users&quot;,txtCurator.Tag)
Else
  Set item.Curator = Nothing
End If
item.Info = txtInfo
If txtClient.Tag &lt;&gt; &quot;&quot; Then
  Set item.Client = Item.Application.Manager.GetInstanceObject(txtClient.Tag)
Else
  Set item.Client = Nothing
End If
 if cmbPZDog.listindex&gt;=0 then
   item.PZDog = cmbPZDog.itemdata(cmbPZDog.listindex)
 end if
  if  isnull(dtpStartDate) then
    item.StartDate = 0
  else
    item.StartDate = dtpStartDate.value
  end if
  if  isnull(dtpEndDate) then
    item.EndDate = 0
  else
    item.EndDate = dtpEndDate.value
  end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGContractChangesmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Номер соглашения:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="80"/><Properties Name="ToolTipText" PropValue="Номер соглашения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOf"/><Properties Name="Caption" PropValue="Дата соглашения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOf"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата соглашения"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="theFile"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheFile"/><Properties Name="Caption" PropValue="Файл соглашения:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheFile"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Файл соглашения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdtheFile"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Файл соглашения"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="2040"/><Properties Name="Left" PropValue="300"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Comment"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Comment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PaththeFile as string 
  private ModtheFile as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub dtpDateOf_Change()
  Changing

end sub

Private Sub theFile_Timer()
    If PaththeFile &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PaththeFile For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PaththeFile)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        theFile.Enabled = False
        If ModtheFile &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.theFile = FileToArray(PaththeFile)
                item.theFile_ext = GetFileExtension2(PaththeFile)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdtheFile_Click()
  on error resume next
  if item.theFile_ext &lt;&gt;&quot;&quot; and not isnull(item.theFile)  then
    cmdtheFile_MenuClick &quot;Открыть&quot;
  else
    cmdtheFile_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdtheFile_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txttheFile = Dialog.FileName
   item.theFile = FileToArray(Dialog.FileName)
   item.theFile_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txttheFile = &quot;&quot; 
   item.theFile = null
   item.theFile_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    PaththeFile = DoOpenFile(item.theFile, item.theFile_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PaththeFile)
    ModtheFile = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PaththeFile, item.PartName, item.ID
    theFile.Enabled = True
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.theFile
  End If
End Sub
private sub txtthe_Comment_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK = IsSet(dtpDateOf.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
dtpDateOf = date
if item.DateOf &lt;&gt; 0 then
 dtpDateOf = item.DateOf
end if
 if  lenb(item.theFile)&gt;0 then 
   txttheFile=&quot;Данные (&quot; &amp; item.theFile_ext &amp; &quot;)&quot;
 else 
   txttheFile=&quot;&quot;
 end if 
 LoadBtnPictures cmdtheFile,cmdtheFile.tag
 cmdtheFile.RemoveAllMenu
 cmdtheFile.AddMenu &quot;Очистить&quot;
 cmdtheFile.AddMenu &quot;Выбрать&quot;
 cmdtheFile.AddMenu &quot;Сохранить&quot;
 cmdtheFile.AddMenu &quot;Открыть&quot;
txtthe_Comment = item.the_Comment
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Code = txtCode
  if  isnull(dtpDateOf) then
    item.DateOf = 0
  else
    item.DateOf = dtpDateOf.value
  end if
 ' SEE cmdtheFile_CLICK
item.the_Comment = txtthe_Comment
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGContractVersionmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOf"/><Properties Name="Caption" PropValue="Дата версии:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOf"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата версии"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="theFile"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheFile"/><Properties Name="Caption" PropValue="Файл:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheFile"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Файл"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdtheFile"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Файл"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="1335"/><Properties Name="Left" PropValue="300"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblActual"/><Properties Name="Caption" PropValue="Актуальная версия:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbActual"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Актуальная версия"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Comment"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Comment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PaththeFile as string 
  private ModtheFile as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOf_Change()
  Changing

end sub

Private Sub theFile_Timer()
    If PaththeFile &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PaththeFile For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PaththeFile)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        theFile.Enabled = False
        If ModtheFile &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.theFile = FileToArray(PaththeFile)
                item.theFile_ext = GetFileExtension2(PaththeFile)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdtheFile_Click()
  on error resume next
  if item.theFile_ext &lt;&gt;&quot;&quot; and not isnull(item.theFile)  then
    cmdtheFile_MenuClick &quot;Открыть&quot;
  else
    cmdtheFile_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdtheFile_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txttheFile = Dialog.FileName
   item.theFile = FileToArray(Dialog.FileName)
   item.theFile_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txttheFile = &quot;&quot; 
   item.theFile = null
   item.theFile_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    PaththeFile = DoOpenFile(item.theFile, item.theFile_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PaththeFile)
    ModtheFile = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PaththeFile, item.PartName, item.ID
    theFile.Enabled = True
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.theFile
  End If
End Sub
private sub cmbActual_Click()
  on error resume next
  Changing

end sub
private sub txtthe_Comment_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOf.value)
if mIsOK then mIsOK =(lenb(item.theFile)&gt;0)
if mIsOK then mIsOK =(cmbActual.ListIndex &gt;=0)
if mIsOK then mIsOK =IsSet(txtthe_Comment.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOf = date
if item.DateOf &lt;&gt; 0 then
 dtpDateOf = item.DateOf
end if
 if  lenb(item.theFile)&gt;0 then 
   txttheFile=&quot;Данные (&quot; &amp; item.theFile_ext &amp; &quot;)&quot;
 else 
   txttheFile=&quot;&quot;
 end if 
 LoadBtnPictures cmdtheFile,cmdtheFile.tag
 cmdtheFile.RemoveAllMenu
 cmdtheFile.AddMenu &quot;Выбрать&quot;
 cmdtheFile.AddMenu &quot;Сохранить&quot;
 cmdtheFile.AddMenu &quot;Открыть&quot;
cmbActual.Clear
cmbActual.additem &quot;Да&quot;
cmbActual.itemdata(cmbActual.newindex)= -1
cmbActual.additem &quot;Нет&quot;
cmbActual.itemdata(cmbActual.newindex)= 0
 For iii = 0 To cmbActual.ListCount-1
  If Item.Actual = cmbActual.ItemData(iii) Then
   cmbActual.ListIndex = iii
   Exit For
  End If
 Next
txtthe_Comment = item.the_Comment
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOf) then
    item.DateOf = 0
  else
    item.DateOf = dtpDateOf.value
  end if
 ' SEE cmdtheFile_CLICK
 if cmbActual.listindex&gt;=0 then
   item.Actual = cmbActual.itemdata(cmbActual.listindex)
 end if
item.the_Comment = txtthe_Comment
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGContractSpesialmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOf"/><Properties Name="Caption" PropValue="Дата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOf"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsDone"/><Properties Name="Caption" PropValue="Исполнено:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsDone"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Исполнено"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Comment"/><Properties Name="Caption" PropValue="Суть условия:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Comment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Суть условия"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOf_Change()
  Changing

end sub
private sub cmbIsDone_Click()
  on error resume next
  Changing

end sub
private sub txtthe_Comment_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOf.value)
if mIsOK then mIsOK =(cmbIsDone.ListIndex &gt;=0)
if mIsOK then mIsOK =IsSet(txtthe_Comment.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOf = date
if item.DateOf &lt;&gt; 0 then
 dtpDateOf = item.DateOf
end if
cmbIsDone.Clear
cmbIsDone.additem &quot;Да&quot;
cmbIsDone.itemdata(cmbIsDone.newindex)= -1
cmbIsDone.additem &quot;Нет&quot;
cmbIsDone.itemdata(cmbIsDone.newindex)= 0
 For iii = 0 To cmbIsDone.ListCount-1
  If Item.IsDone = cmbIsDone.ItemData(iii) Then
   cmbIsDone.ListIndex = iii
   Exit For
  End If
 Next
txtthe_Comment = item.the_Comment
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOf) then
    item.DateOf = 0
  else
    item.DateOf = dtpDateOf.value
  end if
 if cmbIsDone.listindex&gt;=0 then
   item.IsDone = cmbIsDone.itemdata(cmbIsDone.listindex)
 end if
item.the_Comment = txtthe_Comment
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGCommonread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDogNum"/><Properties Name="Caption" PropValue="Номер договора:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDogNum"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Номер договора"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDogDate"/><Properties Name="Caption" PropValue="Дата договора:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDogDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата договора"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCurator"/><Properties Name="Caption" PropValue="Ответственный:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCurator"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ответственный"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCurator"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ответственный"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfo"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblClient"/><Properties Name="Caption" PropValue="Контрагент:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контрагент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4830"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контрагент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPZDog"/><Properties Name="Caption" PropValue="Договор к разовой заявке:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbPZDog"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Договор к разовой заявке"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStartDate"/><Properties Name="Caption" PropValue="Начало действия:"/><Properties Name="Top" PropValue="5910"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpStartDate"/><Properties Name="Top" PropValue="6240"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Начало действия"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEndDate"/><Properties Name="Caption" PropValue="Окончание действия договора:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpEndDate"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Окончание действия договора"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDogNum_Change()
  Changing

end sub
private sub dtpDogDate_Change()
  Changing

end sub
private sub txtName_Change()
  Changing

end sub
private sub txtCurator_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCurator_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdCurator_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtInfo_Change()
  Changing

end sub
private sub txtClient_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdClient_CLick()
  on error resume next
     If txtClient.Tag =&quot;&quot; then
     Else
       cmdClient_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdClient_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Открыть&quot; then
    if txtClient.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtClient.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtClient.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
End sub
private sub cmbPZDog_Click()
  on error resume next
  Changing

end sub
private sub dtpStartDate_Change()
  Changing

end sub
private sub dtpEndDate_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtDogNum.text)
if mIsOK then mIsOK = IsSet(dtpDogDate.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtDogNum = item.DogNum
dtpDogDate = date
if item.DogDate &lt;&gt; 0 then
 dtpDogDate = item.DogDate
end if
  on error resume next
txtName = item.Name
If Not item.Curator Is Nothing Then
  txtCurator.Tag = item.Curator.id
  txtCurator = item.Curator.brief
else
  txtCurator.Tag = &quot;&quot; 
  txtCurator = &quot;&quot; 
End If
 LoadBtnPictures cmdCurator,cmdCurator.tag
  cmdCurator.RemoveAllMenu
  cmdCurator.AddMenu &quot;Очистить&quot; 
txtInfo = item.Info
If Not item.Client Is Nothing Then
  txtClient.Tag = item.Client.id
  txtClient = item.Client.brief
else
  txtClient.Tag = &quot;&quot; 
  txtClient = &quot;&quot; 
End If
 LoadBtnPictures cmdClient,cmdClient.tag
  cmdClient.RemoveAllMenu
  cmdClient.AddMenu &quot;Очистить&quot; 
  cmdClient.AddMenu &quot;Открыть&quot; 
cmbPZDog.Clear
cmbPZDog.additem &quot;Да&quot;
cmbPZDog.itemdata(cmbPZDog.newindex)= -1
cmbPZDog.additem &quot;Нет&quot;
cmbPZDog.itemdata(cmbPZDog.newindex)= 0
 For iii = 0 To cmbPZDog.ListCount-1
  If Item.PZDog = cmbPZDog.ItemData(iii) Then
   cmbPZDog.ListIndex = iii
   Exit For
  End If
 Next
dtpStartDate = date
if item.StartDate &lt;&gt; 0 then
 dtpStartDate = item.StartDate
else
 dtpStartDate.value = null
end if
dtpEndDate = date
if item.EndDate &lt;&gt; 0 then
 dtpEndDate = item.EndDate
else
 dtpEndDate.value = null
end if
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpEndDate) then
    item.EndDate = 0
  else
    item.EndDate = dtpEndDate.value
  end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGContractChangesread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Номер соглашения:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="80"/><Properties Name="ToolTipText" PropValue="Номер соглашения"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOf"/><Properties Name="Caption" PropValue="Дата соглашения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOf"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата соглашения"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="theFile"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheFile"/><Properties Name="Caption" PropValue="Файл соглашения:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheFile"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Файл соглашения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdtheFile"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Файл соглашения"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="2040"/><Properties Name="Left" PropValue="300"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Comment"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Comment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PaththeFile as string 
  private ModtheFile as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub dtpDateOf_Change()
  Changing

end sub

Private Sub theFile_Timer()
    If PaththeFile &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PaththeFile For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PaththeFile)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        theFile.Enabled = False
        If ModtheFile &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.theFile = FileToArray(PaththeFile)
                item.theFile_ext = GetFileExtension2(PaththeFile)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdtheFile_Click()
  on error resume next
  if item.theFile_ext &lt;&gt;&quot;&quot; and not isnull(item.theFile)  then
    cmdtheFile_MenuClick &quot;Открыть&quot;
  End if
End Sub

Private Sub cmdtheFile_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Открыть&quot; Then
    PaththeFile = DoOpenFile(item.theFile, item.theFile_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PaththeFile)
    ModtheFile = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PaththeFile, item.PartName, item.ID
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.theFile
  End If
End Sub
private sub txtthe_Comment_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK = IsSet(dtpDateOf.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
dtpDateOf = date
if item.DateOf &lt;&gt; 0 then
 dtpDateOf = item.DateOf
end if
 if  lenb(item.theFile)&gt;0 then 
   txttheFile=&quot;Данные (&quot; &amp; item.theFile_ext &amp; &quot;)&quot;
 else 
   txttheFile=&quot;&quot;
 end if 
 LoadBtnPictures cmdtheFile,cmdtheFile.tag
 cmdtheFile.RemoveAllMenu
 cmdtheFile.AddMenu &quot;Очистить&quot;
 cmdtheFile.AddMenu &quot;Выбрать&quot;
 cmdtheFile.AddMenu &quot;Сохранить&quot;
 cmdtheFile.AddMenu &quot;Открыть&quot;
txtthe_Comment = item.the_Comment
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 ' SEE cmdtheFile_CLICK
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGContractVersionread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOf"/><Properties Name="Caption" PropValue="Дата версии:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOf"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата версии"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="theFile"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheFile"/><Properties Name="Caption" PropValue="Файл:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheFile"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Файл"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdtheFile"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Файл"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="1335"/><Properties Name="Left" PropValue="300"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblActual"/><Properties Name="Caption" PropValue="Актуальная версия:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbActual"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Актуальная версия"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Comment"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Comment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PaththeFile as string 
  private ModtheFile as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOf_Change()
  Changing

end sub

Private Sub theFile_Timer()
    If PaththeFile &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PaththeFile For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PaththeFile)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        theFile.Enabled = False
        If ModtheFile &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.theFile = FileToArray(PaththeFile)
                item.theFile_ext = GetFileExtension2(PaththeFile)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdtheFile_Click()
  on error resume next
  if item.theFile_ext &lt;&gt;&quot;&quot; and not isnull(item.theFile)  then
    cmdtheFile_MenuClick &quot;Открыть&quot;
  End if
End Sub

Private Sub cmdtheFile_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Открыть&quot; Then
    PaththeFile = DoOpenFile(item.theFile, item.theFile_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PaththeFile)
    ModtheFile = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PaththeFile, item.PartName, item.ID
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.theFile
  End If
End Sub
private sub cmbActual_Click()
  on error resume next
  Changing

end sub
private sub txtthe_Comment_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOf.value)
if mIsOK then mIsOK =(lenb(item.theFile)&gt;0)
if mIsOK then mIsOK =(cmbActual.ListIndex &gt;=0)
if mIsOK then mIsOK =IsSet(txtthe_Comment.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOf = date
if item.DateOf &lt;&gt; 0 then
 dtpDateOf = item.DateOf
end if
 if  lenb(item.theFile)&gt;0 then 
   txttheFile=&quot;Данные (&quot; &amp; item.theFile_ext &amp; &quot;)&quot;
 else 
   txttheFile=&quot;&quot;
 end if 
 LoadBtnPictures cmdtheFile,cmdtheFile.tag
 cmdtheFile.RemoveAllMenu
 cmdtheFile.AddMenu &quot;Выбрать&quot;
 cmdtheFile.AddMenu &quot;Сохранить&quot;
 cmdtheFile.AddMenu &quot;Открыть&quot;
cmbActual.Clear
cmbActual.additem &quot;Да&quot;
cmbActual.itemdata(cmbActual.newindex)= -1
cmbActual.additem &quot;Нет&quot;
cmbActual.itemdata(cmbActual.newindex)= 0
 For iii = 0 To cmbActual.ListCount-1
  If Item.Actual = cmbActual.ItemData(iii) Then
   cmbActual.ListIndex = iii
   Exit For
  End If
 Next
txtthe_Comment = item.the_Comment
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 ' SEE cmdtheFile_CLICK
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDGContractSpesialread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOf"/><Properties Name="Caption" PropValue="Дата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOf"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsDone"/><Properties Name="Caption" PropValue="Исполнено:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsDone"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Исполнено"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Comment"/><Properties Name="Caption" PropValue="Суть условия:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Comment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Суть условия"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOf_Change()
  Changing

end sub
private sub cmbIsDone_Click()
  on error resume next
  Changing

end sub
private sub txtthe_Comment_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOf.value)
if mIsOK then mIsOK =(cmbIsDone.ListIndex &gt;=0)
if mIsOK then mIsOK =IsSet(txtthe_Comment.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOf = date
if item.DateOf &lt;&gt; 0 then
 dtpDateOf = item.DateOf
end if
cmbIsDone.Clear
cmbIsDone.additem &quot;Да&quot;
cmbIsDone.itemdata(cmbIsDone.newindex)= -1
cmbIsDone.additem &quot;Нет&quot;
cmbIsDone.itemdata(cmbIsDone.newindex)= 0
 For iii = 0 To cmbIsDone.ListCount-1
  If Item.IsDone = cmbIsDone.ItemData(iii) Then
   cmbIsDone.ListIndex = iii
   Exit For
  End If
 Next
txtthe_Comment = item.the_Comment
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGCommon_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGCommon"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Общая информация"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Общая информация"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{F7F73EDC-E050-4B6D-B0BE-2B05AFBEBA55}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{F7F73EDC-E050-4B6D-B0BE-2B05AFBEBA55}&quot;
  Open s &amp; Me.name &amp; &quot;{F7F73EDC-E050-4B6D-B0BE-2B05AFBEBA55}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGContractChanges_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGContractChanges"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Дополнительные соглашения"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Дополнительные соглашения"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{F222B52F-978A-4AE2-9B18-5A4F4A1EEB26}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{F222B52F-978A-4AE2-9B18-5A4F4A1EEB26}&quot;
  Open s &amp; Me.name &amp; &quot;{F222B52F-978A-4AE2-9B18-5A4F4A1EEB26}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGContractVersion_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGContractVersion"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Версия договора"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Версия договора"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{19FA405A-CBC4-4674-8FFE-9DD66FE249E2}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{19FA405A-CBC4-4674-8FFE-9DD66FE249E2}&quot;
  Open s &amp; Me.name &amp; &quot;{19FA405A-CBC4-4674-8FFE-9DD66FE249E2}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGContractSpesial_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGContractSpesial"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Специальные условие"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Специальные условие"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4265CB41-052F-41A8-B1CB-A28E552E1D24}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4265CB41-052F-41A8-B1CB-A28E552E1D24}&quot;
  Open s &amp; Me.name &amp; &quot;{4265CB41-052F-41A8-B1CB-A28E552E1D24}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGCommon_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGCommonmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Общая информация"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Общая информация"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{F7F73EDC-E050-4B6D-B0BE-2B05AFBEBA55}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{F7F73EDC-E050-4B6D-B0BE-2B05AFBEBA55}&quot;
  Open s &amp; Me.name &amp; &quot;{F7F73EDC-E050-4B6D-B0BE-2B05AFBEBA55}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGContractChanges_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGContractChangesmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Дополнительные соглашения"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Дополнительные соглашения"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{F222B52F-978A-4AE2-9B18-5A4F4A1EEB26}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{F222B52F-978A-4AE2-9B18-5A4F4A1EEB26}&quot;
  Open s &amp; Me.name &amp; &quot;{F222B52F-978A-4AE2-9B18-5A4F4A1EEB26}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGContractVersion_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGContractVersionmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Версия договора"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Версия договора"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{19FA405A-CBC4-4674-8FFE-9DD66FE249E2}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{19FA405A-CBC4-4674-8FFE-9DD66FE249E2}&quot;
  Open s &amp; Me.name &amp; &quot;{19FA405A-CBC4-4674-8FFE-9DD66FE249E2}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGContractSpesial_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGContractSpesialmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Специальные условие"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Специальные условие"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4265CB41-052F-41A8-B1CB-A28E552E1D24}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4265CB41-052F-41A8-B1CB-A28E552E1D24}&quot;
  Open s &amp; Me.name &amp; &quot;{4265CB41-052F-41A8-B1CB-A28E552E1D24}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGCommon_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGCommon" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGCommon"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editVRDGCommon" ControlIndex="0" PROGID="VRDG2GUI.VRDGCommonmain"><Properties Name="Name" PropValue="editVRDGCommon"/></ControlData><ControlData Name="cmdVRDGCommonSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGCommonSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRDGCommonRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGCommonRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRDGCommonCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGCommonCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRDGCommon_UpdateItemName_main(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=.DogNum &amp; &quot; от &quot; &amp; .DogDate &amp; &quot; &quot; &amp; .Name,  RowItem:=RowItem
end with
end sub
Private Sub cmdVRDGCommonRef_Click()
  on error resume next
  Item.VRDGCommon.Refresh
  cmdVRDGCommonAdd_Click
End Sub
Private Sub cmdVRDGCommonCfg_Click()
    on error resume next 
    editVRDGCommon.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;VRDG2_editVRDGCommon_main&quot; For Output As #ff
    print #ff, editVRDGCommon.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdVRDGCommonAdd_Click()
  on error resume next
 dim u as object
 If Item.VRDGCommon.Count = 0 Then
   set u=Item.VRDGCommon.Add
set u.Curator = u.Application.FindRowObject(&quot;Users&quot;, u.application.mtzsession.GetSessionUserID())

 End If
 Set editVRDGCommon.Item = Item.VRDGCommon.Item(1)
 editVRDGCommon.InitPanel
 cmdVRDGCommonSave.Enabled = True
End Sub
Private Sub cmdVRDGCommonDel_Click()
  on error resume next
  if  editVRDGCommon.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editVRDGCommon.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editVRDGCommon.item.parent.Delete editVRDGCommon.item.id
    cmdVRDGCommonSave.Enabled = false
    editVRDGCommon.Enabled = false
    set editVRDGCommon.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editVRDGCommon_Changed()
 cmdVRDGCommonSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editVRDGCommon.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdVRDGCommonSave_Click()
  on error resume next
    if editVRDGCommon.IsOK then
    MousePointer = vbHourglass
    editVRDGCommon.Save
  on error goto bye
    editVRDGCommon.item.Save
    MousePointer = vbNormal
        opVRDGCommon_UpdateItemName_main editVRDGCommon.item
    cmdVRDGCommonSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editVRDGCommon.item.REFRESH
  'editVRDGCommon.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGCommonSave,cmdVRDGCommonSave.tag
  LoadBtnPictures cmdVRDGCommonRef,cmdVRDGCommonRef.tag
  LoadBtnPictures cmdVRDGCommonCfg,cmdVRDGCommonCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;VRDG2_editVRDGCommon_main&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editVRDGCommon.PanelCustomisationString = buf
  cmdVRDGCommonAdd_click
end sub
private sub OnTabClick()

      editVRDGCommon.Top = 40 * Screen.TwipsPerPixelX
      editVRDGCommon.Left = 5 * Screen.TwipsPerPixelX
      editVRDGCommon.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editVRDGCommon.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editVRDGCommon.Save
if editVRDGCommon.item.Changed then
  editVRDGCommon.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editVRDGCommon.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGCommon.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGContractVersion_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGContractVersion" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGContractVersion"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDGContractVersion" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDGContractVersion"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDGContractVersionAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractVersionEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractVersionDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractVersionRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDGContractVersionPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDGContractVersionCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDGContractVersionFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDGContractVersionRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDGContractVersionAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDGContractVersion" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Версия договора"/><Properties Name="Name" PropValue="mnuPopupVRDGContractVersion"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDGContractVersionAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractVersionEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDGContractVersionEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractVersionDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractVersionOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDGContractVersionOpen"/></ControlData><ControlData Name="mnuVRDGContractVersionRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionRef"/></ControlData><ControlData Name="mnuVRDGContractVersionS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDGContractVersionS1"/></ControlData><ControlData Name="mnuVRDGContractVersionBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDGContractVersionBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDGContractVersionCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCOPY"/></ControlData><ControlData Name="mnuVRDGContractVersionCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCUT"/></ControlData><ControlData Name="mnuVRDGContractVersionPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionPASTE"/></ControlData><ControlData Name="mnuVRDGContractVersionCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCHANGE"/></ControlData><ControlData Name="mnuVRDGContractVersionCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDGContractVersionPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionPrn"/></ControlData><ControlData Name="mnuVRDGContractVersionCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCfg"/></ControlData><ControlData Name="mnuVRDGContractVersionFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDGContractVersionFind"/></ControlData><ControlData Name="mnuVRDGContractVersionAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDGContractVersionAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDGContractVersion" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDGContractVersion"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDGContractVersion as object
private menuActionVRDGContractVersion as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDGContractVersionCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDGContractVersion,&quot;gridVRDGContractVersion&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractVersionPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDGContractVersion,&quot;Версия договора&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractVersionRef_Click()
  on error resume next
  item.VRDGContractVersion.Refresh
  gridVRDGContractVersion.itemCount = item.VRDGContractVersion.count
  gridVRDGContractVersion.Refetch
  gridVRDGContractVersion.Refresh
End Sub
Private Sub cmdVRDGContractVersionAcc_Click()
On Error Resume Next
If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
If gridVRDGContractVersion.Row &gt; 0 Then
 If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDGContractVersionEdit_Click()
  on error resume next
If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
If gridVRDGContractVersion.Row &gt; 0 then
 If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDGContractVersion_main.Item = u
    again: frmVRDGContractVersion_main.NotFirstTime = False
    frmVRDGContractVersion_main.OnInit
    frmVRDGContractVersion_main.Show vbModal
    If frmVRDGContractVersion_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDGContractVersion.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDGContractVersionDel_Click()
  on error resume next
  gridVRDGContractVersion.Delete
End Sub
Private Sub cmdVRDGContractVersionAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDGContractVersion.Add()

      Set frmVRDGContractVersion_main.Item = u
      again: frmVRDGContractVersion_main.NotFirstTime = False
      frmVRDGContractVersion_main.OnInit
      frmVRDGContractVersion_main.Show vbModal
      If frmVRDGContractVersion_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDGContractVersion.ItemCount = Item.VRDGContractVersion.Count
        gridVRDGContractVersion.Refresh
        gridVRDGContractVersion.RefreshGroups
        gridVRDGContractVersion.Refreshsort
        gridVRDGContractVersion.MoveToBookmark u.ID &amp; &quot;VRDGContractVersion&quot;
      Else
        Item.VRDGContractVersion.Delete u.ID
        Item.VRDGContractVersion.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDGContractVersionFnd_Click()
  on error resume next
  fndVRDGContractVersion.ShowForm
End Sub
Private Sub cmdVRDGContractVersionRun_Click()
  on error resume next
  gridVRDGContractVersion_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDGContractVersion_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDGContractVersion.LoadRow gridVRDGContractVersion, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDGContractVersion_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDGContractVersion&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDGContractVersion_DblClick()
  cmdVRDGContractVersionEdit_Click
End Sub
Private Sub gridVRDGContractVersion_KeyPress(KeyAscii As Integer)
  If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDGContractVersion.FindOnPress KeyAscii
End Sub

Private Sub gridVRDGContractVersion_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDGContractVersion.Row And LastRow &gt; 0 Then
  gridVRDGContractVersion.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDGContractVersion.GetRowData(gridVRDGContractVersion.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDGContractVersionPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDGContractVersion.Add()
    If GetFromBuffer(u) Then
      gridVRDGContractVersion.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDGContractVersion_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDGContractVersionCfg_Click
        End If
    End If
end sub

private sub gridVRDGContractVersion_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDGContractVersion
End If
end sub
private sub mnuVRDGContractVersionAdd_click()
   menuActionVRDGContractVersion =&quot;ADD&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionEdit_click()
   menuActionVRDGContractVersion =&quot;EDIT&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionDelete_click()
   menuActionVRDGContractVersion =&quot;DEL&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionOpen_click()
   menuActionVRDGContractVersion =&quot;RUN&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionRef_click()
   menuActionVRDGContractVersion =&quot;REF&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
  Private Sub mnuVRDGContractVersionCOPY_Click()
    On Error Resume Next
    If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
    If gridVRDGContractVersion.Row &gt; 0 Then
     If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDGContractVersionCUT_Click()
    On Error Resume Next
    If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
    If gridVRDGContractVersion.Row &gt; 0 Then
     If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDGContractVersion.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDGContractVersionCHANGE_Click()
  On Error Resume Next
  If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
  If gridVRDGContractVersion.Row &gt; 0 Then
   If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDGContractVersion.ItemCount = u.parent.Count
      gridVRDGContractVersion.RefreshRowIndex gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDGContractVersionCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDGContractVersionPrn_click()
   menuActionVRDGContractVersion =&quot;PRN&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionCfg_click()
   menuActionVRDGContractVersion =&quot;CFG&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionFind_click()
   menuActionVRDGContractVersion =&quot;FND&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionAcc_click()
   menuActionVRDGContractVersion =&quot;ACC&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub menuTimerVRDGContractVersion_timer()
   menuTimerVRDGContractVersion.enabled = false
   if menuActionVRDGContractVersion =&quot;ADD&quot; then cmdVRDGContractVersionADD_CLick
   if menuActionVRDGContractVersion =&quot;EDIT&quot; then cmdVRDGContractVersionEDIT_CLick
   if menuActionVRDGContractVersion =&quot;DEL&quot; then cmdVRDGContractVersionDEL_CLick
   if menuActionVRDGContractVersion =&quot;RUN&quot; then cmdVRDGContractVersionRUN_CLick
   if menuActionVRDGContractVersion =&quot;REF&quot; then cmdVRDGContractVersionREF_CLick
   if menuActionVRDGContractVersion =&quot;PRN&quot; then cmdVRDGContractVersionPRN_CLick
   if menuActionVRDGContractVersion =&quot;CFG&quot; then cmdVRDGContractVersionCFG_CLick
   if menuActionVRDGContractVersion =&quot;FND&quot; then cmdVRDGContractVersionFND_CLick
   if menuActionVRDGContractVersion =&quot;ACC&quot; then cmdVRDGContractVersionACC_CLick
   menuActionVRDGContractVersion =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGContractVersionAdd,cmdVRDGContractVersionAdd.tag
  LoadBtnPictures cmdVRDGContractVersionEdit,cmdVRDGContractVersionEdit.tag
  LoadBtnPictures cmdVRDGContractVersionDel,cmdVRDGContractVersionDel.tag
  LoadBtnPictures cmdVRDGContractVersionRef,cmdVRDGContractVersionRef.tag
  LoadBtnPictures cmdVRDGContractVersionPrn,cmdVRDGContractVersionPrn.tag
  LoadBtnPictures cmdVRDGContractVersionFnd,cmdVRDGContractVersionFnd.tag
  LoadBtnPictures cmdVRDGContractVersionRun,cmdVRDGContractVersionRun.tag
  LoadBtnPictures cmdVRDGContractVersionAcc,cmdVRDGContractVersionAcc.tag
  LoadBtnPictures cmdVRDGContractVersionCfg,cmdVRDGContractVersionCfg.tag
  item.VRDGContractVersion.PrepareGrid gridVRDGContractVersion
  LoadGridLayout gridVRDGContractVersion
  Set fndVRDGContractVersion = Nothing
  On Error Resume Next
  Set fndVRDGContractVersion = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDGContractVersion.Init gridVRDGContractVersion
end sub
private sub OnTabClick()

      gridVRDGContractVersion.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDGContractVersion.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGContractVersion.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDGContractVersion = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGContractChanges_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGContractChanges" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGContractChanges"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDGContractChanges" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDGContractChanges"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDGContractChangesAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractChangesEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractChangesDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractChangesRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDGContractChangesPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDGContractChangesCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDGContractChangesFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDGContractChangesRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDGContractChangesAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDGContractChanges" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Дополнительные соглашения"/><Properties Name="Name" PropValue="mnuPopupVRDGContractChanges"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDGContractChangesAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractChangesEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDGContractChangesEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractChangesDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractChangesOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDGContractChangesOpen"/></ControlData><ControlData Name="mnuVRDGContractChangesRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesRef"/></ControlData><ControlData Name="mnuVRDGContractChangesS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDGContractChangesS1"/></ControlData><ControlData Name="mnuVRDGContractChangesBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDGContractChangesBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDGContractChangesCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCOPY"/></ControlData><ControlData Name="mnuVRDGContractChangesCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCUT"/></ControlData><ControlData Name="mnuVRDGContractChangesPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesPASTE"/></ControlData><ControlData Name="mnuVRDGContractChangesCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCHANGE"/></ControlData><ControlData Name="mnuVRDGContractChangesCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDGContractChangesPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesPrn"/></ControlData><ControlData Name="mnuVRDGContractChangesCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCfg"/></ControlData><ControlData Name="mnuVRDGContractChangesFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDGContractChangesFind"/></ControlData><ControlData Name="mnuVRDGContractChangesAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDGContractChangesAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDGContractChanges" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDGContractChanges"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDGContractChanges as object
private menuActionVRDGContractChanges as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDGContractChangesCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDGContractChanges,&quot;gridVRDGContractChanges&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractChangesPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDGContractChanges,&quot;Дополнительные соглашения&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractChangesRef_Click()
  on error resume next
  item.VRDGContractChanges.Refresh
  gridVRDGContractChanges.itemCount = item.VRDGContractChanges.count
  gridVRDGContractChanges.Refetch
  gridVRDGContractChanges.Refresh
End Sub
Private Sub cmdVRDGContractChangesAcc_Click()
On Error Resume Next
If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
If gridVRDGContractChanges.Row &gt; 0 Then
 If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDGContractChangesEdit_Click()
  on error resume next
If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
If gridVRDGContractChanges.Row &gt; 0 then
 If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDGContractChanges_main.Item = u
    again: frmVRDGContractChanges_main.NotFirstTime = False
    frmVRDGContractChanges_main.OnInit
    frmVRDGContractChanges_main.Show vbModal
    If frmVRDGContractChanges_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDGContractChanges.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDGContractChangesDel_Click()
  on error resume next
  gridVRDGContractChanges.Delete
End Sub
Private Sub cmdVRDGContractChangesAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDGContractChanges.Add()

      Set frmVRDGContractChanges_main.Item = u
      again: frmVRDGContractChanges_main.NotFirstTime = False
      frmVRDGContractChanges_main.OnInit
      frmVRDGContractChanges_main.Show vbModal
      If frmVRDGContractChanges_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDGContractChanges.ItemCount = Item.VRDGContractChanges.Count
        gridVRDGContractChanges.Refresh
        gridVRDGContractChanges.RefreshGroups
        gridVRDGContractChanges.Refreshsort
        gridVRDGContractChanges.MoveToBookmark u.ID &amp; &quot;VRDGContractChanges&quot;
      Else
        Item.VRDGContractChanges.Delete u.ID
        Item.VRDGContractChanges.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDGContractChangesFnd_Click()
  on error resume next
  fndVRDGContractChanges.ShowForm
End Sub
Private Sub cmdVRDGContractChangesRun_Click()
  on error resume next
  gridVRDGContractChanges_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDGContractChanges_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDGContractChanges.LoadRow gridVRDGContractChanges, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDGContractChanges_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDGContractChanges&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDGContractChanges_DblClick()
  cmdVRDGContractChangesEdit_Click
End Sub
Private Sub gridVRDGContractChanges_KeyPress(KeyAscii As Integer)
  If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDGContractChanges.FindOnPress KeyAscii
End Sub

Private Sub gridVRDGContractChanges_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDGContractChanges.Row And LastRow &gt; 0 Then
  gridVRDGContractChanges.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDGContractChanges.GetRowData(gridVRDGContractChanges.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDGContractChangesPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDGContractChanges.Add()
    If GetFromBuffer(u) Then
      gridVRDGContractChanges.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDGContractChanges_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDGContractChangesCfg_Click
        End If
    End If
end sub

private sub gridVRDGContractChanges_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDGContractChanges
End If
end sub
private sub mnuVRDGContractChangesAdd_click()
   menuActionVRDGContractChanges =&quot;ADD&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesEdit_click()
   menuActionVRDGContractChanges =&quot;EDIT&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesDelete_click()
   menuActionVRDGContractChanges =&quot;DEL&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesOpen_click()
   menuActionVRDGContractChanges =&quot;RUN&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesRef_click()
   menuActionVRDGContractChanges =&quot;REF&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
  Private Sub mnuVRDGContractChangesCOPY_Click()
    On Error Resume Next
    If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
    If gridVRDGContractChanges.Row &gt; 0 Then
     If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDGContractChangesCUT_Click()
    On Error Resume Next
    If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
    If gridVRDGContractChanges.Row &gt; 0 Then
     If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDGContractChanges.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDGContractChangesCHANGE_Click()
  On Error Resume Next
  If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
  If gridVRDGContractChanges.Row &gt; 0 Then
   If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDGContractChanges.ItemCount = u.parent.Count
      gridVRDGContractChanges.RefreshRowIndex gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDGContractChangesCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDGContractChangesPrn_click()
   menuActionVRDGContractChanges =&quot;PRN&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesCfg_click()
   menuActionVRDGContractChanges =&quot;CFG&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesFind_click()
   menuActionVRDGContractChanges =&quot;FND&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesAcc_click()
   menuActionVRDGContractChanges =&quot;ACC&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub menuTimerVRDGContractChanges_timer()
   menuTimerVRDGContractChanges.enabled = false
   if menuActionVRDGContractChanges =&quot;ADD&quot; then cmdVRDGContractChangesADD_CLick
   if menuActionVRDGContractChanges =&quot;EDIT&quot; then cmdVRDGContractChangesEDIT_CLick
   if menuActionVRDGContractChanges =&quot;DEL&quot; then cmdVRDGContractChangesDEL_CLick
   if menuActionVRDGContractChanges =&quot;RUN&quot; then cmdVRDGContractChangesRUN_CLick
   if menuActionVRDGContractChanges =&quot;REF&quot; then cmdVRDGContractChangesREF_CLick
   if menuActionVRDGContractChanges =&quot;PRN&quot; then cmdVRDGContractChangesPRN_CLick
   if menuActionVRDGContractChanges =&quot;CFG&quot; then cmdVRDGContractChangesCFG_CLick
   if menuActionVRDGContractChanges =&quot;FND&quot; then cmdVRDGContractChangesFND_CLick
   if menuActionVRDGContractChanges =&quot;ACC&quot; then cmdVRDGContractChangesACC_CLick
   menuActionVRDGContractChanges =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGContractChangesAdd,cmdVRDGContractChangesAdd.tag
  LoadBtnPictures cmdVRDGContractChangesEdit,cmdVRDGContractChangesEdit.tag
  LoadBtnPictures cmdVRDGContractChangesDel,cmdVRDGContractChangesDel.tag
  LoadBtnPictures cmdVRDGContractChangesRef,cmdVRDGContractChangesRef.tag
  LoadBtnPictures cmdVRDGContractChangesPrn,cmdVRDGContractChangesPrn.tag
  LoadBtnPictures cmdVRDGContractChangesFnd,cmdVRDGContractChangesFnd.tag
  LoadBtnPictures cmdVRDGContractChangesRun,cmdVRDGContractChangesRun.tag
  LoadBtnPictures cmdVRDGContractChangesAcc,cmdVRDGContractChangesAcc.tag
  LoadBtnPictures cmdVRDGContractChangesCfg,cmdVRDGContractChangesCfg.tag
  item.VRDGContractChanges.PrepareGrid gridVRDGContractChanges
  LoadGridLayout gridVRDGContractChanges
  Set fndVRDGContractChanges = Nothing
  On Error Resume Next
  Set fndVRDGContractChanges = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDGContractChanges.Init gridVRDGContractChanges
end sub
private sub OnTabClick()

      gridVRDGContractChanges.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDGContractChanges.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGContractChanges.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDGContractChanges = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGContractSpesial_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGContractSpesial" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGContractSpesial"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDGContractSpesial" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDGContractSpesial"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDGContractSpesialAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractSpesialEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractSpesialDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractSpesialRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDGContractSpesialPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDGContractSpesialCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDGContractSpesialFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDGContractSpesialRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDGContractSpesialAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDGContractSpesial" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Специальные условие"/><Properties Name="Name" PropValue="mnuPopupVRDGContractSpesial"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDGContractSpesialAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractSpesialEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractSpesialDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractSpesialOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialOpen"/></ControlData><ControlData Name="mnuVRDGContractSpesialRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialRef"/></ControlData><ControlData Name="mnuVRDGContractSpesialS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialS1"/></ControlData><ControlData Name="mnuVRDGContractSpesialBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDGContractSpesialCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCOPY"/></ControlData><ControlData Name="mnuVRDGContractSpesialCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCUT"/></ControlData><ControlData Name="mnuVRDGContractSpesialPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialPASTE"/></ControlData><ControlData Name="mnuVRDGContractSpesialCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCHANGE"/></ControlData><ControlData Name="mnuVRDGContractSpesialCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDGContractSpesialPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialPrn"/></ControlData><ControlData Name="mnuVRDGContractSpesialCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCfg"/></ControlData><ControlData Name="mnuVRDGContractSpesialFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialFind"/></ControlData><ControlData Name="mnuVRDGContractSpesialAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDGContractSpesial" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDGContractSpesial"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDGContractSpesial as object
private menuActionVRDGContractSpesial as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDGContractSpesialCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDGContractSpesial,&quot;gridVRDGContractSpesial&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractSpesialPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDGContractSpesial,&quot;Специальные условие&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractSpesialRef_Click()
  on error resume next
  item.VRDGContractSpesial.Refresh
  gridVRDGContractSpesial.itemCount = item.VRDGContractSpesial.count
  gridVRDGContractSpesial.Refetch
  gridVRDGContractSpesial.Refresh
End Sub
Private Sub cmdVRDGContractSpesialAcc_Click()
On Error Resume Next
If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
If gridVRDGContractSpesial.Row &gt; 0 Then
 If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDGContractSpesialEdit_Click()
  on error resume next
If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
If gridVRDGContractSpesial.Row &gt; 0 then
 If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDGContractSpesial_main.Item = u
    again: frmVRDGContractSpesial_main.NotFirstTime = False
    frmVRDGContractSpesial_main.OnInit
    frmVRDGContractSpesial_main.Show vbModal
    If frmVRDGContractSpesial_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDGContractSpesial.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDGContractSpesialDel_Click()
  on error resume next
  gridVRDGContractSpesial.Delete
End Sub
Private Sub cmdVRDGContractSpesialAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDGContractSpesial.Add()

      Set frmVRDGContractSpesial_main.Item = u
      again: frmVRDGContractSpesial_main.NotFirstTime = False
      frmVRDGContractSpesial_main.OnInit
      frmVRDGContractSpesial_main.Show vbModal
      If frmVRDGContractSpesial_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDGContractSpesial.ItemCount = Item.VRDGContractSpesial.Count
        gridVRDGContractSpesial.Refresh
        gridVRDGContractSpesial.RefreshGroups
        gridVRDGContractSpesial.Refreshsort
        gridVRDGContractSpesial.MoveToBookmark u.ID &amp; &quot;VRDGContractSpesial&quot;
      Else
        Item.VRDGContractSpesial.Delete u.ID
        Item.VRDGContractSpesial.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDGContractSpesialFnd_Click()
  on error resume next
  fndVRDGContractSpesial.ShowForm
End Sub
Private Sub cmdVRDGContractSpesialRun_Click()
  on error resume next
  gridVRDGContractSpesial_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDGContractSpesial_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDGContractSpesial.LoadRow gridVRDGContractSpesial, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDGContractSpesial_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDGContractSpesial&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDGContractSpesial_DblClick()
  cmdVRDGContractSpesialEdit_Click
End Sub
Private Sub gridVRDGContractSpesial_KeyPress(KeyAscii As Integer)
  If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDGContractSpesial.FindOnPress KeyAscii
End Sub

Private Sub gridVRDGContractSpesial_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDGContractSpesial.Row And LastRow &gt; 0 Then
  gridVRDGContractSpesial.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDGContractSpesial.GetRowData(gridVRDGContractSpesial.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDGContractSpesialPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDGContractSpesial.Add()
    If GetFromBuffer(u) Then
      gridVRDGContractSpesial.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDGContractSpesial_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDGContractSpesialCfg_Click
        End If
    End If
end sub

private sub gridVRDGContractSpesial_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDGContractSpesial
End If
end sub
private sub mnuVRDGContractSpesialAdd_click()
   menuActionVRDGContractSpesial =&quot;ADD&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialEdit_click()
   menuActionVRDGContractSpesial =&quot;EDIT&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialDelete_click()
   menuActionVRDGContractSpesial =&quot;DEL&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialOpen_click()
   menuActionVRDGContractSpesial =&quot;RUN&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialRef_click()
   menuActionVRDGContractSpesial =&quot;REF&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
  Private Sub mnuVRDGContractSpesialCOPY_Click()
    On Error Resume Next
    If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
    If gridVRDGContractSpesial.Row &gt; 0 Then
     If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDGContractSpesialCUT_Click()
    On Error Resume Next
    If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
    If gridVRDGContractSpesial.Row &gt; 0 Then
     If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDGContractSpesial.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDGContractSpesialCHANGE_Click()
  On Error Resume Next
  If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
  If gridVRDGContractSpesial.Row &gt; 0 Then
   If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDGContractSpesial.ItemCount = u.parent.Count
      gridVRDGContractSpesial.RefreshRowIndex gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDGContractSpesialCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDGContractSpesialPrn_click()
   menuActionVRDGContractSpesial =&quot;PRN&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialCfg_click()
   menuActionVRDGContractSpesial =&quot;CFG&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialFind_click()
   menuActionVRDGContractSpesial =&quot;FND&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialAcc_click()
   menuActionVRDGContractSpesial =&quot;ACC&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub menuTimerVRDGContractSpesial_timer()
   menuTimerVRDGContractSpesial.enabled = false
   if menuActionVRDGContractSpesial =&quot;ADD&quot; then cmdVRDGContractSpesialADD_CLick
   if menuActionVRDGContractSpesial =&quot;EDIT&quot; then cmdVRDGContractSpesialEDIT_CLick
   if menuActionVRDGContractSpesial =&quot;DEL&quot; then cmdVRDGContractSpesialDEL_CLick
   if menuActionVRDGContractSpesial =&quot;RUN&quot; then cmdVRDGContractSpesialRUN_CLick
   if menuActionVRDGContractSpesial =&quot;REF&quot; then cmdVRDGContractSpesialREF_CLick
   if menuActionVRDGContractSpesial =&quot;PRN&quot; then cmdVRDGContractSpesialPRN_CLick
   if menuActionVRDGContractSpesial =&quot;CFG&quot; then cmdVRDGContractSpesialCFG_CLick
   if menuActionVRDGContractSpesial =&quot;FND&quot; then cmdVRDGContractSpesialFND_CLick
   if menuActionVRDGContractSpesial =&quot;ACC&quot; then cmdVRDGContractSpesialACC_CLick
   menuActionVRDGContractSpesial =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGContractSpesialAdd,cmdVRDGContractSpesialAdd.tag
  LoadBtnPictures cmdVRDGContractSpesialEdit,cmdVRDGContractSpesialEdit.tag
  LoadBtnPictures cmdVRDGContractSpesialDel,cmdVRDGContractSpesialDel.tag
  LoadBtnPictures cmdVRDGContractSpesialRef,cmdVRDGContractSpesialRef.tag
  LoadBtnPictures cmdVRDGContractSpesialPrn,cmdVRDGContractSpesialPrn.tag
  LoadBtnPictures cmdVRDGContractSpesialFnd,cmdVRDGContractSpesialFnd.tag
  LoadBtnPictures cmdVRDGContractSpesialRun,cmdVRDGContractSpesialRun.tag
  LoadBtnPictures cmdVRDGContractSpesialAcc,cmdVRDGContractSpesialAcc.tag
  LoadBtnPictures cmdVRDGContractSpesialCfg,cmdVRDGContractSpesialCfg.tag
  item.VRDGContractSpesial.PrepareGrid gridVRDGContractSpesial
  LoadGridLayout gridVRDGContractSpesial
  Set fndVRDGContractSpesial = Nothing
  On Error Resume Next
  Set fndVRDGContractSpesial = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDGContractSpesial.Init gridVRDGContractSpesial
end sub
private sub OnTabClick()

      gridVRDGContractSpesial.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDGContractSpesial.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGContractSpesial.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDGContractSpesial = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlmain_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGCommon" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGCommon_main"><Properties Name="Name" PropValue="pnlVRDGCommon"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGContractVersion" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGContractVersion_main"><Properties Name="Name" PropValue="pnlVRDGContractVersion"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGContractChanges" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGContractChanges_main"><Properties Name="Name" PropValue="pnlVRDGContractChanges"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGContractSpesial" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGContractSpesial_main"><Properties Name="Name" PropValue="pnlVRDGContractSpesial"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Договор"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRDGCommon.IsOK
if IsItOk then IsItOk = pnlVRDGContractVersion.IsOK
if IsItOk then IsItOk = pnlVRDGContractChanges.IsOK
if IsItOk then IsItOk = pnlVRDGContractSpesial.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRDGContractSpesial.Visible = False
  pnlVRDGContractChanges.Visible = False
  pnlVRDGContractVersion.Visible = False
  pnlVRDGCommon.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRDGCommon&quot;
     With pnlVRDGCommon
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGCommon.OnClick item,parentform
     End With
   Case &quot;VRDGContractVersion&quot;
     With pnlVRDGContractVersion
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGContractVersion.OnClick item,parentform
     End With
   Case &quot;VRDGContractChanges&quot;
     With pnlVRDGContractChanges
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGContractChanges.OnClick item,parentform
     End With
   Case &quot;VRDGContractSpesial&quot;
     With pnlVRDGContractSpesial
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGContractSpesial.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Общая информация&quot;
ts.Tabs.Item(1).key = &quot;VRDGCommon&quot;
pnlVRDGCommon.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDGContractVersion&quot;, &quot;Версия договора&quot;)
pnlVRDGContractVersion.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDGContractChanges&quot;, &quot;Дополнительные соглашения&quot;)
pnlVRDGContractChanges.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDGContractSpesial&quot;, &quot;Специальные условие&quot;)
pnlVRDGContractSpesial.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRDG2&quot;, &quot;ctlmain_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRDGCommon.CloseClass
 pnlVRDGContractVersion.CloseClass
 pnlVRDGContractChanges.CloseClass
 pnlVRDGContractSpesial.CloseClass
End Sub
public sub OnSave()
 pnlVRDGCommon.OnSave
 pnlVRDGContractVersion.OnSave
 pnlVRDGContractChanges.OnSave
 pnlVRDGContractSpesial.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRDGCommon.IsChanged
m_IsChanged = m_IsChanged or pnlVRDGContractVersion.IsChanged
m_IsChanged = m_IsChanged or pnlVRDGContractChanges.IsChanged
m_IsChanged = m_IsChanged or pnlVRDGContractSpesial.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 5
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Подписан&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot;
    i = i + 1
    m(i).Caption = &quot;В Архиве&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot;
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{DB6E7901-B667-4F32-BA25-614074776B8D}&quot;
    i = i + 1
    m(i).Caption = &quot;Исполнен&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot;
    i = i + 1
    m(i).Caption = &quot;Оформлен&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot;
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{DB6E7901-B667-4F32-BA25-614074776B8D}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmmain_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRDG2GUI.ctlmain_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Договор"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRDG2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRDG2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRDG2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGCommon_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGCommonread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Общая информация"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Общая информация"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{F7F73EDC-E050-4B6D-B0BE-2B05AFBEBA55}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{F7F73EDC-E050-4B6D-B0BE-2B05AFBEBA55}&quot;
  Open s &amp; Me.name &amp; &quot;{F7F73EDC-E050-4B6D-B0BE-2B05AFBEBA55}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGContractVersion_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGContractVersionread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Версия договора"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Версия договора"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{19FA405A-CBC4-4674-8FFE-9DD66FE249E2}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{19FA405A-CBC4-4674-8FFE-9DD66FE249E2}&quot;
  Open s &amp; Me.name &amp; &quot;{19FA405A-CBC4-4674-8FFE-9DD66FE249E2}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGContractChanges_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGContractChangesread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Дополнительные соглашения"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Дополнительные соглашения"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{F222B52F-978A-4AE2-9B18-5A4F4A1EEB26}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{F222B52F-978A-4AE2-9B18-5A4F4A1EEB26}&quot;
  Open s &amp; Me.name &amp; &quot;{F222B52F-978A-4AE2-9B18-5A4F4A1EEB26}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDGContractSpesial_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRDG2GUI.VRDGContractSpesialread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Специальные условие"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Специальные условие"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4265CB41-052F-41A8-B1CB-A28E552E1D24}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4265CB41-052F-41A8-B1CB-A28E552E1D24}&quot;
  Open s &amp; Me.name &amp; &quot;{4265CB41-052F-41A8-B1CB-A28E552E1D24}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGCommon_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGCommon" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGCommon"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editVRDGCommon" ControlIndex="0" PROGID="VRDG2GUI.VRDGCommonread"><Properties Name="Name" PropValue="editVRDGCommon"/></ControlData><ControlData Name="cmdVRDGCommonSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGCommonSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRDGCommonRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGCommonRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRDGCommonCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGCommonCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRDGCommon_UpdateItemName_read(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=.DogNum &amp; &quot; от &quot; &amp; .DogDate &amp; &quot; &quot; &amp; .Name,  RowItem:=RowItem
end with
end sub
Private Sub cmdVRDGCommonRef_Click()
  on error resume next
  Item.VRDGCommon.Refresh
  cmdVRDGCommonAdd_Click
End Sub
Private Sub cmdVRDGCommonCfg_Click()
    on error resume next 
    editVRDGCommon.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;VRDG2_editVRDGCommon_read&quot; For Output As #ff
    print #ff, editVRDGCommon.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdVRDGCommonAdd_Click()
  on error resume next
 Set editVRDGCommon.Item = Item.VRDGCommon.Item(1)
 editVRDGCommon.InitPanel
 cmdVRDGCommonSave.Enabled = True
End Sub
Private Sub cmdVRDGCommonDel_Click()
  on error resume next
End Sub
Private Sub editVRDGCommon_Changed()
 cmdVRDGCommonSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editVRDGCommon.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdVRDGCommonSave_Click()
  on error resume next
    if editVRDGCommon.IsOK then
    MousePointer = vbHourglass
    editVRDGCommon.Save
  on error goto bye
    editVRDGCommon.item.Save
    MousePointer = vbNormal
        opVRDGCommon_UpdateItemName_read editVRDGCommon.item
    cmdVRDGCommonSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editVRDGCommon.item.REFRESH
  'editVRDGCommon.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGCommonSave,cmdVRDGCommonSave.tag
  LoadBtnPictures cmdVRDGCommonRef,cmdVRDGCommonRef.tag
  LoadBtnPictures cmdVRDGCommonCfg,cmdVRDGCommonCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;VRDG2_editVRDGCommon_read&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editVRDGCommon.PanelCustomisationString = buf
  cmdVRDGCommonAdd_click
end sub
private sub OnTabClick()

      editVRDGCommon.Top = 40 * Screen.TwipsPerPixelX
      editVRDGCommon.Left = 5 * Screen.TwipsPerPixelX
      editVRDGCommon.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editVRDGCommon.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editVRDGCommon.Save
if editVRDGCommon.item.Changed then
  editVRDGCommon.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editVRDGCommon.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGCommon.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGContractVersion_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGContractVersion" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGContractVersion"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDGContractVersion" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDGContractVersion"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDGContractVersionAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDGContractVersionEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractVersionDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDGContractVersionRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDGContractVersionPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDGContractVersionCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDGContractVersionFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDGContractVersionRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDGContractVersionAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDGContractVersion" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Версия договора"/><Properties Name="Name" PropValue="mnuPopupVRDGContractVersion"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDGContractVersionAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDGContractVersionEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDGContractVersionEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractVersionDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDGContractVersionOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDGContractVersionOpen"/></ControlData><ControlData Name="mnuVRDGContractVersionRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionRef"/></ControlData><ControlData Name="mnuVRDGContractVersionS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDGContractVersionS1"/></ControlData><ControlData Name="mnuVRDGContractVersionBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDGContractVersionBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDGContractVersionCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCOPY"/></ControlData><ControlData Name="mnuVRDGContractVersionCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCUT"/></ControlData><ControlData Name="mnuVRDGContractVersionPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionPASTE"/></ControlData><ControlData Name="mnuVRDGContractVersionCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCHANGE"/></ControlData><ControlData Name="mnuVRDGContractVersionCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDGContractVersionPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionPrn"/></ControlData><ControlData Name="mnuVRDGContractVersionCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCfg"/></ControlData><ControlData Name="mnuVRDGContractVersionFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDGContractVersionFind"/></ControlData><ControlData Name="mnuVRDGContractVersionAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDGContractVersionAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDGContractVersion" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDGContractVersion"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDGContractVersion as object
private menuActionVRDGContractVersion as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDGContractVersionCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDGContractVersion,&quot;gridVRDGContractVersion&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractVersionPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDGContractVersion,&quot;Версия договора&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractVersionRef_Click()
  on error resume next
  item.VRDGContractVersion.Refresh
  gridVRDGContractVersion.itemCount = item.VRDGContractVersion.count
  gridVRDGContractVersion.Refetch
  gridVRDGContractVersion.Refresh
End Sub
Private Sub cmdVRDGContractVersionAcc_Click()
On Error Resume Next
If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
If gridVRDGContractVersion.Row &gt; 0 Then
 If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDGContractVersionEdit_Click()
  on error resume next
If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
If gridVRDGContractVersion.Row &gt; 0 then
 If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDGContractVersion_read.Item = u
    again: frmVRDGContractVersion_read.NotFirstTime = False
    frmVRDGContractVersion_read.OnInit
    frmVRDGContractVersion_read.Show vbModal
    If frmVRDGContractVersion_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDGContractVersion.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDGContractVersionDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDGContractVersionAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDGContractVersionFnd_Click()
  on error resume next
  fndVRDGContractVersion.ShowForm
End Sub
Private Sub cmdVRDGContractVersionRun_Click()
  on error resume next
  gridVRDGContractVersion_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDGContractVersion_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDGContractVersion.LoadRow gridVRDGContractVersion, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDGContractVersion_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDGContractVersion_DblClick()
  cmdVRDGContractVersionEdit_Click
End Sub
Private Sub gridVRDGContractVersion_KeyPress(KeyAscii As Integer)
  If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDGContractVersion.FindOnPress KeyAscii
End Sub

Private Sub gridVRDGContractVersion_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDGContractVersion.Row And LastRow &gt; 0 Then
  gridVRDGContractVersion.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDGContractVersion.GetRowData(gridVRDGContractVersion.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDGContractVersionPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDGContractVersion.Add()
    If GetFromBuffer(u) Then
      gridVRDGContractVersion.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDGContractVersion_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDGContractVersionCfg_Click
        End If
    End If
end sub

private sub gridVRDGContractVersion_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDGContractVersion
End If
end sub
private sub mnuVRDGContractVersionAdd_click()
   menuActionVRDGContractVersion =&quot;ADD&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionEdit_click()
   menuActionVRDGContractVersion =&quot;EDIT&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionDelete_click()
   menuActionVRDGContractVersion =&quot;DEL&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionOpen_click()
   menuActionVRDGContractVersion =&quot;RUN&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionRef_click()
   menuActionVRDGContractVersion =&quot;REF&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
  Private Sub mnuVRDGContractVersionCOPY_Click()
    On Error Resume Next
    If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
    If gridVRDGContractVersion.Row &gt; 0 Then
     If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDGContractVersionCUT_Click()
    On Error Resume Next
    If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
    If gridVRDGContractVersion.Row &gt; 0 Then
     If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDGContractVersion.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDGContractVersionCHANGE_Click()
  On Error Resume Next
  If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
  If gridVRDGContractVersion.Row &gt; 0 Then
   If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDGContractVersion.ItemCount = u.parent.Count
      gridVRDGContractVersion.RefreshRowIndex gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDGContractVersionCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDGContractVersionPrn_click()
   menuActionVRDGContractVersion =&quot;PRN&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionCfg_click()
   menuActionVRDGContractVersion =&quot;CFG&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionFind_click()
   menuActionVRDGContractVersion =&quot;FND&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionAcc_click()
   menuActionVRDGContractVersion =&quot;ACC&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub menuTimerVRDGContractVersion_timer()
   menuTimerVRDGContractVersion.enabled = false
   if menuActionVRDGContractVersion =&quot;ADD&quot; then cmdVRDGContractVersionADD_CLick
   if menuActionVRDGContractVersion =&quot;EDIT&quot; then cmdVRDGContractVersionEDIT_CLick
   if menuActionVRDGContractVersion =&quot;DEL&quot; then cmdVRDGContractVersionDEL_CLick
   if menuActionVRDGContractVersion =&quot;RUN&quot; then cmdVRDGContractVersionRUN_CLick
   if menuActionVRDGContractVersion =&quot;REF&quot; then cmdVRDGContractVersionREF_CLick
   if menuActionVRDGContractVersion =&quot;PRN&quot; then cmdVRDGContractVersionPRN_CLick
   if menuActionVRDGContractVersion =&quot;CFG&quot; then cmdVRDGContractVersionCFG_CLick
   if menuActionVRDGContractVersion =&quot;FND&quot; then cmdVRDGContractVersionFND_CLick
   if menuActionVRDGContractVersion =&quot;ACC&quot; then cmdVRDGContractVersionACC_CLick
   menuActionVRDGContractVersion =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGContractVersionAdd,cmdVRDGContractVersionAdd.tag
  LoadBtnPictures cmdVRDGContractVersionEdit,cmdVRDGContractVersionEdit.tag
  LoadBtnPictures cmdVRDGContractVersionDel,cmdVRDGContractVersionDel.tag
  LoadBtnPictures cmdVRDGContractVersionRef,cmdVRDGContractVersionRef.tag
  LoadBtnPictures cmdVRDGContractVersionPrn,cmdVRDGContractVersionPrn.tag
  LoadBtnPictures cmdVRDGContractVersionFnd,cmdVRDGContractVersionFnd.tag
  LoadBtnPictures cmdVRDGContractVersionRun,cmdVRDGContractVersionRun.tag
  LoadBtnPictures cmdVRDGContractVersionAcc,cmdVRDGContractVersionAcc.tag
  LoadBtnPictures cmdVRDGContractVersionCfg,cmdVRDGContractVersionCfg.tag
  item.VRDGContractVersion.PrepareGrid gridVRDGContractVersion
  LoadGridLayout gridVRDGContractVersion
  Set fndVRDGContractVersion = Nothing
  On Error Resume Next
  Set fndVRDGContractVersion = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDGContractVersion.Init gridVRDGContractVersion
end sub
private sub OnTabClick()

      gridVRDGContractVersion.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDGContractVersion.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGContractVersion.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDGContractVersion = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGContractChanges_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGContractChanges" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGContractChanges"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDGContractChanges" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDGContractChanges"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDGContractChangesAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDGContractChangesEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractChangesDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDGContractChangesRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDGContractChangesPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDGContractChangesCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDGContractChangesFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDGContractChangesRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDGContractChangesAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDGContractChanges" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Дополнительные соглашения"/><Properties Name="Name" PropValue="mnuPopupVRDGContractChanges"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDGContractChangesAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDGContractChangesEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDGContractChangesEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractChangesDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDGContractChangesOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDGContractChangesOpen"/></ControlData><ControlData Name="mnuVRDGContractChangesRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesRef"/></ControlData><ControlData Name="mnuVRDGContractChangesS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDGContractChangesS1"/></ControlData><ControlData Name="mnuVRDGContractChangesBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDGContractChangesBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDGContractChangesCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCOPY"/></ControlData><ControlData Name="mnuVRDGContractChangesCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCUT"/></ControlData><ControlData Name="mnuVRDGContractChangesPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesPASTE"/></ControlData><ControlData Name="mnuVRDGContractChangesCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCHANGE"/></ControlData><ControlData Name="mnuVRDGContractChangesCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDGContractChangesPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesPrn"/></ControlData><ControlData Name="mnuVRDGContractChangesCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCfg"/></ControlData><ControlData Name="mnuVRDGContractChangesFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDGContractChangesFind"/></ControlData><ControlData Name="mnuVRDGContractChangesAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDGContractChangesAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDGContractChanges" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDGContractChanges"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDGContractChanges as object
private menuActionVRDGContractChanges as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDGContractChangesCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDGContractChanges,&quot;gridVRDGContractChanges&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractChangesPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDGContractChanges,&quot;Дополнительные соглашения&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractChangesRef_Click()
  on error resume next
  item.VRDGContractChanges.Refresh
  gridVRDGContractChanges.itemCount = item.VRDGContractChanges.count
  gridVRDGContractChanges.Refetch
  gridVRDGContractChanges.Refresh
End Sub
Private Sub cmdVRDGContractChangesAcc_Click()
On Error Resume Next
If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
If gridVRDGContractChanges.Row &gt; 0 Then
 If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDGContractChangesEdit_Click()
  on error resume next
If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
If gridVRDGContractChanges.Row &gt; 0 then
 If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDGContractChanges_read.Item = u
    again: frmVRDGContractChanges_read.NotFirstTime = False
    frmVRDGContractChanges_read.OnInit
    frmVRDGContractChanges_read.Show vbModal
    If frmVRDGContractChanges_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDGContractChanges.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDGContractChangesDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDGContractChangesAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDGContractChangesFnd_Click()
  on error resume next
  fndVRDGContractChanges.ShowForm
End Sub
Private Sub cmdVRDGContractChangesRun_Click()
  on error resume next
  gridVRDGContractChanges_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDGContractChanges_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDGContractChanges.LoadRow gridVRDGContractChanges, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDGContractChanges_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDGContractChanges_DblClick()
  cmdVRDGContractChangesEdit_Click
End Sub
Private Sub gridVRDGContractChanges_KeyPress(KeyAscii As Integer)
  If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDGContractChanges.FindOnPress KeyAscii
End Sub

Private Sub gridVRDGContractChanges_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDGContractChanges.Row And LastRow &gt; 0 Then
  gridVRDGContractChanges.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDGContractChanges.GetRowData(gridVRDGContractChanges.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDGContractChangesPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDGContractChanges.Add()
    If GetFromBuffer(u) Then
      gridVRDGContractChanges.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDGContractChanges_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDGContractChangesCfg_Click
        End If
    End If
end sub

private sub gridVRDGContractChanges_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDGContractChanges
End If
end sub
private sub mnuVRDGContractChangesAdd_click()
   menuActionVRDGContractChanges =&quot;ADD&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesEdit_click()
   menuActionVRDGContractChanges =&quot;EDIT&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesDelete_click()
   menuActionVRDGContractChanges =&quot;DEL&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesOpen_click()
   menuActionVRDGContractChanges =&quot;RUN&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesRef_click()
   menuActionVRDGContractChanges =&quot;REF&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
  Private Sub mnuVRDGContractChangesCOPY_Click()
    On Error Resume Next
    If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
    If gridVRDGContractChanges.Row &gt; 0 Then
     If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDGContractChangesCUT_Click()
    On Error Resume Next
    If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
    If gridVRDGContractChanges.Row &gt; 0 Then
     If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDGContractChanges.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDGContractChangesCHANGE_Click()
  On Error Resume Next
  If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
  If gridVRDGContractChanges.Row &gt; 0 Then
   If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDGContractChanges.ItemCount = u.parent.Count
      gridVRDGContractChanges.RefreshRowIndex gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDGContractChangesCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDGContractChangesPrn_click()
   menuActionVRDGContractChanges =&quot;PRN&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesCfg_click()
   menuActionVRDGContractChanges =&quot;CFG&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesFind_click()
   menuActionVRDGContractChanges =&quot;FND&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesAcc_click()
   menuActionVRDGContractChanges =&quot;ACC&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub menuTimerVRDGContractChanges_timer()
   menuTimerVRDGContractChanges.enabled = false
   if menuActionVRDGContractChanges =&quot;ADD&quot; then cmdVRDGContractChangesADD_CLick
   if menuActionVRDGContractChanges =&quot;EDIT&quot; then cmdVRDGContractChangesEDIT_CLick
   if menuActionVRDGContractChanges =&quot;DEL&quot; then cmdVRDGContractChangesDEL_CLick
   if menuActionVRDGContractChanges =&quot;RUN&quot; then cmdVRDGContractChangesRUN_CLick
   if menuActionVRDGContractChanges =&quot;REF&quot; then cmdVRDGContractChangesREF_CLick
   if menuActionVRDGContractChanges =&quot;PRN&quot; then cmdVRDGContractChangesPRN_CLick
   if menuActionVRDGContractChanges =&quot;CFG&quot; then cmdVRDGContractChangesCFG_CLick
   if menuActionVRDGContractChanges =&quot;FND&quot; then cmdVRDGContractChangesFND_CLick
   if menuActionVRDGContractChanges =&quot;ACC&quot; then cmdVRDGContractChangesACC_CLick
   menuActionVRDGContractChanges =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGContractChangesAdd,cmdVRDGContractChangesAdd.tag
  LoadBtnPictures cmdVRDGContractChangesEdit,cmdVRDGContractChangesEdit.tag
  LoadBtnPictures cmdVRDGContractChangesDel,cmdVRDGContractChangesDel.tag
  LoadBtnPictures cmdVRDGContractChangesRef,cmdVRDGContractChangesRef.tag
  LoadBtnPictures cmdVRDGContractChangesPrn,cmdVRDGContractChangesPrn.tag
  LoadBtnPictures cmdVRDGContractChangesFnd,cmdVRDGContractChangesFnd.tag
  LoadBtnPictures cmdVRDGContractChangesRun,cmdVRDGContractChangesRun.tag
  LoadBtnPictures cmdVRDGContractChangesAcc,cmdVRDGContractChangesAcc.tag
  LoadBtnPictures cmdVRDGContractChangesCfg,cmdVRDGContractChangesCfg.tag
  item.VRDGContractChanges.PrepareGrid gridVRDGContractChanges
  LoadGridLayout gridVRDGContractChanges
  Set fndVRDGContractChanges = Nothing
  On Error Resume Next
  Set fndVRDGContractChanges = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDGContractChanges.Init gridVRDGContractChanges
end sub
private sub OnTabClick()

      gridVRDGContractChanges.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDGContractChanges.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGContractChanges.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDGContractChanges = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGContractSpesial_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGContractSpesial" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGContractSpesial"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDGContractSpesial" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDGContractSpesial"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDGContractSpesialAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDGContractSpesialEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractSpesialDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDGContractSpesialRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDGContractSpesialPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDGContractSpesialCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDGContractSpesialFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDGContractSpesialRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDGContractSpesialAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDGContractSpesial" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Специальные условие"/><Properties Name="Name" PropValue="mnuPopupVRDGContractSpesial"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDGContractSpesialAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDGContractSpesialEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractSpesialDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDGContractSpesialOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialOpen"/></ControlData><ControlData Name="mnuVRDGContractSpesialRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialRef"/></ControlData><ControlData Name="mnuVRDGContractSpesialS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialS1"/></ControlData><ControlData Name="mnuVRDGContractSpesialBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDGContractSpesialCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCOPY"/></ControlData><ControlData Name="mnuVRDGContractSpesialCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCUT"/></ControlData><ControlData Name="mnuVRDGContractSpesialPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialPASTE"/></ControlData><ControlData Name="mnuVRDGContractSpesialCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCHANGE"/></ControlData><ControlData Name="mnuVRDGContractSpesialCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDGContractSpesialPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialPrn"/></ControlData><ControlData Name="mnuVRDGContractSpesialCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCfg"/></ControlData><ControlData Name="mnuVRDGContractSpesialFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialFind"/></ControlData><ControlData Name="mnuVRDGContractSpesialAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDGContractSpesial" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDGContractSpesial"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDGContractSpesial as object
private menuActionVRDGContractSpesial as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDGContractSpesialCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDGContractSpesial,&quot;gridVRDGContractSpesial&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractSpesialPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDGContractSpesial,&quot;Специальные условие&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractSpesialRef_Click()
  on error resume next
  item.VRDGContractSpesial.Refresh
  gridVRDGContractSpesial.itemCount = item.VRDGContractSpesial.count
  gridVRDGContractSpesial.Refetch
  gridVRDGContractSpesial.Refresh
End Sub
Private Sub cmdVRDGContractSpesialAcc_Click()
On Error Resume Next
If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
If gridVRDGContractSpesial.Row &gt; 0 Then
 If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDGContractSpesialEdit_Click()
  on error resume next
If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
If gridVRDGContractSpesial.Row &gt; 0 then
 If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDGContractSpesial_read.Item = u
    again: frmVRDGContractSpesial_read.NotFirstTime = False
    frmVRDGContractSpesial_read.OnInit
    frmVRDGContractSpesial_read.Show vbModal
    If frmVRDGContractSpesial_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDGContractSpesial.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDGContractSpesialDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDGContractSpesialAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDGContractSpesialFnd_Click()
  on error resume next
  fndVRDGContractSpesial.ShowForm
End Sub
Private Sub cmdVRDGContractSpesialRun_Click()
  on error resume next
  gridVRDGContractSpesial_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDGContractSpesial_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDGContractSpesial.LoadRow gridVRDGContractSpesial, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDGContractSpesial_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDGContractSpesial_DblClick()
  cmdVRDGContractSpesialEdit_Click
End Sub
Private Sub gridVRDGContractSpesial_KeyPress(KeyAscii As Integer)
  If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDGContractSpesial.FindOnPress KeyAscii
End Sub

Private Sub gridVRDGContractSpesial_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDGContractSpesial.Row And LastRow &gt; 0 Then
  gridVRDGContractSpesial.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDGContractSpesial.GetRowData(gridVRDGContractSpesial.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDGContractSpesialPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDGContractSpesial.Add()
    If GetFromBuffer(u) Then
      gridVRDGContractSpesial.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDGContractSpesial_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDGContractSpesialCfg_Click
        End If
    End If
end sub

private sub gridVRDGContractSpesial_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDGContractSpesial
End If
end sub
private sub mnuVRDGContractSpesialAdd_click()
   menuActionVRDGContractSpesial =&quot;ADD&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialEdit_click()
   menuActionVRDGContractSpesial =&quot;EDIT&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialDelete_click()
   menuActionVRDGContractSpesial =&quot;DEL&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialOpen_click()
   menuActionVRDGContractSpesial =&quot;RUN&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialRef_click()
   menuActionVRDGContractSpesial =&quot;REF&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
  Private Sub mnuVRDGContractSpesialCOPY_Click()
    On Error Resume Next
    If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
    If gridVRDGContractSpesial.Row &gt; 0 Then
     If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDGContractSpesialCUT_Click()
    On Error Resume Next
    If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
    If gridVRDGContractSpesial.Row &gt; 0 Then
     If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDGContractSpesial.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDGContractSpesialCHANGE_Click()
  On Error Resume Next
  If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
  If gridVRDGContractSpesial.Row &gt; 0 Then
   If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDGContractSpesial.ItemCount = u.parent.Count
      gridVRDGContractSpesial.RefreshRowIndex gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDGContractSpesialCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDGContractSpesialPrn_click()
   menuActionVRDGContractSpesial =&quot;PRN&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialCfg_click()
   menuActionVRDGContractSpesial =&quot;CFG&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialFind_click()
   menuActionVRDGContractSpesial =&quot;FND&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialAcc_click()
   menuActionVRDGContractSpesial =&quot;ACC&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub menuTimerVRDGContractSpesial_timer()
   menuTimerVRDGContractSpesial.enabled = false
   if menuActionVRDGContractSpesial =&quot;ADD&quot; then cmdVRDGContractSpesialADD_CLick
   if menuActionVRDGContractSpesial =&quot;EDIT&quot; then cmdVRDGContractSpesialEDIT_CLick
   if menuActionVRDGContractSpesial =&quot;DEL&quot; then cmdVRDGContractSpesialDEL_CLick
   if menuActionVRDGContractSpesial =&quot;RUN&quot; then cmdVRDGContractSpesialRUN_CLick
   if menuActionVRDGContractSpesial =&quot;REF&quot; then cmdVRDGContractSpesialREF_CLick
   if menuActionVRDGContractSpesial =&quot;PRN&quot; then cmdVRDGContractSpesialPRN_CLick
   if menuActionVRDGContractSpesial =&quot;CFG&quot; then cmdVRDGContractSpesialCFG_CLick
   if menuActionVRDGContractSpesial =&quot;FND&quot; then cmdVRDGContractSpesialFND_CLick
   if menuActionVRDGContractSpesial =&quot;ACC&quot; then cmdVRDGContractSpesialACC_CLick
   menuActionVRDGContractSpesial =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGContractSpesialAdd,cmdVRDGContractSpesialAdd.tag
  LoadBtnPictures cmdVRDGContractSpesialEdit,cmdVRDGContractSpesialEdit.tag
  LoadBtnPictures cmdVRDGContractSpesialDel,cmdVRDGContractSpesialDel.tag
  LoadBtnPictures cmdVRDGContractSpesialRef,cmdVRDGContractSpesialRef.tag
  LoadBtnPictures cmdVRDGContractSpesialPrn,cmdVRDGContractSpesialPrn.tag
  LoadBtnPictures cmdVRDGContractSpesialFnd,cmdVRDGContractSpesialFnd.tag
  LoadBtnPictures cmdVRDGContractSpesialRun,cmdVRDGContractSpesialRun.tag
  LoadBtnPictures cmdVRDGContractSpesialAcc,cmdVRDGContractSpesialAcc.tag
  LoadBtnPictures cmdVRDGContractSpesialCfg,cmdVRDGContractSpesialCfg.tag
  item.VRDGContractSpesial.PrepareGrid gridVRDGContractSpesial
  LoadGridLayout gridVRDGContractSpesial
  Set fndVRDGContractSpesial = Nothing
  On Error Resume Next
  Set fndVRDGContractSpesial = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDGContractSpesial.Init gridVRDGContractSpesial
end sub
private sub OnTabClick()

      gridVRDGContractSpesial.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDGContractSpesial.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGContractSpesial.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDGContractSpesial = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlread_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGCommon" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGCommon_read"><Properties Name="Name" PropValue="pnlVRDGCommon"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGContractVersion" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGContractVersion_read"><Properties Name="Name" PropValue="pnlVRDGContractVersion"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGContractChanges" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGContractChanges_read"><Properties Name="Name" PropValue="pnlVRDGContractChanges"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGContractSpesial" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGContractSpesial_read"><Properties Name="Name" PropValue="pnlVRDGContractSpesial"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Договор"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRDGCommon.IsOK
if IsItOk then IsItOk = pnlVRDGContractVersion.IsOK
if IsItOk then IsItOk = pnlVRDGContractChanges.IsOK
if IsItOk then IsItOk = pnlVRDGContractSpesial.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRDGContractSpesial.Visible = False
  pnlVRDGContractChanges.Visible = False
  pnlVRDGContractVersion.Visible = False
  pnlVRDGCommon.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRDGCommon&quot;
     With pnlVRDGCommon
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGCommon.OnClick item,parentform
     End With
   Case &quot;VRDGContractVersion&quot;
     With pnlVRDGContractVersion
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGContractVersion.OnClick item,parentform
     End With
   Case &quot;VRDGContractChanges&quot;
     With pnlVRDGContractChanges
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGContractChanges.OnClick item,parentform
     End With
   Case &quot;VRDGContractSpesial&quot;
     With pnlVRDGContractSpesial
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGContractSpesial.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Общая информация&quot;
ts.Tabs.Item(1).key = &quot;VRDGCommon&quot;
pnlVRDGCommon.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDGContractVersion&quot;, &quot;Версия договора&quot;)
pnlVRDGContractVersion.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDGContractChanges&quot;, &quot;Дополнительные соглашения&quot;)
pnlVRDGContractChanges.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDGContractSpesial&quot;, &quot;Специальные условие&quot;)
pnlVRDGContractSpesial.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRDG2&quot;, &quot;ctlread_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRDGCommon.CloseClass
 pnlVRDGContractVersion.CloseClass
 pnlVRDGContractChanges.CloseClass
 pnlVRDGContractSpesial.CloseClass
End Sub
public sub OnSave()
 pnlVRDGCommon.OnSave
 pnlVRDGContractVersion.OnSave
 pnlVRDGContractChanges.OnSave
 pnlVRDGContractSpesial.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRDGCommon.IsChanged
m_IsChanged = m_IsChanged or pnlVRDGContractVersion.IsChanged
m_IsChanged = m_IsChanged or pnlVRDGContractChanges.IsChanged
m_IsChanged = m_IsChanged or pnlVRDGContractSpesial.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 5
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Подписан&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot;
    i = i + 1
    m(i).Caption = &quot;В Архиве&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot;
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{DB6E7901-B667-4F32-BA25-614074776B8D}&quot;
    i = i + 1
    m(i).Caption = &quot;Исполнен&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot;
    i = i + 1
    m(i).Caption = &quot;Оформлен&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot;
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{DB6E7901-B667-4F32-BA25-614074776B8D}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmread_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRDG2GUI.ctlread_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Договор"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;read&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;read&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;read&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;read&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRDG2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRDG2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRDG2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGCommon_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGCommon" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGCommon"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editVRDGCommon" ControlIndex="0" PROGID="VRDG2GUI.VRDGCommon"><Properties Name="Name" PropValue="editVRDGCommon"/></ControlData><ControlData Name="cmdVRDGCommonSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGCommonSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRDGCommonRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGCommonRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRDGCommonCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGCommonCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRDGCommon_UpdateItemName_(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=.DogNum &amp; &quot; от &quot; &amp; .DogDate &amp; &quot; &quot; &amp; .Name,  RowItem:=RowItem
end with
end sub
Private Sub cmdVRDGCommonRef_Click()
  on error resume next
  Item.VRDGCommon.Refresh
  cmdVRDGCommonAdd_Click
End Sub
Private Sub cmdVRDGCommonCfg_Click()
    on error resume next 
    editVRDGCommon.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;VRDG2_editVRDGCommon_&quot; For Output As #ff
    print #ff, editVRDGCommon.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdVRDGCommonAdd_Click()
  on error resume next
 dim u as object
 If Item.VRDGCommon.Count = 0 Then
   set u=Item.VRDGCommon.Add
set u.Curator = u.Application.FindRowObject(&quot;Users&quot;, u.application.mtzsession.GetSessionUserID())

 End If
 Set editVRDGCommon.Item = Item.VRDGCommon.Item(1)
 editVRDGCommon.InitPanel
 cmdVRDGCommonSave.Enabled = True
End Sub
Private Sub cmdVRDGCommonDel_Click()
  on error resume next
  if  editVRDGCommon.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editVRDGCommon.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editVRDGCommon.item.parent.Delete editVRDGCommon.item.id
    cmdVRDGCommonSave.Enabled = false
    editVRDGCommon.Enabled = false
    set editVRDGCommon.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editVRDGCommon_Changed()
 cmdVRDGCommonSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editVRDGCommon.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdVRDGCommonSave_Click()
  on error resume next
    if editVRDGCommon.IsOK then
    MousePointer = vbHourglass
    editVRDGCommon.Save
  on error goto bye
    editVRDGCommon.item.Save
    MousePointer = vbNormal
        opVRDGCommon_UpdateItemName_ editVRDGCommon.item
    cmdVRDGCommonSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editVRDGCommon.item.REFRESH
  'editVRDGCommon.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGCommonSave,cmdVRDGCommonSave.tag
  LoadBtnPictures cmdVRDGCommonRef,cmdVRDGCommonRef.tag
  LoadBtnPictures cmdVRDGCommonCfg,cmdVRDGCommonCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;VRDG2_editVRDGCommon_&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editVRDGCommon.PanelCustomisationString = buf
  cmdVRDGCommonAdd_click
end sub
private sub OnTabClick()

      editVRDGCommon.Top = 40 * Screen.TwipsPerPixelX
      editVRDGCommon.Left = 5 * Screen.TwipsPerPixelX
      editVRDGCommon.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editVRDGCommon.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editVRDGCommon.Save
if editVRDGCommon.item.Changed then
  editVRDGCommon.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editVRDGCommon.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGCommon.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGContractVersion_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGContractVersion" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGContractVersion"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDGContractVersion" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDGContractVersion"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDGContractVersionAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractVersionEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractVersionDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractVersionRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDGContractVersionPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDGContractVersionCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDGContractVersionFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDGContractVersionRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDGContractVersionAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractVersionAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDGContractVersion" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Версия договора"/><Properties Name="Name" PropValue="mnuPopupVRDGContractVersion"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDGContractVersionAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractVersionEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDGContractVersionEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractVersionDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractVersionOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDGContractVersionOpen"/></ControlData><ControlData Name="mnuVRDGContractVersionRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionRef"/></ControlData><ControlData Name="mnuVRDGContractVersionS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDGContractVersionS1"/></ControlData><ControlData Name="mnuVRDGContractVersionBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDGContractVersionBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDGContractVersionCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCOPY"/></ControlData><ControlData Name="mnuVRDGContractVersionCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCUT"/></ControlData><ControlData Name="mnuVRDGContractVersionPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionPASTE"/></ControlData><ControlData Name="mnuVRDGContractVersionCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCHANGE"/></ControlData><ControlData Name="mnuVRDGContractVersionCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDGContractVersionPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDGContractVersionPrn"/></ControlData><ControlData Name="mnuVRDGContractVersionCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDGContractVersionCfg"/></ControlData><ControlData Name="mnuVRDGContractVersionFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDGContractVersionFind"/></ControlData><ControlData Name="mnuVRDGContractVersionAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDGContractVersionAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDGContractVersion" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDGContractVersion"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDGContractVersion as object
private menuActionVRDGContractVersion as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDGContractVersionCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDGContractVersion,&quot;gridVRDGContractVersion&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractVersionPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDGContractVersion,&quot;Версия договора&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractVersionRef_Click()
  on error resume next
  item.VRDGContractVersion.Refresh
  gridVRDGContractVersion.itemCount = item.VRDGContractVersion.count
  gridVRDGContractVersion.Refetch
  gridVRDGContractVersion.Refresh
End Sub
Private Sub cmdVRDGContractVersionAcc_Click()
On Error Resume Next
If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
If gridVRDGContractVersion.Row &gt; 0 Then
 If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDGContractVersionEdit_Click()
  on error resume next
If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
If gridVRDGContractVersion.Row &gt; 0 then
 If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDGContractVersion_.Item = u
    again: frmVRDGContractVersion_.NotFirstTime = False
    frmVRDGContractVersion_.OnInit
    frmVRDGContractVersion_.Show vbModal
    If frmVRDGContractVersion_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDGContractVersion.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDGContractVersionDel_Click()
  on error resume next
  gridVRDGContractVersion.Delete
End Sub
Private Sub cmdVRDGContractVersionAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDGContractVersion.Add()

      Set frmVRDGContractVersion_.Item = u
      again: frmVRDGContractVersion_.NotFirstTime = False
      frmVRDGContractVersion_.OnInit
      frmVRDGContractVersion_.Show vbModal
      If frmVRDGContractVersion_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDGContractVersion.ItemCount = Item.VRDGContractVersion.Count
        gridVRDGContractVersion.Refresh
        gridVRDGContractVersion.RefreshGroups
        gridVRDGContractVersion.Refreshsort
        gridVRDGContractVersion.MoveToBookmark u.ID &amp; &quot;VRDGContractVersion&quot;
      Else
        Item.VRDGContractVersion.Delete u.ID
        Item.VRDGContractVersion.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDGContractVersionFnd_Click()
  on error resume next
  fndVRDGContractVersion.ShowForm
End Sub
Private Sub cmdVRDGContractVersionRun_Click()
  on error resume next
  gridVRDGContractVersion_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDGContractVersion_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDGContractVersion.LoadRow gridVRDGContractVersion, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDGContractVersion_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDGContractVersion&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDGContractVersion_DblClick()
  cmdVRDGContractVersionEdit_Click
End Sub
Private Sub gridVRDGContractVersion_KeyPress(KeyAscii As Integer)
  If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDGContractVersion.FindOnPress KeyAscii
End Sub

Private Sub gridVRDGContractVersion_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDGContractVersion.Row And LastRow &gt; 0 Then
  gridVRDGContractVersion.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDGContractVersion.GetRowData(gridVRDGContractVersion.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDGContractVersionPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDGContractVersion.Add()
    If GetFromBuffer(u) Then
      gridVRDGContractVersion.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDGContractVersion_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDGContractVersionCfg_Click
        End If
    End If
end sub

private sub gridVRDGContractVersion_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDGContractVersion
End If
end sub
private sub mnuVRDGContractVersionAdd_click()
   menuActionVRDGContractVersion =&quot;ADD&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionEdit_click()
   menuActionVRDGContractVersion =&quot;EDIT&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionDelete_click()
   menuActionVRDGContractVersion =&quot;DEL&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionOpen_click()
   menuActionVRDGContractVersion =&quot;RUN&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionRef_click()
   menuActionVRDGContractVersion =&quot;REF&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
  Private Sub mnuVRDGContractVersionCOPY_Click()
    On Error Resume Next
    If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
    If gridVRDGContractVersion.Row &gt; 0 Then
     If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDGContractVersionCUT_Click()
    On Error Resume Next
    If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
    If gridVRDGContractVersion.Row &gt; 0 Then
     If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDGContractVersion.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDGContractVersionCHANGE_Click()
  On Error Resume Next
  If gridVRDGContractVersion.ItemCount = 0 Then Exit Sub
  If gridVRDGContractVersion.Row &gt; 0 Then
   If gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractVersion.RowBookmark(gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDGContractVersion.ItemCount = u.parent.Count
      gridVRDGContractVersion.RefreshRowIndex gridVRDGContractVersion.RowIndex(gridVRDGContractVersion.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDGContractVersionCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDGContractVersionPrn_click()
   menuActionVRDGContractVersion =&quot;PRN&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionCfg_click()
   menuActionVRDGContractVersion =&quot;CFG&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionFind_click()
   menuActionVRDGContractVersion =&quot;FND&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub mnuVRDGContractVersionAcc_click()
   menuActionVRDGContractVersion =&quot;ACC&quot;
   menuTimerVRDGContractVersion.enabled = true
end sub
private sub menuTimerVRDGContractVersion_timer()
   menuTimerVRDGContractVersion.enabled = false
   if menuActionVRDGContractVersion =&quot;ADD&quot; then cmdVRDGContractVersionADD_CLick
   if menuActionVRDGContractVersion =&quot;EDIT&quot; then cmdVRDGContractVersionEDIT_CLick
   if menuActionVRDGContractVersion =&quot;DEL&quot; then cmdVRDGContractVersionDEL_CLick
   if menuActionVRDGContractVersion =&quot;RUN&quot; then cmdVRDGContractVersionRUN_CLick
   if menuActionVRDGContractVersion =&quot;REF&quot; then cmdVRDGContractVersionREF_CLick
   if menuActionVRDGContractVersion =&quot;PRN&quot; then cmdVRDGContractVersionPRN_CLick
   if menuActionVRDGContractVersion =&quot;CFG&quot; then cmdVRDGContractVersionCFG_CLick
   if menuActionVRDGContractVersion =&quot;FND&quot; then cmdVRDGContractVersionFND_CLick
   if menuActionVRDGContractVersion =&quot;ACC&quot; then cmdVRDGContractVersionACC_CLick
   menuActionVRDGContractVersion =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGContractVersionAdd,cmdVRDGContractVersionAdd.tag
  LoadBtnPictures cmdVRDGContractVersionEdit,cmdVRDGContractVersionEdit.tag
  LoadBtnPictures cmdVRDGContractVersionDel,cmdVRDGContractVersionDel.tag
  LoadBtnPictures cmdVRDGContractVersionRef,cmdVRDGContractVersionRef.tag
  LoadBtnPictures cmdVRDGContractVersionPrn,cmdVRDGContractVersionPrn.tag
  LoadBtnPictures cmdVRDGContractVersionFnd,cmdVRDGContractVersionFnd.tag
  LoadBtnPictures cmdVRDGContractVersionRun,cmdVRDGContractVersionRun.tag
  LoadBtnPictures cmdVRDGContractVersionAcc,cmdVRDGContractVersionAcc.tag
  LoadBtnPictures cmdVRDGContractVersionCfg,cmdVRDGContractVersionCfg.tag
  item.VRDGContractVersion.PrepareGrid gridVRDGContractVersion
  LoadGridLayout gridVRDGContractVersion
  Set fndVRDGContractVersion = Nothing
  On Error Resume Next
  Set fndVRDGContractVersion = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDGContractVersion.Init gridVRDGContractVersion
end sub
private sub OnTabClick()

      gridVRDGContractVersion.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDGContractVersion.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractVersion.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGContractVersion.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDGContractVersion = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGContractChanges_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGContractChanges" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGContractChanges"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDGContractChanges" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDGContractChanges"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDGContractChangesAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractChangesEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractChangesDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractChangesRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDGContractChangesPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDGContractChangesCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDGContractChangesFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDGContractChangesRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDGContractChangesAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractChangesAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDGContractChanges" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Дополнительные соглашения"/><Properties Name="Name" PropValue="mnuPopupVRDGContractChanges"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDGContractChangesAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractChangesEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDGContractChangesEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractChangesDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractChangesOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDGContractChangesOpen"/></ControlData><ControlData Name="mnuVRDGContractChangesRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesRef"/></ControlData><ControlData Name="mnuVRDGContractChangesS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDGContractChangesS1"/></ControlData><ControlData Name="mnuVRDGContractChangesBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDGContractChangesBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDGContractChangesCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCOPY"/></ControlData><ControlData Name="mnuVRDGContractChangesCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCUT"/></ControlData><ControlData Name="mnuVRDGContractChangesPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesPASTE"/></ControlData><ControlData Name="mnuVRDGContractChangesCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCHANGE"/></ControlData><ControlData Name="mnuVRDGContractChangesCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDGContractChangesPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDGContractChangesPrn"/></ControlData><ControlData Name="mnuVRDGContractChangesCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDGContractChangesCfg"/></ControlData><ControlData Name="mnuVRDGContractChangesFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDGContractChangesFind"/></ControlData><ControlData Name="mnuVRDGContractChangesAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDGContractChangesAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDGContractChanges" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDGContractChanges"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDGContractChanges as object
private menuActionVRDGContractChanges as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDGContractChangesCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDGContractChanges,&quot;gridVRDGContractChanges&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractChangesPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDGContractChanges,&quot;Дополнительные соглашения&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractChangesRef_Click()
  on error resume next
  item.VRDGContractChanges.Refresh
  gridVRDGContractChanges.itemCount = item.VRDGContractChanges.count
  gridVRDGContractChanges.Refetch
  gridVRDGContractChanges.Refresh
End Sub
Private Sub cmdVRDGContractChangesAcc_Click()
On Error Resume Next
If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
If gridVRDGContractChanges.Row &gt; 0 Then
 If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDGContractChangesEdit_Click()
  on error resume next
If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
If gridVRDGContractChanges.Row &gt; 0 then
 If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDGContractChanges_.Item = u
    again: frmVRDGContractChanges_.NotFirstTime = False
    frmVRDGContractChanges_.OnInit
    frmVRDGContractChanges_.Show vbModal
    If frmVRDGContractChanges_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDGContractChanges.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDGContractChangesDel_Click()
  on error resume next
  gridVRDGContractChanges.Delete
End Sub
Private Sub cmdVRDGContractChangesAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDGContractChanges.Add()

      Set frmVRDGContractChanges_.Item = u
      again: frmVRDGContractChanges_.NotFirstTime = False
      frmVRDGContractChanges_.OnInit
      frmVRDGContractChanges_.Show vbModal
      If frmVRDGContractChanges_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDGContractChanges.ItemCount = Item.VRDGContractChanges.Count
        gridVRDGContractChanges.Refresh
        gridVRDGContractChanges.RefreshGroups
        gridVRDGContractChanges.Refreshsort
        gridVRDGContractChanges.MoveToBookmark u.ID &amp; &quot;VRDGContractChanges&quot;
      Else
        Item.VRDGContractChanges.Delete u.ID
        Item.VRDGContractChanges.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDGContractChangesFnd_Click()
  on error resume next
  fndVRDGContractChanges.ShowForm
End Sub
Private Sub cmdVRDGContractChangesRun_Click()
  on error resume next
  gridVRDGContractChanges_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDGContractChanges_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDGContractChanges.LoadRow gridVRDGContractChanges, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDGContractChanges_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDGContractChanges&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDGContractChanges_DblClick()
  cmdVRDGContractChangesEdit_Click
End Sub
Private Sub gridVRDGContractChanges_KeyPress(KeyAscii As Integer)
  If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDGContractChanges.FindOnPress KeyAscii
End Sub

Private Sub gridVRDGContractChanges_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDGContractChanges.Row And LastRow &gt; 0 Then
  gridVRDGContractChanges.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDGContractChanges.GetRowData(gridVRDGContractChanges.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDGContractChangesPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDGContractChanges.Add()
    If GetFromBuffer(u) Then
      gridVRDGContractChanges.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDGContractChanges_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDGContractChangesCfg_Click
        End If
    End If
end sub

private sub gridVRDGContractChanges_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDGContractChanges
End If
end sub
private sub mnuVRDGContractChangesAdd_click()
   menuActionVRDGContractChanges =&quot;ADD&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesEdit_click()
   menuActionVRDGContractChanges =&quot;EDIT&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesDelete_click()
   menuActionVRDGContractChanges =&quot;DEL&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesOpen_click()
   menuActionVRDGContractChanges =&quot;RUN&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesRef_click()
   menuActionVRDGContractChanges =&quot;REF&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
  Private Sub mnuVRDGContractChangesCOPY_Click()
    On Error Resume Next
    If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
    If gridVRDGContractChanges.Row &gt; 0 Then
     If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDGContractChangesCUT_Click()
    On Error Resume Next
    If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
    If gridVRDGContractChanges.Row &gt; 0 Then
     If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDGContractChanges.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDGContractChangesCHANGE_Click()
  On Error Resume Next
  If gridVRDGContractChanges.ItemCount = 0 Then Exit Sub
  If gridVRDGContractChanges.Row &gt; 0 Then
   If gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractChanges.RowBookmark(gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDGContractChanges.ItemCount = u.parent.Count
      gridVRDGContractChanges.RefreshRowIndex gridVRDGContractChanges.RowIndex(gridVRDGContractChanges.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDGContractChangesCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDGContractChangesPrn_click()
   menuActionVRDGContractChanges =&quot;PRN&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesCfg_click()
   menuActionVRDGContractChanges =&quot;CFG&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesFind_click()
   menuActionVRDGContractChanges =&quot;FND&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub mnuVRDGContractChangesAcc_click()
   menuActionVRDGContractChanges =&quot;ACC&quot;
   menuTimerVRDGContractChanges.enabled = true
end sub
private sub menuTimerVRDGContractChanges_timer()
   menuTimerVRDGContractChanges.enabled = false
   if menuActionVRDGContractChanges =&quot;ADD&quot; then cmdVRDGContractChangesADD_CLick
   if menuActionVRDGContractChanges =&quot;EDIT&quot; then cmdVRDGContractChangesEDIT_CLick
   if menuActionVRDGContractChanges =&quot;DEL&quot; then cmdVRDGContractChangesDEL_CLick
   if menuActionVRDGContractChanges =&quot;RUN&quot; then cmdVRDGContractChangesRUN_CLick
   if menuActionVRDGContractChanges =&quot;REF&quot; then cmdVRDGContractChangesREF_CLick
   if menuActionVRDGContractChanges =&quot;PRN&quot; then cmdVRDGContractChangesPRN_CLick
   if menuActionVRDGContractChanges =&quot;CFG&quot; then cmdVRDGContractChangesCFG_CLick
   if menuActionVRDGContractChanges =&quot;FND&quot; then cmdVRDGContractChangesFND_CLick
   if menuActionVRDGContractChanges =&quot;ACC&quot; then cmdVRDGContractChangesACC_CLick
   menuActionVRDGContractChanges =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGContractChangesAdd,cmdVRDGContractChangesAdd.tag
  LoadBtnPictures cmdVRDGContractChangesEdit,cmdVRDGContractChangesEdit.tag
  LoadBtnPictures cmdVRDGContractChangesDel,cmdVRDGContractChangesDel.tag
  LoadBtnPictures cmdVRDGContractChangesRef,cmdVRDGContractChangesRef.tag
  LoadBtnPictures cmdVRDGContractChangesPrn,cmdVRDGContractChangesPrn.tag
  LoadBtnPictures cmdVRDGContractChangesFnd,cmdVRDGContractChangesFnd.tag
  LoadBtnPictures cmdVRDGContractChangesRun,cmdVRDGContractChangesRun.tag
  LoadBtnPictures cmdVRDGContractChangesAcc,cmdVRDGContractChangesAcc.tag
  LoadBtnPictures cmdVRDGContractChangesCfg,cmdVRDGContractChangesCfg.tag
  item.VRDGContractChanges.PrepareGrid gridVRDGContractChanges
  LoadGridLayout gridVRDGContractChanges
  Set fndVRDGContractChanges = Nothing
  On Error Resume Next
  Set fndVRDGContractChanges = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDGContractChanges.Init gridVRDGContractChanges
end sub
private sub OnTabClick()

      gridVRDGContractChanges.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDGContractChanges.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractChanges.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGContractChanges.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDGContractChanges = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDGContractSpesial_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDGContractSpesial" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDGContractSpesial"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDGContractSpesial" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDGContractSpesial"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDGContractSpesialAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractSpesialEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractSpesialDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDGContractSpesialRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDGContractSpesialPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDGContractSpesialCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDGContractSpesialFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDGContractSpesialRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDGContractSpesialAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDGContractSpesialAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDGContractSpesial" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Специальные условие"/><Properties Name="Name" PropValue="mnuPopupVRDGContractSpesial"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDGContractSpesialAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractSpesialEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractSpesialDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDGContractSpesialOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialOpen"/></ControlData><ControlData Name="mnuVRDGContractSpesialRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialRef"/></ControlData><ControlData Name="mnuVRDGContractSpesialS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialS1"/></ControlData><ControlData Name="mnuVRDGContractSpesialBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDGContractSpesialCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCOPY"/></ControlData><ControlData Name="mnuVRDGContractSpesialCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCUT"/></ControlData><ControlData Name="mnuVRDGContractSpesialPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialPASTE"/></ControlData><ControlData Name="mnuVRDGContractSpesialCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCHANGE"/></ControlData><ControlData Name="mnuVRDGContractSpesialCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDGContractSpesialPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialPrn"/></ControlData><ControlData Name="mnuVRDGContractSpesialCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialCfg"/></ControlData><ControlData Name="mnuVRDGContractSpesialFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialFind"/></ControlData><ControlData Name="mnuVRDGContractSpesialAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDGContractSpesialAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDGContractSpesial" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDGContractSpesial"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDGContractSpesial as object
private menuActionVRDGContractSpesial as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDGContractSpesialCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDGContractSpesial,&quot;gridVRDGContractSpesial&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractSpesialPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDGContractSpesial,&quot;Специальные условие&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDGContractSpesialRef_Click()
  on error resume next
  item.VRDGContractSpesial.Refresh
  gridVRDGContractSpesial.itemCount = item.VRDGContractSpesial.count
  gridVRDGContractSpesial.Refetch
  gridVRDGContractSpesial.Refresh
End Sub
Private Sub cmdVRDGContractSpesialAcc_Click()
On Error Resume Next
If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
If gridVRDGContractSpesial.Row &gt; 0 Then
 If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDGContractSpesialEdit_Click()
  on error resume next
If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
If gridVRDGContractSpesial.Row &gt; 0 then
 If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDGContractSpesial_.Item = u
    again: frmVRDGContractSpesial_.NotFirstTime = False
    frmVRDGContractSpesial_.OnInit
    frmVRDGContractSpesial_.Show vbModal
    If frmVRDGContractSpesial_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDGContractSpesial.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDGContractSpesialDel_Click()
  on error resume next
  gridVRDGContractSpesial.Delete
End Sub
Private Sub cmdVRDGContractSpesialAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDGContractSpesial.Add()

      Set frmVRDGContractSpesial_.Item = u
      again: frmVRDGContractSpesial_.NotFirstTime = False
      frmVRDGContractSpesial_.OnInit
      frmVRDGContractSpesial_.Show vbModal
      If frmVRDGContractSpesial_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDGContractSpesial.ItemCount = Item.VRDGContractSpesial.Count
        gridVRDGContractSpesial.Refresh
        gridVRDGContractSpesial.RefreshGroups
        gridVRDGContractSpesial.Refreshsort
        gridVRDGContractSpesial.MoveToBookmark u.ID &amp; &quot;VRDGContractSpesial&quot;
      Else
        Item.VRDGContractSpesial.Delete u.ID
        Item.VRDGContractSpesial.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDGContractSpesialFnd_Click()
  on error resume next
  fndVRDGContractSpesial.ShowForm
End Sub
Private Sub cmdVRDGContractSpesialRun_Click()
  on error resume next
  gridVRDGContractSpesial_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDGContractSpesial_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDGContractSpesial.LoadRow gridVRDGContractSpesial, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDGContractSpesial_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDGContractSpesial&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDGContractSpesial_DblClick()
  cmdVRDGContractSpesialEdit_Click
End Sub
Private Sub gridVRDGContractSpesial_KeyPress(KeyAscii As Integer)
  If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDGContractSpesial.FindOnPress KeyAscii
End Sub

Private Sub gridVRDGContractSpesial_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDGContractSpesial.Row And LastRow &gt; 0 Then
  gridVRDGContractSpesial.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDGContractSpesial.GetRowData(gridVRDGContractSpesial.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDGContractSpesialPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDGContractSpesial.Add()
    If GetFromBuffer(u) Then
      gridVRDGContractSpesial.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDGContractSpesial_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDGContractSpesialCfg_Click
        End If
    End If
end sub

private sub gridVRDGContractSpesial_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDGContractSpesial
End If
end sub
private sub mnuVRDGContractSpesialAdd_click()
   menuActionVRDGContractSpesial =&quot;ADD&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialEdit_click()
   menuActionVRDGContractSpesial =&quot;EDIT&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialDelete_click()
   menuActionVRDGContractSpesial =&quot;DEL&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialOpen_click()
   menuActionVRDGContractSpesial =&quot;RUN&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialRef_click()
   menuActionVRDGContractSpesial =&quot;REF&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
  Private Sub mnuVRDGContractSpesialCOPY_Click()
    On Error Resume Next
    If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
    If gridVRDGContractSpesial.Row &gt; 0 Then
     If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDGContractSpesialCUT_Click()
    On Error Resume Next
    If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
    If gridVRDGContractSpesial.Row &gt; 0 Then
     If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDGContractSpesial.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDGContractSpesialCHANGE_Click()
  On Error Resume Next
  If gridVRDGContractSpesial.ItemCount = 0 Then Exit Sub
  If gridVRDGContractSpesial.Row &gt; 0 Then
   If gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDGContractSpesial.RowBookmark(gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDGContractSpesial.ItemCount = u.parent.Count
      gridVRDGContractSpesial.RefreshRowIndex gridVRDGContractSpesial.RowIndex(gridVRDGContractSpesial.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDGContractSpesialCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDGContractSpesialPrn_click()
   menuActionVRDGContractSpesial =&quot;PRN&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialCfg_click()
   menuActionVRDGContractSpesial =&quot;CFG&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialFind_click()
   menuActionVRDGContractSpesial =&quot;FND&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub mnuVRDGContractSpesialAcc_click()
   menuActionVRDGContractSpesial =&quot;ACC&quot;
   menuTimerVRDGContractSpesial.enabled = true
end sub
private sub menuTimerVRDGContractSpesial_timer()
   menuTimerVRDGContractSpesial.enabled = false
   if menuActionVRDGContractSpesial =&quot;ADD&quot; then cmdVRDGContractSpesialADD_CLick
   if menuActionVRDGContractSpesial =&quot;EDIT&quot; then cmdVRDGContractSpesialEDIT_CLick
   if menuActionVRDGContractSpesial =&quot;DEL&quot; then cmdVRDGContractSpesialDEL_CLick
   if menuActionVRDGContractSpesial =&quot;RUN&quot; then cmdVRDGContractSpesialRUN_CLick
   if menuActionVRDGContractSpesial =&quot;REF&quot; then cmdVRDGContractSpesialREF_CLick
   if menuActionVRDGContractSpesial =&quot;PRN&quot; then cmdVRDGContractSpesialPRN_CLick
   if menuActionVRDGContractSpesial =&quot;CFG&quot; then cmdVRDGContractSpesialCFG_CLick
   if menuActionVRDGContractSpesial =&quot;FND&quot; then cmdVRDGContractSpesialFND_CLick
   if menuActionVRDGContractSpesial =&quot;ACC&quot; then cmdVRDGContractSpesialACC_CLick
   menuActionVRDGContractSpesial =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDGContractSpesialAdd,cmdVRDGContractSpesialAdd.tag
  LoadBtnPictures cmdVRDGContractSpesialEdit,cmdVRDGContractSpesialEdit.tag
  LoadBtnPictures cmdVRDGContractSpesialDel,cmdVRDGContractSpesialDel.tag
  LoadBtnPictures cmdVRDGContractSpesialRef,cmdVRDGContractSpesialRef.tag
  LoadBtnPictures cmdVRDGContractSpesialPrn,cmdVRDGContractSpesialPrn.tag
  LoadBtnPictures cmdVRDGContractSpesialFnd,cmdVRDGContractSpesialFnd.tag
  LoadBtnPictures cmdVRDGContractSpesialRun,cmdVRDGContractSpesialRun.tag
  LoadBtnPictures cmdVRDGContractSpesialAcc,cmdVRDGContractSpesialAcc.tag
  LoadBtnPictures cmdVRDGContractSpesialCfg,cmdVRDGContractSpesialCfg.tag
  item.VRDGContractSpesial.PrepareGrid gridVRDGContractSpesial
  LoadGridLayout gridVRDGContractSpesial
  Set fndVRDGContractSpesial = Nothing
  On Error Resume Next
  Set fndVRDGContractSpesial = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDGContractSpesial.Init gridVRDGContractSpesial
end sub
private sub OnTabClick()

      gridVRDGContractSpesial.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDGContractSpesial.Top = 40 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Left = 5 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDGContractSpesial.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDGContractSpesial.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDGContractSpesial = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGCommon" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGCommon_"><Properties Name="Name" PropValue="pnlVRDGCommon"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGContractVersion" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGContractVersion_"><Properties Name="Name" PropValue="pnlVRDGContractVersion"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGContractChanges" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGContractChanges_"><Properties Name="Name" PropValue="pnlVRDGContractChanges"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDGContractSpesial" ControlIndex="0" PROGID="VRDG2GUI.vpnVRDGContractSpesial_"><Properties Name="Name" PropValue="pnlVRDGContractSpesial"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Договор"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRDGCommon.IsOK
if IsItOk then IsItOk = pnlVRDGContractVersion.IsOK
if IsItOk then IsItOk = pnlVRDGContractChanges.IsOK
if IsItOk then IsItOk = pnlVRDGContractSpesial.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRDGContractSpesial.Visible = False
  pnlVRDGContractChanges.Visible = False
  pnlVRDGContractVersion.Visible = False
  pnlVRDGCommon.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRDGCommon&quot;
     With pnlVRDGCommon
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGCommon.OnClick item,parentform
     End With
   Case &quot;VRDGContractVersion&quot;
     With pnlVRDGContractVersion
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGContractVersion.OnClick item,parentform
     End With
   Case &quot;VRDGContractChanges&quot;
     With pnlVRDGContractChanges
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGContractChanges.OnClick item,parentform
     End With
   Case &quot;VRDGContractSpesial&quot;
     With pnlVRDGContractSpesial
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDGContractSpesial.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Общая информация&quot;
ts.Tabs.Item(1).key = &quot;VRDGCommon&quot;
pnlVRDGCommon.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDGContractVersion&quot;, &quot;Версия договора&quot;)
pnlVRDGContractVersion.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDGContractChanges&quot;, &quot;Дополнительные соглашения&quot;)
pnlVRDGContractChanges.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDGContractSpesial&quot;, &quot;Специальные условие&quot;)
pnlVRDGContractSpesial.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRDG2&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRDGCommon.CloseClass
 pnlVRDGContractVersion.CloseClass
 pnlVRDGContractChanges.CloseClass
 pnlVRDGContractSpesial.CloseClass
End Sub
public sub OnSave()
 pnlVRDGCommon.OnSave
 pnlVRDGContractVersion.OnSave
 pnlVRDGContractChanges.OnSave
 pnlVRDGContractSpesial.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRDGCommon.IsChanged
m_IsChanged = m_IsChanged or pnlVRDGContractVersion.IsChanged
m_IsChanged = m_IsChanged or pnlVRDGContractChanges.IsChanged
m_IsChanged = m_IsChanged or pnlVRDGContractSpesial.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 5
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Подписан&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot;
    i = i + 1
    m(i).Caption = &quot;В Архиве&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot;
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{DB6E7901-B667-4F32-BA25-614074776B8D}&quot;
    i = i + 1
    m(i).Caption = &quot;Исполнен&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot;
    i = i + 1
    m(i).Caption = &quot;Оформлен&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot;
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{DB6E7901-B667-4F32-BA25-614074776B8D}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C994F8FE-A120-4AAA-B260-1F4F06D29823}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{8B235B8F-AA9D-4B09-9FF1-D39D03B82F8C}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{C1D87871-5D23-4CF7-9CA0-B197BC56DC8B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{334E26DD-9135-49C4-8A28-095243B5AC74}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRDG2GUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Договор"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRDG2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRDG2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRDG2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;main&quot; then

if Name=&quot;VRDGCommon&quot; then 
 set FormByName = new frmVRDGCommon_main
 exit function
end if

if Name=&quot;VRDGContractVersion&quot; then 
 set FormByName = new frmVRDGContractVersion_main
 exit function
end if

if Name=&quot;VRDGContractChanges&quot; then 
 set FormByName = new frmVRDGContractChanges_main
 exit function
end if

if Name=&quot;VRDGContractSpesial&quot; then 
 set FormByName = new frmVRDGContractSpesial_main
 exit function
end if

end if
if Mode=&quot;read&quot; then

if Name=&quot;VRDGCommon&quot; then 
 set FormByName = new frmVRDGCommon_read
 exit function
end if

if Name=&quot;VRDGContractVersion&quot; then 
 set FormByName = new frmVRDGContractVersion_read
 exit function
end if

if Name=&quot;VRDGContractChanges&quot; then 
 set FormByName = new frmVRDGContractChanges_read
 exit function
end if

if Name=&quot;VRDGContractSpesial&quot; then 
 set FormByName = new frmVRDGContractSpesial_read
 exit function
end if

end if
if Mode=&quot;&quot; then

if Name=&quot;VRDGCommon&quot; then 
 set FormByName = new frmVRDGCommon_
 exit function
end if

if Name=&quot;VRDGContractVersion&quot; then 
 set FormByName = new frmVRDGContractVersion_
 exit function
end if

if Name=&quot;VRDGContractChanges&quot; then 
 set FormByName = new frmVRDGContractChanges_
 exit function
end if

if Name=&quot;VRDGContractSpesial&quot; then 
 set FormByName = new frmVRDGContractSpesial_
 exit function
end if

end if
end function
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub

Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
