<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Отчет"/><AttributeHolder Name="Name" Value="VRRPT2GUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Отчет&quot;
End Sub

Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub
public property get IsModal() as boolean
 IsModal = mOpenModal
end property
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Отчет)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
if mode=&quot;CONT&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:CONT&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmCONT_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;dflt&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:dflt&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmdflt_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;PRJ&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:PRJ&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmPRJ_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;PERS&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:PERS&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmPERS_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;CLNT&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:CLNT&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmCLNT_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Отчет&quot; 
  end if
end if
if OpenModal then
if mode=&quot;CONT&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:CONT&quot;)) then
     set f = new frmCONT_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;dflt&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:dflt&quot;)) then
     set f = new frmdflt_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;PRJ&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:PRJ&quot;)) then
     set f = new frmPRJ_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;PERS&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:PERS&quot;)) then
     set f = new frmPERS_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;CLNT&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:CLNT&quot;)) then
     set f = new frmCLNT_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRRPT2:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Отчет&quot; 
  end if
end if
end sub
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;CONT&quot; Then
  If UCase(PartName) = &quot;VRRPT_COSTS&quot; Then
    Set f = New frmVRRPT_COSTS_CONT
  End If

 If Mode = &quot;CONT&quot; Then
 End If
  If UCase(PartName) = &quot;VRRPT_MEETINGPLAN&quot; Then
    Set f = New frmVRRPT_MeetingPlan_CONT
  End If

 If Mode = &quot;CONT&quot; Then
  If UCase(PartName) = &quot;VRRPT_MEETERS&quot; Then
    Set f = New frmVRRPT_Meeters_CONT
  End If

 If Mode = &quot;CONT&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;VRRPT_MAIN&quot; Then
    Set f = New frmVRRPT_MAIN_CONT
  End If

 If Mode = &quot;CONT&quot; Then
 End If
 End If

 If Mode = &quot;dflt&quot; Then
  If UCase(PartName) = &quot;VRRPT_COSTS&quot; Then
    Set f = New frmVRRPT_COSTS_dflt
  End If

 If Mode = &quot;dflt&quot; Then
 End If
  If UCase(PartName) = &quot;VRRPT_MEETINGPLAN&quot; Then
    Set f = New frmVRRPT_MeetingPlan_dflt
  End If

 If Mode = &quot;dflt&quot; Then
  If UCase(PartName) = &quot;VRRPT_MEETERS&quot; Then
    Set f = New frmVRRPT_Meeters_dflt
  End If

 If Mode = &quot;dflt&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;VRRPT_MAIN&quot; Then
    Set f = New frmVRRPT_MAIN_dflt
  End If

 If Mode = &quot;dflt&quot; Then
 End If
 End If

 If Mode = &quot;PRJ&quot; Then
  If UCase(PartName) = &quot;VRRPT_COSTS&quot; Then
    Set f = New frmVRRPT_COSTS_PRJ
  End If

 If Mode = &quot;PRJ&quot; Then
 End If
  If UCase(PartName) = &quot;VRRPT_MEETINGPLAN&quot; Then
    Set f = New frmVRRPT_MeetingPlan_PRJ
  End If

 If Mode = &quot;PRJ&quot; Then
  If UCase(PartName) = &quot;VRRPT_MEETERS&quot; Then
    Set f = New frmVRRPT_Meeters_PRJ
  End If

 If Mode = &quot;PRJ&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;VRRPT_MAIN&quot; Then
    Set f = New frmVRRPT_MAIN_PRJ
  End If

 If Mode = &quot;PRJ&quot; Then
 End If
 End If

 If Mode = &quot;PERS&quot; Then
  If UCase(PartName) = &quot;VRRPT_COSTS&quot; Then
    Set f = New frmVRRPT_COSTS_PERS
  End If

 If Mode = &quot;PERS&quot; Then
 End If
  If UCase(PartName) = &quot;VRRPT_MEETINGPLAN&quot; Then
    Set f = New frmVRRPT_MeetingPlan_PERS
  End If

 If Mode = &quot;PERS&quot; Then
  If UCase(PartName) = &quot;VRRPT_MEETERS&quot; Then
    Set f = New frmVRRPT_Meeters_PERS
  End If

 If Mode = &quot;PERS&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;VRRPT_MAIN&quot; Then
    Set f = New frmVRRPT_MAIN_PERS
  End If

 If Mode = &quot;PERS&quot; Then
 End If
 End If

 If Mode = &quot;CLNT&quot; Then
  If UCase(PartName) = &quot;VRRPT_COSTS&quot; Then
    Set f = New frmVRRPT_COSTS_CLNT
  End If

 If Mode = &quot;CLNT&quot; Then
 End If
  If UCase(PartName) = &quot;VRRPT_MEETINGPLAN&quot; Then
    Set f = New frmVRRPT_MeetingPlan_CLNT
  End If

 If Mode = &quot;CLNT&quot; Then
  If UCase(PartName) = &quot;VRRPT_MEETERS&quot; Then
    Set f = New frmVRRPT_Meeters_CLNT
  End If

 If Mode = &quot;CLNT&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;VRRPT_MAIN&quot; Then
    Set f = New frmVRRPT_MAIN_CLNT
  End If

 If Mode = &quot;CLNT&quot; Then
 End If
 End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;VRRPT_COSTS&quot; Then
    Set f = New frmVRRPT_COSTS_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRRPT_MEETINGPLAN&quot; Then
    Set f = New frmVRRPT_MeetingPlan_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;VRRPT_MEETERS&quot; Then
    Set f = New frmVRRPT_Meeters_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;VRRPT_MAIN&quot; Then
    Set f = New frmVRRPT_MAIN_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_COSTS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDescrtiption"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDescrtiption"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Описание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCost"/><Properties Name="Caption" PropValue="Стоимость:"/><Properties Name="Top" PropValue="1680"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCost"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDuration"/><Properties Name="Caption" PropValue="Длительность (час.):"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtDuration"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Длительность (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDescrtiption_Change()
  Changing

end sub
private sub txtCost_Validate(cancel as boolean)
if txtCost.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCost.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  elseif Val(txtCost.text) &lt; -922337203685477.5808 or Val(txtCost.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  end if
end if
end sub
Private Sub txtCost_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCost_Change()
  Changing

end sub
private sub txtDuration_Validate(cancel as boolean)
if txtDuration.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtDuration.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  elseif Val(txtDuration.text) &lt; -922337203685477.5808 or Val(txtDuration.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  end if
end if
end sub
Private Sub txtDuration_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtDuration_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtDescrtiption.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtDescrtiption = item.Descrtiption
txtCost = item.Cost
txtDuration = item.Duration
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Descrtiption = txtDescrtiption
item.Cost = cdbl(txtCost)
item.Duration = cdbl(txtDuration)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MeetingPlan" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOF"/><Properties Name="Caption" PropValue="Время встречи:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOF"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время встречи"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPlaceOf"/><Properties Name="Caption" PropValue="Место проведения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPlaceOf"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Место проведения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheme"/><Properties Name="Caption" PropValue="Тема:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheme"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Тема"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOF_Change()
  Changing

end sub
private sub txtPlaceOf_Change()
  Changing

end sub
private sub txttheme_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOF.value)
if mIsOK then mIsOK =IsSet(txtPlaceOf.text)
if mIsOK then mIsOK =IsSet(txttheme.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOF = now
if item.DateOF &lt;&gt; 0 then
 dtpDateOF = item.DateOF
end if
txtPlaceOf = item.PlaceOf
txttheme = item.theme
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOF) then
    item.DateOF = 0
  else
    item.DateOF = dtpDateOF.value
  end if
item.PlaceOf = txtPlaceOf
item.theme = txttheme
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_Meeters" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWorker"/><Properties Name="Caption" PropValue="Сотрудник:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWorker"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWorker"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContact"/><Properties Name="Caption" PropValue="Контактное лицо:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContact"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdContact"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMandatory"/><Properties Name="Caption" PropValue="Обязательно:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbMandatory"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Обязательно"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderTime"/><Properties Name="Caption" PropValue="Оповещать за (час.):"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReminderTime"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Оповещать за (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderSent"/><Properties Name="Caption" PropValue="Оповещен:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbReminderSent"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Оповещен"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWorker_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWorker_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtWorker.Tag = Left(id, 38)
          txtWorker = brief
        End If
end sub
private sub cmdWorker_MenuClick(ByVal sCaption As String)
          txtWorker.Tag = &quot;&quot;
          txtWorker = &quot;&quot;
End sub
private sub txtContact_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdContact_CLick()
  on error resume next
     If txtContact.Tag =&quot;&quot; then
       cmdContact_MenuClick &quot;Выбрать&quot; 
     Else
       cmdContact_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdContact_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtContact.Tag = &quot;&quot;
          txtContact = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtContact.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtContact.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtContact.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRCP2&quot;)
        If OK Then
          txtContact.Tag = left(ID,38)
          txtContact = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRCP2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRCP2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtContact.Tag = ID
              txtContact = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRCP2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtContact.Tag = obj.ID
              txtContact = obj.brief
          else
              txtContact.Tag = &quot;&quot;
              txtContact = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub cmbMandatory_Click()
  on error resume next
  Changing

end sub
private sub txtReminderTime_Validate(cancel as boolean)
if txtReminderTime.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReminderTime.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  elseif Val(txtReminderTime.text) &lt;&gt;clng(Val(txtReminderTime.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  end if
end if
end sub
Private Sub txtReminderTime_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReminderTime_Change()
  Changing

end sub
private sub cmbReminderSent_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =(cmbMandatory.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Worker Is Nothing Then
  txtWorker.Tag = item.Worker.id
  txtWorker = item.Worker.brief
else
  txtWorker.Tag = &quot;&quot; 
  txtWorker = &quot;&quot; 
End If
 LoadBtnPictures cmdWorker,cmdWorker.tag
  cmdWorker.RemoveAllMenu
  cmdWorker.AddMenu &quot;Очистить&quot; 
If Not item.Contact Is Nothing Then
  txtContact.Tag = item.Contact.id
  txtContact = item.Contact.brief
else
  txtContact.Tag = &quot;&quot; 
  txtContact = &quot;&quot; 
End If
 LoadBtnPictures cmdContact,cmdContact.tag
  cmdContact.RemoveAllMenu
  cmdContact.AddMenu &quot;Очистить&quot; 
  cmdContact.AddMenu &quot;Создать&quot; 
  cmdContact.AddMenu &quot;Выбрать&quot; 
  cmdContact.AddMenu &quot;Открыть&quot; 
cmbMandatory.Clear
cmbMandatory.additem &quot;Да&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= -1
cmbMandatory.additem &quot;Нет&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= 0
 For iii = 0 To cmbMandatory.ListCount-1
  If Item.Mandatory = cmbMandatory.ItemData(iii) Then
   cmbMandatory.ListIndex = iii
   Exit For
  End If
 Next
txtReminderTime = item.ReminderTime
cmbReminderSent.Clear
cmbReminderSent.additem &quot;Да&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= -1
cmbReminderSent.additem &quot;Нет&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= 0
 For iii = 0 To cmbReminderSent.ListCount-1
  If Item.ReminderSent = cmbReminderSent.ItemData(iii) Then
   cmbReminderSent.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtWorker.Tag &lt;&gt; &quot;&quot; Then
  Set item.Worker = Item.Application.FindRowObject(&quot;Users&quot;,txtWorker.Tag)
Else
  Set item.Worker = Nothing
End If
If txtContact.Tag &lt;&gt; &quot;&quot; Then
  Set item.Contact = Item.Application.Manager.GetInstanceObject(txtContact.Tag)
Else
  Set item.Contact = Nothing
End If
 if cmbMandatory.listindex&gt;=0 then
   item.Mandatory = cmbMandatory.itemdata(cmbMandatory.listindex)
 end if
item.ReminderTime = cdbl(txtReminderTime)
 if cmbReminderSent.listindex&gt;=0 then
   item.ReminderSent = cmbReminderSent.itemdata(cmbReminderSent.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MAIN" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAuthor"/><Properties Name="Caption" PropValue="Автор:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAuthor"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAuthor"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDate"/><Properties Name="Caption" PropValue="Дата отчета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTheDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата отчета"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProject"/><Properties Name="Caption" PropValue="Проект:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProject"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Проект"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProject"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Проект"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContract"/><Properties Name="Caption" PropValue="Договор:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContract"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdContract"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPerson"/><Properties Name="Caption" PropValue="Контактное лицо:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPerson"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPerson"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название отчета:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название отчета"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfo"/><Properties Name="Caption" PropValue="Информация:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Информация"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="Attrachment"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAttrachment"/><Properties Name="Caption" PropValue="Вложение:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAttrachment"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAttrachment"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="630"/><Properties Name="Left" PropValue="3450"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReportType"/><Properties Name="Caption" PropValue="Тип отчета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReportType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdReportType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PathAttrachment as string 
  private ModAttrachment as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtAuthor_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdAuthor_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtAuthor.Tag = Left(id, 38)
          txtAuthor = brief
        End If
end sub
private sub cmdAuthor_MenuClick(ByVal sCaption As String)
          txtAuthor.Tag = &quot;&quot;
          txtAuthor = &quot;&quot;
End sub
private sub dtpTheDate_Change()
  Changing

end sub
private sub txtClient_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdClient_CLick()
  on error resume next
     If txtClient.Tag =&quot;&quot; then
       cmdClient_MenuClick &quot;Выбрать&quot; 
     Else
       cmdClient_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdClient_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtClient.Tag = &quot;&quot;
          txtClient = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtClient.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtClient.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtClient.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtClient.Tag = left(ID,38)
          txtClient = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtClient.Tag = ID
              txtClient = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtClient.Tag = obj.ID
              txtClient = obj.brief
          else
              txtClient.Tag = &quot;&quot;
              txtClient = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtProject_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdProject_CLick()
  on error resume next
     If txtProject.Tag =&quot;&quot; then
       cmdProject_MenuClick &quot;Выбрать&quot; 
     Else
       cmdProject_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdProject_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtProject.Tag = &quot;&quot;
          txtProject = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtProject.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtProject.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtProject.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;&quot;)
        If OK Then
          txtProject.Tag = left(ID,38)
          txtProject = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Set obj = Item.Application.Manager.GetNewObject()
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtProject.Tag = obj.ID
              txtProject = obj.brief
          else
              txtProject.Tag = &quot;&quot;
              txtProject = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtContract_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdContract_CLick()
  on error resume next
     If txtContract.Tag =&quot;&quot; then
       cmdContract_MenuClick &quot;Выбрать&quot; 
     Else
       cmdContract_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdContract_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtContract.Tag = &quot;&quot;
          txtContract = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtContract.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtContract.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtContract.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRDG2&quot;)
        If OK Then
          txtContract.Tag = left(ID,38)
          txtContract = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRDG2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRDG2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtContract.Tag = ID
              txtContract = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRDG2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtContract.Tag = obj.ID
              txtContract = obj.brief
          else
              txtContract.Tag = &quot;&quot;
              txtContract = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtPerson_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPerson_CLick()
  on error resume next
     If txtPerson.Tag =&quot;&quot; then
       cmdPerson_MenuClick &quot;Выбрать&quot; 
     Else
       cmdPerson_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdPerson_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtPerson.Tag = &quot;&quot;
          txtPerson = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtPerson.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtPerson.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtPerson.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRCP2&quot;)
        If OK Then
          txtPerson.Tag = left(ID,38)
          txtPerson = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRCP2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRCP2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtPerson.Tag = ID
              txtPerson = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRCP2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtPerson.Tag = obj.ID
              txtPerson = obj.brief
          else
              txtPerson.Tag = &quot;&quot;
              txtPerson = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtInfo_Change()
  Changing

end sub

Private Sub Attrachment_Timer()
    If PathAttrachment &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PathAttrachment For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PathAttrachment)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        Attrachment.Enabled = False
        If ModAttrachment &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.Attrachment = FileToArray(PathAttrachment)
                item.Attrachment_ext = GetFileExtension2(PathAttrachment)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdAttrachment_Click()
  on error resume next
  if item.Attrachment_ext &lt;&gt;&quot;&quot; and not isnull(item.Attrachment)  then
    cmdAttrachment_MenuClick &quot;Открыть&quot;
  else
    cmdAttrachment_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdAttrachment_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txtAttrachment = Dialog.FileName
   item.Attrachment = FileToArray(Dialog.FileName)
   item.Attrachment_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txtAttrachment = &quot;&quot; 
   item.Attrachment = null
   item.Attrachment_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    PathAttrachment = DoOpenFile(item.Attrachment, item.Attrachment_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PathAttrachment)
    ModAttrachment = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PathAttrachment, item.PartName, item.ID
    Attrachment.Enabled = True
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.Attrachment
  End If
End Sub
private sub txtReportType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdReportType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;VRDRreportType&quot;, id, brief) Then
          txtReportType.Tag = Left(id, 38)
          txtReportType = brief
        End If
end sub
private sub cmdReportType_MenuClick(ByVal sCaption As String)
          txtReportType.Tag = &quot;&quot;
          txtReportType = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtAuthor.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(dtpTheDate.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Author Is Nothing Then
  txtAuthor.Tag = item.Author.id
  txtAuthor = item.Author.brief
else
  txtAuthor.Tag = &quot;&quot; 
  txtAuthor = &quot;&quot; 
End If
 LoadBtnPictures cmdAuthor,cmdAuthor.tag
  cmdAuthor.RemoveAllMenu
  cmdAuthor.AddMenu &quot;Очистить&quot; 
dtpTheDate = date
if item.TheDate &lt;&gt; 0 then
 dtpTheDate = item.TheDate
end if
If Not item.Client Is Nothing Then
  txtClient.Tag = item.Client.id
  txtClient = item.Client.brief
else
  txtClient.Tag = &quot;&quot; 
  txtClient = &quot;&quot; 
End If
 LoadBtnPictures cmdClient,cmdClient.tag
  cmdClient.RemoveAllMenu
  cmdClient.AddMenu &quot;Очистить&quot; 
  cmdClient.AddMenu &quot;Создать&quot; 
  cmdClient.AddMenu &quot;Выбрать&quot; 
  cmdClient.AddMenu &quot;Открыть&quot; 
If Not item.Project Is Nothing Then
  txtProject.Tag = item.Project.id
  txtProject = item.Project.brief
else
  txtProject.Tag = &quot;&quot; 
  txtProject = &quot;&quot; 
End If
 LoadBtnPictures cmdProject,cmdProject.tag
  cmdProject.RemoveAllMenu
  cmdProject.AddMenu &quot;Очистить&quot; 
  cmdProject.AddMenu &quot;Создать&quot; 
  cmdProject.AddMenu &quot;Выбрать&quot; 
  cmdProject.AddMenu &quot;Открыть&quot; 
If Not item.Contract Is Nothing Then
  txtContract.Tag = item.Contract.id
  txtContract = item.Contract.brief
else
  txtContract.Tag = &quot;&quot; 
  txtContract = &quot;&quot; 
End If
 LoadBtnPictures cmdContract,cmdContract.tag
  cmdContract.RemoveAllMenu
  cmdContract.AddMenu &quot;Очистить&quot; 
  cmdContract.AddMenu &quot;Создать&quot; 
  cmdContract.AddMenu &quot;Выбрать&quot; 
  cmdContract.AddMenu &quot;Открыть&quot; 
If Not item.Person Is Nothing Then
  txtPerson.Tag = item.Person.id
  txtPerson = item.Person.brief
else
  txtPerson.Tag = &quot;&quot; 
  txtPerson = &quot;&quot; 
End If
 LoadBtnPictures cmdPerson,cmdPerson.tag
  cmdPerson.RemoveAllMenu
  cmdPerson.AddMenu &quot;Очистить&quot; 
  cmdPerson.AddMenu &quot;Создать&quot; 
  cmdPerson.AddMenu &quot;Выбрать&quot; 
  cmdPerson.AddMenu &quot;Открыть&quot; 
  on error resume next
txtName = item.Name
txtInfo = item.Info
 if  lenb(item.Attrachment)&gt;0 then 
   txtAttrachment=&quot;Данные (&quot; &amp; item.Attrachment_ext &amp; &quot;)&quot;
 else 
   txtAttrachment=&quot;&quot;
 end if 
 LoadBtnPictures cmdAttrachment,cmdAttrachment.tag
 cmdAttrachment.RemoveAllMenu
 cmdAttrachment.AddMenu &quot;Очистить&quot;
 cmdAttrachment.AddMenu &quot;Выбрать&quot;
 cmdAttrachment.AddMenu &quot;Сохранить&quot;
 cmdAttrachment.AddMenu &quot;Открыть&quot;
If Not item.ReportType Is Nothing Then
  txtReportType.Tag = item.ReportType.id
  txtReportType = item.ReportType.brief
else
  txtReportType.Tag = &quot;&quot; 
  txtReportType = &quot;&quot; 
End If
 LoadBtnPictures cmdReportType,cmdReportType.tag
  cmdReportType.RemoveAllMenu
  cmdReportType.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtAuthor.Tag &lt;&gt; &quot;&quot; Then
  Set item.Author = Item.Application.FindRowObject(&quot;Users&quot;,txtAuthor.Tag)
Else
  Set item.Author = Nothing
End If
  if  isnull(dtpTheDate) then
    item.TheDate = 0
  else
    item.TheDate = dtpTheDate.value
  end if
If txtClient.Tag &lt;&gt; &quot;&quot; Then
  Set item.Client = Item.Application.Manager.GetInstanceObject(txtClient.Tag)
Else
  Set item.Client = Nothing
End If
If txtProject.Tag &lt;&gt; &quot;&quot; Then
  Set item.Project = Item.Application.Manager.GetInstanceObject(txtProject.Tag)
Else
  Set item.Project = Nothing
End If
If txtContract.Tag &lt;&gt; &quot;&quot; Then
  Set item.Contract = Item.Application.Manager.GetInstanceObject(txtContract.Tag)
Else
  Set item.Contract = Nothing
End If
If txtPerson.Tag &lt;&gt; &quot;&quot; Then
  Set item.Person = Item.Application.Manager.GetInstanceObject(txtPerson.Tag)
Else
  Set item.Person = Nothing
End If
item.Name = txtName
item.Info = txtInfo
 ' SEE cmdAttrachment_CLICK
If txtReportType.Tag &lt;&gt; &quot;&quot; Then
  Set item.ReportType = Item.Application.FindRowObject(&quot;VRDRreportType&quot;,txtReportType.Tag)
Else
  Set item.ReportType = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_COSTSCONT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDescrtiption"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDescrtiption"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Описание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCost"/><Properties Name="Caption" PropValue="Стоимость:"/><Properties Name="Top" PropValue="1680"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCost"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDuration"/><Properties Name="Caption" PropValue="Длительность (час.):"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtDuration"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Длительность (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDescrtiption_Change()
  Changing

end sub
private sub txtCost_Validate(cancel as boolean)
if txtCost.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCost.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  elseif Val(txtCost.text) &lt; -922337203685477.5808 or Val(txtCost.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  end if
end if
end sub
Private Sub txtCost_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCost_Change()
  Changing

end sub
private sub txtDuration_Validate(cancel as boolean)
if txtDuration.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtDuration.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  elseif Val(txtDuration.text) &lt; -922337203685477.5808 or Val(txtDuration.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  end if
end if
end sub
Private Sub txtDuration_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtDuration_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtDescrtiption.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtDescrtiption = item.Descrtiption
txtCost = item.Cost
txtDuration = item.Duration
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Descrtiption = txtDescrtiption
item.Cost = cdbl(txtCost)
item.Duration = cdbl(txtDuration)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MeetingPlanCONT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOF"/><Properties Name="Caption" PropValue="Время встречи:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOF"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время встречи"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPlaceOf"/><Properties Name="Caption" PropValue="Место проведения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPlaceOf"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Место проведения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheme"/><Properties Name="Caption" PropValue="Тема:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheme"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Тема"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOF_Change()
  Changing

end sub
private sub txtPlaceOf_Change()
  Changing

end sub
private sub txttheme_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOF.value)
if mIsOK then mIsOK =IsSet(txtPlaceOf.text)
if mIsOK then mIsOK =IsSet(txttheme.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOF = now
if item.DateOF &lt;&gt; 0 then
 dtpDateOF = item.DateOF
end if
txtPlaceOf = item.PlaceOf
txttheme = item.theme
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOF) then
    item.DateOF = 0
  else
    item.DateOF = dtpDateOF.value
  end if
item.PlaceOf = txtPlaceOf
item.theme = txttheme
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MeetersCONT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWorker"/><Properties Name="Caption" PropValue="Сотрудник:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWorker"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWorker"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContact"/><Properties Name="Caption" PropValue="Контактное лицо:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContact"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdContact"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMandatory"/><Properties Name="Caption" PropValue="Обязательно:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbMandatory"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Обязательно"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderTime"/><Properties Name="Caption" PropValue="Оповещать за (час.):"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReminderTime"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Оповещать за (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderSent"/><Properties Name="Caption" PropValue="Оповещен:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbReminderSent"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Оповещен"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWorker_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWorker_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtWorker.Tag = Left(id, 38)
          txtWorker = brief
        End If
end sub
private sub cmdWorker_MenuClick(ByVal sCaption As String)
          txtWorker.Tag = &quot;&quot;
          txtWorker = &quot;&quot;
End sub
private sub txtContact_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdContact_CLick()
  on error resume next
     If txtContact.Tag =&quot;&quot; then
       cmdContact_MenuClick &quot;Выбрать&quot; 
     Else
       cmdContact_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdContact_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtContact.Tag = &quot;&quot;
          txtContact = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtContact.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtContact.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtContact.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRCP2&quot;)
        If OK Then
          txtContact.Tag = left(ID,38)
          txtContact = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRCP2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRCP2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtContact.Tag = ID
              txtContact = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRCP2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtContact.Tag = obj.ID
              txtContact = obj.brief
          else
              txtContact.Tag = &quot;&quot;
              txtContact = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub cmbMandatory_Click()
  on error resume next
  Changing

end sub
private sub txtReminderTime_Validate(cancel as boolean)
if txtReminderTime.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReminderTime.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  elseif Val(txtReminderTime.text) &lt;&gt;clng(Val(txtReminderTime.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  end if
end if
end sub
Private Sub txtReminderTime_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReminderTime_Change()
  Changing

end sub
private sub cmbReminderSent_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =(cmbMandatory.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Worker Is Nothing Then
  txtWorker.Tag = item.Worker.id
  txtWorker = item.Worker.brief
else
  txtWorker.Tag = &quot;&quot; 
  txtWorker = &quot;&quot; 
End If
 LoadBtnPictures cmdWorker,cmdWorker.tag
  cmdWorker.RemoveAllMenu
  cmdWorker.AddMenu &quot;Очистить&quot; 
If Not item.Contact Is Nothing Then
  txtContact.Tag = item.Contact.id
  txtContact = item.Contact.brief
else
  txtContact.Tag = &quot;&quot; 
  txtContact = &quot;&quot; 
End If
 LoadBtnPictures cmdContact,cmdContact.tag
  cmdContact.RemoveAllMenu
  cmdContact.AddMenu &quot;Очистить&quot; 
  cmdContact.AddMenu &quot;Создать&quot; 
  cmdContact.AddMenu &quot;Выбрать&quot; 
  cmdContact.AddMenu &quot;Открыть&quot; 
cmbMandatory.Clear
cmbMandatory.additem &quot;Да&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= -1
cmbMandatory.additem &quot;Нет&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= 0
 For iii = 0 To cmbMandatory.ListCount-1
  If Item.Mandatory = cmbMandatory.ItemData(iii) Then
   cmbMandatory.ListIndex = iii
   Exit For
  End If
 Next
txtReminderTime = item.ReminderTime
cmbReminderSent.Clear
cmbReminderSent.additem &quot;Да&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= -1
cmbReminderSent.additem &quot;Нет&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= 0
 For iii = 0 To cmbReminderSent.ListCount-1
  If Item.ReminderSent = cmbReminderSent.ItemData(iii) Then
   cmbReminderSent.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtWorker.Tag &lt;&gt; &quot;&quot; Then
  Set item.Worker = Item.Application.FindRowObject(&quot;Users&quot;,txtWorker.Tag)
Else
  Set item.Worker = Nothing
End If
If txtContact.Tag &lt;&gt; &quot;&quot; Then
  Set item.Contact = Item.Application.Manager.GetInstanceObject(txtContact.Tag)
Else
  Set item.Contact = Nothing
End If
 if cmbMandatory.listindex&gt;=0 then
   item.Mandatory = cmbMandatory.itemdata(cmbMandatory.listindex)
 end if
item.ReminderTime = cdbl(txtReminderTime)
 if cmbReminderSent.listindex&gt;=0 then
   item.ReminderSent = cmbReminderSent.itemdata(cmbReminderSent.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MAINCONT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAuthor"/><Properties Name="Caption" PropValue="Автор:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAuthor"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAuthor"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDate"/><Properties Name="Caption" PropValue="Дата отчета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTheDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата отчета"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContract"/><Properties Name="Caption" PropValue="Договор:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContract"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdContract"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название отчета:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название отчета"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfo"/><Properties Name="Caption" PropValue="Информация:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Информация"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="Attrachment"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAttrachment"/><Properties Name="Caption" PropValue="Вложение:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAttrachment"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAttrachment"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="5055"/><Properties Name="Left" PropValue="300"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReportType"/><Properties Name="Caption" PropValue="Тип отчета:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReportType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdReportType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5535"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PathAttrachment as string 
  private ModAttrachment as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtAuthor_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdAuthor_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtAuthor.Tag = Left(id, 38)
          txtAuthor = brief
        End If
end sub
private sub cmdAuthor_MenuClick(ByVal sCaption As String)
          txtAuthor.Tag = &quot;&quot;
          txtAuthor = &quot;&quot;
End sub
private sub dtpTheDate_Change()
  Changing

end sub
private sub txtContract_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdContract_CLick()
  on error resume next
     If txtContract.Tag =&quot;&quot; then
       cmdContract_MenuClick &quot;Выбрать&quot; 
     Else
       cmdContract_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdContract_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtContract.Tag = &quot;&quot;
          txtContract = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtContract.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtContract.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtContract.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRDG2&quot;)
        If OK Then
          txtContract.Tag = left(ID,38)
          txtContract = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRDG2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRDG2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtContract.Tag = ID
              txtContract = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRDG2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtContract.Tag = obj.ID
              txtContract = obj.brief
          else
              txtContract.Tag = &quot;&quot;
              txtContract = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtInfo_Change()
  Changing

end sub

Private Sub Attrachment_Timer()
    If PathAttrachment &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PathAttrachment For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PathAttrachment)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        Attrachment.Enabled = False
        If ModAttrachment &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.Attrachment = FileToArray(PathAttrachment)
                item.Attrachment_ext = GetFileExtension2(PathAttrachment)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdAttrachment_Click()
  on error resume next
  if item.Attrachment_ext &lt;&gt;&quot;&quot; and not isnull(item.Attrachment)  then
    cmdAttrachment_MenuClick &quot;Открыть&quot;
  else
    cmdAttrachment_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdAttrachment_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txtAttrachment = Dialog.FileName
   item.Attrachment = FileToArray(Dialog.FileName)
   item.Attrachment_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txtAttrachment = &quot;&quot; 
   item.Attrachment = null
   item.Attrachment_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    PathAttrachment = DoOpenFile(item.Attrachment, item.Attrachment_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PathAttrachment)
    ModAttrachment = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PathAttrachment, item.PartName, item.ID
    Attrachment.Enabled = True
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.Attrachment
  End If
End Sub
private sub txtReportType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdReportType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;VRDRreportType&quot;, id, brief) Then
          txtReportType.Tag = Left(id, 38)
          txtReportType = brief
        End If
end sub
private sub cmdReportType_MenuClick(ByVal sCaption As String)
          txtReportType.Tag = &quot;&quot;
          txtReportType = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtAuthor.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(dtpTheDate.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Author Is Nothing Then
  txtAuthor.Tag = item.Author.id
  txtAuthor = item.Author.brief
else
  txtAuthor.Tag = &quot;&quot; 
  txtAuthor = &quot;&quot; 
End If
 LoadBtnPictures cmdAuthor,cmdAuthor.tag
  cmdAuthor.RemoveAllMenu
  cmdAuthor.AddMenu &quot;Очистить&quot; 
dtpTheDate = date
if item.TheDate &lt;&gt; 0 then
 dtpTheDate = item.TheDate
end if
If Not item.Contract Is Nothing Then
  txtContract.Tag = item.Contract.id
  txtContract = item.Contract.brief
else
  txtContract.Tag = &quot;&quot; 
  txtContract = &quot;&quot; 
End If
 LoadBtnPictures cmdContract,cmdContract.tag
  cmdContract.RemoveAllMenu
  cmdContract.AddMenu &quot;Очистить&quot; 
  cmdContract.AddMenu &quot;Создать&quot; 
  cmdContract.AddMenu &quot;Выбрать&quot; 
  cmdContract.AddMenu &quot;Открыть&quot; 
  on error resume next
txtName = item.Name
txtInfo = item.Info
 if  lenb(item.Attrachment)&gt;0 then 
   txtAttrachment=&quot;Данные (&quot; &amp; item.Attrachment_ext &amp; &quot;)&quot;
 else 
   txtAttrachment=&quot;&quot;
 end if 
 LoadBtnPictures cmdAttrachment,cmdAttrachment.tag
 cmdAttrachment.RemoveAllMenu
 cmdAttrachment.AddMenu &quot;Очистить&quot;
 cmdAttrachment.AddMenu &quot;Выбрать&quot;
 cmdAttrachment.AddMenu &quot;Сохранить&quot;
 cmdAttrachment.AddMenu &quot;Открыть&quot;
If Not item.ReportType Is Nothing Then
  txtReportType.Tag = item.ReportType.id
  txtReportType = item.ReportType.brief
else
  txtReportType.Tag = &quot;&quot; 
  txtReportType = &quot;&quot; 
End If
 LoadBtnPictures cmdReportType,cmdReportType.tag
  cmdReportType.RemoveAllMenu
  cmdReportType.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtAuthor.Tag &lt;&gt; &quot;&quot; Then
  Set item.Author = Item.Application.FindRowObject(&quot;Users&quot;,txtAuthor.Tag)
Else
  Set item.Author = Nothing
End If
  if  isnull(dtpTheDate) then
    item.TheDate = 0
  else
    item.TheDate = dtpTheDate.value
  end if
If txtContract.Tag &lt;&gt; &quot;&quot; Then
  Set item.Contract = Item.Application.Manager.GetInstanceObject(txtContract.Tag)
Else
  Set item.Contract = Nothing
End If
item.Name = txtName
item.Info = txtInfo
 ' SEE cmdAttrachment_CLICK
If txtReportType.Tag &lt;&gt; &quot;&quot; Then
  Set item.ReportType = Item.Application.FindRowObject(&quot;VRDRreportType&quot;,txtReportType.Tag)
Else
  Set item.ReportType = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_COSTSdflt" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDescrtiption"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDescrtiption"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Описание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCost"/><Properties Name="Caption" PropValue="Стоимость:"/><Properties Name="Top" PropValue="1680"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCost"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDuration"/><Properties Name="Caption" PropValue="Длительность (час.):"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtDuration"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Длительность (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDescrtiption_Change()
  Changing

end sub
private sub txtCost_Validate(cancel as boolean)
if txtCost.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCost.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  elseif Val(txtCost.text) &lt; -922337203685477.5808 or Val(txtCost.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  end if
end if
end sub
Private Sub txtCost_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCost_Change()
  Changing

end sub
private sub txtDuration_Validate(cancel as boolean)
if txtDuration.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtDuration.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  elseif Val(txtDuration.text) &lt; -922337203685477.5808 or Val(txtDuration.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  end if
end if
end sub
Private Sub txtDuration_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtDuration_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtDescrtiption.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtDescrtiption = item.Descrtiption
txtCost = item.Cost
txtDuration = item.Duration
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Descrtiption = txtDescrtiption
item.Cost = cdbl(txtCost)
item.Duration = cdbl(txtDuration)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MeetingPlandflt" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOF"/><Properties Name="Caption" PropValue="Время встречи:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOF"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время встречи"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPlaceOf"/><Properties Name="Caption" PropValue="Место проведения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPlaceOf"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Место проведения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheme"/><Properties Name="Caption" PropValue="Тема:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheme"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Тема"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOF_Change()
  Changing

end sub
private sub txtPlaceOf_Change()
  Changing

end sub
private sub txttheme_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOF.value)
if mIsOK then mIsOK =IsSet(txtPlaceOf.text)
if mIsOK then mIsOK =IsSet(txttheme.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOF = now
if item.DateOF &lt;&gt; 0 then
 dtpDateOF = item.DateOF
end if
txtPlaceOf = item.PlaceOf
txttheme = item.theme
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOF) then
    item.DateOF = 0
  else
    item.DateOF = dtpDateOF.value
  end if
item.PlaceOf = txtPlaceOf
item.theme = txttheme
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_Meetersdflt" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWorker"/><Properties Name="Caption" PropValue="Сотрудник:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWorker"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWorker"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContact"/><Properties Name="Caption" PropValue="Контактное лицо:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContact"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdContact"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMandatory"/><Properties Name="Caption" PropValue="Обязательно:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbMandatory"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Обязательно"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderTime"/><Properties Name="Caption" PropValue="Оповещать за (час.):"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReminderTime"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Оповещать за (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderSent"/><Properties Name="Caption" PropValue="Оповещен:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbReminderSent"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Оповещен"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWorker_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWorker_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtWorker.Tag = Left(id, 38)
          txtWorker = brief
        End If
end sub
private sub cmdWorker_MenuClick(ByVal sCaption As String)
          txtWorker.Tag = &quot;&quot;
          txtWorker = &quot;&quot;
End sub
private sub txtContact_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdContact_CLick()
  on error resume next
     If txtContact.Tag =&quot;&quot; then
       cmdContact_MenuClick &quot;Выбрать&quot; 
     Else
       cmdContact_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdContact_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtContact.Tag = &quot;&quot;
          txtContact = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtContact.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtContact.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtContact.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRCP2&quot;)
        If OK Then
          txtContact.Tag = left(ID,38)
          txtContact = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRCP2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRCP2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtContact.Tag = ID
              txtContact = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRCP2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtContact.Tag = obj.ID
              txtContact = obj.brief
          else
              txtContact.Tag = &quot;&quot;
              txtContact = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub cmbMandatory_Click()
  on error resume next
  Changing

end sub
private sub txtReminderTime_Validate(cancel as boolean)
if txtReminderTime.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReminderTime.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  elseif Val(txtReminderTime.text) &lt;&gt;clng(Val(txtReminderTime.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  end if
end if
end sub
Private Sub txtReminderTime_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReminderTime_Change()
  Changing

end sub
private sub cmbReminderSent_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =(cmbMandatory.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Worker Is Nothing Then
  txtWorker.Tag = item.Worker.id
  txtWorker = item.Worker.brief
else
  txtWorker.Tag = &quot;&quot; 
  txtWorker = &quot;&quot; 
End If
 LoadBtnPictures cmdWorker,cmdWorker.tag
  cmdWorker.RemoveAllMenu
  cmdWorker.AddMenu &quot;Очистить&quot; 
If Not item.Contact Is Nothing Then
  txtContact.Tag = item.Contact.id
  txtContact = item.Contact.brief
else
  txtContact.Tag = &quot;&quot; 
  txtContact = &quot;&quot; 
End If
 LoadBtnPictures cmdContact,cmdContact.tag
  cmdContact.RemoveAllMenu
  cmdContact.AddMenu &quot;Очистить&quot; 
  cmdContact.AddMenu &quot;Создать&quot; 
  cmdContact.AddMenu &quot;Выбрать&quot; 
  cmdContact.AddMenu &quot;Открыть&quot; 
cmbMandatory.Clear
cmbMandatory.additem &quot;Да&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= -1
cmbMandatory.additem &quot;Нет&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= 0
 For iii = 0 To cmbMandatory.ListCount-1
  If Item.Mandatory = cmbMandatory.ItemData(iii) Then
   cmbMandatory.ListIndex = iii
   Exit For
  End If
 Next
txtReminderTime = item.ReminderTime
cmbReminderSent.Clear
cmbReminderSent.additem &quot;Да&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= -1
cmbReminderSent.additem &quot;Нет&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= 0
 For iii = 0 To cmbReminderSent.ListCount-1
  If Item.ReminderSent = cmbReminderSent.ItemData(iii) Then
   cmbReminderSent.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtWorker.Tag &lt;&gt; &quot;&quot; Then
  Set item.Worker = Item.Application.FindRowObject(&quot;Users&quot;,txtWorker.Tag)
Else
  Set item.Worker = Nothing
End If
If txtContact.Tag &lt;&gt; &quot;&quot; Then
  Set item.Contact = Item.Application.Manager.GetInstanceObject(txtContact.Tag)
Else
  Set item.Contact = Nothing
End If
 if cmbMandatory.listindex&gt;=0 then
   item.Mandatory = cmbMandatory.itemdata(cmbMandatory.listindex)
 end if
item.ReminderTime = cdbl(txtReminderTime)
 if cmbReminderSent.listindex&gt;=0 then
   item.ReminderSent = cmbReminderSent.itemdata(cmbReminderSent.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MAINdflt" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAuthor"/><Properties Name="Caption" PropValue="Автор:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAuthor"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAuthor"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDate"/><Properties Name="Caption" PropValue="Дата отчета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTheDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата отчета"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProject"/><Properties Name="Caption" PropValue="Проект:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProject"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Проект"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProject"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Проект"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContract"/><Properties Name="Caption" PropValue="Договор:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContract"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdContract"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPerson"/><Properties Name="Caption" PropValue="Контактное лицо:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPerson"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPerson"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название отчета:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название отчета"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfo"/><Properties Name="Caption" PropValue="Информация:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Информация"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="Attrachment"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAttrachment"/><Properties Name="Caption" PropValue="Вложение:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAttrachment"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAttrachment"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="630"/><Properties Name="Left" PropValue="3450"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReportType"/><Properties Name="Caption" PropValue="Тип отчета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReportType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdReportType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PathAttrachment as string 
  private ModAttrachment as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtAuthor_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdAuthor_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtAuthor.Tag = Left(id, 38)
          txtAuthor = brief
        End If
end sub
private sub cmdAuthor_MenuClick(ByVal sCaption As String)
          txtAuthor.Tag = &quot;&quot;
          txtAuthor = &quot;&quot;
End sub
private sub dtpTheDate_Change()
  Changing

end sub
private sub txtClient_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdClient_CLick()
  on error resume next
     If txtClient.Tag =&quot;&quot; then
       cmdClient_MenuClick &quot;Выбрать&quot; 
     Else
       cmdClient_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdClient_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtClient.Tag = &quot;&quot;
          txtClient = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtClient.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtClient.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtClient.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtClient.Tag = left(ID,38)
          txtClient = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtClient.Tag = ID
              txtClient = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtClient.Tag = obj.ID
              txtClient = obj.brief
          else
              txtClient.Tag = &quot;&quot;
              txtClient = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtProject_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdProject_CLick()
  on error resume next
     If txtProject.Tag =&quot;&quot; then
       cmdProject_MenuClick &quot;Выбрать&quot; 
     Else
       cmdProject_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdProject_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtProject.Tag = &quot;&quot;
          txtProject = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtProject.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtProject.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtProject.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;&quot;)
        If OK Then
          txtProject.Tag = left(ID,38)
          txtProject = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Set obj = Item.Application.Manager.GetNewObject()
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtProject.Tag = obj.ID
              txtProject = obj.brief
          else
              txtProject.Tag = &quot;&quot;
              txtProject = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtContract_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdContract_CLick()
  on error resume next
     If txtContract.Tag =&quot;&quot; then
       cmdContract_MenuClick &quot;Выбрать&quot; 
     Else
       cmdContract_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdContract_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtContract.Tag = &quot;&quot;
          txtContract = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtContract.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtContract.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtContract.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRDG2&quot;)
        If OK Then
          txtContract.Tag = left(ID,38)
          txtContract = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRDG2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRDG2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtContract.Tag = ID
              txtContract = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRDG2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtContract.Tag = obj.ID
              txtContract = obj.brief
          else
              txtContract.Tag = &quot;&quot;
              txtContract = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtPerson_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPerson_CLick()
  on error resume next
     If txtPerson.Tag =&quot;&quot; then
       cmdPerson_MenuClick &quot;Выбрать&quot; 
     Else
       cmdPerson_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdPerson_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtPerson.Tag = &quot;&quot;
          txtPerson = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtPerson.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtPerson.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtPerson.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRCP2&quot;)
        If OK Then
          txtPerson.Tag = left(ID,38)
          txtPerson = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRCP2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRCP2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtPerson.Tag = ID
              txtPerson = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRCP2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtPerson.Tag = obj.ID
              txtPerson = obj.brief
          else
              txtPerson.Tag = &quot;&quot;
              txtPerson = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtInfo_Change()
  Changing

end sub

Private Sub Attrachment_Timer()
    If PathAttrachment &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PathAttrachment For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PathAttrachment)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        Attrachment.Enabled = False
        If ModAttrachment &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.Attrachment = FileToArray(PathAttrachment)
                item.Attrachment_ext = GetFileExtension2(PathAttrachment)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdAttrachment_Click()
  on error resume next
  if item.Attrachment_ext &lt;&gt;&quot;&quot; and not isnull(item.Attrachment)  then
    cmdAttrachment_MenuClick &quot;Открыть&quot;
  else
    cmdAttrachment_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdAttrachment_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txtAttrachment = Dialog.FileName
   item.Attrachment = FileToArray(Dialog.FileName)
   item.Attrachment_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txtAttrachment = &quot;&quot; 
   item.Attrachment = null
   item.Attrachment_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    PathAttrachment = DoOpenFile(item.Attrachment, item.Attrachment_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PathAttrachment)
    ModAttrachment = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PathAttrachment, item.PartName, item.ID
    Attrachment.Enabled = True
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.Attrachment
  End If
End Sub
private sub txtReportType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdReportType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;VRDRreportType&quot;, id, brief) Then
          txtReportType.Tag = Left(id, 38)
          txtReportType = brief
        End If
end sub
private sub cmdReportType_MenuClick(ByVal sCaption As String)
          txtReportType.Tag = &quot;&quot;
          txtReportType = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtAuthor.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(dtpTheDate.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Author Is Nothing Then
  txtAuthor.Tag = item.Author.id
  txtAuthor = item.Author.brief
else
  txtAuthor.Tag = &quot;&quot; 
  txtAuthor = &quot;&quot; 
End If
 LoadBtnPictures cmdAuthor,cmdAuthor.tag
  cmdAuthor.RemoveAllMenu
  cmdAuthor.AddMenu &quot;Очистить&quot; 
dtpTheDate = date
if item.TheDate &lt;&gt; 0 then
 dtpTheDate = item.TheDate
end if
If Not item.Client Is Nothing Then
  txtClient.Tag = item.Client.id
  txtClient = item.Client.brief
else
  txtClient.Tag = &quot;&quot; 
  txtClient = &quot;&quot; 
End If
 LoadBtnPictures cmdClient,cmdClient.tag
  cmdClient.RemoveAllMenu
  cmdClient.AddMenu &quot;Очистить&quot; 
  cmdClient.AddMenu &quot;Создать&quot; 
  cmdClient.AddMenu &quot;Выбрать&quot; 
  cmdClient.AddMenu &quot;Открыть&quot; 
If Not item.Project Is Nothing Then
  txtProject.Tag = item.Project.id
  txtProject = item.Project.brief
else
  txtProject.Tag = &quot;&quot; 
  txtProject = &quot;&quot; 
End If
 LoadBtnPictures cmdProject,cmdProject.tag
  cmdProject.RemoveAllMenu
  cmdProject.AddMenu &quot;Очистить&quot; 
  cmdProject.AddMenu &quot;Создать&quot; 
  cmdProject.AddMenu &quot;Выбрать&quot; 
  cmdProject.AddMenu &quot;Открыть&quot; 
If Not item.Contract Is Nothing Then
  txtContract.Tag = item.Contract.id
  txtContract = item.Contract.brief
else
  txtContract.Tag = &quot;&quot; 
  txtContract = &quot;&quot; 
End If
 LoadBtnPictures cmdContract,cmdContract.tag
  cmdContract.RemoveAllMenu
  cmdContract.AddMenu &quot;Очистить&quot; 
  cmdContract.AddMenu &quot;Создать&quot; 
  cmdContract.AddMenu &quot;Выбрать&quot; 
  cmdContract.AddMenu &quot;Открыть&quot; 
If Not item.Person Is Nothing Then
  txtPerson.Tag = item.Person.id
  txtPerson = item.Person.brief
else
  txtPerson.Tag = &quot;&quot; 
  txtPerson = &quot;&quot; 
End If
 LoadBtnPictures cmdPerson,cmdPerson.tag
  cmdPerson.RemoveAllMenu
  cmdPerson.AddMenu &quot;Очистить&quot; 
  cmdPerson.AddMenu &quot;Создать&quot; 
  cmdPerson.AddMenu &quot;Выбрать&quot; 
  cmdPerson.AddMenu &quot;Открыть&quot; 
  on error resume next
txtName = item.Name
txtInfo = item.Info
 if  lenb(item.Attrachment)&gt;0 then 
   txtAttrachment=&quot;Данные (&quot; &amp; item.Attrachment_ext &amp; &quot;)&quot;
 else 
   txtAttrachment=&quot;&quot;
 end if 
 LoadBtnPictures cmdAttrachment,cmdAttrachment.tag
 cmdAttrachment.RemoveAllMenu
 cmdAttrachment.AddMenu &quot;Очистить&quot;
 cmdAttrachment.AddMenu &quot;Выбрать&quot;
 cmdAttrachment.AddMenu &quot;Сохранить&quot;
 cmdAttrachment.AddMenu &quot;Открыть&quot;
If Not item.ReportType Is Nothing Then
  txtReportType.Tag = item.ReportType.id
  txtReportType = item.ReportType.brief
else
  txtReportType.Tag = &quot;&quot; 
  txtReportType = &quot;&quot; 
End If
 LoadBtnPictures cmdReportType,cmdReportType.tag
  cmdReportType.RemoveAllMenu
  cmdReportType.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtAuthor.Tag &lt;&gt; &quot;&quot; Then
  Set item.Author = Item.Application.FindRowObject(&quot;Users&quot;,txtAuthor.Tag)
Else
  Set item.Author = Nothing
End If
  if  isnull(dtpTheDate) then
    item.TheDate = 0
  else
    item.TheDate = dtpTheDate.value
  end if
If txtClient.Tag &lt;&gt; &quot;&quot; Then
  Set item.Client = Item.Application.Manager.GetInstanceObject(txtClient.Tag)
Else
  Set item.Client = Nothing
End If
If txtProject.Tag &lt;&gt; &quot;&quot; Then
  Set item.Project = Item.Application.Manager.GetInstanceObject(txtProject.Tag)
Else
  Set item.Project = Nothing
End If
If txtContract.Tag &lt;&gt; &quot;&quot; Then
  Set item.Contract = Item.Application.Manager.GetInstanceObject(txtContract.Tag)
Else
  Set item.Contract = Nothing
End If
If txtPerson.Tag &lt;&gt; &quot;&quot; Then
  Set item.Person = Item.Application.Manager.GetInstanceObject(txtPerson.Tag)
Else
  Set item.Person = Nothing
End If
item.Name = txtName
item.Info = txtInfo
 ' SEE cmdAttrachment_CLICK
If txtReportType.Tag &lt;&gt; &quot;&quot; Then
  Set item.ReportType = Item.Application.FindRowObject(&quot;VRDRreportType&quot;,txtReportType.Tag)
Else
  Set item.ReportType = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_COSTSPRJ" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDescrtiption"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDescrtiption"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Описание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCost"/><Properties Name="Caption" PropValue="Стоимость:"/><Properties Name="Top" PropValue="1680"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCost"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDuration"/><Properties Name="Caption" PropValue="Длительность (час.):"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtDuration"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Длительность (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDescrtiption_Change()
  Changing

end sub
private sub txtCost_Validate(cancel as boolean)
if txtCost.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCost.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  elseif Val(txtCost.text) &lt; -922337203685477.5808 or Val(txtCost.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  end if
end if
end sub
Private Sub txtCost_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCost_Change()
  Changing

end sub
private sub txtDuration_Validate(cancel as boolean)
if txtDuration.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtDuration.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  elseif Val(txtDuration.text) &lt; -922337203685477.5808 or Val(txtDuration.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  end if
end if
end sub
Private Sub txtDuration_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtDuration_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtDescrtiption.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtDescrtiption = item.Descrtiption
txtCost = item.Cost
txtDuration = item.Duration
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Descrtiption = txtDescrtiption
item.Cost = cdbl(txtCost)
item.Duration = cdbl(txtDuration)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MeetingPlanPRJ" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOF"/><Properties Name="Caption" PropValue="Время встречи:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOF"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время встречи"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPlaceOf"/><Properties Name="Caption" PropValue="Место проведения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPlaceOf"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Место проведения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheme"/><Properties Name="Caption" PropValue="Тема:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheme"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Тема"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOF_Change()
  Changing

end sub
private sub txtPlaceOf_Change()
  Changing

end sub
private sub txttheme_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOF.value)
if mIsOK then mIsOK =IsSet(txtPlaceOf.text)
if mIsOK then mIsOK =IsSet(txttheme.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOF = now
if item.DateOF &lt;&gt; 0 then
 dtpDateOF = item.DateOF
end if
txtPlaceOf = item.PlaceOf
txttheme = item.theme
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOF) then
    item.DateOF = 0
  else
    item.DateOF = dtpDateOF.value
  end if
item.PlaceOf = txtPlaceOf
item.theme = txttheme
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MeetersPRJ" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWorker"/><Properties Name="Caption" PropValue="Сотрудник:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWorker"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWorker"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContact"/><Properties Name="Caption" PropValue="Контактное лицо:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContact"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdContact"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMandatory"/><Properties Name="Caption" PropValue="Обязательно:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbMandatory"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Обязательно"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderTime"/><Properties Name="Caption" PropValue="Оповещать за (час.):"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReminderTime"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Оповещать за (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderSent"/><Properties Name="Caption" PropValue="Оповещен:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbReminderSent"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Оповещен"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWorker_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWorker_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtWorker.Tag = Left(id, 38)
          txtWorker = brief
        End If
end sub
private sub cmdWorker_MenuClick(ByVal sCaption As String)
          txtWorker.Tag = &quot;&quot;
          txtWorker = &quot;&quot;
End sub
private sub txtContact_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdContact_CLick()
  on error resume next
     If txtContact.Tag =&quot;&quot; then
       cmdContact_MenuClick &quot;Выбрать&quot; 
     Else
       cmdContact_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdContact_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtContact.Tag = &quot;&quot;
          txtContact = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtContact.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtContact.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtContact.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRCP2&quot;)
        If OK Then
          txtContact.Tag = left(ID,38)
          txtContact = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRCP2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRCP2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtContact.Tag = ID
              txtContact = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRCP2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtContact.Tag = obj.ID
              txtContact = obj.brief
          else
              txtContact.Tag = &quot;&quot;
              txtContact = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub cmbMandatory_Click()
  on error resume next
  Changing

end sub
private sub txtReminderTime_Validate(cancel as boolean)
if txtReminderTime.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReminderTime.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  elseif Val(txtReminderTime.text) &lt;&gt;clng(Val(txtReminderTime.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  end if
end if
end sub
Private Sub txtReminderTime_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReminderTime_Change()
  Changing

end sub
private sub cmbReminderSent_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =(cmbMandatory.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Worker Is Nothing Then
  txtWorker.Tag = item.Worker.id
  txtWorker = item.Worker.brief
else
  txtWorker.Tag = &quot;&quot; 
  txtWorker = &quot;&quot; 
End If
 LoadBtnPictures cmdWorker,cmdWorker.tag
  cmdWorker.RemoveAllMenu
  cmdWorker.AddMenu &quot;Очистить&quot; 
If Not item.Contact Is Nothing Then
  txtContact.Tag = item.Contact.id
  txtContact = item.Contact.brief
else
  txtContact.Tag = &quot;&quot; 
  txtContact = &quot;&quot; 
End If
 LoadBtnPictures cmdContact,cmdContact.tag
  cmdContact.RemoveAllMenu
  cmdContact.AddMenu &quot;Очистить&quot; 
  cmdContact.AddMenu &quot;Создать&quot; 
  cmdContact.AddMenu &quot;Выбрать&quot; 
  cmdContact.AddMenu &quot;Открыть&quot; 
cmbMandatory.Clear
cmbMandatory.additem &quot;Да&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= -1
cmbMandatory.additem &quot;Нет&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= 0
 For iii = 0 To cmbMandatory.ListCount-1
  If Item.Mandatory = cmbMandatory.ItemData(iii) Then
   cmbMandatory.ListIndex = iii
   Exit For
  End If
 Next
txtReminderTime = item.ReminderTime
cmbReminderSent.Clear
cmbReminderSent.additem &quot;Да&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= -1
cmbReminderSent.additem &quot;Нет&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= 0
 For iii = 0 To cmbReminderSent.ListCount-1
  If Item.ReminderSent = cmbReminderSent.ItemData(iii) Then
   cmbReminderSent.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtWorker.Tag &lt;&gt; &quot;&quot; Then
  Set item.Worker = Item.Application.FindRowObject(&quot;Users&quot;,txtWorker.Tag)
Else
  Set item.Worker = Nothing
End If
If txtContact.Tag &lt;&gt; &quot;&quot; Then
  Set item.Contact = Item.Application.Manager.GetInstanceObject(txtContact.Tag)
Else
  Set item.Contact = Nothing
End If
 if cmbMandatory.listindex&gt;=0 then
   item.Mandatory = cmbMandatory.itemdata(cmbMandatory.listindex)
 end if
item.ReminderTime = cdbl(txtReminderTime)
 if cmbReminderSent.listindex&gt;=0 then
   item.ReminderSent = cmbReminderSent.itemdata(cmbReminderSent.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MAINPRJ" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAuthor"/><Properties Name="Caption" PropValue="Автор:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAuthor"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAuthor"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDate"/><Properties Name="Caption" PropValue="Дата отчета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTheDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата отчета"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProject"/><Properties Name="Caption" PropValue="Проект:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProject"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Проект"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProject"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Проект"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название отчета:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название отчета"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfo"/><Properties Name="Caption" PropValue="Информация:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Информация"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="Attrachment"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAttrachment"/><Properties Name="Caption" PropValue="Вложение:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAttrachment"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAttrachment"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="5055"/><Properties Name="Left" PropValue="300"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReportType"/><Properties Name="Caption" PropValue="Тип отчета:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReportType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdReportType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5535"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PathAttrachment as string 
  private ModAttrachment as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtAuthor_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdAuthor_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtAuthor.Tag = Left(id, 38)
          txtAuthor = brief
        End If
end sub
private sub cmdAuthor_MenuClick(ByVal sCaption As String)
          txtAuthor.Tag = &quot;&quot;
          txtAuthor = &quot;&quot;
End sub
private sub dtpTheDate_Change()
  Changing

end sub
private sub txtProject_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdProject_CLick()
  on error resume next
     If txtProject.Tag =&quot;&quot; then
       cmdProject_MenuClick &quot;Выбрать&quot; 
     Else
       cmdProject_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdProject_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtProject.Tag = &quot;&quot;
          txtProject = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtProject.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtProject.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtProject.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;&quot;)
        If OK Then
          txtProject.Tag = left(ID,38)
          txtProject = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Set obj = Item.Application.Manager.GetNewObject()
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtProject.Tag = obj.ID
              txtProject = obj.brief
          else
              txtProject.Tag = &quot;&quot;
              txtProject = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtInfo_Change()
  Changing

end sub

Private Sub Attrachment_Timer()
    If PathAttrachment &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PathAttrachment For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PathAttrachment)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        Attrachment.Enabled = False
        If ModAttrachment &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.Attrachment = FileToArray(PathAttrachment)
                item.Attrachment_ext = GetFileExtension2(PathAttrachment)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdAttrachment_Click()
  on error resume next
  if item.Attrachment_ext &lt;&gt;&quot;&quot; and not isnull(item.Attrachment)  then
    cmdAttrachment_MenuClick &quot;Открыть&quot;
  else
    cmdAttrachment_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdAttrachment_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txtAttrachment = Dialog.FileName
   item.Attrachment = FileToArray(Dialog.FileName)
   item.Attrachment_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txtAttrachment = &quot;&quot; 
   item.Attrachment = null
   item.Attrachment_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    PathAttrachment = DoOpenFile(item.Attrachment, item.Attrachment_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PathAttrachment)
    ModAttrachment = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PathAttrachment, item.PartName, item.ID
    Attrachment.Enabled = True
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.Attrachment
  End If
End Sub
private sub txtReportType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdReportType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;VRDRreportType&quot;, id, brief) Then
          txtReportType.Tag = Left(id, 38)
          txtReportType = brief
        End If
end sub
private sub cmdReportType_MenuClick(ByVal sCaption As String)
          txtReportType.Tag = &quot;&quot;
          txtReportType = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtAuthor.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(dtpTheDate.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Author Is Nothing Then
  txtAuthor.Tag = item.Author.id
  txtAuthor = item.Author.brief
else
  txtAuthor.Tag = &quot;&quot; 
  txtAuthor = &quot;&quot; 
End If
 LoadBtnPictures cmdAuthor,cmdAuthor.tag
  cmdAuthor.RemoveAllMenu
  cmdAuthor.AddMenu &quot;Очистить&quot; 
dtpTheDate = date
if item.TheDate &lt;&gt; 0 then
 dtpTheDate = item.TheDate
end if
If Not item.Project Is Nothing Then
  txtProject.Tag = item.Project.id
  txtProject = item.Project.brief
else
  txtProject.Tag = &quot;&quot; 
  txtProject = &quot;&quot; 
End If
 LoadBtnPictures cmdProject,cmdProject.tag
  cmdProject.RemoveAllMenu
  cmdProject.AddMenu &quot;Очистить&quot; 
  cmdProject.AddMenu &quot;Создать&quot; 
  cmdProject.AddMenu &quot;Выбрать&quot; 
  cmdProject.AddMenu &quot;Открыть&quot; 
  on error resume next
txtName = item.Name
txtInfo = item.Info
 if  lenb(item.Attrachment)&gt;0 then 
   txtAttrachment=&quot;Данные (&quot; &amp; item.Attrachment_ext &amp; &quot;)&quot;
 else 
   txtAttrachment=&quot;&quot;
 end if 
 LoadBtnPictures cmdAttrachment,cmdAttrachment.tag
 cmdAttrachment.RemoveAllMenu
 cmdAttrachment.AddMenu &quot;Очистить&quot;
 cmdAttrachment.AddMenu &quot;Выбрать&quot;
 cmdAttrachment.AddMenu &quot;Сохранить&quot;
 cmdAttrachment.AddMenu &quot;Открыть&quot;
If Not item.ReportType Is Nothing Then
  txtReportType.Tag = item.ReportType.id
  txtReportType = item.ReportType.brief
else
  txtReportType.Tag = &quot;&quot; 
  txtReportType = &quot;&quot; 
End If
 LoadBtnPictures cmdReportType,cmdReportType.tag
  cmdReportType.RemoveAllMenu
  cmdReportType.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtAuthor.Tag &lt;&gt; &quot;&quot; Then
  Set item.Author = Item.Application.FindRowObject(&quot;Users&quot;,txtAuthor.Tag)
Else
  Set item.Author = Nothing
End If
  if  isnull(dtpTheDate) then
    item.TheDate = 0
  else
    item.TheDate = dtpTheDate.value
  end if
If txtProject.Tag &lt;&gt; &quot;&quot; Then
  Set item.Project = Item.Application.Manager.GetInstanceObject(txtProject.Tag)
Else
  Set item.Project = Nothing
End If
item.Name = txtName
item.Info = txtInfo
 ' SEE cmdAttrachment_CLICK
If txtReportType.Tag &lt;&gt; &quot;&quot; Then
  Set item.ReportType = Item.Application.FindRowObject(&quot;VRDRreportType&quot;,txtReportType.Tag)
Else
  Set item.ReportType = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_COSTSPERS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDescrtiption"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDescrtiption"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Описание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCost"/><Properties Name="Caption" PropValue="Стоимость:"/><Properties Name="Top" PropValue="1680"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCost"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDuration"/><Properties Name="Caption" PropValue="Длительность (час.):"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtDuration"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Длительность (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDescrtiption_Change()
  Changing

end sub
private sub txtCost_Validate(cancel as boolean)
if txtCost.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCost.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  elseif Val(txtCost.text) &lt; -922337203685477.5808 or Val(txtCost.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  end if
end if
end sub
Private Sub txtCost_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCost_Change()
  Changing

end sub
private sub txtDuration_Validate(cancel as boolean)
if txtDuration.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtDuration.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  elseif Val(txtDuration.text) &lt; -922337203685477.5808 or Val(txtDuration.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  end if
end if
end sub
Private Sub txtDuration_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtDuration_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtDescrtiption.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtDescrtiption = item.Descrtiption
txtCost = item.Cost
txtDuration = item.Duration
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Descrtiption = txtDescrtiption
item.Cost = cdbl(txtCost)
item.Duration = cdbl(txtDuration)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MeetingPlanPERS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOF"/><Properties Name="Caption" PropValue="Время встречи:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOF"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время встречи"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPlaceOf"/><Properties Name="Caption" PropValue="Место проведения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPlaceOf"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Место проведения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheme"/><Properties Name="Caption" PropValue="Тема:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheme"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Тема"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOF_Change()
  Changing

end sub
private sub txtPlaceOf_Change()
  Changing

end sub
private sub txttheme_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOF.value)
if mIsOK then mIsOK =IsSet(txtPlaceOf.text)
if mIsOK then mIsOK =IsSet(txttheme.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOF = now
if item.DateOF &lt;&gt; 0 then
 dtpDateOF = item.DateOF
end if
txtPlaceOf = item.PlaceOf
txttheme = item.theme
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOF) then
    item.DateOF = 0
  else
    item.DateOF = dtpDateOF.value
  end if
item.PlaceOf = txtPlaceOf
item.theme = txttheme
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MeetersPERS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWorker"/><Properties Name="Caption" PropValue="Сотрудник:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWorker"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWorker"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContact"/><Properties Name="Caption" PropValue="Контактное лицо:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContact"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdContact"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMandatory"/><Properties Name="Caption" PropValue="Обязательно:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbMandatory"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Обязательно"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderTime"/><Properties Name="Caption" PropValue="Оповещать за (час.):"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReminderTime"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Оповещать за (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderSent"/><Properties Name="Caption" PropValue="Оповещен:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbReminderSent"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Оповещен"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWorker_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWorker_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtWorker.Tag = Left(id, 38)
          txtWorker = brief
        End If
end sub
private sub cmdWorker_MenuClick(ByVal sCaption As String)
          txtWorker.Tag = &quot;&quot;
          txtWorker = &quot;&quot;
End sub
private sub txtContact_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdContact_CLick()
  on error resume next
     If txtContact.Tag =&quot;&quot; then
       cmdContact_MenuClick &quot;Выбрать&quot; 
     Else
       cmdContact_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdContact_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtContact.Tag = &quot;&quot;
          txtContact = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtContact.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtContact.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtContact.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRCP2&quot;)
        If OK Then
          txtContact.Tag = left(ID,38)
          txtContact = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRCP2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRCP2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtContact.Tag = ID
              txtContact = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRCP2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtContact.Tag = obj.ID
              txtContact = obj.brief
          else
              txtContact.Tag = &quot;&quot;
              txtContact = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub cmbMandatory_Click()
  on error resume next
  Changing

end sub
private sub txtReminderTime_Validate(cancel as boolean)
if txtReminderTime.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReminderTime.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  elseif Val(txtReminderTime.text) &lt;&gt;clng(Val(txtReminderTime.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  end if
end if
end sub
Private Sub txtReminderTime_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReminderTime_Change()
  Changing

end sub
private sub cmbReminderSent_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =(cmbMandatory.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Worker Is Nothing Then
  txtWorker.Tag = item.Worker.id
  txtWorker = item.Worker.brief
else
  txtWorker.Tag = &quot;&quot; 
  txtWorker = &quot;&quot; 
End If
 LoadBtnPictures cmdWorker,cmdWorker.tag
  cmdWorker.RemoveAllMenu
  cmdWorker.AddMenu &quot;Очистить&quot; 
If Not item.Contact Is Nothing Then
  txtContact.Tag = item.Contact.id
  txtContact = item.Contact.brief
else
  txtContact.Tag = &quot;&quot; 
  txtContact = &quot;&quot; 
End If
 LoadBtnPictures cmdContact,cmdContact.tag
  cmdContact.RemoveAllMenu
  cmdContact.AddMenu &quot;Очистить&quot; 
  cmdContact.AddMenu &quot;Создать&quot; 
  cmdContact.AddMenu &quot;Выбрать&quot; 
  cmdContact.AddMenu &quot;Открыть&quot; 
cmbMandatory.Clear
cmbMandatory.additem &quot;Да&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= -1
cmbMandatory.additem &quot;Нет&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= 0
 For iii = 0 To cmbMandatory.ListCount-1
  If Item.Mandatory = cmbMandatory.ItemData(iii) Then
   cmbMandatory.ListIndex = iii
   Exit For
  End If
 Next
txtReminderTime = item.ReminderTime
cmbReminderSent.Clear
cmbReminderSent.additem &quot;Да&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= -1
cmbReminderSent.additem &quot;Нет&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= 0
 For iii = 0 To cmbReminderSent.ListCount-1
  If Item.ReminderSent = cmbReminderSent.ItemData(iii) Then
   cmbReminderSent.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtWorker.Tag &lt;&gt; &quot;&quot; Then
  Set item.Worker = Item.Application.FindRowObject(&quot;Users&quot;,txtWorker.Tag)
Else
  Set item.Worker = Nothing
End If
If txtContact.Tag &lt;&gt; &quot;&quot; Then
  Set item.Contact = Item.Application.Manager.GetInstanceObject(txtContact.Tag)
Else
  Set item.Contact = Nothing
End If
 if cmbMandatory.listindex&gt;=0 then
   item.Mandatory = cmbMandatory.itemdata(cmbMandatory.listindex)
 end if
item.ReminderTime = cdbl(txtReminderTime)
 if cmbReminderSent.listindex&gt;=0 then
   item.ReminderSent = cmbReminderSent.itemdata(cmbReminderSent.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MAINPERS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAuthor"/><Properties Name="Caption" PropValue="Автор:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAuthor"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAuthor"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDate"/><Properties Name="Caption" PropValue="Дата отчета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTheDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата отчета"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPerson"/><Properties Name="Caption" PropValue="Контактное лицо:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPerson"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPerson"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название отчета:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название отчета"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfo"/><Properties Name="Caption" PropValue="Информация:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Информация"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="Attrachment"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAttrachment"/><Properties Name="Caption" PropValue="Вложение:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAttrachment"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAttrachment"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="5055"/><Properties Name="Left" PropValue="300"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReportType"/><Properties Name="Caption" PropValue="Тип отчета:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReportType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdReportType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5535"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PathAttrachment as string 
  private ModAttrachment as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtAuthor_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdAuthor_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtAuthor.Tag = Left(id, 38)
          txtAuthor = brief
        End If
end sub
private sub cmdAuthor_MenuClick(ByVal sCaption As String)
          txtAuthor.Tag = &quot;&quot;
          txtAuthor = &quot;&quot;
End sub
private sub dtpTheDate_Change()
  Changing

end sub
private sub txtPerson_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPerson_CLick()
  on error resume next
     If txtPerson.Tag =&quot;&quot; then
       cmdPerson_MenuClick &quot;Выбрать&quot; 
     Else
       cmdPerson_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdPerson_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtPerson.Tag = &quot;&quot;
          txtPerson = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtPerson.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtPerson.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtPerson.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRCP2&quot;)
        If OK Then
          txtPerson.Tag = left(ID,38)
          txtPerson = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRCP2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRCP2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtPerson.Tag = ID
              txtPerson = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRCP2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtPerson.Tag = obj.ID
              txtPerson = obj.brief
          else
              txtPerson.Tag = &quot;&quot;
              txtPerson = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtInfo_Change()
  Changing

end sub

Private Sub Attrachment_Timer()
    If PathAttrachment &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PathAttrachment For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PathAttrachment)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        Attrachment.Enabled = False
        If ModAttrachment &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.Attrachment = FileToArray(PathAttrachment)
                item.Attrachment_ext = GetFileExtension2(PathAttrachment)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdAttrachment_Click()
  on error resume next
  if item.Attrachment_ext &lt;&gt;&quot;&quot; and not isnull(item.Attrachment)  then
    cmdAttrachment_MenuClick &quot;Открыть&quot;
  else
    cmdAttrachment_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdAttrachment_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txtAttrachment = Dialog.FileName
   item.Attrachment = FileToArray(Dialog.FileName)
   item.Attrachment_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txtAttrachment = &quot;&quot; 
   item.Attrachment = null
   item.Attrachment_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    PathAttrachment = DoOpenFile(item.Attrachment, item.Attrachment_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PathAttrachment)
    ModAttrachment = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PathAttrachment, item.PartName, item.ID
    Attrachment.Enabled = True
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.Attrachment
  End If
End Sub
private sub txtReportType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdReportType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;VRDRreportType&quot;, id, brief) Then
          txtReportType.Tag = Left(id, 38)
          txtReportType = brief
        End If
end sub
private sub cmdReportType_MenuClick(ByVal sCaption As String)
          txtReportType.Tag = &quot;&quot;
          txtReportType = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtAuthor.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(dtpTheDate.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Author Is Nothing Then
  txtAuthor.Tag = item.Author.id
  txtAuthor = item.Author.brief
else
  txtAuthor.Tag = &quot;&quot; 
  txtAuthor = &quot;&quot; 
End If
 LoadBtnPictures cmdAuthor,cmdAuthor.tag
  cmdAuthor.RemoveAllMenu
  cmdAuthor.AddMenu &quot;Очистить&quot; 
dtpTheDate = date
if item.TheDate &lt;&gt; 0 then
 dtpTheDate = item.TheDate
end if
If Not item.Person Is Nothing Then
  txtPerson.Tag = item.Person.id
  txtPerson = item.Person.brief
else
  txtPerson.Tag = &quot;&quot; 
  txtPerson = &quot;&quot; 
End If
 LoadBtnPictures cmdPerson,cmdPerson.tag
  cmdPerson.RemoveAllMenu
  cmdPerson.AddMenu &quot;Очистить&quot; 
  cmdPerson.AddMenu &quot;Создать&quot; 
  cmdPerson.AddMenu &quot;Выбрать&quot; 
  cmdPerson.AddMenu &quot;Открыть&quot; 
  on error resume next
txtName = item.Name
txtInfo = item.Info
 if  lenb(item.Attrachment)&gt;0 then 
   txtAttrachment=&quot;Данные (&quot; &amp; item.Attrachment_ext &amp; &quot;)&quot;
 else 
   txtAttrachment=&quot;&quot;
 end if 
 LoadBtnPictures cmdAttrachment,cmdAttrachment.tag
 cmdAttrachment.RemoveAllMenu
 cmdAttrachment.AddMenu &quot;Очистить&quot;
 cmdAttrachment.AddMenu &quot;Выбрать&quot;
 cmdAttrachment.AddMenu &quot;Сохранить&quot;
 cmdAttrachment.AddMenu &quot;Открыть&quot;
If Not item.ReportType Is Nothing Then
  txtReportType.Tag = item.ReportType.id
  txtReportType = item.ReportType.brief
else
  txtReportType.Tag = &quot;&quot; 
  txtReportType = &quot;&quot; 
End If
 LoadBtnPictures cmdReportType,cmdReportType.tag
  cmdReportType.RemoveAllMenu
  cmdReportType.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtAuthor.Tag &lt;&gt; &quot;&quot; Then
  Set item.Author = Item.Application.FindRowObject(&quot;Users&quot;,txtAuthor.Tag)
Else
  Set item.Author = Nothing
End If
  if  isnull(dtpTheDate) then
    item.TheDate = 0
  else
    item.TheDate = dtpTheDate.value
  end if
If txtPerson.Tag &lt;&gt; &quot;&quot; Then
  Set item.Person = Item.Application.Manager.GetInstanceObject(txtPerson.Tag)
Else
  Set item.Person = Nothing
End If
item.Name = txtName
item.Info = txtInfo
 ' SEE cmdAttrachment_CLICK
If txtReportType.Tag &lt;&gt; &quot;&quot; Then
  Set item.ReportType = Item.Application.FindRowObject(&quot;VRDRreportType&quot;,txtReportType.Tag)
Else
  Set item.ReportType = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_COSTSCLNT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDescrtiption"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDescrtiption"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Описание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCost"/><Properties Name="Caption" PropValue="Стоимость:"/><Properties Name="Top" PropValue="1680"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCost"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDuration"/><Properties Name="Caption" PropValue="Длительность (час.):"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtDuration"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Длительность (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDescrtiption_Change()
  Changing

end sub
private sub txtCost_Validate(cancel as boolean)
if txtCost.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCost.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  elseif Val(txtCost.text) &lt; -922337203685477.5808 or Val(txtCost.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCost.SetFocus 
  end if
end if
end sub
Private Sub txtCost_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCost_Change()
  Changing

end sub
private sub txtDuration_Validate(cancel as boolean)
if txtDuration.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtDuration.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  elseif Val(txtDuration.text) &lt; -922337203685477.5808 or Val(txtDuration.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDuration.SetFocus 
  end if
end if
end sub
Private Sub txtDuration_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtDuration_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtDescrtiption.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtDescrtiption = item.Descrtiption
txtCost = item.Cost
txtDuration = item.Duration
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Descrtiption = txtDescrtiption
item.Cost = cdbl(txtCost)
item.Duration = cdbl(txtDuration)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MeetingPlanCLNT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOF"/><Properties Name="Caption" PropValue="Время встречи:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOF"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время встречи"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPlaceOf"/><Properties Name="Caption" PropValue="Место проведения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPlaceOf"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Место проведения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheme"/><Properties Name="Caption" PropValue="Тема:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheme"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Тема"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOF_Change()
  Changing

end sub
private sub txtPlaceOf_Change()
  Changing

end sub
private sub txttheme_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOF.value)
if mIsOK then mIsOK =IsSet(txtPlaceOf.text)
if mIsOK then mIsOK =IsSet(txttheme.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOF = now
if item.DateOF &lt;&gt; 0 then
 dtpDateOF = item.DateOF
end if
txtPlaceOf = item.PlaceOf
txttheme = item.theme
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOF) then
    item.DateOF = 0
  else
    item.DateOF = dtpDateOF.value
  end if
item.PlaceOf = txtPlaceOf
item.theme = txttheme
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MeetersCLNT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWorker"/><Properties Name="Caption" PropValue="Сотрудник:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWorker"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWorker"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Сотрудник"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContact"/><Properties Name="Caption" PropValue="Контактное лицо:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContact"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdContact"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Контактное лицо"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMandatory"/><Properties Name="Caption" PropValue="Обязательно:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbMandatory"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Обязательно"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderTime"/><Properties Name="Caption" PropValue="Оповещать за (час.):"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReminderTime"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Оповещать за (час.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReminderSent"/><Properties Name="Caption" PropValue="Оповещен:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbReminderSent"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Оповещен"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWorker_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWorker_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtWorker.Tag = Left(id, 38)
          txtWorker = brief
        End If
end sub
private sub cmdWorker_MenuClick(ByVal sCaption As String)
          txtWorker.Tag = &quot;&quot;
          txtWorker = &quot;&quot;
End sub
private sub txtContact_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdContact_CLick()
  on error resume next
     If txtContact.Tag =&quot;&quot; then
       cmdContact_MenuClick &quot;Выбрать&quot; 
     Else
       cmdContact_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdContact_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtContact.Tag = &quot;&quot;
          txtContact = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtContact.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtContact.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtContact.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRCP2&quot;)
        If OK Then
          txtContact.Tag = left(ID,38)
          txtContact = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRCP2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRCP2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtContact.Tag = ID
              txtContact = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRCP2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtContact.Tag = obj.ID
              txtContact = obj.brief
          else
              txtContact.Tag = &quot;&quot;
              txtContact = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub cmbMandatory_Click()
  on error resume next
  Changing

end sub
private sub txtReminderTime_Validate(cancel as boolean)
if txtReminderTime.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReminderTime.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  elseif Val(txtReminderTime.text) &lt;&gt;clng(Val(txtReminderTime.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtReminderTime.SetFocus 
  end if
end if
end sub
Private Sub txtReminderTime_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReminderTime_Change()
  Changing

end sub
private sub cmbReminderSent_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =(cmbMandatory.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Worker Is Nothing Then
  txtWorker.Tag = item.Worker.id
  txtWorker = item.Worker.brief
else
  txtWorker.Tag = &quot;&quot; 
  txtWorker = &quot;&quot; 
End If
 LoadBtnPictures cmdWorker,cmdWorker.tag
  cmdWorker.RemoveAllMenu
  cmdWorker.AddMenu &quot;Очистить&quot; 
If Not item.Contact Is Nothing Then
  txtContact.Tag = item.Contact.id
  txtContact = item.Contact.brief
else
  txtContact.Tag = &quot;&quot; 
  txtContact = &quot;&quot; 
End If
 LoadBtnPictures cmdContact,cmdContact.tag
  cmdContact.RemoveAllMenu
  cmdContact.AddMenu &quot;Очистить&quot; 
  cmdContact.AddMenu &quot;Создать&quot; 
  cmdContact.AddMenu &quot;Выбрать&quot; 
  cmdContact.AddMenu &quot;Открыть&quot; 
cmbMandatory.Clear
cmbMandatory.additem &quot;Да&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= -1
cmbMandatory.additem &quot;Нет&quot;
cmbMandatory.itemdata(cmbMandatory.newindex)= 0
 For iii = 0 To cmbMandatory.ListCount-1
  If Item.Mandatory = cmbMandatory.ItemData(iii) Then
   cmbMandatory.ListIndex = iii
   Exit For
  End If
 Next
txtReminderTime = item.ReminderTime
cmbReminderSent.Clear
cmbReminderSent.additem &quot;Да&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= -1
cmbReminderSent.additem &quot;Нет&quot;
cmbReminderSent.itemdata(cmbReminderSent.newindex)= 0
 For iii = 0 To cmbReminderSent.ListCount-1
  If Item.ReminderSent = cmbReminderSent.ItemData(iii) Then
   cmbReminderSent.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtWorker.Tag &lt;&gt; &quot;&quot; Then
  Set item.Worker = Item.Application.FindRowObject(&quot;Users&quot;,txtWorker.Tag)
Else
  Set item.Worker = Nothing
End If
If txtContact.Tag &lt;&gt; &quot;&quot; Then
  Set item.Contact = Item.Application.Manager.GetInstanceObject(txtContact.Tag)
Else
  Set item.Contact = Nothing
End If
 if cmbMandatory.listindex&gt;=0 then
   item.Mandatory = cmbMandatory.itemdata(cmbMandatory.listindex)
 end if
item.ReminderTime = cdbl(txtReminderTime)
 if cmbReminderSent.listindex&gt;=0 then
   item.ReminderSent = cmbReminderSent.itemdata(cmbReminderSent.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRRPT_MAINCLNT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAuthor"/><Properties Name="Caption" PropValue="Автор:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAuthor"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAuthor"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Автор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDate"/><Properties Name="Caption" PropValue="Дата отчета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTheDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата отчета"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название отчета:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название отчета"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfo"/><Properties Name="Caption" PropValue="Информация:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Информация"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="Attrachment"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAttrachment"/><Properties Name="Caption" PropValue="Вложение:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAttrachment"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAttrachment"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="5055"/><Properties Name="Left" PropValue="300"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReportType"/><Properties Name="Caption" PropValue="Тип отчета:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReportType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdReportType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5535"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип отчета"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PathAttrachment as string 
  private ModAttrachment as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtAuthor_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdAuthor_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtAuthor.Tag = Left(id, 38)
          txtAuthor = brief
        End If
end sub
private sub cmdAuthor_MenuClick(ByVal sCaption As String)
          txtAuthor.Tag = &quot;&quot;
          txtAuthor = &quot;&quot;
End sub
private sub dtpTheDate_Change()
  Changing

end sub
private sub txtClient_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdClient_CLick()
  on error resume next
     If txtClient.Tag =&quot;&quot; then
       cmdClient_MenuClick &quot;Выбрать&quot; 
     Else
       cmdClient_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdClient_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtClient.Tag = &quot;&quot;
          txtClient = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtClient.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtClient.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtClient.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtClient.Tag = left(ID,38)
          txtClient = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtClient.Tag = ID
              txtClient = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtClient.Tag = obj.ID
              txtClient = obj.brief
          else
              txtClient.Tag = &quot;&quot;
              txtClient = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtInfo_Change()
  Changing

end sub

Private Sub Attrachment_Timer()
    If PathAttrachment &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PathAttrachment For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PathAttrachment)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        Attrachment.Enabled = False
        If ModAttrachment &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.Attrachment = FileToArray(PathAttrachment)
                item.Attrachment_ext = GetFileExtension2(PathAttrachment)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdAttrachment_Click()
  on error resume next
  if item.Attrachment_ext &lt;&gt;&quot;&quot; and not isnull(item.Attrachment)  then
    cmdAttrachment_MenuClick &quot;Открыть&quot;
  else
    cmdAttrachment_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdAttrachment_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txtAttrachment = Dialog.FileName
   item.Attrachment = FileToArray(Dialog.FileName)
   item.Attrachment_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txtAttrachment = &quot;&quot; 
   item.Attrachment = null
   item.Attrachment_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    PathAttrachment = DoOpenFile(item.Attrachment, item.Attrachment_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PathAttrachment)
    ModAttrachment = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PathAttrachment, item.PartName, item.ID
    Attrachment.Enabled = True
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.Attrachment
  End If
End Sub
private sub txtReportType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdReportType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;VRDRreportType&quot;, id, brief) Then
          txtReportType.Tag = Left(id, 38)
          txtReportType = brief
        End If
end sub
private sub cmdReportType_MenuClick(ByVal sCaption As String)
          txtReportType.Tag = &quot;&quot;
          txtReportType = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtAuthor.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(dtpTheDate.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Author Is Nothing Then
  txtAuthor.Tag = item.Author.id
  txtAuthor = item.Author.brief
else
  txtAuthor.Tag = &quot;&quot; 
  txtAuthor = &quot;&quot; 
End If
 LoadBtnPictures cmdAuthor,cmdAuthor.tag
  cmdAuthor.RemoveAllMenu
  cmdAuthor.AddMenu &quot;Очистить&quot; 
dtpTheDate = date
if item.TheDate &lt;&gt; 0 then
 dtpTheDate = item.TheDate
end if
If Not item.Client Is Nothing Then
  txtClient.Tag = item.Client.id
  txtClient = item.Client.brief
else
  txtClient.Tag = &quot;&quot; 
  txtClient = &quot;&quot; 
End If
 LoadBtnPictures cmdClient,cmdClient.tag
  cmdClient.RemoveAllMenu
  cmdClient.AddMenu &quot;Очистить&quot; 
  cmdClient.AddMenu &quot;Создать&quot; 
  cmdClient.AddMenu &quot;Выбрать&quot; 
  cmdClient.AddMenu &quot;Открыть&quot; 
  on error resume next
txtName = item.Name
txtInfo = item.Info
 if  lenb(item.Attrachment)&gt;0 then 
   txtAttrachment=&quot;Данные (&quot; &amp; item.Attrachment_ext &amp; &quot;)&quot;
 else 
   txtAttrachment=&quot;&quot;
 end if 
 LoadBtnPictures cmdAttrachment,cmdAttrachment.tag
 cmdAttrachment.RemoveAllMenu
 cmdAttrachment.AddMenu &quot;Очистить&quot;
 cmdAttrachment.AddMenu &quot;Выбрать&quot;
 cmdAttrachment.AddMenu &quot;Сохранить&quot;
 cmdAttrachment.AddMenu &quot;Открыть&quot;
If Not item.ReportType Is Nothing Then
  txtReportType.Tag = item.ReportType.id
  txtReportType = item.ReportType.brief
else
  txtReportType.Tag = &quot;&quot; 
  txtReportType = &quot;&quot; 
End If
 LoadBtnPictures cmdReportType,cmdReportType.tag
  cmdReportType.RemoveAllMenu
  cmdReportType.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtAuthor.Tag &lt;&gt; &quot;&quot; Then
  Set item.Author = Item.Application.FindRowObject(&quot;Users&quot;,txtAuthor.Tag)
Else
  Set item.Author = Nothing
End If
  if  isnull(dtpTheDate) then
    item.TheDate = 0
  else
    item.TheDate = dtpTheDate.value
  end if
If txtClient.Tag &lt;&gt; &quot;&quot; Then
  Set item.Client = Item.Application.Manager.GetInstanceObject(txtClient.Tag)
Else
  Set item.Client = Nothing
End If
item.Name = txtName
item.Info = txtInfo
 ' SEE cmdAttrachment_CLICK
If txtReportType.Tag &lt;&gt; &quot;&quot; Then
  Set item.ReportType = Item.Application.FindRowObject(&quot;VRDRreportType&quot;,txtReportType.Tag)
Else
  Set item.ReportType = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_COSTS_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_COSTS"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Затраты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Затраты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot;
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MeetingPlan_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MeetingPlan"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Планируемые встречи"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Планируемые встречи"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot;
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_Meeters_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_Meeters"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Участники"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Участники"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot;
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MAIN_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAIN"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Отчет"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Отчет"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot;
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_COSTS_CONT" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_COSTSCONT"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Затраты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Затраты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot;
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MeetingPlan_CONT" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MeetingPlanCONT"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Планируемые встречи"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Планируемые встречи"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot;
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_Meeters_CONT" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MeetersCONT"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Участники"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Участники"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot;
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MAIN_CONT" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAINCONT"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Отчет"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Отчет"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot;
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MAIN_CONT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAINCONT"><Properties Name="Name" PropValue="editVRRPT_MAIN"/></ControlData><ControlData Name="cmdVRRPT_MAINSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRRPT_MAIN_UpdateName_CONT(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=year(.TheDate) &amp; &quot;.&quot; &amp; right(&quot;0&quot; &amp; month(.TheDate),2)  &amp;  &quot;.&quot; &amp; right(&quot;0&quot; &amp; Day(.TheDate),2) &amp; &quot; |&quot; &amp; .Author.Brief &amp; &quot;|  &quot; &amp; .Name,  RowItem:=RowItem
end with
end sub
Private Sub cmdVRRPT_MAINRef_Click()
  on error resume next
  Item.VRRPT_MAIN.Refresh
  cmdVRRPT_MAINAdd_Click
End Sub
Private Sub cmdVRRPT_MAINCfg_Click()
    on error resume next 
    editVRRPT_MAIN.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_CONT&quot; For Output As #ff
    print #ff, editVRRPT_MAIN.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdVRRPT_MAINAdd_Click()
  on error resume next
 dim u as object
 If Item.VRRPT_MAIN.Count = 0 Then
   set u=Item.VRRPT_MAIN.Add
set u.Autor = u.Application.FindRowObject(&quot;Users&quot;, u.application.mtzsession.GetSessionUserID())

 End If
 Set editVRRPT_MAIN.Item = Item.VRRPT_MAIN.Item(1)
 editVRRPT_MAIN.InitPanel
 cmdVRRPT_MAINSave.Enabled = True
End Sub
Private Sub cmdVRRPT_MAINDel_Click()
  on error resume next
  if  editVRRPT_MAIN.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editVRRPT_MAIN.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editVRRPT_MAIN.item.parent.Delete editVRRPT_MAIN.item.id
    cmdVRRPT_MAINSave.Enabled = false
    editVRRPT_MAIN.Enabled = false
    set editVRRPT_MAIN.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editVRRPT_MAIN_Changed()
 cmdVRRPT_MAINSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editVRRPT_MAIN.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdVRRPT_MAINSave_Click()
  on error resume next
    if editVRRPT_MAIN.IsOK then
    MousePointer = vbHourglass
    editVRRPT_MAIN.Save
  on error goto bye
    editVRRPT_MAIN.item.Save
    MousePointer = vbNormal
        opVRRPT_MAIN_UpdateName_CONT editVRRPT_MAIN.item
    cmdVRRPT_MAINSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editVRRPT_MAIN.item.REFRESH
  'editVRRPT_MAIN.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MAINSave,cmdVRRPT_MAINSave.tag
  LoadBtnPictures cmdVRRPT_MAINRef,cmdVRRPT_MAINRef.tag
  LoadBtnPictures cmdVRRPT_MAINCfg,cmdVRRPT_MAINCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_CONT&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editVRRPT_MAIN.PanelCustomisationString = buf
  cmdVRRPT_MAINAdd_click
end sub
private sub OnTabClick()

      editVRRPT_MAIN.Top = 40 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Left = 5 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editVRRPT_MAIN.Save
if editVRRPT_MAIN.item.Changed then
  editVRRPT_MAIN.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editVRRPT_MAIN.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MAIN.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_COSTS_CONT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRRPT_COSTS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_COSTS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_COSTSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_COSTSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_COSTS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Затраты"/><Properties Name="Name" PropValue="mnuPopupVRRPT_COSTS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSOpen"/></ControlData><ControlData Name="mnuVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSRef"/></ControlData><ControlData Name="mnuVRRPT_COSTSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSS1"/></ControlData><ControlData Name="mnuVRRPT_COSTSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_COSTSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCOPY"/></ControlData><ControlData Name="mnuVRRPT_COSTSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCUT"/></ControlData><ControlData Name="mnuVRRPT_COSTSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPASTE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCHANGE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPrn"/></ControlData><ControlData Name="mnuVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCfg"/></ControlData><ControlData Name="mnuVRRPT_COSTSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSFind"/></ControlData><ControlData Name="mnuVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_COSTS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_COSTS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_COSTS as object
private menuActionVRRPT_COSTS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRRPT_COSTSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_COSTS,&quot;gridVRRPT_COSTS&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_COSTS,&quot;Затраты&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSRef_Click()
  on error resume next
  item.VRRPT_COSTS.Refresh
  gridVRRPT_COSTS.itemCount = item.VRRPT_COSTS.count
  gridVRRPT_COSTS.Refetch
  gridVRRPT_COSTS.Refresh
End Sub
Private Sub cmdVRRPT_COSTSAcc_Click()
On Error Resume Next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 Then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSEdit_Click()
  on error resume next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_COSTS_CONT.Item = u
    again: frmVRRPT_COSTS_CONT.NotFirstTime = False
    frmVRRPT_COSTS_CONT.OnInit
    frmVRRPT_COSTS_CONT.Show vbModal
    If frmVRRPT_COSTS_CONT.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_COSTS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSDel_Click()
  on error resume next
  gridVRRPT_COSTS.Delete
End Sub
Private Sub cmdVRRPT_COSTSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_COSTS.Add()

      Set frmVRRPT_COSTS_CONT.Item = u
      again: frmVRRPT_COSTS_CONT.NotFirstTime = False
      frmVRRPT_COSTS_CONT.OnInit
      frmVRRPT_COSTS_CONT.Show vbModal
      If frmVRRPT_COSTS_CONT.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_COSTS.ItemCount = Item.VRRPT_COSTS.Count
        gridVRRPT_COSTS.Refresh
        gridVRRPT_COSTS.RefreshGroups
        gridVRRPT_COSTS.Refreshsort
        gridVRRPT_COSTS.MoveToBookmark u.ID &amp; &quot;VRRPT_COSTS&quot;
      Else
        Item.VRRPT_COSTS.Delete u.ID
        Item.VRRPT_COSTS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_COSTSFnd_Click()
  on error resume next
  fndVRRPT_COSTS.ShowForm
End Sub
Private Sub cmdVRRPT_COSTSRun_Click()
  on error resume next
  gridVRRPT_COSTS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_COSTS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_COSTS.LoadRow gridVRRPT_COSTS, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_COSTS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRRPT_COSTS&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRRPT_COSTS_DblClick()
  cmdVRRPT_COSTSEdit_Click
End Sub
Private Sub gridVRRPT_COSTS_KeyPress(KeyAscii As Integer)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_COSTS.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_COSTS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRRPT_COSTS.Row And LastRow &gt; 0 Then
  gridVRRPT_COSTS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRRPT_COSTS.GetRowData(gridVRRPT_COSTS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRRPT_COSTSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_COSTS.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_COSTS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_COSTSCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_COSTS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_COSTS
End If
end sub
private sub mnuVRRPT_COSTSAdd_click()
   menuActionVRRPT_COSTS =&quot;ADD&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSEdit_click()
   menuActionVRRPT_COSTS =&quot;EDIT&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSDelete_click()
   menuActionVRRPT_COSTS =&quot;DEL&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSOpen_click()
   menuActionVRRPT_COSTS =&quot;RUN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSRef_click()
   menuActionVRRPT_COSTS =&quot;REF&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
  Private Sub mnuVRRPT_COSTSCOPY_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_COSTSCUT_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_COSTS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_COSTSCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  If gridVRRPT_COSTS.Row &gt; 0 Then
   If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
      gridVRRPT_COSTS.RefreshRowIndex gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_COSTSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_COSTSPrn_click()
   menuActionVRRPT_COSTS =&quot;PRN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSCfg_click()
   menuActionVRRPT_COSTS =&quot;CFG&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSFind_click()
   menuActionVRRPT_COSTS =&quot;FND&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSAcc_click()
   menuActionVRRPT_COSTS =&quot;ACC&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub menuTimerVRRPT_COSTS_timer()
   menuTimerVRRPT_COSTS.enabled = false
   if menuActionVRRPT_COSTS =&quot;ADD&quot; then cmdVRRPT_COSTSADD_CLick
   if menuActionVRRPT_COSTS =&quot;EDIT&quot; then cmdVRRPT_COSTSEDIT_CLick
   if menuActionVRRPT_COSTS =&quot;DEL&quot; then cmdVRRPT_COSTSDEL_CLick
   if menuActionVRRPT_COSTS =&quot;RUN&quot; then cmdVRRPT_COSTSRUN_CLick
   if menuActionVRRPT_COSTS =&quot;REF&quot; then cmdVRRPT_COSTSREF_CLick
   if menuActionVRRPT_COSTS =&quot;PRN&quot; then cmdVRRPT_COSTSPRN_CLick
   if menuActionVRRPT_COSTS =&quot;CFG&quot; then cmdVRRPT_COSTSCFG_CLick
   if menuActionVRRPT_COSTS =&quot;FND&quot; then cmdVRRPT_COSTSFND_CLick
   if menuActionVRRPT_COSTS =&quot;ACC&quot; then cmdVRRPT_COSTSACC_CLick
   menuActionVRRPT_COSTS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_COSTSAdd,cmdVRRPT_COSTSAdd.tag
  LoadBtnPictures cmdVRRPT_COSTSEdit,cmdVRRPT_COSTSEdit.tag
  LoadBtnPictures cmdVRRPT_COSTSDel,cmdVRRPT_COSTSDel.tag
  LoadBtnPictures cmdVRRPT_COSTSRef,cmdVRRPT_COSTSRef.tag
  LoadBtnPictures cmdVRRPT_COSTSPrn,cmdVRRPT_COSTSPrn.tag
  LoadBtnPictures cmdVRRPT_COSTSFnd,cmdVRRPT_COSTSFnd.tag
  LoadBtnPictures cmdVRRPT_COSTSRun,cmdVRRPT_COSTSRun.tag
  LoadBtnPictures cmdVRRPT_COSTSAcc,cmdVRRPT_COSTSAcc.tag
  LoadBtnPictures cmdVRRPT_COSTSCfg,cmdVRRPT_COSTSCfg.tag
  item.VRRPT_COSTS.PrepareGrid gridVRRPT_COSTS
  LoadGridLayout gridVRRPT_COSTS
  Set fndVRRPT_COSTS = Nothing
  On Error Resume Next
  Set fndVRRPT_COSTS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_COSTS.Init gridVRRPT_COSTS
end sub
private sub OnTabClick()

      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_COSTS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_COSTS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MeetingPlan_CONT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridVRRPT_MeetingPlan" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_MeetingPlan"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridVRRPT_Meeters" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_Meeters"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetersFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetersRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Планируемые встречи"/><Properties Name="Name" PropValue="mnuPopupVRRPT_MeetingPlan"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanRef"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanS1"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetingPlanCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanFind"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_MeetingPlan"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupVRRPT_Meeters" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Участники"/><Properties Name="Name" PropValue="mnuPopupVRRPT_Meeters"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersRef"/></ControlData><ControlData Name="mnuVRRPT_MeetersS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersS1"/></ControlData><ControlData Name="mnuVRRPT_MeetersBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetersCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetersCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetersPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetersFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersFind"/></ControlData><ControlData Name="mnuVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_Meeters" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_Meeters"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_MeetingPlan as object
private menuActionVRRPT_MeetingPlan as string
private fndVRRPT_Meeters as object
private menuActionVRRPT_Meeters as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlVRRPT_MeetingPlan_PositionChanged()
  pnlVRRPT_MeetingPlan.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_MeetingPlan_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetingPlanCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_MeetingPlan_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_MeetingPlan
End If
end sub
private sub mnuVRRPT_MeetingPlanAdd_click()
   menuActionVRRPT_MeetingPlan =&quot;ADD&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanEdit_click()
   menuActionVRRPT_MeetingPlan =&quot;EDIT&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanDelete_click()
   menuActionVRRPT_MeetingPlan =&quot;DEL&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanOpen_click()
   menuActionVRRPT_MeetingPlan =&quot;RUN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanRef_click()
   menuActionVRRPT_MeetingPlan =&quot;REF&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
  Private Sub mnuVRRPT_MeetingPlanCOPY_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetingPlanCUT_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_MeetingPlan.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetingPlanCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  If gridVRRPT_MeetingPlan.Row &gt; 0 Then
   If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
      gridVRRPT_MeetingPlan.RefreshRowIndex gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetingPlanCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetingPlanPrn_click()
   menuActionVRRPT_MeetingPlan =&quot;PRN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanCfg_click()
   menuActionVRRPT_MeetingPlan =&quot;CFG&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanFind_click()
   menuActionVRRPT_MeetingPlan =&quot;FND&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanAcc_click()
   menuActionVRRPT_MeetingPlan =&quot;ACC&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub menuTimerVRRPT_MeetingPlan_timer()
   menuTimerVRRPT_MeetingPlan.enabled = false
   if menuActionVRRPT_MeetingPlan =&quot;ADD&quot; then cmdVRRPT_MeetingPlanADD_CLick
   if menuActionVRRPT_MeetingPlan =&quot;EDIT&quot; then cmdVRRPT_MeetingPlanEDIT_CLick
   if menuActionVRRPT_MeetingPlan =&quot;DEL&quot; then cmdVRRPT_MeetingPlanDEL_CLick
   if menuActionVRRPT_MeetingPlan =&quot;RUN&quot; then cmdVRRPT_MeetingPlanRUN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;REF&quot; then cmdVRRPT_MeetingPlanREF_CLick
   if menuActionVRRPT_MeetingPlan =&quot;PRN&quot; then cmdVRRPT_MeetingPlanPRN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;CFG&quot; then cmdVRRPT_MeetingPlanCFG_CLick
   if menuActionVRRPT_MeetingPlan =&quot;FND&quot; then cmdVRRPT_MeetingPlanFND_CLick
   if menuActionVRRPT_MeetingPlan =&quot;ACC&quot; then cmdVRRPT_MeetingPlanACC_CLick
   menuActionVRRPT_MeetingPlan =&quot;&quot;
end sub
Private Sub cmdVRRPT_MeetingPlanCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_MeetingPlan,&quot;gridVRRPT_MeetingPlan&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_MeetingPlan,&quot;Планируемые встречи&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanRef_Click()
  on error resume next
  item.VRRPT_MeetingPlan.Refresh
  gridVRRPT_MeetingPlan.itemCount = item.VRRPT_MeetingPlan.count
  gridVRRPT_MeetingPlan.Refetch
  gridVRRPT_MeetingPlan.Refresh
End Sub
Private Sub cmdVRRPT_MeetingPlanAcc_Click()
On Error Resume Next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanEdit_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_MeetingPlan_CONT.Item = u
    again: frmVRRPT_MeetingPlan_CONT.NotFirstTime = False
    frmVRRPT_MeetingPlan_CONT.OnInit
    frmVRRPT_MeetingPlan_CONT.Show vbModal
    If frmVRRPT_MeetingPlan_CONT.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_MeetingPlan.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanDel_Click()
  on error resume next
  gridVRRPT_MeetingPlan.Delete
End Sub
Private Sub cmdVRRPT_MeetingPlanAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_MeetingPlan.Add()

      Set frmVRRPT_MeetingPlan_CONT.Item = u
      again: frmVRRPT_MeetingPlan_CONT.NotFirstTime = False
      frmVRRPT_MeetingPlan_CONT.OnInit
      frmVRRPT_MeetingPlan_CONT.Show vbModal
      If frmVRRPT_MeetingPlan_CONT.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_MeetingPlan.ItemCount = Item.VRRPT_MeetingPlan.Count
        gridVRRPT_MeetingPlan.Refresh
        gridVRRPT_MeetingPlan.RefreshGroups
        gridVRRPT_MeetingPlan.Refreshsort
        gridVRRPT_MeetingPlan.MoveToBookmark u.ID &amp; &quot;VRRPT_MeetingPlan&quot;
      Else
        Item.VRRPT_MeetingPlan.Delete u.ID
        Item.VRRPT_MeetingPlan.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_MeetingPlanFnd_Click()
  on error resume next
  fndVRRPT_MeetingPlan.ShowForm
End Sub
Private Sub cmdVRRPT_MeetingPlanRun_Click()
  on error resume next
  gridVRRPT_MeetingPlan_DblClick
End Sub
Private Sub gridVRRPT_MeetingPlan_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_MeetingPlan.LoadRow gridVRRPT_MeetingPlan, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_MeetingPlan_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_MeetingPlan_DblClick()
  cmdVRRPT_MeetingPlanEdit_Click
End Sub
Private Sub gridVRRPT_MeetingPlan_KeyPress(KeyAscii As Integer)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_MeetingPlan.FindOnPress KeyAscii
End Sub

Private Sub pnlVRRPT_MeetingPlan_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridVRRPT_MeetingPlan.Left = Left
  gridVRRPT_MeetingPlan.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_MeetingPlan.Width = Width
  gridVRRPT_MeetingPlan.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuVRRPT_MeetingPlanPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_MeetingPlan.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdVRRPT_MeetersCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_Meeters,&quot;gridVRRPT_Meeters&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_Meeters,&quot;Участники&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersAcc_Click()
On Error Resume Next
If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
If gridVRRPT_Meeters.Row &gt; 0 Then
 If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetersFnd_Click()
  on error resume next
  fndVRRPT_Meeters.ShowForm
End Sub
Private Sub cmdVRRPT_MeetersRun_Click()
  on error resume next
  gridVRRPT_Meeters_DblClick
End Sub
Private Sub pnlVRRPT_MeetingPlan_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridVRRPT_Meeters.Left = Left
  gridVRRPT_Meeters.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_Meeters.Width = Width
  gridVRRPT_Meeters.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdVRRPT_MeetersEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdVRRPT_MeetersRef_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.refresh
   gridVRRPT_Meeters.itemcount=gu.VRRPT_Meeters.count
   gridVRRPT_Meeters.refetch
   gridVRRPT_Meeters.refresh
 else
  gridVRRPT_Meeters.columns.clear
  gridVRRPT_Meeters.itemcount=0
 End If
else
 gridVRRPT_Meeters.columns.clear
 gridVRRPT_Meeters.itemcount=0
End If
End Sub
Private Sub cmdVRRPT_MeetersEdit_Click()
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmVRRPT_Meeters_CONT.Item = u
    again: frmVRRPT_Meeters_CONT.NotFirstTime = False
    frmVRRPT_Meeters_CONT.OnInit
    frmVRRPT_Meeters_CONT.Show vbModal
    If frmVRRPT_Meeters_CONT.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_Meeters.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdVRRPT_MeetersDel_Click()
  on error resume next
  gridVRRPT_Meeters.Delete
End Sub
Private Sub cmdVRRPT_MeetersAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.VRRPT_Meeters.Add()

      Set frmVRRPT_Meeters_CONT.Item = u
      again: frmVRRPT_Meeters_CONT.NotFirstTime = False
      frmVRRPT_Meeters_CONT.OnInit
      frmVRRPT_Meeters_CONT.Show vbModal
      If frmVRRPT_Meeters_CONT.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_Meeters.ItemCount = gu.VRRPT_Meeters.Count
        gridVRRPT_Meeters.Refresh
        gridVRRPT_Meeters.RefreshGroups
        gridVRRPT_Meeters.Refreshsort
        gridVRRPT_Meeters.MoveToBookmark u.ID &amp; &quot;VRRPT_Meeters&quot;
      Else
        gu.VRRPT_Meeters.Delete u.ID
        gu.VRRPT_Meeters.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridVRRPT_MeetingPlan_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridVRRPT_MeetingPlan.ItemCount = 0 Then 
  gridVRRPT_Meeters.ItemCount=0
  Exit Sub
End If
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row And LastRow &gt; 0 Then
    gridVRRPT_MeetingPlan.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridVRRPT_MeetingPlan.GetRowData(gridVRRPT_MeetingPlan.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row or gridVRRPT_Meeters.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.Preparegrid gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=0
    LoadGridLayout gridVRRPT_Meeters
    Set fndVRRPT_Meeters = Nothing
    Set fndVRRPT_Meeters = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndVRRPT_Meeters.Init gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=gu.VRRPT_Meeters.Count
  End If
 End If
End If
End Sub
Private Sub gridVRRPT_Meeters_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.VRRPT_Meeters.LoadRow gridVRRPT_Meeters, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridVRRPT_Meeters_KeyPress(KeyAscii As Integer)
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_Meeters.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_Meeters_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridVRRPT_Meeters_DblClick()
    cmdVRRPT_MeetersEdit_click
End Sub
Private Sub gridVRRPT_Meeters_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
 If gridVRRPT_Meeters.Row &gt; 0 Then
   If LastRow &lt;&gt; gridVRRPT_Meeters.Row And LastRow &gt; 0 Then
     gridVRRPT_Meeters.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridVRRPT_Meeters.GetRowData(gridVRRPT_Meeters.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuVRRPT_MeetersPASTE_Click()
On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.VRRPT_Meeters.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
    ELSE
      GU.VRRPT_Meeters.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_Meeters_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetersCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_Meeters_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_Meeters
End If
end sub
private sub mnuVRRPT_MeetersAdd_click()
   menuActionVRRPT_Meeters =&quot;ADD&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersEdit_click()
   menuActionVRRPT_Meeters =&quot;EDIT&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersDelete_click()
   menuActionVRRPT_Meeters =&quot;DEL&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersOpen_click()
   menuActionVRRPT_Meeters =&quot;RUN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersRef_click()
   menuActionVRRPT_Meeters =&quot;REF&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
  Private Sub mnuVRRPT_MeetersCOPY_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetersCUT_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_Meeters.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetersCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  If gridVRRPT_Meeters.Row &gt; 0 Then
   If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
      gridVRRPT_Meeters.RefreshRowIndex gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetersCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetersPrn_click()
   menuActionVRRPT_Meeters =&quot;PRN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersCfg_click()
   menuActionVRRPT_Meeters =&quot;CFG&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersFind_click()
   menuActionVRRPT_Meeters =&quot;FND&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersAcc_click()
   menuActionVRRPT_Meeters =&quot;ACC&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub menuTimerVRRPT_Meeters_timer()
   menuTimerVRRPT_Meeters.enabled = false
   if menuActionVRRPT_Meeters =&quot;ADD&quot; then cmdVRRPT_MeetersADD_CLick
   if menuActionVRRPT_Meeters =&quot;EDIT&quot; then cmdVRRPT_MeetersEDIT_CLick
   if menuActionVRRPT_Meeters =&quot;DEL&quot; then cmdVRRPT_MeetersDEL_CLick
   if menuActionVRRPT_Meeters =&quot;RUN&quot; then cmdVRRPT_MeetersRUN_CLick
   if menuActionVRRPT_Meeters =&quot;REF&quot; then cmdVRRPT_MeetersREF_CLick
   if menuActionVRRPT_Meeters =&quot;PRN&quot; then cmdVRRPT_MeetersPRN_CLick
   if menuActionVRRPT_Meeters =&quot;CFG&quot; then cmdVRRPT_MeetersCFG_CLick
   if menuActionVRRPT_Meeters =&quot;FND&quot; then cmdVRRPT_MeetersFND_CLick
   if menuActionVRRPT_Meeters =&quot;ACC&quot; then cmdVRRPT_MeetersACC_CLick
   menuActionVRRPT_Meeters =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MeetingPlanAdd,cmdVRRPT_MeetingPlanAdd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanEdit,cmdVRRPT_MeetingPlanEdit.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanDel,cmdVRRPT_MeetingPlanDel.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRef,cmdVRRPT_MeetingPlanRef.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanPrn,cmdVRRPT_MeetingPlanPrn.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanFnd,cmdVRRPT_MeetingPlanFnd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRun,cmdVRRPT_MeetingPlanRun.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanAcc,cmdVRRPT_MeetingPlanAcc.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanCfg,cmdVRRPT_MeetingPlanCfg.tag
  item.VRRPT_MeetingPlan.PrepareGrid gridVRRPT_MeetingPlan
  LoadGridLayout gridVRRPT_MeetingPlan
  Set fndVRRPT_MeetingPlan = Nothing
  On Error Resume Next
  Set fndVRRPT_MeetingPlan = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_MeetingPlan.Init gridVRRPT_MeetingPlan
  LoadBtnPictures cmdVRRPT_MeetersAdd,cmdVRRPT_MeetersAdd.tag
  LoadBtnPictures cmdVRRPT_MeetersEdit,cmdVRRPT_MeetersEdit.tag
  LoadBtnPictures cmdVRRPT_MeetersDel,cmdVRRPT_MeetersDel.tag
  LoadBtnPictures cmdVRRPT_MeetersRef,cmdVRRPT_MeetersRef.tag
  LoadBtnPictures cmdVRRPT_MeetersPrn,cmdVRRPT_MeetersPrn.tag
  LoadBtnPictures cmdVRRPT_MeetersFnd,cmdVRRPT_MeetersFnd.Tag
  LoadBtnPictures cmdVRRPT_MeetersCfg,cmdVRRPT_MeetersCfg.tag
  LoadBtnPictures cmdVRRPT_MeetersRun,cmdVRRPT_MeetersRun.Tag
  LoadBtnPictures cmdVRRPT_MeetersAcc,cmdVRRPT_MeetersAcc.Tag
  gridVRRPT_Meeters.Columns.Clear
  gridVRRPT_Meeters.ItemCount=0
  cmdVRRPT_MeetersRef_Click
end sub
private sub OnTabClick()

pnlVRRPT_MeetingPlan.RestorePosition
  gridVRRPT_MeetingPlan_RowColChange gridVRRPT_MeetingPlan.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MeetingPlan.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_MeetingPlan = nothing
  set fndVRRPT_Meeters = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlCONT_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MAIN_CONT"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_COSTS_CONT"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MeetingPlan_CONT"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRRPT_MAIN.IsOK
if IsItOk then IsItOk = pnlVRRPT_COSTS.IsOK
if IsItOk then IsItOk = pnlVRRPT_MeetingPlan.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRRPT_MeetingPlan.Visible = False
  pnlVRRPT_COSTS.Visible = False
  pnlVRRPT_MAIN.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRRPT_MAIN&quot;
     With pnlVRRPT_MAIN
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MAIN.OnClick item,parentform
     End With
   Case &quot;VRRPT_COSTS&quot;
     With pnlVRRPT_COSTS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_COSTS.OnClick item,parentform
     End With
   Case &quot;VRRPT_MeetingPlan&quot;
     With pnlVRRPT_MeetingPlan
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MeetingPlan.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Отчет&quot;
ts.Tabs.Item(1).key = &quot;VRRPT_MAIN&quot;
pnlVRRPT_MAIN.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_COSTS&quot;, &quot;Затраты&quot;)
pnlVRRPT_COSTS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_MeetingPlan&quot;, &quot;Планируемые встречи&quot;)
pnlVRRPT_MeetingPlan.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRRPT2&quot;, &quot;ctlCONT_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRRPT_MAIN.CloseClass
 pnlVRRPT_COSTS.CloseClass
 pnlVRRPT_MeetingPlan.CloseClass
End Sub
public sub OnSave()
 pnlVRRPT_MAIN.OnSave
 pnlVRRPT_COSTS.OnSave
 pnlVRRPT_MeetingPlan.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRRPT_MAIN.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_COSTS.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_MeetingPlan.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmCONT_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRRPT2GUI.ctlCONT_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;CONT&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;CONT&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;CONT&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;CONT&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MAIN_dflt" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAINdflt"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Отчет"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Отчет"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot;
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_COSTS_dflt" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_COSTSdflt"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Затраты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Затраты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot;
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MeetingPlan_dflt" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MeetingPlandflt"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Планируемые встречи"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Планируемые встречи"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot;
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_Meeters_dflt" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_Meetersdflt"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Участники"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Участники"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot;
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MAIN_dflt" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAINdflt"><Properties Name="Name" PropValue="editVRRPT_MAIN"/></ControlData><ControlData Name="cmdVRRPT_MAINSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRRPT_MAIN_UpdateName_dflt(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=year(.TheDate) &amp; &quot;.&quot; &amp; right(&quot;0&quot; &amp; month(.TheDate),2)  &amp;  &quot;.&quot; &amp; right(&quot;0&quot; &amp; Day(.TheDate),2) &amp; &quot; |&quot; &amp; .Author.Brief &amp; &quot;|  &quot; &amp; .Name,  RowItem:=RowItem
end with
end sub
Private Sub cmdVRRPT_MAINRef_Click()
  on error resume next
  Item.VRRPT_MAIN.Refresh
  cmdVRRPT_MAINAdd_Click
End Sub
Private Sub cmdVRRPT_MAINCfg_Click()
    on error resume next 
    editVRRPT_MAIN.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_dflt&quot; For Output As #ff
    print #ff, editVRRPT_MAIN.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdVRRPT_MAINAdd_Click()
  on error resume next
 dim u as object
 If Item.VRRPT_MAIN.Count = 0 Then
   set u=Item.VRRPT_MAIN.Add
set u.Autor = u.Application.FindRowObject(&quot;Users&quot;, u.application.mtzsession.GetSessionUserID())

 End If
 Set editVRRPT_MAIN.Item = Item.VRRPT_MAIN.Item(1)
 editVRRPT_MAIN.InitPanel
 cmdVRRPT_MAINSave.Enabled = True
End Sub
Private Sub cmdVRRPT_MAINDel_Click()
  on error resume next
  if  editVRRPT_MAIN.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editVRRPT_MAIN.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editVRRPT_MAIN.item.parent.Delete editVRRPT_MAIN.item.id
    cmdVRRPT_MAINSave.Enabled = false
    editVRRPT_MAIN.Enabled = false
    set editVRRPT_MAIN.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editVRRPT_MAIN_Changed()
 cmdVRRPT_MAINSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editVRRPT_MAIN.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdVRRPT_MAINSave_Click()
  on error resume next
    if editVRRPT_MAIN.IsOK then
    MousePointer = vbHourglass
    editVRRPT_MAIN.Save
  on error goto bye
    editVRRPT_MAIN.item.Save
    MousePointer = vbNormal
        opVRRPT_MAIN_UpdateName_dflt editVRRPT_MAIN.item
    cmdVRRPT_MAINSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editVRRPT_MAIN.item.REFRESH
  'editVRRPT_MAIN.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MAINSave,cmdVRRPT_MAINSave.tag
  LoadBtnPictures cmdVRRPT_MAINRef,cmdVRRPT_MAINRef.tag
  LoadBtnPictures cmdVRRPT_MAINCfg,cmdVRRPT_MAINCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_dflt&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editVRRPT_MAIN.PanelCustomisationString = buf
  cmdVRRPT_MAINAdd_click
end sub
private sub OnTabClick()

      editVRRPT_MAIN.Top = 40 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Left = 5 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editVRRPT_MAIN.Save
if editVRRPT_MAIN.item.Changed then
  editVRRPT_MAIN.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editVRRPT_MAIN.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MAIN.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_COSTS_dflt" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRRPT_COSTS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_COSTS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_COSTSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_COSTSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_COSTS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Затраты"/><Properties Name="Name" PropValue="mnuPopupVRRPT_COSTS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSOpen"/></ControlData><ControlData Name="mnuVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSRef"/></ControlData><ControlData Name="mnuVRRPT_COSTSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSS1"/></ControlData><ControlData Name="mnuVRRPT_COSTSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_COSTSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCOPY"/></ControlData><ControlData Name="mnuVRRPT_COSTSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCUT"/></ControlData><ControlData Name="mnuVRRPT_COSTSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPASTE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCHANGE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPrn"/></ControlData><ControlData Name="mnuVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCfg"/></ControlData><ControlData Name="mnuVRRPT_COSTSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSFind"/></ControlData><ControlData Name="mnuVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_COSTS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_COSTS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_COSTS as object
private menuActionVRRPT_COSTS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRRPT_COSTSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_COSTS,&quot;gridVRRPT_COSTS&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_COSTS,&quot;Затраты&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSRef_Click()
  on error resume next
  item.VRRPT_COSTS.Refresh
  gridVRRPT_COSTS.itemCount = item.VRRPT_COSTS.count
  gridVRRPT_COSTS.Refetch
  gridVRRPT_COSTS.Refresh
End Sub
Private Sub cmdVRRPT_COSTSAcc_Click()
On Error Resume Next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 Then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSEdit_Click()
  on error resume next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_COSTS_dflt.Item = u
    again: frmVRRPT_COSTS_dflt.NotFirstTime = False
    frmVRRPT_COSTS_dflt.OnInit
    frmVRRPT_COSTS_dflt.Show vbModal
    If frmVRRPT_COSTS_dflt.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_COSTS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSDel_Click()
  on error resume next
  gridVRRPT_COSTS.Delete
End Sub
Private Sub cmdVRRPT_COSTSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_COSTS.Add()

      Set frmVRRPT_COSTS_dflt.Item = u
      again: frmVRRPT_COSTS_dflt.NotFirstTime = False
      frmVRRPT_COSTS_dflt.OnInit
      frmVRRPT_COSTS_dflt.Show vbModal
      If frmVRRPT_COSTS_dflt.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_COSTS.ItemCount = Item.VRRPT_COSTS.Count
        gridVRRPT_COSTS.Refresh
        gridVRRPT_COSTS.RefreshGroups
        gridVRRPT_COSTS.Refreshsort
        gridVRRPT_COSTS.MoveToBookmark u.ID &amp; &quot;VRRPT_COSTS&quot;
      Else
        Item.VRRPT_COSTS.Delete u.ID
        Item.VRRPT_COSTS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_COSTSFnd_Click()
  on error resume next
  fndVRRPT_COSTS.ShowForm
End Sub
Private Sub cmdVRRPT_COSTSRun_Click()
  on error resume next
  gridVRRPT_COSTS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_COSTS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_COSTS.LoadRow gridVRRPT_COSTS, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_COSTS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRRPT_COSTS&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRRPT_COSTS_DblClick()
  cmdVRRPT_COSTSEdit_Click
End Sub
Private Sub gridVRRPT_COSTS_KeyPress(KeyAscii As Integer)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_COSTS.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_COSTS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRRPT_COSTS.Row And LastRow &gt; 0 Then
  gridVRRPT_COSTS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRRPT_COSTS.GetRowData(gridVRRPT_COSTS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRRPT_COSTSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_COSTS.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_COSTS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_COSTSCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_COSTS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_COSTS
End If
end sub
private sub mnuVRRPT_COSTSAdd_click()
   menuActionVRRPT_COSTS =&quot;ADD&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSEdit_click()
   menuActionVRRPT_COSTS =&quot;EDIT&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSDelete_click()
   menuActionVRRPT_COSTS =&quot;DEL&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSOpen_click()
   menuActionVRRPT_COSTS =&quot;RUN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSRef_click()
   menuActionVRRPT_COSTS =&quot;REF&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
  Private Sub mnuVRRPT_COSTSCOPY_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_COSTSCUT_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_COSTS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_COSTSCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  If gridVRRPT_COSTS.Row &gt; 0 Then
   If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
      gridVRRPT_COSTS.RefreshRowIndex gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_COSTSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_COSTSPrn_click()
   menuActionVRRPT_COSTS =&quot;PRN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSCfg_click()
   menuActionVRRPT_COSTS =&quot;CFG&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSFind_click()
   menuActionVRRPT_COSTS =&quot;FND&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSAcc_click()
   menuActionVRRPT_COSTS =&quot;ACC&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub menuTimerVRRPT_COSTS_timer()
   menuTimerVRRPT_COSTS.enabled = false
   if menuActionVRRPT_COSTS =&quot;ADD&quot; then cmdVRRPT_COSTSADD_CLick
   if menuActionVRRPT_COSTS =&quot;EDIT&quot; then cmdVRRPT_COSTSEDIT_CLick
   if menuActionVRRPT_COSTS =&quot;DEL&quot; then cmdVRRPT_COSTSDEL_CLick
   if menuActionVRRPT_COSTS =&quot;RUN&quot; then cmdVRRPT_COSTSRUN_CLick
   if menuActionVRRPT_COSTS =&quot;REF&quot; then cmdVRRPT_COSTSREF_CLick
   if menuActionVRRPT_COSTS =&quot;PRN&quot; then cmdVRRPT_COSTSPRN_CLick
   if menuActionVRRPT_COSTS =&quot;CFG&quot; then cmdVRRPT_COSTSCFG_CLick
   if menuActionVRRPT_COSTS =&quot;FND&quot; then cmdVRRPT_COSTSFND_CLick
   if menuActionVRRPT_COSTS =&quot;ACC&quot; then cmdVRRPT_COSTSACC_CLick
   menuActionVRRPT_COSTS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_COSTSAdd,cmdVRRPT_COSTSAdd.tag
  LoadBtnPictures cmdVRRPT_COSTSEdit,cmdVRRPT_COSTSEdit.tag
  LoadBtnPictures cmdVRRPT_COSTSDel,cmdVRRPT_COSTSDel.tag
  LoadBtnPictures cmdVRRPT_COSTSRef,cmdVRRPT_COSTSRef.tag
  LoadBtnPictures cmdVRRPT_COSTSPrn,cmdVRRPT_COSTSPrn.tag
  LoadBtnPictures cmdVRRPT_COSTSFnd,cmdVRRPT_COSTSFnd.tag
  LoadBtnPictures cmdVRRPT_COSTSRun,cmdVRRPT_COSTSRun.tag
  LoadBtnPictures cmdVRRPT_COSTSAcc,cmdVRRPT_COSTSAcc.tag
  LoadBtnPictures cmdVRRPT_COSTSCfg,cmdVRRPT_COSTSCfg.tag
  item.VRRPT_COSTS.PrepareGrid gridVRRPT_COSTS
  LoadGridLayout gridVRRPT_COSTS
  Set fndVRRPT_COSTS = Nothing
  On Error Resume Next
  Set fndVRRPT_COSTS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_COSTS.Init gridVRRPT_COSTS
end sub
private sub OnTabClick()

      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_COSTS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_COSTS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MeetingPlan_dflt" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridVRRPT_MeetingPlan" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_MeetingPlan"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridVRRPT_Meeters" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_Meeters"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetersFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetersRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Планируемые встречи"/><Properties Name="Name" PropValue="mnuPopupVRRPT_MeetingPlan"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanRef"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanS1"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetingPlanCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanFind"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_MeetingPlan"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupVRRPT_Meeters" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Участники"/><Properties Name="Name" PropValue="mnuPopupVRRPT_Meeters"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersRef"/></ControlData><ControlData Name="mnuVRRPT_MeetersS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersS1"/></ControlData><ControlData Name="mnuVRRPT_MeetersBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetersCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetersCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetersPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetersFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersFind"/></ControlData><ControlData Name="mnuVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_Meeters" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_Meeters"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_MeetingPlan as object
private menuActionVRRPT_MeetingPlan as string
private fndVRRPT_Meeters as object
private menuActionVRRPT_Meeters as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlVRRPT_MeetingPlan_PositionChanged()
  pnlVRRPT_MeetingPlan.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_MeetingPlan_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetingPlanCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_MeetingPlan_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_MeetingPlan
End If
end sub
private sub mnuVRRPT_MeetingPlanAdd_click()
   menuActionVRRPT_MeetingPlan =&quot;ADD&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanEdit_click()
   menuActionVRRPT_MeetingPlan =&quot;EDIT&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanDelete_click()
   menuActionVRRPT_MeetingPlan =&quot;DEL&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanOpen_click()
   menuActionVRRPT_MeetingPlan =&quot;RUN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanRef_click()
   menuActionVRRPT_MeetingPlan =&quot;REF&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
  Private Sub mnuVRRPT_MeetingPlanCOPY_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetingPlanCUT_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_MeetingPlan.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetingPlanCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  If gridVRRPT_MeetingPlan.Row &gt; 0 Then
   If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
      gridVRRPT_MeetingPlan.RefreshRowIndex gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetingPlanCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetingPlanPrn_click()
   menuActionVRRPT_MeetingPlan =&quot;PRN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanCfg_click()
   menuActionVRRPT_MeetingPlan =&quot;CFG&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanFind_click()
   menuActionVRRPT_MeetingPlan =&quot;FND&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanAcc_click()
   menuActionVRRPT_MeetingPlan =&quot;ACC&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub menuTimerVRRPT_MeetingPlan_timer()
   menuTimerVRRPT_MeetingPlan.enabled = false
   if menuActionVRRPT_MeetingPlan =&quot;ADD&quot; then cmdVRRPT_MeetingPlanADD_CLick
   if menuActionVRRPT_MeetingPlan =&quot;EDIT&quot; then cmdVRRPT_MeetingPlanEDIT_CLick
   if menuActionVRRPT_MeetingPlan =&quot;DEL&quot; then cmdVRRPT_MeetingPlanDEL_CLick
   if menuActionVRRPT_MeetingPlan =&quot;RUN&quot; then cmdVRRPT_MeetingPlanRUN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;REF&quot; then cmdVRRPT_MeetingPlanREF_CLick
   if menuActionVRRPT_MeetingPlan =&quot;PRN&quot; then cmdVRRPT_MeetingPlanPRN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;CFG&quot; then cmdVRRPT_MeetingPlanCFG_CLick
   if menuActionVRRPT_MeetingPlan =&quot;FND&quot; then cmdVRRPT_MeetingPlanFND_CLick
   if menuActionVRRPT_MeetingPlan =&quot;ACC&quot; then cmdVRRPT_MeetingPlanACC_CLick
   menuActionVRRPT_MeetingPlan =&quot;&quot;
end sub
Private Sub cmdVRRPT_MeetingPlanCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_MeetingPlan,&quot;gridVRRPT_MeetingPlan&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_MeetingPlan,&quot;Планируемые встречи&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanRef_Click()
  on error resume next
  item.VRRPT_MeetingPlan.Refresh
  gridVRRPT_MeetingPlan.itemCount = item.VRRPT_MeetingPlan.count
  gridVRRPT_MeetingPlan.Refetch
  gridVRRPT_MeetingPlan.Refresh
End Sub
Private Sub cmdVRRPT_MeetingPlanAcc_Click()
On Error Resume Next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanEdit_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_MeetingPlan_dflt.Item = u
    again: frmVRRPT_MeetingPlan_dflt.NotFirstTime = False
    frmVRRPT_MeetingPlan_dflt.OnInit
    frmVRRPT_MeetingPlan_dflt.Show vbModal
    If frmVRRPT_MeetingPlan_dflt.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_MeetingPlan.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanDel_Click()
  on error resume next
  gridVRRPT_MeetingPlan.Delete
End Sub
Private Sub cmdVRRPT_MeetingPlanAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_MeetingPlan.Add()

      Set frmVRRPT_MeetingPlan_dflt.Item = u
      again: frmVRRPT_MeetingPlan_dflt.NotFirstTime = False
      frmVRRPT_MeetingPlan_dflt.OnInit
      frmVRRPT_MeetingPlan_dflt.Show vbModal
      If frmVRRPT_MeetingPlan_dflt.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_MeetingPlan.ItemCount = Item.VRRPT_MeetingPlan.Count
        gridVRRPT_MeetingPlan.Refresh
        gridVRRPT_MeetingPlan.RefreshGroups
        gridVRRPT_MeetingPlan.Refreshsort
        gridVRRPT_MeetingPlan.MoveToBookmark u.ID &amp; &quot;VRRPT_MeetingPlan&quot;
      Else
        Item.VRRPT_MeetingPlan.Delete u.ID
        Item.VRRPT_MeetingPlan.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_MeetingPlanFnd_Click()
  on error resume next
  fndVRRPT_MeetingPlan.ShowForm
End Sub
Private Sub cmdVRRPT_MeetingPlanRun_Click()
  on error resume next
  gridVRRPT_MeetingPlan_DblClick
End Sub
Private Sub gridVRRPT_MeetingPlan_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_MeetingPlan.LoadRow gridVRRPT_MeetingPlan, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_MeetingPlan_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_MeetingPlan_DblClick()
  cmdVRRPT_MeetingPlanEdit_Click
End Sub
Private Sub gridVRRPT_MeetingPlan_KeyPress(KeyAscii As Integer)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_MeetingPlan.FindOnPress KeyAscii
End Sub

Private Sub pnlVRRPT_MeetingPlan_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridVRRPT_MeetingPlan.Left = Left
  gridVRRPT_MeetingPlan.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_MeetingPlan.Width = Width
  gridVRRPT_MeetingPlan.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuVRRPT_MeetingPlanPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_MeetingPlan.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdVRRPT_MeetersCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_Meeters,&quot;gridVRRPT_Meeters&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_Meeters,&quot;Участники&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersAcc_Click()
On Error Resume Next
If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
If gridVRRPT_Meeters.Row &gt; 0 Then
 If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetersFnd_Click()
  on error resume next
  fndVRRPT_Meeters.ShowForm
End Sub
Private Sub cmdVRRPT_MeetersRun_Click()
  on error resume next
  gridVRRPT_Meeters_DblClick
End Sub
Private Sub pnlVRRPT_MeetingPlan_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridVRRPT_Meeters.Left = Left
  gridVRRPT_Meeters.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_Meeters.Width = Width
  gridVRRPT_Meeters.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdVRRPT_MeetersEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdVRRPT_MeetersRef_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.refresh
   gridVRRPT_Meeters.itemcount=gu.VRRPT_Meeters.count
   gridVRRPT_Meeters.refetch
   gridVRRPT_Meeters.refresh
 else
  gridVRRPT_Meeters.columns.clear
  gridVRRPT_Meeters.itemcount=0
 End If
else
 gridVRRPT_Meeters.columns.clear
 gridVRRPT_Meeters.itemcount=0
End If
End Sub
Private Sub cmdVRRPT_MeetersEdit_Click()
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmVRRPT_Meeters_dflt.Item = u
    again: frmVRRPT_Meeters_dflt.NotFirstTime = False
    frmVRRPT_Meeters_dflt.OnInit
    frmVRRPT_Meeters_dflt.Show vbModal
    If frmVRRPT_Meeters_dflt.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_Meeters.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdVRRPT_MeetersDel_Click()
  on error resume next
  gridVRRPT_Meeters.Delete
End Sub
Private Sub cmdVRRPT_MeetersAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.VRRPT_Meeters.Add()

      Set frmVRRPT_Meeters_dflt.Item = u
      again: frmVRRPT_Meeters_dflt.NotFirstTime = False
      frmVRRPT_Meeters_dflt.OnInit
      frmVRRPT_Meeters_dflt.Show vbModal
      If frmVRRPT_Meeters_dflt.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_Meeters.ItemCount = gu.VRRPT_Meeters.Count
        gridVRRPT_Meeters.Refresh
        gridVRRPT_Meeters.RefreshGroups
        gridVRRPT_Meeters.Refreshsort
        gridVRRPT_Meeters.MoveToBookmark u.ID &amp; &quot;VRRPT_Meeters&quot;
      Else
        gu.VRRPT_Meeters.Delete u.ID
        gu.VRRPT_Meeters.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridVRRPT_MeetingPlan_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridVRRPT_MeetingPlan.ItemCount = 0 Then 
  gridVRRPT_Meeters.ItemCount=0
  Exit Sub
End If
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row And LastRow &gt; 0 Then
    gridVRRPT_MeetingPlan.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridVRRPT_MeetingPlan.GetRowData(gridVRRPT_MeetingPlan.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row or gridVRRPT_Meeters.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.Preparegrid gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=0
    LoadGridLayout gridVRRPT_Meeters
    Set fndVRRPT_Meeters = Nothing
    Set fndVRRPT_Meeters = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndVRRPT_Meeters.Init gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=gu.VRRPT_Meeters.Count
  End If
 End If
End If
End Sub
Private Sub gridVRRPT_Meeters_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.VRRPT_Meeters.LoadRow gridVRRPT_Meeters, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridVRRPT_Meeters_KeyPress(KeyAscii As Integer)
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_Meeters.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_Meeters_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridVRRPT_Meeters_DblClick()
    cmdVRRPT_MeetersEdit_click
End Sub
Private Sub gridVRRPT_Meeters_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
 If gridVRRPT_Meeters.Row &gt; 0 Then
   If LastRow &lt;&gt; gridVRRPT_Meeters.Row And LastRow &gt; 0 Then
     gridVRRPT_Meeters.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridVRRPT_Meeters.GetRowData(gridVRRPT_Meeters.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuVRRPT_MeetersPASTE_Click()
On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.VRRPT_Meeters.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
    ELSE
      GU.VRRPT_Meeters.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_Meeters_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetersCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_Meeters_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_Meeters
End If
end sub
private sub mnuVRRPT_MeetersAdd_click()
   menuActionVRRPT_Meeters =&quot;ADD&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersEdit_click()
   menuActionVRRPT_Meeters =&quot;EDIT&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersDelete_click()
   menuActionVRRPT_Meeters =&quot;DEL&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersOpen_click()
   menuActionVRRPT_Meeters =&quot;RUN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersRef_click()
   menuActionVRRPT_Meeters =&quot;REF&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
  Private Sub mnuVRRPT_MeetersCOPY_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetersCUT_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_Meeters.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetersCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  If gridVRRPT_Meeters.Row &gt; 0 Then
   If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
      gridVRRPT_Meeters.RefreshRowIndex gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetersCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetersPrn_click()
   menuActionVRRPT_Meeters =&quot;PRN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersCfg_click()
   menuActionVRRPT_Meeters =&quot;CFG&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersFind_click()
   menuActionVRRPT_Meeters =&quot;FND&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersAcc_click()
   menuActionVRRPT_Meeters =&quot;ACC&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub menuTimerVRRPT_Meeters_timer()
   menuTimerVRRPT_Meeters.enabled = false
   if menuActionVRRPT_Meeters =&quot;ADD&quot; then cmdVRRPT_MeetersADD_CLick
   if menuActionVRRPT_Meeters =&quot;EDIT&quot; then cmdVRRPT_MeetersEDIT_CLick
   if menuActionVRRPT_Meeters =&quot;DEL&quot; then cmdVRRPT_MeetersDEL_CLick
   if menuActionVRRPT_Meeters =&quot;RUN&quot; then cmdVRRPT_MeetersRUN_CLick
   if menuActionVRRPT_Meeters =&quot;REF&quot; then cmdVRRPT_MeetersREF_CLick
   if menuActionVRRPT_Meeters =&quot;PRN&quot; then cmdVRRPT_MeetersPRN_CLick
   if menuActionVRRPT_Meeters =&quot;CFG&quot; then cmdVRRPT_MeetersCFG_CLick
   if menuActionVRRPT_Meeters =&quot;FND&quot; then cmdVRRPT_MeetersFND_CLick
   if menuActionVRRPT_Meeters =&quot;ACC&quot; then cmdVRRPT_MeetersACC_CLick
   menuActionVRRPT_Meeters =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MeetingPlanAdd,cmdVRRPT_MeetingPlanAdd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanEdit,cmdVRRPT_MeetingPlanEdit.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanDel,cmdVRRPT_MeetingPlanDel.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRef,cmdVRRPT_MeetingPlanRef.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanPrn,cmdVRRPT_MeetingPlanPrn.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanFnd,cmdVRRPT_MeetingPlanFnd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRun,cmdVRRPT_MeetingPlanRun.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanAcc,cmdVRRPT_MeetingPlanAcc.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanCfg,cmdVRRPT_MeetingPlanCfg.tag
  item.VRRPT_MeetingPlan.PrepareGrid gridVRRPT_MeetingPlan
  LoadGridLayout gridVRRPT_MeetingPlan
  Set fndVRRPT_MeetingPlan = Nothing
  On Error Resume Next
  Set fndVRRPT_MeetingPlan = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_MeetingPlan.Init gridVRRPT_MeetingPlan
  LoadBtnPictures cmdVRRPT_MeetersAdd,cmdVRRPT_MeetersAdd.tag
  LoadBtnPictures cmdVRRPT_MeetersEdit,cmdVRRPT_MeetersEdit.tag
  LoadBtnPictures cmdVRRPT_MeetersDel,cmdVRRPT_MeetersDel.tag
  LoadBtnPictures cmdVRRPT_MeetersRef,cmdVRRPT_MeetersRef.tag
  LoadBtnPictures cmdVRRPT_MeetersPrn,cmdVRRPT_MeetersPrn.tag
  LoadBtnPictures cmdVRRPT_MeetersFnd,cmdVRRPT_MeetersFnd.Tag
  LoadBtnPictures cmdVRRPT_MeetersCfg,cmdVRRPT_MeetersCfg.tag
  LoadBtnPictures cmdVRRPT_MeetersRun,cmdVRRPT_MeetersRun.Tag
  LoadBtnPictures cmdVRRPT_MeetersAcc,cmdVRRPT_MeetersAcc.Tag
  gridVRRPT_Meeters.Columns.Clear
  gridVRRPT_Meeters.ItemCount=0
  cmdVRRPT_MeetersRef_Click
end sub
private sub OnTabClick()

pnlVRRPT_MeetingPlan.RestorePosition
  gridVRRPT_MeetingPlan_RowColChange gridVRRPT_MeetingPlan.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MeetingPlan.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_MeetingPlan = nothing
  set fndVRRPT_Meeters = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctldflt_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MAIN_dflt"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_COSTS_dflt"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MeetingPlan_dflt"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRRPT_MAIN.IsOK
if IsItOk then IsItOk = pnlVRRPT_COSTS.IsOK
if IsItOk then IsItOk = pnlVRRPT_MeetingPlan.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRRPT_MeetingPlan.Visible = False
  pnlVRRPT_COSTS.Visible = False
  pnlVRRPT_MAIN.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRRPT_MAIN&quot;
     With pnlVRRPT_MAIN
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MAIN.OnClick item,parentform
     End With
   Case &quot;VRRPT_COSTS&quot;
     With pnlVRRPT_COSTS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_COSTS.OnClick item,parentform
     End With
   Case &quot;VRRPT_MeetingPlan&quot;
     With pnlVRRPT_MeetingPlan
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MeetingPlan.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Отчет&quot;
ts.Tabs.Item(1).key = &quot;VRRPT_MAIN&quot;
pnlVRRPT_MAIN.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_COSTS&quot;, &quot;Затраты&quot;)
pnlVRRPT_COSTS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_MeetingPlan&quot;, &quot;Планируемые встречи&quot;)
pnlVRRPT_MeetingPlan.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRRPT2&quot;, &quot;ctldflt_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRRPT_MAIN.CloseClass
 pnlVRRPT_COSTS.CloseClass
 pnlVRRPT_MeetingPlan.CloseClass
End Sub
public sub OnSave()
 pnlVRRPT_MAIN.OnSave
 pnlVRRPT_COSTS.OnSave
 pnlVRRPT_MeetingPlan.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRRPT_MAIN.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_COSTS.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_MeetingPlan.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmdflt_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRRPT2GUI.ctldflt_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;dflt&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;dflt&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;dflt&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;dflt&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MAIN_PRJ" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAINPRJ"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Отчет"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Отчет"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot;
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_COSTS_PRJ" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_COSTSPRJ"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Затраты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Затраты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot;
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MeetingPlan_PRJ" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MeetingPlanPRJ"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Планируемые встречи"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Планируемые встречи"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot;
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_Meeters_PRJ" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MeetersPRJ"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Участники"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Участники"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot;
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MAIN_PRJ" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAINPRJ"><Properties Name="Name" PropValue="editVRRPT_MAIN"/></ControlData><ControlData Name="cmdVRRPT_MAINSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRRPT_MAIN_UpdateName_PRJ(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=year(.TheDate) &amp; &quot;.&quot; &amp; right(&quot;0&quot; &amp; month(.TheDate),2)  &amp;  &quot;.&quot; &amp; right(&quot;0&quot; &amp; Day(.TheDate),2) &amp; &quot; |&quot; &amp; .Author.Brief &amp; &quot;|  &quot; &amp; .Name,  RowItem:=RowItem
end with
end sub
Private Sub cmdVRRPT_MAINRef_Click()
  on error resume next
  Item.VRRPT_MAIN.Refresh
  cmdVRRPT_MAINAdd_Click
End Sub
Private Sub cmdVRRPT_MAINCfg_Click()
    on error resume next 
    editVRRPT_MAIN.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_PRJ&quot; For Output As #ff
    print #ff, editVRRPT_MAIN.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdVRRPT_MAINAdd_Click()
  on error resume next
 dim u as object
 If Item.VRRPT_MAIN.Count = 0 Then
   set u=Item.VRRPT_MAIN.Add
set u.Autor = u.Application.FindRowObject(&quot;Users&quot;, u.application.mtzsession.GetSessionUserID())

 End If
 Set editVRRPT_MAIN.Item = Item.VRRPT_MAIN.Item(1)
 editVRRPT_MAIN.InitPanel
 cmdVRRPT_MAINSave.Enabled = True
End Sub
Private Sub cmdVRRPT_MAINDel_Click()
  on error resume next
  if  editVRRPT_MAIN.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editVRRPT_MAIN.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editVRRPT_MAIN.item.parent.Delete editVRRPT_MAIN.item.id
    cmdVRRPT_MAINSave.Enabled = false
    editVRRPT_MAIN.Enabled = false
    set editVRRPT_MAIN.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editVRRPT_MAIN_Changed()
 cmdVRRPT_MAINSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editVRRPT_MAIN.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdVRRPT_MAINSave_Click()
  on error resume next
    if editVRRPT_MAIN.IsOK then
    MousePointer = vbHourglass
    editVRRPT_MAIN.Save
  on error goto bye
    editVRRPT_MAIN.item.Save
    MousePointer = vbNormal
        opVRRPT_MAIN_UpdateName_PRJ editVRRPT_MAIN.item
    cmdVRRPT_MAINSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editVRRPT_MAIN.item.REFRESH
  'editVRRPT_MAIN.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MAINSave,cmdVRRPT_MAINSave.tag
  LoadBtnPictures cmdVRRPT_MAINRef,cmdVRRPT_MAINRef.tag
  LoadBtnPictures cmdVRRPT_MAINCfg,cmdVRRPT_MAINCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_PRJ&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editVRRPT_MAIN.PanelCustomisationString = buf
  cmdVRRPT_MAINAdd_click
end sub
private sub OnTabClick()

      editVRRPT_MAIN.Top = 40 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Left = 5 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editVRRPT_MAIN.Save
if editVRRPT_MAIN.item.Changed then
  editVRRPT_MAIN.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editVRRPT_MAIN.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MAIN.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_COSTS_PRJ" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRRPT_COSTS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_COSTS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_COSTSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_COSTSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_COSTS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Затраты"/><Properties Name="Name" PropValue="mnuPopupVRRPT_COSTS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSOpen"/></ControlData><ControlData Name="mnuVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSRef"/></ControlData><ControlData Name="mnuVRRPT_COSTSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSS1"/></ControlData><ControlData Name="mnuVRRPT_COSTSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_COSTSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCOPY"/></ControlData><ControlData Name="mnuVRRPT_COSTSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCUT"/></ControlData><ControlData Name="mnuVRRPT_COSTSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPASTE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCHANGE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPrn"/></ControlData><ControlData Name="mnuVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCfg"/></ControlData><ControlData Name="mnuVRRPT_COSTSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSFind"/></ControlData><ControlData Name="mnuVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_COSTS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_COSTS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_COSTS as object
private menuActionVRRPT_COSTS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRRPT_COSTSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_COSTS,&quot;gridVRRPT_COSTS&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_COSTS,&quot;Затраты&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSRef_Click()
  on error resume next
  item.VRRPT_COSTS.Refresh
  gridVRRPT_COSTS.itemCount = item.VRRPT_COSTS.count
  gridVRRPT_COSTS.Refetch
  gridVRRPT_COSTS.Refresh
End Sub
Private Sub cmdVRRPT_COSTSAcc_Click()
On Error Resume Next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 Then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSEdit_Click()
  on error resume next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_COSTS_PRJ.Item = u
    again: frmVRRPT_COSTS_PRJ.NotFirstTime = False
    frmVRRPT_COSTS_PRJ.OnInit
    frmVRRPT_COSTS_PRJ.Show vbModal
    If frmVRRPT_COSTS_PRJ.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_COSTS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSDel_Click()
  on error resume next
  gridVRRPT_COSTS.Delete
End Sub
Private Sub cmdVRRPT_COSTSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_COSTS.Add()

      Set frmVRRPT_COSTS_PRJ.Item = u
      again: frmVRRPT_COSTS_PRJ.NotFirstTime = False
      frmVRRPT_COSTS_PRJ.OnInit
      frmVRRPT_COSTS_PRJ.Show vbModal
      If frmVRRPT_COSTS_PRJ.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_COSTS.ItemCount = Item.VRRPT_COSTS.Count
        gridVRRPT_COSTS.Refresh
        gridVRRPT_COSTS.RefreshGroups
        gridVRRPT_COSTS.Refreshsort
        gridVRRPT_COSTS.MoveToBookmark u.ID &amp; &quot;VRRPT_COSTS&quot;
      Else
        Item.VRRPT_COSTS.Delete u.ID
        Item.VRRPT_COSTS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_COSTSFnd_Click()
  on error resume next
  fndVRRPT_COSTS.ShowForm
End Sub
Private Sub cmdVRRPT_COSTSRun_Click()
  on error resume next
  gridVRRPT_COSTS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_COSTS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_COSTS.LoadRow gridVRRPT_COSTS, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_COSTS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRRPT_COSTS&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRRPT_COSTS_DblClick()
  cmdVRRPT_COSTSEdit_Click
End Sub
Private Sub gridVRRPT_COSTS_KeyPress(KeyAscii As Integer)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_COSTS.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_COSTS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRRPT_COSTS.Row And LastRow &gt; 0 Then
  gridVRRPT_COSTS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRRPT_COSTS.GetRowData(gridVRRPT_COSTS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRRPT_COSTSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_COSTS.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_COSTS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_COSTSCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_COSTS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_COSTS
End If
end sub
private sub mnuVRRPT_COSTSAdd_click()
   menuActionVRRPT_COSTS =&quot;ADD&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSEdit_click()
   menuActionVRRPT_COSTS =&quot;EDIT&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSDelete_click()
   menuActionVRRPT_COSTS =&quot;DEL&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSOpen_click()
   menuActionVRRPT_COSTS =&quot;RUN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSRef_click()
   menuActionVRRPT_COSTS =&quot;REF&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
  Private Sub mnuVRRPT_COSTSCOPY_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_COSTSCUT_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_COSTS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_COSTSCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  If gridVRRPT_COSTS.Row &gt; 0 Then
   If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
      gridVRRPT_COSTS.RefreshRowIndex gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_COSTSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_COSTSPrn_click()
   menuActionVRRPT_COSTS =&quot;PRN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSCfg_click()
   menuActionVRRPT_COSTS =&quot;CFG&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSFind_click()
   menuActionVRRPT_COSTS =&quot;FND&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSAcc_click()
   menuActionVRRPT_COSTS =&quot;ACC&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub menuTimerVRRPT_COSTS_timer()
   menuTimerVRRPT_COSTS.enabled = false
   if menuActionVRRPT_COSTS =&quot;ADD&quot; then cmdVRRPT_COSTSADD_CLick
   if menuActionVRRPT_COSTS =&quot;EDIT&quot; then cmdVRRPT_COSTSEDIT_CLick
   if menuActionVRRPT_COSTS =&quot;DEL&quot; then cmdVRRPT_COSTSDEL_CLick
   if menuActionVRRPT_COSTS =&quot;RUN&quot; then cmdVRRPT_COSTSRUN_CLick
   if menuActionVRRPT_COSTS =&quot;REF&quot; then cmdVRRPT_COSTSREF_CLick
   if menuActionVRRPT_COSTS =&quot;PRN&quot; then cmdVRRPT_COSTSPRN_CLick
   if menuActionVRRPT_COSTS =&quot;CFG&quot; then cmdVRRPT_COSTSCFG_CLick
   if menuActionVRRPT_COSTS =&quot;FND&quot; then cmdVRRPT_COSTSFND_CLick
   if menuActionVRRPT_COSTS =&quot;ACC&quot; then cmdVRRPT_COSTSACC_CLick
   menuActionVRRPT_COSTS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_COSTSAdd,cmdVRRPT_COSTSAdd.tag
  LoadBtnPictures cmdVRRPT_COSTSEdit,cmdVRRPT_COSTSEdit.tag
  LoadBtnPictures cmdVRRPT_COSTSDel,cmdVRRPT_COSTSDel.tag
  LoadBtnPictures cmdVRRPT_COSTSRef,cmdVRRPT_COSTSRef.tag
  LoadBtnPictures cmdVRRPT_COSTSPrn,cmdVRRPT_COSTSPrn.tag
  LoadBtnPictures cmdVRRPT_COSTSFnd,cmdVRRPT_COSTSFnd.tag
  LoadBtnPictures cmdVRRPT_COSTSRun,cmdVRRPT_COSTSRun.tag
  LoadBtnPictures cmdVRRPT_COSTSAcc,cmdVRRPT_COSTSAcc.tag
  LoadBtnPictures cmdVRRPT_COSTSCfg,cmdVRRPT_COSTSCfg.tag
  item.VRRPT_COSTS.PrepareGrid gridVRRPT_COSTS
  LoadGridLayout gridVRRPT_COSTS
  Set fndVRRPT_COSTS = Nothing
  On Error Resume Next
  Set fndVRRPT_COSTS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_COSTS.Init gridVRRPT_COSTS
end sub
private sub OnTabClick()

      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_COSTS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_COSTS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MeetingPlan_PRJ" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridVRRPT_MeetingPlan" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_MeetingPlan"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridVRRPT_Meeters" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_Meeters"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetersFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetersRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Планируемые встречи"/><Properties Name="Name" PropValue="mnuPopupVRRPT_MeetingPlan"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanRef"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanS1"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetingPlanCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanFind"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_MeetingPlan"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupVRRPT_Meeters" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Участники"/><Properties Name="Name" PropValue="mnuPopupVRRPT_Meeters"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersRef"/></ControlData><ControlData Name="mnuVRRPT_MeetersS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersS1"/></ControlData><ControlData Name="mnuVRRPT_MeetersBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetersCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetersCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetersPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetersFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersFind"/></ControlData><ControlData Name="mnuVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_Meeters" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_Meeters"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_MeetingPlan as object
private menuActionVRRPT_MeetingPlan as string
private fndVRRPT_Meeters as object
private menuActionVRRPT_Meeters as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlVRRPT_MeetingPlan_PositionChanged()
  pnlVRRPT_MeetingPlan.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_MeetingPlan_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetingPlanCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_MeetingPlan_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_MeetingPlan
End If
end sub
private sub mnuVRRPT_MeetingPlanAdd_click()
   menuActionVRRPT_MeetingPlan =&quot;ADD&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanEdit_click()
   menuActionVRRPT_MeetingPlan =&quot;EDIT&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanDelete_click()
   menuActionVRRPT_MeetingPlan =&quot;DEL&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanOpen_click()
   menuActionVRRPT_MeetingPlan =&quot;RUN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanRef_click()
   menuActionVRRPT_MeetingPlan =&quot;REF&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
  Private Sub mnuVRRPT_MeetingPlanCOPY_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetingPlanCUT_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_MeetingPlan.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetingPlanCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  If gridVRRPT_MeetingPlan.Row &gt; 0 Then
   If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
      gridVRRPT_MeetingPlan.RefreshRowIndex gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetingPlanCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetingPlanPrn_click()
   menuActionVRRPT_MeetingPlan =&quot;PRN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanCfg_click()
   menuActionVRRPT_MeetingPlan =&quot;CFG&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanFind_click()
   menuActionVRRPT_MeetingPlan =&quot;FND&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanAcc_click()
   menuActionVRRPT_MeetingPlan =&quot;ACC&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub menuTimerVRRPT_MeetingPlan_timer()
   menuTimerVRRPT_MeetingPlan.enabled = false
   if menuActionVRRPT_MeetingPlan =&quot;ADD&quot; then cmdVRRPT_MeetingPlanADD_CLick
   if menuActionVRRPT_MeetingPlan =&quot;EDIT&quot; then cmdVRRPT_MeetingPlanEDIT_CLick
   if menuActionVRRPT_MeetingPlan =&quot;DEL&quot; then cmdVRRPT_MeetingPlanDEL_CLick
   if menuActionVRRPT_MeetingPlan =&quot;RUN&quot; then cmdVRRPT_MeetingPlanRUN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;REF&quot; then cmdVRRPT_MeetingPlanREF_CLick
   if menuActionVRRPT_MeetingPlan =&quot;PRN&quot; then cmdVRRPT_MeetingPlanPRN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;CFG&quot; then cmdVRRPT_MeetingPlanCFG_CLick
   if menuActionVRRPT_MeetingPlan =&quot;FND&quot; then cmdVRRPT_MeetingPlanFND_CLick
   if menuActionVRRPT_MeetingPlan =&quot;ACC&quot; then cmdVRRPT_MeetingPlanACC_CLick
   menuActionVRRPT_MeetingPlan =&quot;&quot;
end sub
Private Sub cmdVRRPT_MeetingPlanCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_MeetingPlan,&quot;gridVRRPT_MeetingPlan&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_MeetingPlan,&quot;Планируемые встречи&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanRef_Click()
  on error resume next
  item.VRRPT_MeetingPlan.Refresh
  gridVRRPT_MeetingPlan.itemCount = item.VRRPT_MeetingPlan.count
  gridVRRPT_MeetingPlan.Refetch
  gridVRRPT_MeetingPlan.Refresh
End Sub
Private Sub cmdVRRPT_MeetingPlanAcc_Click()
On Error Resume Next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanEdit_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_MeetingPlan_PRJ.Item = u
    again: frmVRRPT_MeetingPlan_PRJ.NotFirstTime = False
    frmVRRPT_MeetingPlan_PRJ.OnInit
    frmVRRPT_MeetingPlan_PRJ.Show vbModal
    If frmVRRPT_MeetingPlan_PRJ.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_MeetingPlan.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanDel_Click()
  on error resume next
  gridVRRPT_MeetingPlan.Delete
End Sub
Private Sub cmdVRRPT_MeetingPlanAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_MeetingPlan.Add()

      Set frmVRRPT_MeetingPlan_PRJ.Item = u
      again: frmVRRPT_MeetingPlan_PRJ.NotFirstTime = False
      frmVRRPT_MeetingPlan_PRJ.OnInit
      frmVRRPT_MeetingPlan_PRJ.Show vbModal
      If frmVRRPT_MeetingPlan_PRJ.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_MeetingPlan.ItemCount = Item.VRRPT_MeetingPlan.Count
        gridVRRPT_MeetingPlan.Refresh
        gridVRRPT_MeetingPlan.RefreshGroups
        gridVRRPT_MeetingPlan.Refreshsort
        gridVRRPT_MeetingPlan.MoveToBookmark u.ID &amp; &quot;VRRPT_MeetingPlan&quot;
      Else
        Item.VRRPT_MeetingPlan.Delete u.ID
        Item.VRRPT_MeetingPlan.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_MeetingPlanFnd_Click()
  on error resume next
  fndVRRPT_MeetingPlan.ShowForm
End Sub
Private Sub cmdVRRPT_MeetingPlanRun_Click()
  on error resume next
  gridVRRPT_MeetingPlan_DblClick
End Sub
Private Sub gridVRRPT_MeetingPlan_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_MeetingPlan.LoadRow gridVRRPT_MeetingPlan, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_MeetingPlan_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_MeetingPlan_DblClick()
  cmdVRRPT_MeetingPlanEdit_Click
End Sub
Private Sub gridVRRPT_MeetingPlan_KeyPress(KeyAscii As Integer)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_MeetingPlan.FindOnPress KeyAscii
End Sub

Private Sub pnlVRRPT_MeetingPlan_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridVRRPT_MeetingPlan.Left = Left
  gridVRRPT_MeetingPlan.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_MeetingPlan.Width = Width
  gridVRRPT_MeetingPlan.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuVRRPT_MeetingPlanPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_MeetingPlan.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdVRRPT_MeetersCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_Meeters,&quot;gridVRRPT_Meeters&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_Meeters,&quot;Участники&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersAcc_Click()
On Error Resume Next
If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
If gridVRRPT_Meeters.Row &gt; 0 Then
 If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetersFnd_Click()
  on error resume next
  fndVRRPT_Meeters.ShowForm
End Sub
Private Sub cmdVRRPT_MeetersRun_Click()
  on error resume next
  gridVRRPT_Meeters_DblClick
End Sub
Private Sub pnlVRRPT_MeetingPlan_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridVRRPT_Meeters.Left = Left
  gridVRRPT_Meeters.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_Meeters.Width = Width
  gridVRRPT_Meeters.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdVRRPT_MeetersEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdVRRPT_MeetersRef_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.refresh
   gridVRRPT_Meeters.itemcount=gu.VRRPT_Meeters.count
   gridVRRPT_Meeters.refetch
   gridVRRPT_Meeters.refresh
 else
  gridVRRPT_Meeters.columns.clear
  gridVRRPT_Meeters.itemcount=0
 End If
else
 gridVRRPT_Meeters.columns.clear
 gridVRRPT_Meeters.itemcount=0
End If
End Sub
Private Sub cmdVRRPT_MeetersEdit_Click()
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmVRRPT_Meeters_PRJ.Item = u
    again: frmVRRPT_Meeters_PRJ.NotFirstTime = False
    frmVRRPT_Meeters_PRJ.OnInit
    frmVRRPT_Meeters_PRJ.Show vbModal
    If frmVRRPT_Meeters_PRJ.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_Meeters.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdVRRPT_MeetersDel_Click()
  on error resume next
  gridVRRPT_Meeters.Delete
End Sub
Private Sub cmdVRRPT_MeetersAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.VRRPT_Meeters.Add()

      Set frmVRRPT_Meeters_PRJ.Item = u
      again: frmVRRPT_Meeters_PRJ.NotFirstTime = False
      frmVRRPT_Meeters_PRJ.OnInit
      frmVRRPT_Meeters_PRJ.Show vbModal
      If frmVRRPT_Meeters_PRJ.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_Meeters.ItemCount = gu.VRRPT_Meeters.Count
        gridVRRPT_Meeters.Refresh
        gridVRRPT_Meeters.RefreshGroups
        gridVRRPT_Meeters.Refreshsort
        gridVRRPT_Meeters.MoveToBookmark u.ID &amp; &quot;VRRPT_Meeters&quot;
      Else
        gu.VRRPT_Meeters.Delete u.ID
        gu.VRRPT_Meeters.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridVRRPT_MeetingPlan_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridVRRPT_MeetingPlan.ItemCount = 0 Then 
  gridVRRPT_Meeters.ItemCount=0
  Exit Sub
End If
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row And LastRow &gt; 0 Then
    gridVRRPT_MeetingPlan.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridVRRPT_MeetingPlan.GetRowData(gridVRRPT_MeetingPlan.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row or gridVRRPT_Meeters.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.Preparegrid gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=0
    LoadGridLayout gridVRRPT_Meeters
    Set fndVRRPT_Meeters = Nothing
    Set fndVRRPT_Meeters = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndVRRPT_Meeters.Init gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=gu.VRRPT_Meeters.Count
  End If
 End If
End If
End Sub
Private Sub gridVRRPT_Meeters_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.VRRPT_Meeters.LoadRow gridVRRPT_Meeters, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridVRRPT_Meeters_KeyPress(KeyAscii As Integer)
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_Meeters.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_Meeters_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridVRRPT_Meeters_DblClick()
    cmdVRRPT_MeetersEdit_click
End Sub
Private Sub gridVRRPT_Meeters_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
 If gridVRRPT_Meeters.Row &gt; 0 Then
   If LastRow &lt;&gt; gridVRRPT_Meeters.Row And LastRow &gt; 0 Then
     gridVRRPT_Meeters.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridVRRPT_Meeters.GetRowData(gridVRRPT_Meeters.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuVRRPT_MeetersPASTE_Click()
On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.VRRPT_Meeters.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
    ELSE
      GU.VRRPT_Meeters.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_Meeters_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetersCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_Meeters_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_Meeters
End If
end sub
private sub mnuVRRPT_MeetersAdd_click()
   menuActionVRRPT_Meeters =&quot;ADD&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersEdit_click()
   menuActionVRRPT_Meeters =&quot;EDIT&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersDelete_click()
   menuActionVRRPT_Meeters =&quot;DEL&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersOpen_click()
   menuActionVRRPT_Meeters =&quot;RUN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersRef_click()
   menuActionVRRPT_Meeters =&quot;REF&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
  Private Sub mnuVRRPT_MeetersCOPY_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetersCUT_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_Meeters.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetersCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  If gridVRRPT_Meeters.Row &gt; 0 Then
   If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
      gridVRRPT_Meeters.RefreshRowIndex gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetersCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetersPrn_click()
   menuActionVRRPT_Meeters =&quot;PRN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersCfg_click()
   menuActionVRRPT_Meeters =&quot;CFG&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersFind_click()
   menuActionVRRPT_Meeters =&quot;FND&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersAcc_click()
   menuActionVRRPT_Meeters =&quot;ACC&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub menuTimerVRRPT_Meeters_timer()
   menuTimerVRRPT_Meeters.enabled = false
   if menuActionVRRPT_Meeters =&quot;ADD&quot; then cmdVRRPT_MeetersADD_CLick
   if menuActionVRRPT_Meeters =&quot;EDIT&quot; then cmdVRRPT_MeetersEDIT_CLick
   if menuActionVRRPT_Meeters =&quot;DEL&quot; then cmdVRRPT_MeetersDEL_CLick
   if menuActionVRRPT_Meeters =&quot;RUN&quot; then cmdVRRPT_MeetersRUN_CLick
   if menuActionVRRPT_Meeters =&quot;REF&quot; then cmdVRRPT_MeetersREF_CLick
   if menuActionVRRPT_Meeters =&quot;PRN&quot; then cmdVRRPT_MeetersPRN_CLick
   if menuActionVRRPT_Meeters =&quot;CFG&quot; then cmdVRRPT_MeetersCFG_CLick
   if menuActionVRRPT_Meeters =&quot;FND&quot; then cmdVRRPT_MeetersFND_CLick
   if menuActionVRRPT_Meeters =&quot;ACC&quot; then cmdVRRPT_MeetersACC_CLick
   menuActionVRRPT_Meeters =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MeetingPlanAdd,cmdVRRPT_MeetingPlanAdd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanEdit,cmdVRRPT_MeetingPlanEdit.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanDel,cmdVRRPT_MeetingPlanDel.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRef,cmdVRRPT_MeetingPlanRef.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanPrn,cmdVRRPT_MeetingPlanPrn.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanFnd,cmdVRRPT_MeetingPlanFnd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRun,cmdVRRPT_MeetingPlanRun.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanAcc,cmdVRRPT_MeetingPlanAcc.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanCfg,cmdVRRPT_MeetingPlanCfg.tag
  item.VRRPT_MeetingPlan.PrepareGrid gridVRRPT_MeetingPlan
  LoadGridLayout gridVRRPT_MeetingPlan
  Set fndVRRPT_MeetingPlan = Nothing
  On Error Resume Next
  Set fndVRRPT_MeetingPlan = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_MeetingPlan.Init gridVRRPT_MeetingPlan
  LoadBtnPictures cmdVRRPT_MeetersAdd,cmdVRRPT_MeetersAdd.tag
  LoadBtnPictures cmdVRRPT_MeetersEdit,cmdVRRPT_MeetersEdit.tag
  LoadBtnPictures cmdVRRPT_MeetersDel,cmdVRRPT_MeetersDel.tag
  LoadBtnPictures cmdVRRPT_MeetersRef,cmdVRRPT_MeetersRef.tag
  LoadBtnPictures cmdVRRPT_MeetersPrn,cmdVRRPT_MeetersPrn.tag
  LoadBtnPictures cmdVRRPT_MeetersFnd,cmdVRRPT_MeetersFnd.Tag
  LoadBtnPictures cmdVRRPT_MeetersCfg,cmdVRRPT_MeetersCfg.tag
  LoadBtnPictures cmdVRRPT_MeetersRun,cmdVRRPT_MeetersRun.Tag
  LoadBtnPictures cmdVRRPT_MeetersAcc,cmdVRRPT_MeetersAcc.Tag
  gridVRRPT_Meeters.Columns.Clear
  gridVRRPT_Meeters.ItemCount=0
  cmdVRRPT_MeetersRef_Click
end sub
private sub OnTabClick()

pnlVRRPT_MeetingPlan.RestorePosition
  gridVRRPT_MeetingPlan_RowColChange gridVRRPT_MeetingPlan.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MeetingPlan.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_MeetingPlan = nothing
  set fndVRRPT_Meeters = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlPRJ_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MAIN_PRJ"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_COSTS_PRJ"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MeetingPlan_PRJ"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRRPT_MAIN.IsOK
if IsItOk then IsItOk = pnlVRRPT_COSTS.IsOK
if IsItOk then IsItOk = pnlVRRPT_MeetingPlan.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRRPT_MeetingPlan.Visible = False
  pnlVRRPT_COSTS.Visible = False
  pnlVRRPT_MAIN.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRRPT_MAIN&quot;
     With pnlVRRPT_MAIN
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MAIN.OnClick item,parentform
     End With
   Case &quot;VRRPT_COSTS&quot;
     With pnlVRRPT_COSTS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_COSTS.OnClick item,parentform
     End With
   Case &quot;VRRPT_MeetingPlan&quot;
     With pnlVRRPT_MeetingPlan
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MeetingPlan.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Отчет&quot;
ts.Tabs.Item(1).key = &quot;VRRPT_MAIN&quot;
pnlVRRPT_MAIN.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_COSTS&quot;, &quot;Затраты&quot;)
pnlVRRPT_COSTS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_MeetingPlan&quot;, &quot;Планируемые встречи&quot;)
pnlVRRPT_MeetingPlan.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRRPT2&quot;, &quot;ctlPRJ_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRRPT_MAIN.CloseClass
 pnlVRRPT_COSTS.CloseClass
 pnlVRRPT_MeetingPlan.CloseClass
End Sub
public sub OnSave()
 pnlVRRPT_MAIN.OnSave
 pnlVRRPT_COSTS.OnSave
 pnlVRRPT_MeetingPlan.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRRPT_MAIN.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_COSTS.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_MeetingPlan.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPRJ_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRRPT2GUI.ctlPRJ_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;PRJ&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;PRJ&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;PRJ&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;PRJ&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MAIN_PERS" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAINPERS"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Отчет"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Отчет"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot;
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_COSTS_PERS" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_COSTSPERS"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Затраты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Затраты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot;
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MeetingPlan_PERS" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MeetingPlanPERS"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Планируемые встречи"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Планируемые встречи"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot;
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_Meeters_PERS" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MeetersPERS"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Участники"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Участники"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot;
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MAIN_PERS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAINPERS"><Properties Name="Name" PropValue="editVRRPT_MAIN"/></ControlData><ControlData Name="cmdVRRPT_MAINSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRRPT_MAIN_UpdateName_PERS(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=year(.TheDate) &amp; &quot;.&quot; &amp; right(&quot;0&quot; &amp; month(.TheDate),2)  &amp;  &quot;.&quot; &amp; right(&quot;0&quot; &amp; Day(.TheDate),2) &amp; &quot; |&quot; &amp; .Author.Brief &amp; &quot;|  &quot; &amp; .Name,  RowItem:=RowItem
end with
end sub
Private Sub cmdVRRPT_MAINRef_Click()
  on error resume next
  Item.VRRPT_MAIN.Refresh
  cmdVRRPT_MAINAdd_Click
End Sub
Private Sub cmdVRRPT_MAINCfg_Click()
    on error resume next 
    editVRRPT_MAIN.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_PERS&quot; For Output As #ff
    print #ff, editVRRPT_MAIN.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdVRRPT_MAINAdd_Click()
  on error resume next
 dim u as object
 If Item.VRRPT_MAIN.Count = 0 Then
   set u=Item.VRRPT_MAIN.Add
set u.Autor = u.Application.FindRowObject(&quot;Users&quot;, u.application.mtzsession.GetSessionUserID())

 End If
 Set editVRRPT_MAIN.Item = Item.VRRPT_MAIN.Item(1)
 editVRRPT_MAIN.InitPanel
 cmdVRRPT_MAINSave.Enabled = True
End Sub
Private Sub cmdVRRPT_MAINDel_Click()
  on error resume next
  if  editVRRPT_MAIN.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editVRRPT_MAIN.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editVRRPT_MAIN.item.parent.Delete editVRRPT_MAIN.item.id
    cmdVRRPT_MAINSave.Enabled = false
    editVRRPT_MAIN.Enabled = false
    set editVRRPT_MAIN.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editVRRPT_MAIN_Changed()
 cmdVRRPT_MAINSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editVRRPT_MAIN.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdVRRPT_MAINSave_Click()
  on error resume next
    if editVRRPT_MAIN.IsOK then
    MousePointer = vbHourglass
    editVRRPT_MAIN.Save
  on error goto bye
    editVRRPT_MAIN.item.Save
    MousePointer = vbNormal
        opVRRPT_MAIN_UpdateName_PERS editVRRPT_MAIN.item
    cmdVRRPT_MAINSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editVRRPT_MAIN.item.REFRESH
  'editVRRPT_MAIN.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MAINSave,cmdVRRPT_MAINSave.tag
  LoadBtnPictures cmdVRRPT_MAINRef,cmdVRRPT_MAINRef.tag
  LoadBtnPictures cmdVRRPT_MAINCfg,cmdVRRPT_MAINCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_PERS&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editVRRPT_MAIN.PanelCustomisationString = buf
  cmdVRRPT_MAINAdd_click
end sub
private sub OnTabClick()

      editVRRPT_MAIN.Top = 40 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Left = 5 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editVRRPT_MAIN.Save
if editVRRPT_MAIN.item.Changed then
  editVRRPT_MAIN.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editVRRPT_MAIN.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MAIN.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_COSTS_PERS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRRPT_COSTS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_COSTS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_COSTSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_COSTSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_COSTS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Затраты"/><Properties Name="Name" PropValue="mnuPopupVRRPT_COSTS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSOpen"/></ControlData><ControlData Name="mnuVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSRef"/></ControlData><ControlData Name="mnuVRRPT_COSTSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSS1"/></ControlData><ControlData Name="mnuVRRPT_COSTSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_COSTSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCOPY"/></ControlData><ControlData Name="mnuVRRPT_COSTSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCUT"/></ControlData><ControlData Name="mnuVRRPT_COSTSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPASTE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCHANGE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPrn"/></ControlData><ControlData Name="mnuVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCfg"/></ControlData><ControlData Name="mnuVRRPT_COSTSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSFind"/></ControlData><ControlData Name="mnuVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_COSTS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_COSTS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_COSTS as object
private menuActionVRRPT_COSTS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRRPT_COSTSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_COSTS,&quot;gridVRRPT_COSTS&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_COSTS,&quot;Затраты&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSRef_Click()
  on error resume next
  item.VRRPT_COSTS.Refresh
  gridVRRPT_COSTS.itemCount = item.VRRPT_COSTS.count
  gridVRRPT_COSTS.Refetch
  gridVRRPT_COSTS.Refresh
End Sub
Private Sub cmdVRRPT_COSTSAcc_Click()
On Error Resume Next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 Then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSEdit_Click()
  on error resume next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_COSTS_PERS.Item = u
    again: frmVRRPT_COSTS_PERS.NotFirstTime = False
    frmVRRPT_COSTS_PERS.OnInit
    frmVRRPT_COSTS_PERS.Show vbModal
    If frmVRRPT_COSTS_PERS.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_COSTS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSDel_Click()
  on error resume next
  gridVRRPT_COSTS.Delete
End Sub
Private Sub cmdVRRPT_COSTSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_COSTS.Add()

      Set frmVRRPT_COSTS_PERS.Item = u
      again: frmVRRPT_COSTS_PERS.NotFirstTime = False
      frmVRRPT_COSTS_PERS.OnInit
      frmVRRPT_COSTS_PERS.Show vbModal
      If frmVRRPT_COSTS_PERS.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_COSTS.ItemCount = Item.VRRPT_COSTS.Count
        gridVRRPT_COSTS.Refresh
        gridVRRPT_COSTS.RefreshGroups
        gridVRRPT_COSTS.Refreshsort
        gridVRRPT_COSTS.MoveToBookmark u.ID &amp; &quot;VRRPT_COSTS&quot;
      Else
        Item.VRRPT_COSTS.Delete u.ID
        Item.VRRPT_COSTS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_COSTSFnd_Click()
  on error resume next
  fndVRRPT_COSTS.ShowForm
End Sub
Private Sub cmdVRRPT_COSTSRun_Click()
  on error resume next
  gridVRRPT_COSTS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_COSTS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_COSTS.LoadRow gridVRRPT_COSTS, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_COSTS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRRPT_COSTS&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRRPT_COSTS_DblClick()
  cmdVRRPT_COSTSEdit_Click
End Sub
Private Sub gridVRRPT_COSTS_KeyPress(KeyAscii As Integer)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_COSTS.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_COSTS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRRPT_COSTS.Row And LastRow &gt; 0 Then
  gridVRRPT_COSTS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRRPT_COSTS.GetRowData(gridVRRPT_COSTS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRRPT_COSTSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_COSTS.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_COSTS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_COSTSCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_COSTS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_COSTS
End If
end sub
private sub mnuVRRPT_COSTSAdd_click()
   menuActionVRRPT_COSTS =&quot;ADD&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSEdit_click()
   menuActionVRRPT_COSTS =&quot;EDIT&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSDelete_click()
   menuActionVRRPT_COSTS =&quot;DEL&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSOpen_click()
   menuActionVRRPT_COSTS =&quot;RUN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSRef_click()
   menuActionVRRPT_COSTS =&quot;REF&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
  Private Sub mnuVRRPT_COSTSCOPY_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_COSTSCUT_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_COSTS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_COSTSCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  If gridVRRPT_COSTS.Row &gt; 0 Then
   If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
      gridVRRPT_COSTS.RefreshRowIndex gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_COSTSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_COSTSPrn_click()
   menuActionVRRPT_COSTS =&quot;PRN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSCfg_click()
   menuActionVRRPT_COSTS =&quot;CFG&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSFind_click()
   menuActionVRRPT_COSTS =&quot;FND&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSAcc_click()
   menuActionVRRPT_COSTS =&quot;ACC&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub menuTimerVRRPT_COSTS_timer()
   menuTimerVRRPT_COSTS.enabled = false
   if menuActionVRRPT_COSTS =&quot;ADD&quot; then cmdVRRPT_COSTSADD_CLick
   if menuActionVRRPT_COSTS =&quot;EDIT&quot; then cmdVRRPT_COSTSEDIT_CLick
   if menuActionVRRPT_COSTS =&quot;DEL&quot; then cmdVRRPT_COSTSDEL_CLick
   if menuActionVRRPT_COSTS =&quot;RUN&quot; then cmdVRRPT_COSTSRUN_CLick
   if menuActionVRRPT_COSTS =&quot;REF&quot; then cmdVRRPT_COSTSREF_CLick
   if menuActionVRRPT_COSTS =&quot;PRN&quot; then cmdVRRPT_COSTSPRN_CLick
   if menuActionVRRPT_COSTS =&quot;CFG&quot; then cmdVRRPT_COSTSCFG_CLick
   if menuActionVRRPT_COSTS =&quot;FND&quot; then cmdVRRPT_COSTSFND_CLick
   if menuActionVRRPT_COSTS =&quot;ACC&quot; then cmdVRRPT_COSTSACC_CLick
   menuActionVRRPT_COSTS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_COSTSAdd,cmdVRRPT_COSTSAdd.tag
  LoadBtnPictures cmdVRRPT_COSTSEdit,cmdVRRPT_COSTSEdit.tag
  LoadBtnPictures cmdVRRPT_COSTSDel,cmdVRRPT_COSTSDel.tag
  LoadBtnPictures cmdVRRPT_COSTSRef,cmdVRRPT_COSTSRef.tag
  LoadBtnPictures cmdVRRPT_COSTSPrn,cmdVRRPT_COSTSPrn.tag
  LoadBtnPictures cmdVRRPT_COSTSFnd,cmdVRRPT_COSTSFnd.tag
  LoadBtnPictures cmdVRRPT_COSTSRun,cmdVRRPT_COSTSRun.tag
  LoadBtnPictures cmdVRRPT_COSTSAcc,cmdVRRPT_COSTSAcc.tag
  LoadBtnPictures cmdVRRPT_COSTSCfg,cmdVRRPT_COSTSCfg.tag
  item.VRRPT_COSTS.PrepareGrid gridVRRPT_COSTS
  LoadGridLayout gridVRRPT_COSTS
  Set fndVRRPT_COSTS = Nothing
  On Error Resume Next
  Set fndVRRPT_COSTS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_COSTS.Init gridVRRPT_COSTS
end sub
private sub OnTabClick()

      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_COSTS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_COSTS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MeetingPlan_PERS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridVRRPT_MeetingPlan" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_MeetingPlan"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridVRRPT_Meeters" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_Meeters"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetersFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetersRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Планируемые встречи"/><Properties Name="Name" PropValue="mnuPopupVRRPT_MeetingPlan"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanRef"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanS1"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetingPlanCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanFind"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_MeetingPlan"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupVRRPT_Meeters" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Участники"/><Properties Name="Name" PropValue="mnuPopupVRRPT_Meeters"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersRef"/></ControlData><ControlData Name="mnuVRRPT_MeetersS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersS1"/></ControlData><ControlData Name="mnuVRRPT_MeetersBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetersCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetersCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetersPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetersFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersFind"/></ControlData><ControlData Name="mnuVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_Meeters" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_Meeters"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_MeetingPlan as object
private menuActionVRRPT_MeetingPlan as string
private fndVRRPT_Meeters as object
private menuActionVRRPT_Meeters as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlVRRPT_MeetingPlan_PositionChanged()
  pnlVRRPT_MeetingPlan.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_MeetingPlan_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetingPlanCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_MeetingPlan_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_MeetingPlan
End If
end sub
private sub mnuVRRPT_MeetingPlanAdd_click()
   menuActionVRRPT_MeetingPlan =&quot;ADD&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanEdit_click()
   menuActionVRRPT_MeetingPlan =&quot;EDIT&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanDelete_click()
   menuActionVRRPT_MeetingPlan =&quot;DEL&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanOpen_click()
   menuActionVRRPT_MeetingPlan =&quot;RUN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanRef_click()
   menuActionVRRPT_MeetingPlan =&quot;REF&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
  Private Sub mnuVRRPT_MeetingPlanCOPY_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetingPlanCUT_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_MeetingPlan.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetingPlanCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  If gridVRRPT_MeetingPlan.Row &gt; 0 Then
   If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
      gridVRRPT_MeetingPlan.RefreshRowIndex gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetingPlanCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetingPlanPrn_click()
   menuActionVRRPT_MeetingPlan =&quot;PRN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanCfg_click()
   menuActionVRRPT_MeetingPlan =&quot;CFG&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanFind_click()
   menuActionVRRPT_MeetingPlan =&quot;FND&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanAcc_click()
   menuActionVRRPT_MeetingPlan =&quot;ACC&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub menuTimerVRRPT_MeetingPlan_timer()
   menuTimerVRRPT_MeetingPlan.enabled = false
   if menuActionVRRPT_MeetingPlan =&quot;ADD&quot; then cmdVRRPT_MeetingPlanADD_CLick
   if menuActionVRRPT_MeetingPlan =&quot;EDIT&quot; then cmdVRRPT_MeetingPlanEDIT_CLick
   if menuActionVRRPT_MeetingPlan =&quot;DEL&quot; then cmdVRRPT_MeetingPlanDEL_CLick
   if menuActionVRRPT_MeetingPlan =&quot;RUN&quot; then cmdVRRPT_MeetingPlanRUN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;REF&quot; then cmdVRRPT_MeetingPlanREF_CLick
   if menuActionVRRPT_MeetingPlan =&quot;PRN&quot; then cmdVRRPT_MeetingPlanPRN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;CFG&quot; then cmdVRRPT_MeetingPlanCFG_CLick
   if menuActionVRRPT_MeetingPlan =&quot;FND&quot; then cmdVRRPT_MeetingPlanFND_CLick
   if menuActionVRRPT_MeetingPlan =&quot;ACC&quot; then cmdVRRPT_MeetingPlanACC_CLick
   menuActionVRRPT_MeetingPlan =&quot;&quot;
end sub
Private Sub cmdVRRPT_MeetingPlanCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_MeetingPlan,&quot;gridVRRPT_MeetingPlan&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_MeetingPlan,&quot;Планируемые встречи&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanRef_Click()
  on error resume next
  item.VRRPT_MeetingPlan.Refresh
  gridVRRPT_MeetingPlan.itemCount = item.VRRPT_MeetingPlan.count
  gridVRRPT_MeetingPlan.Refetch
  gridVRRPT_MeetingPlan.Refresh
End Sub
Private Sub cmdVRRPT_MeetingPlanAcc_Click()
On Error Resume Next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanEdit_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_MeetingPlan_PERS.Item = u
    again: frmVRRPT_MeetingPlan_PERS.NotFirstTime = False
    frmVRRPT_MeetingPlan_PERS.OnInit
    frmVRRPT_MeetingPlan_PERS.Show vbModal
    If frmVRRPT_MeetingPlan_PERS.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_MeetingPlan.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanDel_Click()
  on error resume next
  gridVRRPT_MeetingPlan.Delete
End Sub
Private Sub cmdVRRPT_MeetingPlanAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_MeetingPlan.Add()

      Set frmVRRPT_MeetingPlan_PERS.Item = u
      again: frmVRRPT_MeetingPlan_PERS.NotFirstTime = False
      frmVRRPT_MeetingPlan_PERS.OnInit
      frmVRRPT_MeetingPlan_PERS.Show vbModal
      If frmVRRPT_MeetingPlan_PERS.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_MeetingPlan.ItemCount = Item.VRRPT_MeetingPlan.Count
        gridVRRPT_MeetingPlan.Refresh
        gridVRRPT_MeetingPlan.RefreshGroups
        gridVRRPT_MeetingPlan.Refreshsort
        gridVRRPT_MeetingPlan.MoveToBookmark u.ID &amp; &quot;VRRPT_MeetingPlan&quot;
      Else
        Item.VRRPT_MeetingPlan.Delete u.ID
        Item.VRRPT_MeetingPlan.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_MeetingPlanFnd_Click()
  on error resume next
  fndVRRPT_MeetingPlan.ShowForm
End Sub
Private Sub cmdVRRPT_MeetingPlanRun_Click()
  on error resume next
  gridVRRPT_MeetingPlan_DblClick
End Sub
Private Sub gridVRRPT_MeetingPlan_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_MeetingPlan.LoadRow gridVRRPT_MeetingPlan, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_MeetingPlan_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_MeetingPlan_DblClick()
  cmdVRRPT_MeetingPlanEdit_Click
End Sub
Private Sub gridVRRPT_MeetingPlan_KeyPress(KeyAscii As Integer)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_MeetingPlan.FindOnPress KeyAscii
End Sub

Private Sub pnlVRRPT_MeetingPlan_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridVRRPT_MeetingPlan.Left = Left
  gridVRRPT_MeetingPlan.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_MeetingPlan.Width = Width
  gridVRRPT_MeetingPlan.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuVRRPT_MeetingPlanPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_MeetingPlan.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdVRRPT_MeetersCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_Meeters,&quot;gridVRRPT_Meeters&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_Meeters,&quot;Участники&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersAcc_Click()
On Error Resume Next
If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
If gridVRRPT_Meeters.Row &gt; 0 Then
 If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetersFnd_Click()
  on error resume next
  fndVRRPT_Meeters.ShowForm
End Sub
Private Sub cmdVRRPT_MeetersRun_Click()
  on error resume next
  gridVRRPT_Meeters_DblClick
End Sub
Private Sub pnlVRRPT_MeetingPlan_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridVRRPT_Meeters.Left = Left
  gridVRRPT_Meeters.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_Meeters.Width = Width
  gridVRRPT_Meeters.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdVRRPT_MeetersEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdVRRPT_MeetersRef_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.refresh
   gridVRRPT_Meeters.itemcount=gu.VRRPT_Meeters.count
   gridVRRPT_Meeters.refetch
   gridVRRPT_Meeters.refresh
 else
  gridVRRPT_Meeters.columns.clear
  gridVRRPT_Meeters.itemcount=0
 End If
else
 gridVRRPT_Meeters.columns.clear
 gridVRRPT_Meeters.itemcount=0
End If
End Sub
Private Sub cmdVRRPT_MeetersEdit_Click()
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmVRRPT_Meeters_PERS.Item = u
    again: frmVRRPT_Meeters_PERS.NotFirstTime = False
    frmVRRPT_Meeters_PERS.OnInit
    frmVRRPT_Meeters_PERS.Show vbModal
    If frmVRRPT_Meeters_PERS.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_Meeters.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdVRRPT_MeetersDel_Click()
  on error resume next
  gridVRRPT_Meeters.Delete
End Sub
Private Sub cmdVRRPT_MeetersAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.VRRPT_Meeters.Add()

      Set frmVRRPT_Meeters_PERS.Item = u
      again: frmVRRPT_Meeters_PERS.NotFirstTime = False
      frmVRRPT_Meeters_PERS.OnInit
      frmVRRPT_Meeters_PERS.Show vbModal
      If frmVRRPT_Meeters_PERS.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_Meeters.ItemCount = gu.VRRPT_Meeters.Count
        gridVRRPT_Meeters.Refresh
        gridVRRPT_Meeters.RefreshGroups
        gridVRRPT_Meeters.Refreshsort
        gridVRRPT_Meeters.MoveToBookmark u.ID &amp; &quot;VRRPT_Meeters&quot;
      Else
        gu.VRRPT_Meeters.Delete u.ID
        gu.VRRPT_Meeters.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridVRRPT_MeetingPlan_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridVRRPT_MeetingPlan.ItemCount = 0 Then 
  gridVRRPT_Meeters.ItemCount=0
  Exit Sub
End If
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row And LastRow &gt; 0 Then
    gridVRRPT_MeetingPlan.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridVRRPT_MeetingPlan.GetRowData(gridVRRPT_MeetingPlan.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row or gridVRRPT_Meeters.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.Preparegrid gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=0
    LoadGridLayout gridVRRPT_Meeters
    Set fndVRRPT_Meeters = Nothing
    Set fndVRRPT_Meeters = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndVRRPT_Meeters.Init gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=gu.VRRPT_Meeters.Count
  End If
 End If
End If
End Sub
Private Sub gridVRRPT_Meeters_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.VRRPT_Meeters.LoadRow gridVRRPT_Meeters, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridVRRPT_Meeters_KeyPress(KeyAscii As Integer)
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_Meeters.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_Meeters_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridVRRPT_Meeters_DblClick()
    cmdVRRPT_MeetersEdit_click
End Sub
Private Sub gridVRRPT_Meeters_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
 If gridVRRPT_Meeters.Row &gt; 0 Then
   If LastRow &lt;&gt; gridVRRPT_Meeters.Row And LastRow &gt; 0 Then
     gridVRRPT_Meeters.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridVRRPT_Meeters.GetRowData(gridVRRPT_Meeters.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuVRRPT_MeetersPASTE_Click()
On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.VRRPT_Meeters.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
    ELSE
      GU.VRRPT_Meeters.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_Meeters_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetersCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_Meeters_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_Meeters
End If
end sub
private sub mnuVRRPT_MeetersAdd_click()
   menuActionVRRPT_Meeters =&quot;ADD&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersEdit_click()
   menuActionVRRPT_Meeters =&quot;EDIT&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersDelete_click()
   menuActionVRRPT_Meeters =&quot;DEL&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersOpen_click()
   menuActionVRRPT_Meeters =&quot;RUN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersRef_click()
   menuActionVRRPT_Meeters =&quot;REF&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
  Private Sub mnuVRRPT_MeetersCOPY_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetersCUT_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_Meeters.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetersCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  If gridVRRPT_Meeters.Row &gt; 0 Then
   If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
      gridVRRPT_Meeters.RefreshRowIndex gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetersCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetersPrn_click()
   menuActionVRRPT_Meeters =&quot;PRN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersCfg_click()
   menuActionVRRPT_Meeters =&quot;CFG&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersFind_click()
   menuActionVRRPT_Meeters =&quot;FND&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersAcc_click()
   menuActionVRRPT_Meeters =&quot;ACC&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub menuTimerVRRPT_Meeters_timer()
   menuTimerVRRPT_Meeters.enabled = false
   if menuActionVRRPT_Meeters =&quot;ADD&quot; then cmdVRRPT_MeetersADD_CLick
   if menuActionVRRPT_Meeters =&quot;EDIT&quot; then cmdVRRPT_MeetersEDIT_CLick
   if menuActionVRRPT_Meeters =&quot;DEL&quot; then cmdVRRPT_MeetersDEL_CLick
   if menuActionVRRPT_Meeters =&quot;RUN&quot; then cmdVRRPT_MeetersRUN_CLick
   if menuActionVRRPT_Meeters =&quot;REF&quot; then cmdVRRPT_MeetersREF_CLick
   if menuActionVRRPT_Meeters =&quot;PRN&quot; then cmdVRRPT_MeetersPRN_CLick
   if menuActionVRRPT_Meeters =&quot;CFG&quot; then cmdVRRPT_MeetersCFG_CLick
   if menuActionVRRPT_Meeters =&quot;FND&quot; then cmdVRRPT_MeetersFND_CLick
   if menuActionVRRPT_Meeters =&quot;ACC&quot; then cmdVRRPT_MeetersACC_CLick
   menuActionVRRPT_Meeters =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MeetingPlanAdd,cmdVRRPT_MeetingPlanAdd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanEdit,cmdVRRPT_MeetingPlanEdit.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanDel,cmdVRRPT_MeetingPlanDel.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRef,cmdVRRPT_MeetingPlanRef.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanPrn,cmdVRRPT_MeetingPlanPrn.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanFnd,cmdVRRPT_MeetingPlanFnd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRun,cmdVRRPT_MeetingPlanRun.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanAcc,cmdVRRPT_MeetingPlanAcc.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanCfg,cmdVRRPT_MeetingPlanCfg.tag
  item.VRRPT_MeetingPlan.PrepareGrid gridVRRPT_MeetingPlan
  LoadGridLayout gridVRRPT_MeetingPlan
  Set fndVRRPT_MeetingPlan = Nothing
  On Error Resume Next
  Set fndVRRPT_MeetingPlan = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_MeetingPlan.Init gridVRRPT_MeetingPlan
  LoadBtnPictures cmdVRRPT_MeetersAdd,cmdVRRPT_MeetersAdd.tag
  LoadBtnPictures cmdVRRPT_MeetersEdit,cmdVRRPT_MeetersEdit.tag
  LoadBtnPictures cmdVRRPT_MeetersDel,cmdVRRPT_MeetersDel.tag
  LoadBtnPictures cmdVRRPT_MeetersRef,cmdVRRPT_MeetersRef.tag
  LoadBtnPictures cmdVRRPT_MeetersPrn,cmdVRRPT_MeetersPrn.tag
  LoadBtnPictures cmdVRRPT_MeetersFnd,cmdVRRPT_MeetersFnd.Tag
  LoadBtnPictures cmdVRRPT_MeetersCfg,cmdVRRPT_MeetersCfg.tag
  LoadBtnPictures cmdVRRPT_MeetersRun,cmdVRRPT_MeetersRun.Tag
  LoadBtnPictures cmdVRRPT_MeetersAcc,cmdVRRPT_MeetersAcc.Tag
  gridVRRPT_Meeters.Columns.Clear
  gridVRRPT_Meeters.ItemCount=0
  cmdVRRPT_MeetersRef_Click
end sub
private sub OnTabClick()

pnlVRRPT_MeetingPlan.RestorePosition
  gridVRRPT_MeetingPlan_RowColChange gridVRRPT_MeetingPlan.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MeetingPlan.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_MeetingPlan = nothing
  set fndVRRPT_Meeters = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlPERS_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MAIN_PERS"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_COSTS_PERS"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MeetingPlan_PERS"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRRPT_MAIN.IsOK
if IsItOk then IsItOk = pnlVRRPT_COSTS.IsOK
if IsItOk then IsItOk = pnlVRRPT_MeetingPlan.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRRPT_MeetingPlan.Visible = False
  pnlVRRPT_COSTS.Visible = False
  pnlVRRPT_MAIN.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRRPT_MAIN&quot;
     With pnlVRRPT_MAIN
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MAIN.OnClick item,parentform
     End With
   Case &quot;VRRPT_COSTS&quot;
     With pnlVRRPT_COSTS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_COSTS.OnClick item,parentform
     End With
   Case &quot;VRRPT_MeetingPlan&quot;
     With pnlVRRPT_MeetingPlan
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MeetingPlan.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Отчет&quot;
ts.Tabs.Item(1).key = &quot;VRRPT_MAIN&quot;
pnlVRRPT_MAIN.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_COSTS&quot;, &quot;Затраты&quot;)
pnlVRRPT_COSTS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_MeetingPlan&quot;, &quot;Планируемые встречи&quot;)
pnlVRRPT_MeetingPlan.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRRPT2&quot;, &quot;ctlPERS_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRRPT_MAIN.CloseClass
 pnlVRRPT_COSTS.CloseClass
 pnlVRRPT_MeetingPlan.CloseClass
End Sub
public sub OnSave()
 pnlVRRPT_MAIN.OnSave
 pnlVRRPT_COSTS.OnSave
 pnlVRRPT_MeetingPlan.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRRPT_MAIN.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_COSTS.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_MeetingPlan.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPERS_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRRPT2GUI.ctlPERS_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;PERS&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;PERS&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;PERS&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;PERS&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MAIN_CLNT" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAINCLNT"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Отчет"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Отчет"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot;
  Open s &amp; Me.name &amp; &quot;{1E99D9E2-F1E7-4D29-9D5F-D773C65699B6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_COSTS_CLNT" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_COSTSCLNT"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Затраты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Затраты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot;
  Open s &amp; Me.name &amp; &quot;{241070B1-2AE2-477F-BD02-022A02BCB7FE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_MeetingPlan_CLNT" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MeetingPlanCLNT"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Планируемые встречи"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Планируемые встречи"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot;
  Open s &amp; Me.name &amp; &quot;{601DD18A-6DC9-4F1C-AAF9-067068FC147C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRRPT_Meeters_CLNT" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MeetersCLNT"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Участники"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Участники"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot;
  Open s &amp; Me.name &amp; &quot;{FA102A06-F48B-4374-93A7-817277933731}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MAIN_CLNT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAINCLNT"><Properties Name="Name" PropValue="editVRRPT_MAIN"/></ControlData><ControlData Name="cmdVRRPT_MAINSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRRPT_MAIN_UpdateName_CLNT(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=year(.TheDate) &amp; &quot;.&quot; &amp; right(&quot;0&quot; &amp; month(.TheDate),2)  &amp;  &quot;.&quot; &amp; right(&quot;0&quot; &amp; Day(.TheDate),2) &amp; &quot; |&quot; &amp; .Author.Brief &amp; &quot;|  &quot; &amp; .Name,  RowItem:=RowItem
end with
end sub
Private Sub cmdVRRPT_MAINRef_Click()
  on error resume next
  Item.VRRPT_MAIN.Refresh
  cmdVRRPT_MAINAdd_Click
End Sub
Private Sub cmdVRRPT_MAINCfg_Click()
    on error resume next 
    editVRRPT_MAIN.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_CLNT&quot; For Output As #ff
    print #ff, editVRRPT_MAIN.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdVRRPT_MAINAdd_Click()
  on error resume next
 dim u as object
 If Item.VRRPT_MAIN.Count = 0 Then
   set u=Item.VRRPT_MAIN.Add
set u.Autor = u.Application.FindRowObject(&quot;Users&quot;, u.application.mtzsession.GetSessionUserID())

 End If
 Set editVRRPT_MAIN.Item = Item.VRRPT_MAIN.Item(1)
 editVRRPT_MAIN.InitPanel
 cmdVRRPT_MAINSave.Enabled = True
End Sub
Private Sub cmdVRRPT_MAINDel_Click()
  on error resume next
  if  editVRRPT_MAIN.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editVRRPT_MAIN.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editVRRPT_MAIN.item.parent.Delete editVRRPT_MAIN.item.id
    cmdVRRPT_MAINSave.Enabled = false
    editVRRPT_MAIN.Enabled = false
    set editVRRPT_MAIN.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editVRRPT_MAIN_Changed()
 cmdVRRPT_MAINSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editVRRPT_MAIN.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdVRRPT_MAINSave_Click()
  on error resume next
    if editVRRPT_MAIN.IsOK then
    MousePointer = vbHourglass
    editVRRPT_MAIN.Save
  on error goto bye
    editVRRPT_MAIN.item.Save
    MousePointer = vbNormal
        opVRRPT_MAIN_UpdateName_CLNT editVRRPT_MAIN.item
    cmdVRRPT_MAINSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editVRRPT_MAIN.item.REFRESH
  'editVRRPT_MAIN.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MAINSave,cmdVRRPT_MAINSave.tag
  LoadBtnPictures cmdVRRPT_MAINRef,cmdVRRPT_MAINRef.tag
  LoadBtnPictures cmdVRRPT_MAINCfg,cmdVRRPT_MAINCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_CLNT&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editVRRPT_MAIN.PanelCustomisationString = buf
  cmdVRRPT_MAINAdd_click
end sub
private sub OnTabClick()

      editVRRPT_MAIN.Top = 40 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Left = 5 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editVRRPT_MAIN.Save
if editVRRPT_MAIN.item.Changed then
  editVRRPT_MAIN.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editVRRPT_MAIN.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MAIN.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_COSTS_CLNT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRRPT_COSTS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_COSTS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_COSTSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_COSTSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_COSTS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Затраты"/><Properties Name="Name" PropValue="mnuPopupVRRPT_COSTS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSOpen"/></ControlData><ControlData Name="mnuVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSRef"/></ControlData><ControlData Name="mnuVRRPT_COSTSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSS1"/></ControlData><ControlData Name="mnuVRRPT_COSTSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_COSTSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCOPY"/></ControlData><ControlData Name="mnuVRRPT_COSTSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCUT"/></ControlData><ControlData Name="mnuVRRPT_COSTSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPASTE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCHANGE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPrn"/></ControlData><ControlData Name="mnuVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCfg"/></ControlData><ControlData Name="mnuVRRPT_COSTSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSFind"/></ControlData><ControlData Name="mnuVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_COSTS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_COSTS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_COSTS as object
private menuActionVRRPT_COSTS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRRPT_COSTSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_COSTS,&quot;gridVRRPT_COSTS&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_COSTS,&quot;Затраты&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSRef_Click()
  on error resume next
  item.VRRPT_COSTS.Refresh
  gridVRRPT_COSTS.itemCount = item.VRRPT_COSTS.count
  gridVRRPT_COSTS.Refetch
  gridVRRPT_COSTS.Refresh
End Sub
Private Sub cmdVRRPT_COSTSAcc_Click()
On Error Resume Next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 Then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSEdit_Click()
  on error resume next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_COSTS_CLNT.Item = u
    again: frmVRRPT_COSTS_CLNT.NotFirstTime = False
    frmVRRPT_COSTS_CLNT.OnInit
    frmVRRPT_COSTS_CLNT.Show vbModal
    If frmVRRPT_COSTS_CLNT.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_COSTS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSDel_Click()
  on error resume next
  gridVRRPT_COSTS.Delete
End Sub
Private Sub cmdVRRPT_COSTSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_COSTS.Add()

      Set frmVRRPT_COSTS_CLNT.Item = u
      again: frmVRRPT_COSTS_CLNT.NotFirstTime = False
      frmVRRPT_COSTS_CLNT.OnInit
      frmVRRPT_COSTS_CLNT.Show vbModal
      If frmVRRPT_COSTS_CLNT.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_COSTS.ItemCount = Item.VRRPT_COSTS.Count
        gridVRRPT_COSTS.Refresh
        gridVRRPT_COSTS.RefreshGroups
        gridVRRPT_COSTS.Refreshsort
        gridVRRPT_COSTS.MoveToBookmark u.ID &amp; &quot;VRRPT_COSTS&quot;
      Else
        Item.VRRPT_COSTS.Delete u.ID
        Item.VRRPT_COSTS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_COSTSFnd_Click()
  on error resume next
  fndVRRPT_COSTS.ShowForm
End Sub
Private Sub cmdVRRPT_COSTSRun_Click()
  on error resume next
  gridVRRPT_COSTS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_COSTS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_COSTS.LoadRow gridVRRPT_COSTS, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_COSTS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRRPT_COSTS&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRRPT_COSTS_DblClick()
  cmdVRRPT_COSTSEdit_Click
End Sub
Private Sub gridVRRPT_COSTS_KeyPress(KeyAscii As Integer)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_COSTS.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_COSTS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRRPT_COSTS.Row And LastRow &gt; 0 Then
  gridVRRPT_COSTS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRRPT_COSTS.GetRowData(gridVRRPT_COSTS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRRPT_COSTSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_COSTS.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_COSTS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_COSTSCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_COSTS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_COSTS
End If
end sub
private sub mnuVRRPT_COSTSAdd_click()
   menuActionVRRPT_COSTS =&quot;ADD&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSEdit_click()
   menuActionVRRPT_COSTS =&quot;EDIT&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSDelete_click()
   menuActionVRRPT_COSTS =&quot;DEL&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSOpen_click()
   menuActionVRRPT_COSTS =&quot;RUN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSRef_click()
   menuActionVRRPT_COSTS =&quot;REF&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
  Private Sub mnuVRRPT_COSTSCOPY_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_COSTSCUT_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_COSTS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_COSTSCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  If gridVRRPT_COSTS.Row &gt; 0 Then
   If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
      gridVRRPT_COSTS.RefreshRowIndex gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_COSTSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_COSTSPrn_click()
   menuActionVRRPT_COSTS =&quot;PRN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSCfg_click()
   menuActionVRRPT_COSTS =&quot;CFG&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSFind_click()
   menuActionVRRPT_COSTS =&quot;FND&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSAcc_click()
   menuActionVRRPT_COSTS =&quot;ACC&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub menuTimerVRRPT_COSTS_timer()
   menuTimerVRRPT_COSTS.enabled = false
   if menuActionVRRPT_COSTS =&quot;ADD&quot; then cmdVRRPT_COSTSADD_CLick
   if menuActionVRRPT_COSTS =&quot;EDIT&quot; then cmdVRRPT_COSTSEDIT_CLick
   if menuActionVRRPT_COSTS =&quot;DEL&quot; then cmdVRRPT_COSTSDEL_CLick
   if menuActionVRRPT_COSTS =&quot;RUN&quot; then cmdVRRPT_COSTSRUN_CLick
   if menuActionVRRPT_COSTS =&quot;REF&quot; then cmdVRRPT_COSTSREF_CLick
   if menuActionVRRPT_COSTS =&quot;PRN&quot; then cmdVRRPT_COSTSPRN_CLick
   if menuActionVRRPT_COSTS =&quot;CFG&quot; then cmdVRRPT_COSTSCFG_CLick
   if menuActionVRRPT_COSTS =&quot;FND&quot; then cmdVRRPT_COSTSFND_CLick
   if menuActionVRRPT_COSTS =&quot;ACC&quot; then cmdVRRPT_COSTSACC_CLick
   menuActionVRRPT_COSTS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_COSTSAdd,cmdVRRPT_COSTSAdd.tag
  LoadBtnPictures cmdVRRPT_COSTSEdit,cmdVRRPT_COSTSEdit.tag
  LoadBtnPictures cmdVRRPT_COSTSDel,cmdVRRPT_COSTSDel.tag
  LoadBtnPictures cmdVRRPT_COSTSRef,cmdVRRPT_COSTSRef.tag
  LoadBtnPictures cmdVRRPT_COSTSPrn,cmdVRRPT_COSTSPrn.tag
  LoadBtnPictures cmdVRRPT_COSTSFnd,cmdVRRPT_COSTSFnd.tag
  LoadBtnPictures cmdVRRPT_COSTSRun,cmdVRRPT_COSTSRun.tag
  LoadBtnPictures cmdVRRPT_COSTSAcc,cmdVRRPT_COSTSAcc.tag
  LoadBtnPictures cmdVRRPT_COSTSCfg,cmdVRRPT_COSTSCfg.tag
  item.VRRPT_COSTS.PrepareGrid gridVRRPT_COSTS
  LoadGridLayout gridVRRPT_COSTS
  Set fndVRRPT_COSTS = Nothing
  On Error Resume Next
  Set fndVRRPT_COSTS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_COSTS.Init gridVRRPT_COSTS
end sub
private sub OnTabClick()

      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_COSTS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_COSTS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MeetingPlan_CLNT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridVRRPT_MeetingPlan" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_MeetingPlan"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridVRRPT_Meeters" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_Meeters"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetersFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetersRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Планируемые встречи"/><Properties Name="Name" PropValue="mnuPopupVRRPT_MeetingPlan"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanRef"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanS1"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetingPlanCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanFind"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_MeetingPlan"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupVRRPT_Meeters" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Участники"/><Properties Name="Name" PropValue="mnuPopupVRRPT_Meeters"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersRef"/></ControlData><ControlData Name="mnuVRRPT_MeetersS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersS1"/></ControlData><ControlData Name="mnuVRRPT_MeetersBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetersCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetersCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetersPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetersFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersFind"/></ControlData><ControlData Name="mnuVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_Meeters" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_Meeters"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_MeetingPlan as object
private menuActionVRRPT_MeetingPlan as string
private fndVRRPT_Meeters as object
private menuActionVRRPT_Meeters as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlVRRPT_MeetingPlan_PositionChanged()
  pnlVRRPT_MeetingPlan.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_MeetingPlan_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetingPlanCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_MeetingPlan_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_MeetingPlan
End If
end sub
private sub mnuVRRPT_MeetingPlanAdd_click()
   menuActionVRRPT_MeetingPlan =&quot;ADD&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanEdit_click()
   menuActionVRRPT_MeetingPlan =&quot;EDIT&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanDelete_click()
   menuActionVRRPT_MeetingPlan =&quot;DEL&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanOpen_click()
   menuActionVRRPT_MeetingPlan =&quot;RUN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanRef_click()
   menuActionVRRPT_MeetingPlan =&quot;REF&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
  Private Sub mnuVRRPT_MeetingPlanCOPY_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetingPlanCUT_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_MeetingPlan.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetingPlanCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  If gridVRRPT_MeetingPlan.Row &gt; 0 Then
   If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
      gridVRRPT_MeetingPlan.RefreshRowIndex gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetingPlanCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetingPlanPrn_click()
   menuActionVRRPT_MeetingPlan =&quot;PRN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanCfg_click()
   menuActionVRRPT_MeetingPlan =&quot;CFG&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanFind_click()
   menuActionVRRPT_MeetingPlan =&quot;FND&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanAcc_click()
   menuActionVRRPT_MeetingPlan =&quot;ACC&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub menuTimerVRRPT_MeetingPlan_timer()
   menuTimerVRRPT_MeetingPlan.enabled = false
   if menuActionVRRPT_MeetingPlan =&quot;ADD&quot; then cmdVRRPT_MeetingPlanADD_CLick
   if menuActionVRRPT_MeetingPlan =&quot;EDIT&quot; then cmdVRRPT_MeetingPlanEDIT_CLick
   if menuActionVRRPT_MeetingPlan =&quot;DEL&quot; then cmdVRRPT_MeetingPlanDEL_CLick
   if menuActionVRRPT_MeetingPlan =&quot;RUN&quot; then cmdVRRPT_MeetingPlanRUN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;REF&quot; then cmdVRRPT_MeetingPlanREF_CLick
   if menuActionVRRPT_MeetingPlan =&quot;PRN&quot; then cmdVRRPT_MeetingPlanPRN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;CFG&quot; then cmdVRRPT_MeetingPlanCFG_CLick
   if menuActionVRRPT_MeetingPlan =&quot;FND&quot; then cmdVRRPT_MeetingPlanFND_CLick
   if menuActionVRRPT_MeetingPlan =&quot;ACC&quot; then cmdVRRPT_MeetingPlanACC_CLick
   menuActionVRRPT_MeetingPlan =&quot;&quot;
end sub
Private Sub cmdVRRPT_MeetingPlanCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_MeetingPlan,&quot;gridVRRPT_MeetingPlan&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_MeetingPlan,&quot;Планируемые встречи&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanRef_Click()
  on error resume next
  item.VRRPT_MeetingPlan.Refresh
  gridVRRPT_MeetingPlan.itemCount = item.VRRPT_MeetingPlan.count
  gridVRRPT_MeetingPlan.Refetch
  gridVRRPT_MeetingPlan.Refresh
End Sub
Private Sub cmdVRRPT_MeetingPlanAcc_Click()
On Error Resume Next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanEdit_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_MeetingPlan_CLNT.Item = u
    again: frmVRRPT_MeetingPlan_CLNT.NotFirstTime = False
    frmVRRPT_MeetingPlan_CLNT.OnInit
    frmVRRPT_MeetingPlan_CLNT.Show vbModal
    If frmVRRPT_MeetingPlan_CLNT.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_MeetingPlan.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanDel_Click()
  on error resume next
  gridVRRPT_MeetingPlan.Delete
End Sub
Private Sub cmdVRRPT_MeetingPlanAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_MeetingPlan.Add()

      Set frmVRRPT_MeetingPlan_CLNT.Item = u
      again: frmVRRPT_MeetingPlan_CLNT.NotFirstTime = False
      frmVRRPT_MeetingPlan_CLNT.OnInit
      frmVRRPT_MeetingPlan_CLNT.Show vbModal
      If frmVRRPT_MeetingPlan_CLNT.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_MeetingPlan.ItemCount = Item.VRRPT_MeetingPlan.Count
        gridVRRPT_MeetingPlan.Refresh
        gridVRRPT_MeetingPlan.RefreshGroups
        gridVRRPT_MeetingPlan.Refreshsort
        gridVRRPT_MeetingPlan.MoveToBookmark u.ID &amp; &quot;VRRPT_MeetingPlan&quot;
      Else
        Item.VRRPT_MeetingPlan.Delete u.ID
        Item.VRRPT_MeetingPlan.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_MeetingPlanFnd_Click()
  on error resume next
  fndVRRPT_MeetingPlan.ShowForm
End Sub
Private Sub cmdVRRPT_MeetingPlanRun_Click()
  on error resume next
  gridVRRPT_MeetingPlan_DblClick
End Sub
Private Sub gridVRRPT_MeetingPlan_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_MeetingPlan.LoadRow gridVRRPT_MeetingPlan, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_MeetingPlan_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_MeetingPlan_DblClick()
  cmdVRRPT_MeetingPlanEdit_Click
End Sub
Private Sub gridVRRPT_MeetingPlan_KeyPress(KeyAscii As Integer)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_MeetingPlan.FindOnPress KeyAscii
End Sub

Private Sub pnlVRRPT_MeetingPlan_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridVRRPT_MeetingPlan.Left = Left
  gridVRRPT_MeetingPlan.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_MeetingPlan.Width = Width
  gridVRRPT_MeetingPlan.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuVRRPT_MeetingPlanPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_MeetingPlan.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdVRRPT_MeetersCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_Meeters,&quot;gridVRRPT_Meeters&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_Meeters,&quot;Участники&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersAcc_Click()
On Error Resume Next
If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
If gridVRRPT_Meeters.Row &gt; 0 Then
 If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetersFnd_Click()
  on error resume next
  fndVRRPT_Meeters.ShowForm
End Sub
Private Sub cmdVRRPT_MeetersRun_Click()
  on error resume next
  gridVRRPT_Meeters_DblClick
End Sub
Private Sub pnlVRRPT_MeetingPlan_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridVRRPT_Meeters.Left = Left
  gridVRRPT_Meeters.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_Meeters.Width = Width
  gridVRRPT_Meeters.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdVRRPT_MeetersEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdVRRPT_MeetersRef_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.refresh
   gridVRRPT_Meeters.itemcount=gu.VRRPT_Meeters.count
   gridVRRPT_Meeters.refetch
   gridVRRPT_Meeters.refresh
 else
  gridVRRPT_Meeters.columns.clear
  gridVRRPT_Meeters.itemcount=0
 End If
else
 gridVRRPT_Meeters.columns.clear
 gridVRRPT_Meeters.itemcount=0
End If
End Sub
Private Sub cmdVRRPT_MeetersEdit_Click()
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmVRRPT_Meeters_CLNT.Item = u
    again: frmVRRPT_Meeters_CLNT.NotFirstTime = False
    frmVRRPT_Meeters_CLNT.OnInit
    frmVRRPT_Meeters_CLNT.Show vbModal
    If frmVRRPT_Meeters_CLNT.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_Meeters.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdVRRPT_MeetersDel_Click()
  on error resume next
  gridVRRPT_Meeters.Delete
End Sub
Private Sub cmdVRRPT_MeetersAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.VRRPT_Meeters.Add()

      Set frmVRRPT_Meeters_CLNT.Item = u
      again: frmVRRPT_Meeters_CLNT.NotFirstTime = False
      frmVRRPT_Meeters_CLNT.OnInit
      frmVRRPT_Meeters_CLNT.Show vbModal
      If frmVRRPT_Meeters_CLNT.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_Meeters.ItemCount = gu.VRRPT_Meeters.Count
        gridVRRPT_Meeters.Refresh
        gridVRRPT_Meeters.RefreshGroups
        gridVRRPT_Meeters.Refreshsort
        gridVRRPT_Meeters.MoveToBookmark u.ID &amp; &quot;VRRPT_Meeters&quot;
      Else
        gu.VRRPT_Meeters.Delete u.ID
        gu.VRRPT_Meeters.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridVRRPT_MeetingPlan_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridVRRPT_MeetingPlan.ItemCount = 0 Then 
  gridVRRPT_Meeters.ItemCount=0
  Exit Sub
End If
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row And LastRow &gt; 0 Then
    gridVRRPT_MeetingPlan.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridVRRPT_MeetingPlan.GetRowData(gridVRRPT_MeetingPlan.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row or gridVRRPT_Meeters.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.Preparegrid gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=0
    LoadGridLayout gridVRRPT_Meeters
    Set fndVRRPT_Meeters = Nothing
    Set fndVRRPT_Meeters = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndVRRPT_Meeters.Init gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=gu.VRRPT_Meeters.Count
  End If
 End If
End If
End Sub
Private Sub gridVRRPT_Meeters_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.VRRPT_Meeters.LoadRow gridVRRPT_Meeters, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridVRRPT_Meeters_KeyPress(KeyAscii As Integer)
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_Meeters.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_Meeters_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridVRRPT_Meeters_DblClick()
    cmdVRRPT_MeetersEdit_click
End Sub
Private Sub gridVRRPT_Meeters_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
 If gridVRRPT_Meeters.Row &gt; 0 Then
   If LastRow &lt;&gt; gridVRRPT_Meeters.Row And LastRow &gt; 0 Then
     gridVRRPT_Meeters.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridVRRPT_Meeters.GetRowData(gridVRRPT_Meeters.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuVRRPT_MeetersPASTE_Click()
On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.VRRPT_Meeters.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
    ELSE
      GU.VRRPT_Meeters.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_Meeters_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetersCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_Meeters_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_Meeters
End If
end sub
private sub mnuVRRPT_MeetersAdd_click()
   menuActionVRRPT_Meeters =&quot;ADD&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersEdit_click()
   menuActionVRRPT_Meeters =&quot;EDIT&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersDelete_click()
   menuActionVRRPT_Meeters =&quot;DEL&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersOpen_click()
   menuActionVRRPT_Meeters =&quot;RUN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersRef_click()
   menuActionVRRPT_Meeters =&quot;REF&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
  Private Sub mnuVRRPT_MeetersCOPY_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetersCUT_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_Meeters.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetersCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  If gridVRRPT_Meeters.Row &gt; 0 Then
   If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
      gridVRRPT_Meeters.RefreshRowIndex gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetersCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetersPrn_click()
   menuActionVRRPT_Meeters =&quot;PRN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersCfg_click()
   menuActionVRRPT_Meeters =&quot;CFG&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersFind_click()
   menuActionVRRPT_Meeters =&quot;FND&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersAcc_click()
   menuActionVRRPT_Meeters =&quot;ACC&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub menuTimerVRRPT_Meeters_timer()
   menuTimerVRRPT_Meeters.enabled = false
   if menuActionVRRPT_Meeters =&quot;ADD&quot; then cmdVRRPT_MeetersADD_CLick
   if menuActionVRRPT_Meeters =&quot;EDIT&quot; then cmdVRRPT_MeetersEDIT_CLick
   if menuActionVRRPT_Meeters =&quot;DEL&quot; then cmdVRRPT_MeetersDEL_CLick
   if menuActionVRRPT_Meeters =&quot;RUN&quot; then cmdVRRPT_MeetersRUN_CLick
   if menuActionVRRPT_Meeters =&quot;REF&quot; then cmdVRRPT_MeetersREF_CLick
   if menuActionVRRPT_Meeters =&quot;PRN&quot; then cmdVRRPT_MeetersPRN_CLick
   if menuActionVRRPT_Meeters =&quot;CFG&quot; then cmdVRRPT_MeetersCFG_CLick
   if menuActionVRRPT_Meeters =&quot;FND&quot; then cmdVRRPT_MeetersFND_CLick
   if menuActionVRRPT_Meeters =&quot;ACC&quot; then cmdVRRPT_MeetersACC_CLick
   menuActionVRRPT_Meeters =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MeetingPlanAdd,cmdVRRPT_MeetingPlanAdd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanEdit,cmdVRRPT_MeetingPlanEdit.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanDel,cmdVRRPT_MeetingPlanDel.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRef,cmdVRRPT_MeetingPlanRef.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanPrn,cmdVRRPT_MeetingPlanPrn.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanFnd,cmdVRRPT_MeetingPlanFnd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRun,cmdVRRPT_MeetingPlanRun.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanAcc,cmdVRRPT_MeetingPlanAcc.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanCfg,cmdVRRPT_MeetingPlanCfg.tag
  item.VRRPT_MeetingPlan.PrepareGrid gridVRRPT_MeetingPlan
  LoadGridLayout gridVRRPT_MeetingPlan
  Set fndVRRPT_MeetingPlan = Nothing
  On Error Resume Next
  Set fndVRRPT_MeetingPlan = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_MeetingPlan.Init gridVRRPT_MeetingPlan
  LoadBtnPictures cmdVRRPT_MeetersAdd,cmdVRRPT_MeetersAdd.tag
  LoadBtnPictures cmdVRRPT_MeetersEdit,cmdVRRPT_MeetersEdit.tag
  LoadBtnPictures cmdVRRPT_MeetersDel,cmdVRRPT_MeetersDel.tag
  LoadBtnPictures cmdVRRPT_MeetersRef,cmdVRRPT_MeetersRef.tag
  LoadBtnPictures cmdVRRPT_MeetersPrn,cmdVRRPT_MeetersPrn.tag
  LoadBtnPictures cmdVRRPT_MeetersFnd,cmdVRRPT_MeetersFnd.Tag
  LoadBtnPictures cmdVRRPT_MeetersCfg,cmdVRRPT_MeetersCfg.tag
  LoadBtnPictures cmdVRRPT_MeetersRun,cmdVRRPT_MeetersRun.Tag
  LoadBtnPictures cmdVRRPT_MeetersAcc,cmdVRRPT_MeetersAcc.Tag
  gridVRRPT_Meeters.Columns.Clear
  gridVRRPT_Meeters.ItemCount=0
  cmdVRRPT_MeetersRef_Click
end sub
private sub OnTabClick()

pnlVRRPT_MeetingPlan.RestorePosition
  gridVRRPT_MeetingPlan_RowColChange gridVRRPT_MeetingPlan.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MeetingPlan.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_MeetingPlan = nothing
  set fndVRRPT_Meeters = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlCLNT_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MAIN_CLNT"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_COSTS_CLNT"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MeetingPlan_CLNT"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRRPT_MAIN.IsOK
if IsItOk then IsItOk = pnlVRRPT_COSTS.IsOK
if IsItOk then IsItOk = pnlVRRPT_MeetingPlan.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRRPT_MeetingPlan.Visible = False
  pnlVRRPT_COSTS.Visible = False
  pnlVRRPT_MAIN.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRRPT_MAIN&quot;
     With pnlVRRPT_MAIN
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MAIN.OnClick item,parentform
     End With
   Case &quot;VRRPT_COSTS&quot;
     With pnlVRRPT_COSTS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_COSTS.OnClick item,parentform
     End With
   Case &quot;VRRPT_MeetingPlan&quot;
     With pnlVRRPT_MeetingPlan
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MeetingPlan.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Отчет&quot;
ts.Tabs.Item(1).key = &quot;VRRPT_MAIN&quot;
pnlVRRPT_MAIN.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_COSTS&quot;, &quot;Затраты&quot;)
pnlVRRPT_COSTS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_MeetingPlan&quot;, &quot;Планируемые встречи&quot;)
pnlVRRPT_MeetingPlan.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRRPT2&quot;, &quot;ctlCLNT_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRRPT_MAIN.CloseClass
 pnlVRRPT_COSTS.CloseClass
 pnlVRRPT_MeetingPlan.CloseClass
End Sub
public sub OnSave()
 pnlVRRPT_MAIN.OnSave
 pnlVRRPT_COSTS.OnSave
 pnlVRRPT_MeetingPlan.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRRPT_MAIN.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_COSTS.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_MeetingPlan.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmCLNT_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRRPT2GUI.ctlCLNT_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;CLNT&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;CLNT&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;CLNT&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;CLNT&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MAIN_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.VRRPT_MAIN"><Properties Name="Name" PropValue="editVRRPT_MAIN"/></ControlData><ControlData Name="cmdVRRPT_MAINSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MAINCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MAINCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRRPT_MAIN_UpdateName_(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=year(.TheDate) &amp; &quot;.&quot; &amp; right(&quot;0&quot; &amp; month(.TheDate),2)  &amp;  &quot;.&quot; &amp; right(&quot;0&quot; &amp; Day(.TheDate),2) &amp; &quot; |&quot; &amp; .Author.Brief &amp; &quot;|  &quot; &amp; .Name,  RowItem:=RowItem
end with
end sub
Private Sub cmdVRRPT_MAINRef_Click()
  on error resume next
  Item.VRRPT_MAIN.Refresh
  cmdVRRPT_MAINAdd_Click
End Sub
Private Sub cmdVRRPT_MAINCfg_Click()
    on error resume next 
    editVRRPT_MAIN.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_&quot; For Output As #ff
    print #ff, editVRRPT_MAIN.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdVRRPT_MAINAdd_Click()
  on error resume next
 dim u as object
 If Item.VRRPT_MAIN.Count = 0 Then
   set u=Item.VRRPT_MAIN.Add
set u.Autor = u.Application.FindRowObject(&quot;Users&quot;, u.application.mtzsession.GetSessionUserID())

 End If
 Set editVRRPT_MAIN.Item = Item.VRRPT_MAIN.Item(1)
 editVRRPT_MAIN.InitPanel
 cmdVRRPT_MAINSave.Enabled = True
End Sub
Private Sub cmdVRRPT_MAINDel_Click()
  on error resume next
  if  editVRRPT_MAIN.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editVRRPT_MAIN.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editVRRPT_MAIN.item.parent.Delete editVRRPT_MAIN.item.id
    cmdVRRPT_MAINSave.Enabled = false
    editVRRPT_MAIN.Enabled = false
    set editVRRPT_MAIN.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editVRRPT_MAIN_Changed()
 cmdVRRPT_MAINSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editVRRPT_MAIN.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdVRRPT_MAINSave_Click()
  on error resume next
    if editVRRPT_MAIN.IsOK then
    MousePointer = vbHourglass
    editVRRPT_MAIN.Save
  on error goto bye
    editVRRPT_MAIN.item.Save
    MousePointer = vbNormal
        opVRRPT_MAIN_UpdateName_ editVRRPT_MAIN.item
    cmdVRRPT_MAINSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editVRRPT_MAIN.item.REFRESH
  'editVRRPT_MAIN.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MAINSave,cmdVRRPT_MAINSave.tag
  LoadBtnPictures cmdVRRPT_MAINRef,cmdVRRPT_MAINRef.tag
  LoadBtnPictures cmdVRRPT_MAINCfg,cmdVRRPT_MAINCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;VRRPT2_editVRRPT_MAIN_&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editVRRPT_MAIN.PanelCustomisationString = buf
  cmdVRRPT_MAINAdd_click
end sub
private sub OnTabClick()

      editVRRPT_MAIN.Top = 40 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Left = 5 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editVRRPT_MAIN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editVRRPT_MAIN.Save
if editVRRPT_MAIN.item.Changed then
  editVRRPT_MAIN.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editVRRPT_MAIN.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MAIN.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_COSTS_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRRPT_COSTS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_COSTS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_COSTSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_COSTSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_COSTSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_COSTS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Затраты"/><Properties Name="Name" PropValue="mnuPopupVRRPT_COSTS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_COSTSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_COSTSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSOpen"/></ControlData><ControlData Name="mnuVRRPT_COSTSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSRef"/></ControlData><ControlData Name="mnuVRRPT_COSTSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSS1"/></ControlData><ControlData Name="mnuVRRPT_COSTSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_COSTSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCOPY"/></ControlData><ControlData Name="mnuVRRPT_COSTSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCUT"/></ControlData><ControlData Name="mnuVRRPT_COSTSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPASTE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCHANGE"/></ControlData><ControlData Name="mnuVRRPT_COSTSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_COSTSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSPrn"/></ControlData><ControlData Name="mnuVRRPT_COSTSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSCfg"/></ControlData><ControlData Name="mnuVRRPT_COSTSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSFind"/></ControlData><ControlData Name="mnuVRRPT_COSTSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_COSTSAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_COSTS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_COSTS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_COSTS as object
private menuActionVRRPT_COSTS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRRPT_COSTSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_COSTS,&quot;gridVRRPT_COSTS&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_COSTS,&quot;Затраты&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_COSTSRef_Click()
  on error resume next
  item.VRRPT_COSTS.Refresh
  gridVRRPT_COSTS.itemCount = item.VRRPT_COSTS.count
  gridVRRPT_COSTS.Refetch
  gridVRRPT_COSTS.Refresh
End Sub
Private Sub cmdVRRPT_COSTSAcc_Click()
On Error Resume Next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 Then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSEdit_Click()
  on error resume next
If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
If gridVRRPT_COSTS.Row &gt; 0 then
 If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_COSTS_.Item = u
    again: frmVRRPT_COSTS_.NotFirstTime = False
    frmVRRPT_COSTS_.OnInit
    frmVRRPT_COSTS_.Show vbModal
    If frmVRRPT_COSTS_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_COSTS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_COSTSDel_Click()
  on error resume next
  gridVRRPT_COSTS.Delete
End Sub
Private Sub cmdVRRPT_COSTSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_COSTS.Add()

      Set frmVRRPT_COSTS_.Item = u
      again: frmVRRPT_COSTS_.NotFirstTime = False
      frmVRRPT_COSTS_.OnInit
      frmVRRPT_COSTS_.Show vbModal
      If frmVRRPT_COSTS_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_COSTS.ItemCount = Item.VRRPT_COSTS.Count
        gridVRRPT_COSTS.Refresh
        gridVRRPT_COSTS.RefreshGroups
        gridVRRPT_COSTS.Refreshsort
        gridVRRPT_COSTS.MoveToBookmark u.ID &amp; &quot;VRRPT_COSTS&quot;
      Else
        Item.VRRPT_COSTS.Delete u.ID
        Item.VRRPT_COSTS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_COSTSFnd_Click()
  on error resume next
  fndVRRPT_COSTS.ShowForm
End Sub
Private Sub cmdVRRPT_COSTSRun_Click()
  on error resume next
  gridVRRPT_COSTS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_COSTS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_COSTS.LoadRow gridVRRPT_COSTS, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_COSTS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRRPT_COSTS&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRRPT_COSTS_DblClick()
  cmdVRRPT_COSTSEdit_Click
End Sub
Private Sub gridVRRPT_COSTS_KeyPress(KeyAscii As Integer)
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_COSTS.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_COSTS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRRPT_COSTS.Row And LastRow &gt; 0 Then
  gridVRRPT_COSTS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRRPT_COSTS.GetRowData(gridVRRPT_COSTS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRRPT_COSTSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_COSTS.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_COSTS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_COSTSCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_COSTS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_COSTS
End If
end sub
private sub mnuVRRPT_COSTSAdd_click()
   menuActionVRRPT_COSTS =&quot;ADD&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSEdit_click()
   menuActionVRRPT_COSTS =&quot;EDIT&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSDelete_click()
   menuActionVRRPT_COSTS =&quot;DEL&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSOpen_click()
   menuActionVRRPT_COSTS =&quot;RUN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSRef_click()
   menuActionVRRPT_COSTS =&quot;REF&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
  Private Sub mnuVRRPT_COSTSCOPY_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_COSTSCUT_Click()
    On Error Resume Next
    If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
    If gridVRRPT_COSTS.Row &gt; 0 Then
     If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_COSTS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_COSTSCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_COSTS.ItemCount = 0 Then Exit Sub
  If gridVRRPT_COSTS.Row &gt; 0 Then
   If gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_COSTS.RowBookmark(gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_COSTS.ItemCount = u.parent.Count
      gridVRRPT_COSTS.RefreshRowIndex gridVRRPT_COSTS.RowIndex(gridVRRPT_COSTS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_COSTSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_COSTSPrn_click()
   menuActionVRRPT_COSTS =&quot;PRN&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSCfg_click()
   menuActionVRRPT_COSTS =&quot;CFG&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSFind_click()
   menuActionVRRPT_COSTS =&quot;FND&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub mnuVRRPT_COSTSAcc_click()
   menuActionVRRPT_COSTS =&quot;ACC&quot;
   menuTimerVRRPT_COSTS.enabled = true
end sub
private sub menuTimerVRRPT_COSTS_timer()
   menuTimerVRRPT_COSTS.enabled = false
   if menuActionVRRPT_COSTS =&quot;ADD&quot; then cmdVRRPT_COSTSADD_CLick
   if menuActionVRRPT_COSTS =&quot;EDIT&quot; then cmdVRRPT_COSTSEDIT_CLick
   if menuActionVRRPT_COSTS =&quot;DEL&quot; then cmdVRRPT_COSTSDEL_CLick
   if menuActionVRRPT_COSTS =&quot;RUN&quot; then cmdVRRPT_COSTSRUN_CLick
   if menuActionVRRPT_COSTS =&quot;REF&quot; then cmdVRRPT_COSTSREF_CLick
   if menuActionVRRPT_COSTS =&quot;PRN&quot; then cmdVRRPT_COSTSPRN_CLick
   if menuActionVRRPT_COSTS =&quot;CFG&quot; then cmdVRRPT_COSTSCFG_CLick
   if menuActionVRRPT_COSTS =&quot;FND&quot; then cmdVRRPT_COSTSFND_CLick
   if menuActionVRRPT_COSTS =&quot;ACC&quot; then cmdVRRPT_COSTSACC_CLick
   menuActionVRRPT_COSTS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_COSTSAdd,cmdVRRPT_COSTSAdd.tag
  LoadBtnPictures cmdVRRPT_COSTSEdit,cmdVRRPT_COSTSEdit.tag
  LoadBtnPictures cmdVRRPT_COSTSDel,cmdVRRPT_COSTSDel.tag
  LoadBtnPictures cmdVRRPT_COSTSRef,cmdVRRPT_COSTSRef.tag
  LoadBtnPictures cmdVRRPT_COSTSPrn,cmdVRRPT_COSTSPrn.tag
  LoadBtnPictures cmdVRRPT_COSTSFnd,cmdVRRPT_COSTSFnd.tag
  LoadBtnPictures cmdVRRPT_COSTSRun,cmdVRRPT_COSTSRun.tag
  LoadBtnPictures cmdVRRPT_COSTSAcc,cmdVRRPT_COSTSAcc.tag
  LoadBtnPictures cmdVRRPT_COSTSCfg,cmdVRRPT_COSTSCfg.tag
  item.VRRPT_COSTS.PrepareGrid gridVRRPT_COSTS
  LoadGridLayout gridVRRPT_COSTS
  Set fndVRRPT_COSTS = Nothing
  On Error Resume Next
  Set fndVRRPT_COSTS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_COSTS.Init gridVRRPT_COSTS
end sub
private sub OnTabClick()

      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRRPT_COSTS.Top = 40 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Left = 5 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRRPT_COSTS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_COSTS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_COSTS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRRPT_MeetingPlan_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridVRRPT_MeetingPlan" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_MeetingPlan"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetingPlanAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridVRRPT_Meeters" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRRPT_Meeters"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRRPT_MeetersFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRRPT_MeetersRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRRPT_MeetersAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Планируемые встречи"/><Properties Name="Name" PropValue="mnuPopupVRRPT_MeetingPlan"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetingPlanAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanRef"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanS1"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetingPlanCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetingPlanPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanFind"/></ControlData><ControlData Name="mnuVRRPT_MeetingPlanAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetingPlanAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_MeetingPlan" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_MeetingPlan"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupVRRPT_Meeters" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Участники"/><Properties Name="Name" PropValue="mnuPopupVRRPT_Meeters"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRRPT_MeetersAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRRPT_MeetersOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersOpen"/></ControlData><ControlData Name="mnuVRRPT_MeetersRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersRef"/></ControlData><ControlData Name="mnuVRRPT_MeetersS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersS1"/></ControlData><ControlData Name="mnuVRRPT_MeetersBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRRPT_MeetersCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCOPY"/></ControlData><ControlData Name="mnuVRRPT_MeetersCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCUT"/></ControlData><ControlData Name="mnuVRRPT_MeetersPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPASTE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCHANGE"/></ControlData><ControlData Name="mnuVRRPT_MeetersCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRRPT_MeetersPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersPrn"/></ControlData><ControlData Name="mnuVRRPT_MeetersCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersCfg"/></ControlData><ControlData Name="mnuVRRPT_MeetersFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersFind"/></ControlData><ControlData Name="mnuVRRPT_MeetersAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRRPT_MeetersAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRRPT_Meeters" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRRPT_Meeters"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRRPT_MeetingPlan as object
private menuActionVRRPT_MeetingPlan as string
private fndVRRPT_Meeters as object
private menuActionVRRPT_Meeters as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlVRRPT_MeetingPlan_PositionChanged()
  pnlVRRPT_MeetingPlan.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_MeetingPlan_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetingPlanCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_MeetingPlan_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_MeetingPlan
End If
end sub
private sub mnuVRRPT_MeetingPlanAdd_click()
   menuActionVRRPT_MeetingPlan =&quot;ADD&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanEdit_click()
   menuActionVRRPT_MeetingPlan =&quot;EDIT&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanDelete_click()
   menuActionVRRPT_MeetingPlan =&quot;DEL&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanOpen_click()
   menuActionVRRPT_MeetingPlan =&quot;RUN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanRef_click()
   menuActionVRRPT_MeetingPlan =&quot;REF&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
  Private Sub mnuVRRPT_MeetingPlanCOPY_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetingPlanCUT_Click()
    On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_MeetingPlan.Row &gt; 0 Then
     If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_MeetingPlan.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetingPlanCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  If gridVRRPT_MeetingPlan.Row &gt; 0 Then
   If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
      gridVRRPT_MeetingPlan.RefreshRowIndex gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetingPlanCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetingPlanPrn_click()
   menuActionVRRPT_MeetingPlan =&quot;PRN&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanCfg_click()
   menuActionVRRPT_MeetingPlan =&quot;CFG&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanFind_click()
   menuActionVRRPT_MeetingPlan =&quot;FND&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub mnuVRRPT_MeetingPlanAcc_click()
   menuActionVRRPT_MeetingPlan =&quot;ACC&quot;
   menuTimerVRRPT_MeetingPlan.enabled = true
end sub
private sub menuTimerVRRPT_MeetingPlan_timer()
   menuTimerVRRPT_MeetingPlan.enabled = false
   if menuActionVRRPT_MeetingPlan =&quot;ADD&quot; then cmdVRRPT_MeetingPlanADD_CLick
   if menuActionVRRPT_MeetingPlan =&quot;EDIT&quot; then cmdVRRPT_MeetingPlanEDIT_CLick
   if menuActionVRRPT_MeetingPlan =&quot;DEL&quot; then cmdVRRPT_MeetingPlanDEL_CLick
   if menuActionVRRPT_MeetingPlan =&quot;RUN&quot; then cmdVRRPT_MeetingPlanRUN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;REF&quot; then cmdVRRPT_MeetingPlanREF_CLick
   if menuActionVRRPT_MeetingPlan =&quot;PRN&quot; then cmdVRRPT_MeetingPlanPRN_CLick
   if menuActionVRRPT_MeetingPlan =&quot;CFG&quot; then cmdVRRPT_MeetingPlanCFG_CLick
   if menuActionVRRPT_MeetingPlan =&quot;FND&quot; then cmdVRRPT_MeetingPlanFND_CLick
   if menuActionVRRPT_MeetingPlan =&quot;ACC&quot; then cmdVRRPT_MeetingPlanACC_CLick
   menuActionVRRPT_MeetingPlan =&quot;&quot;
end sub
Private Sub cmdVRRPT_MeetingPlanCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_MeetingPlan,&quot;gridVRRPT_MeetingPlan&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_MeetingPlan,&quot;Планируемые встречи&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetingPlanRef_Click()
  on error resume next
  item.VRRPT_MeetingPlan.Refresh
  gridVRRPT_MeetingPlan.itemCount = item.VRRPT_MeetingPlan.count
  gridVRRPT_MeetingPlan.Refetch
  gridVRRPT_MeetingPlan.Refresh
End Sub
Private Sub cmdVRRPT_MeetingPlanAcc_Click()
On Error Resume Next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanEdit_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 then
 If gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRRPT_MeetingPlan_.Item = u
    again: frmVRRPT_MeetingPlan_.NotFirstTime = False
    frmVRRPT_MeetingPlan_.OnInit
    frmVRRPT_MeetingPlan_.Show vbModal
    If frmVRRPT_MeetingPlan_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_MeetingPlan.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetingPlanDel_Click()
  on error resume next
  gridVRRPT_MeetingPlan.Delete
End Sub
Private Sub cmdVRRPT_MeetingPlanAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRRPT_MeetingPlan.Add()

      Set frmVRRPT_MeetingPlan_.Item = u
      again: frmVRRPT_MeetingPlan_.NotFirstTime = False
      frmVRRPT_MeetingPlan_.OnInit
      frmVRRPT_MeetingPlan_.Show vbModal
      If frmVRRPT_MeetingPlan_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_MeetingPlan.ItemCount = Item.VRRPT_MeetingPlan.Count
        gridVRRPT_MeetingPlan.Refresh
        gridVRRPT_MeetingPlan.RefreshGroups
        gridVRRPT_MeetingPlan.Refreshsort
        gridVRRPT_MeetingPlan.MoveToBookmark u.ID &amp; &quot;VRRPT_MeetingPlan&quot;
      Else
        Item.VRRPT_MeetingPlan.Delete u.ID
        Item.VRRPT_MeetingPlan.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRRPT_MeetingPlanFnd_Click()
  on error resume next
  fndVRRPT_MeetingPlan.ShowForm
End Sub
Private Sub cmdVRRPT_MeetingPlanRun_Click()
  on error resume next
  gridVRRPT_MeetingPlan_DblClick
End Sub
Private Sub gridVRRPT_MeetingPlan_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRRPT_MeetingPlan.LoadRow gridVRRPT_MeetingPlan, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRRPT_MeetingPlan_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRRPT_MeetingPlan_DblClick()
  cmdVRRPT_MeetingPlanEdit_Click
End Sub
Private Sub gridVRRPT_MeetingPlan_KeyPress(KeyAscii As Integer)
  If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_MeetingPlan.FindOnPress KeyAscii
End Sub

Private Sub pnlVRRPT_MeetingPlan_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridVRRPT_MeetingPlan.Left = Left
  gridVRRPT_MeetingPlan.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_MeetingPlan.Width = Width
  gridVRRPT_MeetingPlan.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetingPlanAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetingPlanAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuVRRPT_MeetingPlanPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRRPT_MeetingPlan.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_MeetingPlan.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdVRRPT_MeetersCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRRPT_Meeters,&quot;gridVRRPT_Meeters&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRRPT_Meeters,&quot;Участники&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRRPT_MeetersAcc_Click()
On Error Resume Next
If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
If gridVRRPT_Meeters.Row &gt; 0 Then
 If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRRPT_MeetersFnd_Click()
  on error resume next
  fndVRRPT_Meeters.ShowForm
End Sub
Private Sub cmdVRRPT_MeetersRun_Click()
  on error resume next
  gridVRRPT_Meeters_DblClick
End Sub
Private Sub pnlVRRPT_MeetingPlan_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridVRRPT_Meeters.Left = Left
  gridVRRPT_Meeters.Top = Top + 25 * Screen.TwipsPerPixelY
  gridVRRPT_Meeters.Width = Width
  gridVRRPT_Meeters.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdVRRPT_MeetersAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdVRRPT_MeetersEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdVRRPT_MeetersAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdVRRPT_MeetersRef_Click()
  on error resume next
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.refresh
   gridVRRPT_Meeters.itemcount=gu.VRRPT_Meeters.count
   gridVRRPT_Meeters.refetch
   gridVRRPT_Meeters.refresh
 else
  gridVRRPT_Meeters.columns.clear
  gridVRRPT_Meeters.itemcount=0
 End If
else
 gridVRRPT_Meeters.columns.clear
 gridVRRPT_Meeters.itemcount=0
End If
End Sub
Private Sub cmdVRRPT_MeetersEdit_Click()
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmVRRPT_Meeters_.Item = u
    again: frmVRRPT_Meeters_.NotFirstTime = False
    frmVRRPT_Meeters_.OnInit
    frmVRRPT_Meeters_.Show vbModal
    If frmVRRPT_Meeters_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRRPT_Meeters.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdVRRPT_MeetersDel_Click()
  on error resume next
  gridVRRPT_Meeters.Delete
End Sub
Private Sub cmdVRRPT_MeetersAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.VRRPT_Meeters.Add()

      Set frmVRRPT_Meeters_.Item = u
      again: frmVRRPT_Meeters_.NotFirstTime = False
      frmVRRPT_Meeters_.OnInit
      frmVRRPT_Meeters_.Show vbModal
      If frmVRRPT_Meeters_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRRPT_Meeters.ItemCount = gu.VRRPT_Meeters.Count
        gridVRRPT_Meeters.Refresh
        gridVRRPT_Meeters.RefreshGroups
        gridVRRPT_Meeters.Refreshsort
        gridVRRPT_Meeters.MoveToBookmark u.ID &amp; &quot;VRRPT_Meeters&quot;
      Else
        gu.VRRPT_Meeters.Delete u.ID
        gu.VRRPT_Meeters.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridVRRPT_MeetingPlan_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridVRRPT_MeetingPlan.ItemCount = 0 Then 
  gridVRRPT_Meeters.ItemCount=0
  Exit Sub
End If
If gridVRRPT_MeetingPlan.Row &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row And LastRow &gt; 0 Then
    gridVRRPT_MeetingPlan.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridVRRPT_MeetingPlan.GetRowData(gridVRRPT_MeetingPlan.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridVRRPT_MeetingPlan.RowIndex ( gridVRRPT_MeetingPlan.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridVRRPT_MeetingPlan.Row or gridVRRPT_Meeters.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.VRRPT_Meeters.Preparegrid gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=0
    LoadGridLayout gridVRRPT_Meeters
    Set fndVRRPT_Meeters = Nothing
    Set fndVRRPT_Meeters = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndVRRPT_Meeters.Init gridVRRPT_Meeters
  gridVRRPT_Meeters.ItemCount=gu.VRRPT_Meeters.Count
  End If
 End If
End If
End Sub
Private Sub gridVRRPT_Meeters_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.VRRPT_Meeters.LoadRow gridVRRPT_Meeters, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridVRRPT_Meeters_KeyPress(KeyAscii As Integer)
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRRPT_Meeters.FindOnPress KeyAscii
End Sub

Private Sub gridVRRPT_Meeters_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridVRRPT_Meeters_DblClick()
    cmdVRRPT_MeetersEdit_click
End Sub
Private Sub gridVRRPT_Meeters_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
 If gridVRRPT_Meeters.Row &gt; 0 Then
   If LastRow &lt;&gt; gridVRRPT_Meeters.Row And LastRow &gt; 0 Then
     gridVRRPT_Meeters.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridVRRPT_Meeters.GetRowData(gridVRRPT_Meeters.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuVRRPT_MeetersPASTE_Click()
On Error Resume Next
    If gridVRRPT_MeetingPlan.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridVRRPT_MeetingPlan.RowBookmark(gridVRRPT_MeetingPlan.RowIndex(gridVRRPT_MeetingPlan.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.VRRPT_Meeters.Add()
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
    ELSE
      GU.VRRPT_Meeters.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridVRRPT_Meeters_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRRPT_MeetersCfg_Click
        End If
    End If
end sub

private sub gridVRRPT_Meeters_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRRPT_Meeters
End If
end sub
private sub mnuVRRPT_MeetersAdd_click()
   menuActionVRRPT_Meeters =&quot;ADD&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersEdit_click()
   menuActionVRRPT_Meeters =&quot;EDIT&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersDelete_click()
   menuActionVRRPT_Meeters =&quot;DEL&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersOpen_click()
   menuActionVRRPT_Meeters =&quot;RUN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersRef_click()
   menuActionVRRPT_Meeters =&quot;REF&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
  Private Sub mnuVRRPT_MeetersCOPY_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRRPT_MeetersCUT_Click()
    On Error Resume Next
    If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
    If gridVRRPT_Meeters.Row &gt; 0 Then
     If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRRPT_Meeters.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRRPT_MeetersCHANGE_Click()
  On Error Resume Next
  If gridVRRPT_Meeters.ItemCount = 0 Then Exit Sub
  If gridVRRPT_Meeters.Row &gt; 0 Then
   If gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRRPT_Meeters.RowBookmark(gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRRPT_Meeters.ItemCount = u.parent.Count
      gridVRRPT_Meeters.RefreshRowIndex gridVRRPT_Meeters.RowIndex(gridVRRPT_Meeters.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRRPT_MeetersCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRRPT_MeetersPrn_click()
   menuActionVRRPT_Meeters =&quot;PRN&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersCfg_click()
   menuActionVRRPT_Meeters =&quot;CFG&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersFind_click()
   menuActionVRRPT_Meeters =&quot;FND&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub mnuVRRPT_MeetersAcc_click()
   menuActionVRRPT_Meeters =&quot;ACC&quot;
   menuTimerVRRPT_Meeters.enabled = true
end sub
private sub menuTimerVRRPT_Meeters_timer()
   menuTimerVRRPT_Meeters.enabled = false
   if menuActionVRRPT_Meeters =&quot;ADD&quot; then cmdVRRPT_MeetersADD_CLick
   if menuActionVRRPT_Meeters =&quot;EDIT&quot; then cmdVRRPT_MeetersEDIT_CLick
   if menuActionVRRPT_Meeters =&quot;DEL&quot; then cmdVRRPT_MeetersDEL_CLick
   if menuActionVRRPT_Meeters =&quot;RUN&quot; then cmdVRRPT_MeetersRUN_CLick
   if menuActionVRRPT_Meeters =&quot;REF&quot; then cmdVRRPT_MeetersREF_CLick
   if menuActionVRRPT_Meeters =&quot;PRN&quot; then cmdVRRPT_MeetersPRN_CLick
   if menuActionVRRPT_Meeters =&quot;CFG&quot; then cmdVRRPT_MeetersCFG_CLick
   if menuActionVRRPT_Meeters =&quot;FND&quot; then cmdVRRPT_MeetersFND_CLick
   if menuActionVRRPT_Meeters =&quot;ACC&quot; then cmdVRRPT_MeetersACC_CLick
   menuActionVRRPT_Meeters =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRRPT_MeetingPlanAdd,cmdVRRPT_MeetingPlanAdd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanEdit,cmdVRRPT_MeetingPlanEdit.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanDel,cmdVRRPT_MeetingPlanDel.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRef,cmdVRRPT_MeetingPlanRef.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanPrn,cmdVRRPT_MeetingPlanPrn.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanFnd,cmdVRRPT_MeetingPlanFnd.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanRun,cmdVRRPT_MeetingPlanRun.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanAcc,cmdVRRPT_MeetingPlanAcc.tag
  LoadBtnPictures cmdVRRPT_MeetingPlanCfg,cmdVRRPT_MeetingPlanCfg.tag
  item.VRRPT_MeetingPlan.PrepareGrid gridVRRPT_MeetingPlan
  LoadGridLayout gridVRRPT_MeetingPlan
  Set fndVRRPT_MeetingPlan = Nothing
  On Error Resume Next
  Set fndVRRPT_MeetingPlan = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRRPT_MeetingPlan.Init gridVRRPT_MeetingPlan
  LoadBtnPictures cmdVRRPT_MeetersAdd,cmdVRRPT_MeetersAdd.tag
  LoadBtnPictures cmdVRRPT_MeetersEdit,cmdVRRPT_MeetersEdit.tag
  LoadBtnPictures cmdVRRPT_MeetersDel,cmdVRRPT_MeetersDel.tag
  LoadBtnPictures cmdVRRPT_MeetersRef,cmdVRRPT_MeetersRef.tag
  LoadBtnPictures cmdVRRPT_MeetersPrn,cmdVRRPT_MeetersPrn.tag
  LoadBtnPictures cmdVRRPT_MeetersFnd,cmdVRRPT_MeetersFnd.Tag
  LoadBtnPictures cmdVRRPT_MeetersCfg,cmdVRRPT_MeetersCfg.tag
  LoadBtnPictures cmdVRRPT_MeetersRun,cmdVRRPT_MeetersRun.Tag
  LoadBtnPictures cmdVRRPT_MeetersAcc,cmdVRRPT_MeetersAcc.Tag
  gridVRRPT_Meeters.Columns.Clear
  gridVRRPT_Meeters.ItemCount=0
  cmdVRRPT_MeetersRef_Click
end sub
private sub OnTabClick()

pnlVRRPT_MeetingPlan.RestorePosition
  gridVRRPT_MeetingPlan_RowColChange gridVRRPT_MeetingPlan.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRRPT_MeetingPlan.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRRPT_MeetingPlan = nothing
  set fndVRRPT_Meeters = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MAIN" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MAIN_"><Properties Name="Name" PropValue="pnlVRRPT_MAIN"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_COSTS" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_COSTS_"><Properties Name="Name" PropValue="pnlVRRPT_COSTS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRRPT_MeetingPlan" ControlIndex="0" PROGID="VRRPT2GUI.vpnVRRPT_MeetingPlan_"><Properties Name="Name" PropValue="pnlVRRPT_MeetingPlan"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRRPT_MAIN.IsOK
if IsItOk then IsItOk = pnlVRRPT_COSTS.IsOK
if IsItOk then IsItOk = pnlVRRPT_MeetingPlan.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRRPT_MeetingPlan.Visible = False
  pnlVRRPT_COSTS.Visible = False
  pnlVRRPT_MAIN.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRRPT_MAIN&quot;
     With pnlVRRPT_MAIN
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MAIN.OnClick item,parentform
     End With
   Case &quot;VRRPT_COSTS&quot;
     With pnlVRRPT_COSTS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_COSTS.OnClick item,parentform
     End With
   Case &quot;VRRPT_MeetingPlan&quot;
     With pnlVRRPT_MeetingPlan
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRRPT_MeetingPlan.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Отчет&quot;
ts.Tabs.Item(1).key = &quot;VRRPT_MAIN&quot;
pnlVRRPT_MAIN.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_COSTS&quot;, &quot;Затраты&quot;)
pnlVRRPT_COSTS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRRPT_MeetingPlan&quot;, &quot;Планируемые встречи&quot;)
pnlVRRPT_MeetingPlan.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRRPT2&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRRPT_MAIN.CloseClass
 pnlVRRPT_COSTS.CloseClass
 pnlVRRPT_MeetingPlan.CloseClass
End Sub
public sub OnSave()
 pnlVRRPT_MAIN.OnSave
 pnlVRRPT_COSTS.OnSave
 pnlVRRPT_MeetingPlan.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRRPT_MAIN.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_COSTS.IsChanged
m_IsChanged = m_IsChanged or pnlVRRPT_MeetingPlan.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRRPT2GUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Отчет"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRRPT2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;CONT&quot; then

if Name=&quot;VRRPT_MAIN&quot; then 
 set FormByName = new frmVRRPT_MAIN_CONT
 exit function
end if

if Name=&quot;VRRPT_COSTS&quot; then 
 set FormByName = new frmVRRPT_COSTS_CONT
 exit function
end if

if Name=&quot;VRRPT_MeetingPlan&quot; then 
 set FormByName = new frmVRRPT_MeetingPlan_CONT
 exit function
end if

if Name=&quot;VRRPT_Meeters&quot; then 
 set FormByName = new frmVRRPT_Meeters_CONT
 exit function
end if

end if
if Mode=&quot;dflt&quot; then

if Name=&quot;VRRPT_MAIN&quot; then 
 set FormByName = new frmVRRPT_MAIN_dflt
 exit function
end if

if Name=&quot;VRRPT_COSTS&quot; then 
 set FormByName = new frmVRRPT_COSTS_dflt
 exit function
end if

if Name=&quot;VRRPT_MeetingPlan&quot; then 
 set FormByName = new frmVRRPT_MeetingPlan_dflt
 exit function
end if

if Name=&quot;VRRPT_Meeters&quot; then 
 set FormByName = new frmVRRPT_Meeters_dflt
 exit function
end if

end if
if Mode=&quot;PRJ&quot; then

if Name=&quot;VRRPT_MAIN&quot; then 
 set FormByName = new frmVRRPT_MAIN_PRJ
 exit function
end if

if Name=&quot;VRRPT_COSTS&quot; then 
 set FormByName = new frmVRRPT_COSTS_PRJ
 exit function
end if

if Name=&quot;VRRPT_MeetingPlan&quot; then 
 set FormByName = new frmVRRPT_MeetingPlan_PRJ
 exit function
end if

if Name=&quot;VRRPT_Meeters&quot; then 
 set FormByName = new frmVRRPT_Meeters_PRJ
 exit function
end if

end if
if Mode=&quot;PERS&quot; then

if Name=&quot;VRRPT_MAIN&quot; then 
 set FormByName = new frmVRRPT_MAIN_PERS
 exit function
end if

if Name=&quot;VRRPT_COSTS&quot; then 
 set FormByName = new frmVRRPT_COSTS_PERS
 exit function
end if

if Name=&quot;VRRPT_MeetingPlan&quot; then 
 set FormByName = new frmVRRPT_MeetingPlan_PERS
 exit function
end if

if Name=&quot;VRRPT_Meeters&quot; then 
 set FormByName = new frmVRRPT_Meeters_PERS
 exit function
end if

end if
if Mode=&quot;CLNT&quot; then

if Name=&quot;VRRPT_MAIN&quot; then 
 set FormByName = new frmVRRPT_MAIN_CLNT
 exit function
end if

if Name=&quot;VRRPT_COSTS&quot; then 
 set FormByName = new frmVRRPT_COSTS_CLNT
 exit function
end if

if Name=&quot;VRRPT_MeetingPlan&quot; then 
 set FormByName = new frmVRRPT_MeetingPlan_CLNT
 exit function
end if

if Name=&quot;VRRPT_Meeters&quot; then 
 set FormByName = new frmVRRPT_Meeters_CLNT
 exit function
end if

end if
if Mode=&quot;&quot; then

if Name=&quot;VRRPT_MAIN&quot; then 
 set FormByName = new frmVRRPT_MAIN_
 exit function
end if

if Name=&quot;VRRPT_COSTS&quot; then 
 set FormByName = new frmVRRPT_COSTS_
 exit function
end if

if Name=&quot;VRRPT_MeetingPlan&quot; then 
 set FormByName = new frmVRRPT_MeetingPlan_
 exit function
end if

if Name=&quot;VRRPT_Meeters&quot; then 
 set FormByName = new frmVRRPT_Meeters_
 exit function
end if

end if
end function
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub

Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
