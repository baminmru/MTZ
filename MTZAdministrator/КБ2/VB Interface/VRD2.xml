<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Справочник: работа с клиентами"/><AttributeHolder Name="Name" Value="VRD2GUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Справочник: работа с клиентами&quot;
End Sub

Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub
public property get IsModal() as boolean
 IsModal = mOpenModal
end property
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Справочник: работа с клиентами)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRD2:admi&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRD2:main&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRD2:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Справочник: работа с клиентами&quot; 
  end if
end if
if OpenModal then
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRD2:admi&quot;)) then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRD2:main&quot;)) then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRD2:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Справочник: работа с клиентами&quot; 
  end if
end if
end sub
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;VRDCONTRACTSTAGE&quot; Then
    Set f = New frmVRDContractStage_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;VRD_COMPINFO&quot; Then
    Set f = New frmVRD_CompInfo_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;VRDRREPORTTYPE&quot; Then
    Set f = New frmVRDRreportType_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;VRDPRJTYPE&quot; Then
    Set f = New frmVRDPrjType_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;VRDSTREAM&quot; Then
    Set f = New frmVRDStream_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;VRDINTEREST&quot; Then
    Set f = New frmVRDInterest_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;VRDDOCTYPE&quot; Then
    Set f = New frmVRDDocType_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;VRDLOYALTY&quot; Then
    Set f = New frmVRDLoyalty_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;VRDMARKET&quot; Then
    Set f = New frmVRDMarket_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;VRDCONTRACTSTAGE&quot; Then
    Set f = New frmVRDContractStage_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;VRD_COMPINFO&quot; Then
    Set f = New frmVRD_CompInfo_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;VRDRREPORTTYPE&quot; Then
    Set f = New frmVRDRreportType_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;VRDPRJTYPE&quot; Then
    Set f = New frmVRDPrjType_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;VRDSTREAM&quot; Then
    Set f = New frmVRDStream_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;VRDINTEREST&quot; Then
    Set f = New frmVRDInterest_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;VRDDOCTYPE&quot; Then
    Set f = New frmVRDDocType_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;VRDLOYALTY&quot; Then
    Set f = New frmVRDLoyalty_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;VRDMARKET&quot; Then
    Set f = New frmVRDMarket_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;VRDCONTRACTSTAGE&quot; Then
    Set f = New frmVRDContractStage_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRD_COMPINFO&quot; Then
    Set f = New frmVRD_CompInfo_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRDRREPORTTYPE&quot; Then
    Set f = New frmVRDRreportType_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRDPRJTYPE&quot; Then
    Set f = New frmVRDPrjType_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRDSTREAM&quot; Then
    Set f = New frmVRDStream_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRDINTEREST&quot; Then
    Set f = New frmVRDInterest_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRDDOCTYPE&quot; Then
    Set f = New frmVRDDocType_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRDLOYALTY&quot; Then
    Set f = New frmVRDLoyalty_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRDMARKET&quot; Then
    Set f = New frmVRDMarket_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDContractStage" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRD_CompInfo" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDRreportType" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDPrjType" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDStream" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Назввание:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Назввание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDInterest" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDDocType" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDLoyalty" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Level"/><Properties Name="Caption" PropValue="Степень:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Level"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Степень"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtthe_Level_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtthe_Level.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtthe_Level = item.the_Level
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.the_Level = txtthe_Level
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDMarket" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDContractStageadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRD_CompInfoadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDRreportTypeadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDPrjTypeadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDStreamadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Назввание:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Назввание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDInterestadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDDocTypeadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDLoyaltyadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Level"/><Properties Name="Caption" PropValue="Степень:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Level"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Степень"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtthe_Level_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtthe_Level.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtthe_Level = item.the_Level
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.the_Level = txtthe_Level
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDMarketadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDContractStagemain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRD_CompInfomain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDRreportTypemain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDPrjTypemain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDStreammain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Назввание:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Назввание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDInterestmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDDocTypemain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDLoyaltymain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Level"/><Properties Name="Caption" PropValue="Степень:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Level"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Степень"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtthe_Level_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtthe_Level.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtthe_Level = item.the_Level
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.the_Level = txtthe_Level
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRDMarketmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDContractStage_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDContractStage"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Стадия договора"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Стадия договора"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{17A7CD05-E94F-48C9-B24D-06F2A9B09DA7}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{17A7CD05-E94F-48C9-B24D-06F2A9B09DA7}&quot;
  Open s &amp; Me.name &amp; &quot;{17A7CD05-E94F-48C9-B24D-06F2A9B09DA7}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRD_CompInfo_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRD_CompInfo"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Источник информации о компании"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1EDC01E0-2221-45FC-9E36-4D690DDDA8AB}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1EDC01E0-2221-45FC-9E36-4D690DDDA8AB}&quot;
  Open s &amp; Me.name &amp; &quot;{1EDC01E0-2221-45FC-9E36-4D690DDDA8AB}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDRreportType_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDRreportType"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип отчета"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип отчета"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2E3E5E59-B27A-4ACA-8AA0-50D234244C3D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2E3E5E59-B27A-4ACA-8AA0-50D234244C3D}&quot;
  Open s &amp; Me.name &amp; &quot;{2E3E5E59-B27A-4ACA-8AA0-50D234244C3D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDPrjType_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDPrjType"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы проектов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Типы проектов"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0A6BD9EC-4A11-4136-A4DC-6A7433B33507}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0A6BD9EC-4A11-4136-A4DC-6A7433B33507}&quot;
  Open s &amp; Me.name &amp; &quot;{0A6BD9EC-4A11-4136-A4DC-6A7433B33507}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDStream_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDStream"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Направление деятельности"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Направление деятельности"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{6FD6E698-33B0-4550-8152-764B71F35022}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{6FD6E698-33B0-4550-8152-764B71F35022}&quot;
  Open s &amp; Me.name &amp; &quot;{6FD6E698-33B0-4550-8152-764B71F35022}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDInterest_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDInterest"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Заинтересованность"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Заинтересованность"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{39469EB8-8D00-4861-B0B1-CC41D5BF2C1F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{39469EB8-8D00-4861-B0B1-CC41D5BF2C1F}&quot;
  Open s &amp; Me.name &amp; &quot;{39469EB8-8D00-4861-B0B1-CC41D5BF2C1F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDDocType_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDDocType"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип документа"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип документа"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0EE611F3-1F4E-4227-9A3F-D88030F89B1F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0EE611F3-1F4E-4227-9A3F-D88030F89B1F}&quot;
  Open s &amp; Me.name &amp; &quot;{0EE611F3-1F4E-4227-9A3F-D88030F89B1F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDLoyalty_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDLoyalty"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Лояльность"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Лояльность"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C9DD51FC-3DCF-4694-85F0-D97718AF949A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C9DD51FC-3DCF-4694-85F0-D97718AF949A}&quot;
  Open s &amp; Me.name &amp; &quot;{C9DD51FC-3DCF-4694-85F0-D97718AF949A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDMarket_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDMarket"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Рынки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Рынки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8D647377-AE4E-4EFF-ABB6-E584CFF8C8DD}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8D647377-AE4E-4EFF-ABB6-E584CFF8C8DD}&quot;
  Open s &amp; Me.name &amp; &quot;{8D647377-AE4E-4EFF-ABB6-E584CFF8C8DD}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDContractStage_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDContractStageadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Стадия договора"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Стадия договора"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{17A7CD05-E94F-48C9-B24D-06F2A9B09DA7}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{17A7CD05-E94F-48C9-B24D-06F2A9B09DA7}&quot;
  Open s &amp; Me.name &amp; &quot;{17A7CD05-E94F-48C9-B24D-06F2A9B09DA7}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRD_CompInfo_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRD_CompInfoadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Источник информации о компании"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1EDC01E0-2221-45FC-9E36-4D690DDDA8AB}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1EDC01E0-2221-45FC-9E36-4D690DDDA8AB}&quot;
  Open s &amp; Me.name &amp; &quot;{1EDC01E0-2221-45FC-9E36-4D690DDDA8AB}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDRreportType_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDRreportTypeadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип отчета"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип отчета"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2E3E5E59-B27A-4ACA-8AA0-50D234244C3D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2E3E5E59-B27A-4ACA-8AA0-50D234244C3D}&quot;
  Open s &amp; Me.name &amp; &quot;{2E3E5E59-B27A-4ACA-8AA0-50D234244C3D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDPrjType_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDPrjTypeadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы проектов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Типы проектов"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0A6BD9EC-4A11-4136-A4DC-6A7433B33507}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0A6BD9EC-4A11-4136-A4DC-6A7433B33507}&quot;
  Open s &amp; Me.name &amp; &quot;{0A6BD9EC-4A11-4136-A4DC-6A7433B33507}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDStream_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDStreamadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Направление деятельности"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Направление деятельности"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{6FD6E698-33B0-4550-8152-764B71F35022}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{6FD6E698-33B0-4550-8152-764B71F35022}&quot;
  Open s &amp; Me.name &amp; &quot;{6FD6E698-33B0-4550-8152-764B71F35022}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDInterest_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDInterestadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Заинтересованность"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Заинтересованность"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{39469EB8-8D00-4861-B0B1-CC41D5BF2C1F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{39469EB8-8D00-4861-B0B1-CC41D5BF2C1F}&quot;
  Open s &amp; Me.name &amp; &quot;{39469EB8-8D00-4861-B0B1-CC41D5BF2C1F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDDocType_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDDocTypeadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип документа"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип документа"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0EE611F3-1F4E-4227-9A3F-D88030F89B1F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0EE611F3-1F4E-4227-9A3F-D88030F89B1F}&quot;
  Open s &amp; Me.name &amp; &quot;{0EE611F3-1F4E-4227-9A3F-D88030F89B1F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDLoyalty_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDLoyaltyadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Лояльность"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Лояльность"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C9DD51FC-3DCF-4694-85F0-D97718AF949A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C9DD51FC-3DCF-4694-85F0-D97718AF949A}&quot;
  Open s &amp; Me.name &amp; &quot;{C9DD51FC-3DCF-4694-85F0-D97718AF949A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDMarket_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDMarketadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Рынки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Рынки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8D647377-AE4E-4EFF-ABB6-E584CFF8C8DD}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8D647377-AE4E-4EFF-ABB6-E584CFF8C8DD}&quot;
  Open s &amp; Me.name &amp; &quot;{8D647377-AE4E-4EFF-ABB6-E584CFF8C8DD}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDMarket_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDMarket" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDMarket"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="treeVRDMarket" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treeVRDMarket"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Indentation" PropValue="75"/><Properties Name="HideSelection" PropValue="False"/><Properties Name="Left" PropValue="225"/><Properties Name="Top" PropValue="600"/></ControlData><ControlData Name="cmdVRDMarketAddRoot" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketAddRoot"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEWROOT.ico"/><Properties Name="ToolTipText" PropValue="Добавить ветку"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDMarketAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDMarketEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDMarketDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDMarketRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDMarketAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupVRDMarket" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Рынки"/><Properties Name="Name" PropValue="mnuPopupVRDMarket"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDMarketAddRoot" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать ветку"/><Properties Name="Name" PropValue="mnuVRDMarketAddRoot"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDMarketAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDMarketAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDMarketEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDMarketEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDMarketDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDMarketDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDMarketS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDMarketS1"/></ControlData><ControlData Name="mnuVRDMarketBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDMarketBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDMarketCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDMarketCOPY"/></ControlData><ControlData Name="mnuVRDMarketCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDMarketCUT"/></ControlData><ControlData Name="mnuVRDMarketPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDMarketPASTE"/></ControlData><ControlData Name="mnuVRDMarketCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDMarketCHANGE"/></ControlData><ControlData Name="mnuVRDMarketCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDMarketCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDMarketRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDMarketRef"/></ControlData><ControlData Name="mnuVRDMarketAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDMarketAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDMarket" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDMarket"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private menuActionVRDMarket as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDMarketAdd_Click()
  on error resume next
  on error resume next
  Dim f As Object, p As Object
If (treeVRDMarket.SelectedItem is Nothing) Then  exit sub
  Set p = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  Set f = p.VRDMarket.Add()

      Set frmVRDMarket_admi.Item = f
      again: frmVRDMarket_admi.NotFirstTime = False
      frmVRDMarket_admi.OnInit
      frmVRDMarket_admi.Show vbModal
      If frmVRDMarket_admi.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
          If treeVRDMarket.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
            f.LoadToTree treeVRDMarket, treeVRDMarket.SelectedItem.Key
          end if
          set treeVRDMarket.SelectedItem = treeVRDMarket.nodes.item(  f.ID &amp; &quot;VRDMarket&quot;)
      Else
        Item.VRDMarket.Delete f.ID
        Item.VRDMarket.Remove f.ID
      End If
End Sub

Private Sub cmdVRDMarketAddRoot_Click()
  on error resume next
Dim f As Object, p As Object
  Set f = Item.VRDMarket.Add()

      Set frmVRDMarket_admi.Item = f
      again: frmVRDMarket_admi.NotFirstTime = False
      frmVRDMarket_admi.OnInit
      frmVRDMarket_admi.Show vbModal
      If frmVRDMarket_admi.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
    Item.VRDMarket.refresh
    treeVRDMarket.nodes.clear
    Item.VRDMarket.filltree treeVRDMarket
          set treeVRDMarket.SelectedItem = treeVRDMarket.nodes.item(  f.ID &amp; &quot;VRDMarket&quot;)
      Else
        Item.VRDMarket.Remove f.ID
      End If
End Sub

Private Sub cmdVRDMarketEdit_Click()
  on error resume next
  Dim f As Object
  If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  Set frmVRDMarket_admi.Item = f
  again: frmVRDMarket_admi.NotFirstTime = False
  frmVRDMarket_admi.OnInit
  frmVRDMarket_admi.Show vbModal
  If frmVRDMarket_admi.OK Then
    err.clear
    f.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
  End If
End Sub

Private Sub cmdVRDMarketDel_Click()
  on error resume next
  Dim f As Object
  If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; f.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
  on error goto bye
     if f.Parent.Delete( f.ID) then
       treeVRDMarket.Nodes.Remove treeVRDMarket.SelectedItem.Key
     End If
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub

Private Sub cmdVRDMarketAcc_Click()
  on error resume next
  Dim f As Object
  If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  item.application.manager.ShowSecurityDialog f
End Sub

Private Sub cmdVRDMarketREf_Click()
  on error resume next
  Item.VRDMarket.refresh
  treeVRDMarket.nodes.clear
  Item.VRDMarket.filltree treeVRDMarket
End Sub

Private Sub treeVRDMarket_DblClick()
If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  cmdVRDMarketEdit_Click
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub treeVRDMarket_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treeVRDMarket.Nodes.Remove Node.Child.Index
 Dim f As Object
 Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(Node.Key, 38))
 f.expandpart treeVRDMarket, Node.Key
 parentform.mousepointer = vbNormal
End If
End Sub

private sub treeVRDMarket_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupVRDMarket
End If
end sub
private sub mnuVRDMarketAddRoot_click()
   menuActionVRDMarket =&quot;ADDROOT&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketAdd_click()
   menuActionVRDMarket =&quot;ADD&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketEdit_click()
   menuActionVRDMarket =&quot;EDIT&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketDelete_click()
   menuActionVRDMarket =&quot;DEL&quot;
   menuTimerVRDMarket.enabled = true
end sub
  Private Sub mnuVRDMarketCOPY_Click()
    On Error Resume Next
    If TREEVRDMarket.SELECTEDItem is nothing Then Exit Sub
        Dim u As Object
        Set u = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
        SaveToBuffer u
  End Sub
  Private Sub mnuVRDMarketCUT_Click()
    On Error Resume Next
    If TREEVRDMarket.SELECTEDItem is nothing Then Exit Sub
    Dim u As Object,BM
    Set u = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
    SaveToBuffer u
    SET BM = u.parent
    u.parent.Delete u.ID
    TREEVRDMarket.nodes.remove TREEVRDMarket.selecteditem.key
  End Sub
Private Sub mnuVRDMarketPASTE_Click()
On Error Resume Next
If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  Dim u As Object, f as object
  Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  Set u = f.VRDMarket.Add()
  If GetFromBuffer(u) Then
    If treeVRDMarket.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
      u.LoadToTree treeVRDMarket, treeVRDMarket.SelectedItem.Key
    end if
  Else
   f.VRDMarket.refresh
  End If
End Sub
Private Sub mnuVRDMarketCHANGE_Click()
  On Error Resume Next
  If TREEVRDMarket.SELECTEDItem is nothing Then Exit Sub
  Dim u As Object,BM
  Set u = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  If GetFromBuffer(u) Then
    TREEVRDMarket.SELECTEDItem.text = u.brief
      treeVRDMarket.SelectedItem.Expanded = False
      While treeVRDMarket.SelectedItem.Children &gt; 0
        treeVRDMarket.Nodes.Remove treeVRDMarket.SelectedItem.Child.Key
      Wend
      treeVRDMarket.Nodes.Add(treeVRDMarket.SelectedItem.Key, 4, &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
      treeVRDMarket_Expand treeVRDMarket.SelectedItem
  End If
End Sub
  Private Sub mnuVRDMarketCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDMarketRef_click()
   menuActionVRDMarket =&quot;REF&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketAcc_click()
   menuActionVRDMarket =&quot;ACC&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub menuTimerVRDMarket_timer()
   menuTimerVRDMarket.enabled = false
   if menuActionVRDMarket =&quot;ADDROOT&quot; then cmdVRDMarketADDROOT_CLick
   if menuActionVRDMarket =&quot;ADD&quot; then cmdVRDMarketADD_CLick
   if menuActionVRDMarket =&quot;EDIT&quot; then cmdVRDMarketEDIT_CLick
   if menuActionVRDMarket =&quot;DEL&quot; then cmdVRDMarketDEL_CLick
   if menuActionVRDMarket =&quot;REF&quot; then cmdVRDMarketREF_CLick
   if menuActionVRDMarket =&quot;ACC&quot; then cmdVRDMarketACC_CLick
   menuActionVRDMarket =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDMarketAddRoot,cmdVRDMarketAddRoot.tag
  LoadBtnPictures cmdVRDMarketAdd,cmdVRDMarketAdd.tag
  LoadBtnPictures cmdVRDMarketEdit,cmdVRDMarketEdit.tag
  LoadBtnPictures cmdVRDMarketDel,cmdVRDMarketDel.tag
  LoadBtnPictures cmdVRDMarketRef,cmdVRDMarketRef.tag
  LoadBtnPictures cmdVRDMarketAcc,cmdVRDMarketAcc.tag
Item.VRDMarket.filltree treeVRDMarket
end sub
private sub OnTabClick()

      treeVRDMarket.Top = 40 * Screen.TwipsPerPixelX
      treeVRDMarket.Left = 5 * Screen.TwipsPerPixelX
      treeVRDMarket.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      treeVRDMarket.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDMarket.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDInterest_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDInterest" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDInterest"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDInterest" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDInterest"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDInterestAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDInterestEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDInterestDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDInterestRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDInterestPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDInterestCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDInterestFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDInterestRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDInterestRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDInterestAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDInterest" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Заинтересованность"/><Properties Name="Name" PropValue="mnuPopupVRDInterest"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDInterestAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDInterestAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDInterestEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDInterestEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDInterestDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDInterestDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDInterestOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDInterestOpen"/></ControlData><ControlData Name="mnuVRDInterestRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDInterestRef"/></ControlData><ControlData Name="mnuVRDInterestS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDInterestS1"/></ControlData><ControlData Name="mnuVRDInterestBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDInterestBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDInterestCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDInterestCOPY"/></ControlData><ControlData Name="mnuVRDInterestCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDInterestCUT"/></ControlData><ControlData Name="mnuVRDInterestPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDInterestPASTE"/></ControlData><ControlData Name="mnuVRDInterestCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDInterestCHANGE"/></ControlData><ControlData Name="mnuVRDInterestCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDInterestCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDInterestPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDInterestPrn"/></ControlData><ControlData Name="mnuVRDInterestCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDInterestCfg"/></ControlData><ControlData Name="mnuVRDInterestFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDInterestFind"/></ControlData><ControlData Name="mnuVRDInterestAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDInterestAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDInterest" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDInterest"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDInterest as object
private menuActionVRDInterest as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDInterestCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDInterest,&quot;gridVRDInterest&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDInterestPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDInterest,&quot;Заинтересованность&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDInterestRef_Click()
  on error resume next
  item.VRDInterest.Refresh
  gridVRDInterest.itemCount = item.VRDInterest.count
  gridVRDInterest.Refetch
  gridVRDInterest.Refresh
End Sub
Private Sub cmdVRDInterestAcc_Click()
On Error Resume Next
If gridVRDInterest.ItemCount = 0 Then Exit Sub
If gridVRDInterest.Row &gt; 0 Then
 If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDInterestEdit_Click()
  on error resume next
If gridVRDInterest.ItemCount = 0 Then Exit Sub
If gridVRDInterest.Row &gt; 0 then
 If gridVRDInterest.RowIndex(gridVRDInterest.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDInterest_admi.Item = u
    again: frmVRDInterest_admi.NotFirstTime = False
    frmVRDInterest_admi.OnInit
    frmVRDInterest_admi.Show vbModal
    If frmVRDInterest_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDInterest.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDInterestDel_Click()
  on error resume next
  gridVRDInterest.Delete
End Sub
Private Sub cmdVRDInterestAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDInterest.Add()

      Set frmVRDInterest_admi.Item = u
      again: frmVRDInterest_admi.NotFirstTime = False
      frmVRDInterest_admi.OnInit
      frmVRDInterest_admi.Show vbModal
      If frmVRDInterest_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDInterest.ItemCount = Item.VRDInterest.Count
        gridVRDInterest.Refresh
        gridVRDInterest.RefreshGroups
        gridVRDInterest.Refreshsort
        gridVRDInterest.MoveToBookmark u.ID &amp; &quot;VRDInterest&quot;
      Else
        Item.VRDInterest.Delete u.ID
        Item.VRDInterest.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDInterestFnd_Click()
  on error resume next
  fndVRDInterest.ShowForm
End Sub
Private Sub cmdVRDInterestRun_Click()
  on error resume next
  gridVRDInterest_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDInterest_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDInterest.LoadRow gridVRDInterest, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDInterest_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDInterest.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDInterest&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDInterest_DblClick()
  cmdVRDInterestEdit_Click
End Sub
Private Sub gridVRDInterest_KeyPress(KeyAscii As Integer)
  If gridVRDInterest.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDInterest.FindOnPress KeyAscii
End Sub

Private Sub gridVRDInterest_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDInterest.Row And LastRow &gt; 0 Then
  gridVRDInterest.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDInterest.GetRowData(gridVRDInterest.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDInterestPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDInterest.Add()
    If GetFromBuffer(u) Then
      gridVRDInterest.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDInterest_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDInterestCfg_Click
        End If
    End If
end sub

private sub gridVRDInterest_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDInterest
End If
end sub
private sub mnuVRDInterestAdd_click()
   menuActionVRDInterest =&quot;ADD&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestEdit_click()
   menuActionVRDInterest =&quot;EDIT&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestDelete_click()
   menuActionVRDInterest =&quot;DEL&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestOpen_click()
   menuActionVRDInterest =&quot;RUN&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestRef_click()
   menuActionVRDInterest =&quot;REF&quot;
   menuTimerVRDInterest.enabled = true
end sub
  Private Sub mnuVRDInterestCOPY_Click()
    On Error Resume Next
    If gridVRDInterest.ItemCount = 0 Then Exit Sub
    If gridVRDInterest.Row &gt; 0 Then
     If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDInterestCUT_Click()
    On Error Resume Next
    If gridVRDInterest.ItemCount = 0 Then Exit Sub
    If gridVRDInterest.Row &gt; 0 Then
     If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDInterest.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDInterestCHANGE_Click()
  On Error Resume Next
  If gridVRDInterest.ItemCount = 0 Then Exit Sub
  If gridVRDInterest.Row &gt; 0 Then
   If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDInterest.ItemCount = u.parent.Count
      gridVRDInterest.RefreshRowIndex gridVRDInterest.RowIndex(gridVRDInterest.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDInterestCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDInterestPrn_click()
   menuActionVRDInterest =&quot;PRN&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestCfg_click()
   menuActionVRDInterest =&quot;CFG&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestFind_click()
   menuActionVRDInterest =&quot;FND&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestAcc_click()
   menuActionVRDInterest =&quot;ACC&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub menuTimerVRDInterest_timer()
   menuTimerVRDInterest.enabled = false
   if menuActionVRDInterest =&quot;ADD&quot; then cmdVRDInterestADD_CLick
   if menuActionVRDInterest =&quot;EDIT&quot; then cmdVRDInterestEDIT_CLick
   if menuActionVRDInterest =&quot;DEL&quot; then cmdVRDInterestDEL_CLick
   if menuActionVRDInterest =&quot;RUN&quot; then cmdVRDInterestRUN_CLick
   if menuActionVRDInterest =&quot;REF&quot; then cmdVRDInterestREF_CLick
   if menuActionVRDInterest =&quot;PRN&quot; then cmdVRDInterestPRN_CLick
   if menuActionVRDInterest =&quot;CFG&quot; then cmdVRDInterestCFG_CLick
   if menuActionVRDInterest =&quot;FND&quot; then cmdVRDInterestFND_CLick
   if menuActionVRDInterest =&quot;ACC&quot; then cmdVRDInterestACC_CLick
   menuActionVRDInterest =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDInterestAdd,cmdVRDInterestAdd.tag
  LoadBtnPictures cmdVRDInterestEdit,cmdVRDInterestEdit.tag
  LoadBtnPictures cmdVRDInterestDel,cmdVRDInterestDel.tag
  LoadBtnPictures cmdVRDInterestRef,cmdVRDInterestRef.tag
  LoadBtnPictures cmdVRDInterestPrn,cmdVRDInterestPrn.tag
  LoadBtnPictures cmdVRDInterestFnd,cmdVRDInterestFnd.tag
  LoadBtnPictures cmdVRDInterestRun,cmdVRDInterestRun.tag
  LoadBtnPictures cmdVRDInterestAcc,cmdVRDInterestAcc.tag
  LoadBtnPictures cmdVRDInterestCfg,cmdVRDInterestCfg.tag
  item.VRDInterest.PrepareGrid gridVRDInterest
  LoadGridLayout gridVRDInterest
  Set fndVRDInterest = Nothing
  On Error Resume Next
  Set fndVRDInterest = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDInterest.Init gridVRDInterest
end sub
private sub OnTabClick()

      gridVRDInterest.Top = 40 * Screen.TwipsPerPixelX
      gridVRDInterest.Left = 5 * Screen.TwipsPerPixelX
      gridVRDInterest.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDInterest.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDInterest.Top = 40 * Screen.TwipsPerPixelX
      gridVRDInterest.Left = 5 * Screen.TwipsPerPixelX
      gridVRDInterest.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDInterest.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDInterest.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDInterest = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDStream_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDStream" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDStream"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDStream" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDStream"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDStreamAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDStreamEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDStreamDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDStreamRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDStreamPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDStreamCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDStreamFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDStreamRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDStreamRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDStreamAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDStream" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Направление деятельности"/><Properties Name="Name" PropValue="mnuPopupVRDStream"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDStreamAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDStreamAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDStreamEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDStreamEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDStreamDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDStreamDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDStreamOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDStreamOpen"/></ControlData><ControlData Name="mnuVRDStreamRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDStreamRef"/></ControlData><ControlData Name="mnuVRDStreamS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDStreamS1"/></ControlData><ControlData Name="mnuVRDStreamBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDStreamBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDStreamCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDStreamCOPY"/></ControlData><ControlData Name="mnuVRDStreamCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDStreamCUT"/></ControlData><ControlData Name="mnuVRDStreamPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDStreamPASTE"/></ControlData><ControlData Name="mnuVRDStreamCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDStreamCHANGE"/></ControlData><ControlData Name="mnuVRDStreamCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDStreamCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDStreamPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDStreamPrn"/></ControlData><ControlData Name="mnuVRDStreamCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDStreamCfg"/></ControlData><ControlData Name="mnuVRDStreamFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDStreamFind"/></ControlData><ControlData Name="mnuVRDStreamAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDStreamAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDStream" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDStream"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDStream as object
private menuActionVRDStream as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDStreamCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDStream,&quot;gridVRDStream&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDStreamPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDStream,&quot;Направление деятельности&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDStreamRef_Click()
  on error resume next
  item.VRDStream.Refresh
  gridVRDStream.itemCount = item.VRDStream.count
  gridVRDStream.Refetch
  gridVRDStream.Refresh
End Sub
Private Sub cmdVRDStreamAcc_Click()
On Error Resume Next
If gridVRDStream.ItemCount = 0 Then Exit Sub
If gridVRDStream.Row &gt; 0 Then
 If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDStreamEdit_Click()
  on error resume next
If gridVRDStream.ItemCount = 0 Then Exit Sub
If gridVRDStream.Row &gt; 0 then
 If gridVRDStream.RowIndex(gridVRDStream.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDStream_admi.Item = u
    again: frmVRDStream_admi.NotFirstTime = False
    frmVRDStream_admi.OnInit
    frmVRDStream_admi.Show vbModal
    If frmVRDStream_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDStream.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDStreamDel_Click()
  on error resume next
  gridVRDStream.Delete
End Sub
Private Sub cmdVRDStreamAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDStream.Add()

      Set frmVRDStream_admi.Item = u
      again: frmVRDStream_admi.NotFirstTime = False
      frmVRDStream_admi.OnInit
      frmVRDStream_admi.Show vbModal
      If frmVRDStream_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDStream.ItemCount = Item.VRDStream.Count
        gridVRDStream.Refresh
        gridVRDStream.RefreshGroups
        gridVRDStream.Refreshsort
        gridVRDStream.MoveToBookmark u.ID &amp; &quot;VRDStream&quot;
      Else
        Item.VRDStream.Delete u.ID
        Item.VRDStream.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDStreamFnd_Click()
  on error resume next
  fndVRDStream.ShowForm
End Sub
Private Sub cmdVRDStreamRun_Click()
  on error resume next
  gridVRDStream_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDStream_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDStream.LoadRow gridVRDStream, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDStream_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDStream.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDStream&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDStream_DblClick()
  cmdVRDStreamEdit_Click
End Sub
Private Sub gridVRDStream_KeyPress(KeyAscii As Integer)
  If gridVRDStream.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDStream.FindOnPress KeyAscii
End Sub

Private Sub gridVRDStream_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDStream.Row And LastRow &gt; 0 Then
  gridVRDStream.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDStream.GetRowData(gridVRDStream.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDStreamPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDStream.Add()
    If GetFromBuffer(u) Then
      gridVRDStream.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDStream_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDStreamCfg_Click
        End If
    End If
end sub

private sub gridVRDStream_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDStream
End If
end sub
private sub mnuVRDStreamAdd_click()
   menuActionVRDStream =&quot;ADD&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamEdit_click()
   menuActionVRDStream =&quot;EDIT&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamDelete_click()
   menuActionVRDStream =&quot;DEL&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamOpen_click()
   menuActionVRDStream =&quot;RUN&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamRef_click()
   menuActionVRDStream =&quot;REF&quot;
   menuTimerVRDStream.enabled = true
end sub
  Private Sub mnuVRDStreamCOPY_Click()
    On Error Resume Next
    If gridVRDStream.ItemCount = 0 Then Exit Sub
    If gridVRDStream.Row &gt; 0 Then
     If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDStreamCUT_Click()
    On Error Resume Next
    If gridVRDStream.ItemCount = 0 Then Exit Sub
    If gridVRDStream.Row &gt; 0 Then
     If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDStream.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDStreamCHANGE_Click()
  On Error Resume Next
  If gridVRDStream.ItemCount = 0 Then Exit Sub
  If gridVRDStream.Row &gt; 0 Then
   If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDStream.ItemCount = u.parent.Count
      gridVRDStream.RefreshRowIndex gridVRDStream.RowIndex(gridVRDStream.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDStreamCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDStreamPrn_click()
   menuActionVRDStream =&quot;PRN&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamCfg_click()
   menuActionVRDStream =&quot;CFG&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamFind_click()
   menuActionVRDStream =&quot;FND&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamAcc_click()
   menuActionVRDStream =&quot;ACC&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub menuTimerVRDStream_timer()
   menuTimerVRDStream.enabled = false
   if menuActionVRDStream =&quot;ADD&quot; then cmdVRDStreamADD_CLick
   if menuActionVRDStream =&quot;EDIT&quot; then cmdVRDStreamEDIT_CLick
   if menuActionVRDStream =&quot;DEL&quot; then cmdVRDStreamDEL_CLick
   if menuActionVRDStream =&quot;RUN&quot; then cmdVRDStreamRUN_CLick
   if menuActionVRDStream =&quot;REF&quot; then cmdVRDStreamREF_CLick
   if menuActionVRDStream =&quot;PRN&quot; then cmdVRDStreamPRN_CLick
   if menuActionVRDStream =&quot;CFG&quot; then cmdVRDStreamCFG_CLick
   if menuActionVRDStream =&quot;FND&quot; then cmdVRDStreamFND_CLick
   if menuActionVRDStream =&quot;ACC&quot; then cmdVRDStreamACC_CLick
   menuActionVRDStream =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDStreamAdd,cmdVRDStreamAdd.tag
  LoadBtnPictures cmdVRDStreamEdit,cmdVRDStreamEdit.tag
  LoadBtnPictures cmdVRDStreamDel,cmdVRDStreamDel.tag
  LoadBtnPictures cmdVRDStreamRef,cmdVRDStreamRef.tag
  LoadBtnPictures cmdVRDStreamPrn,cmdVRDStreamPrn.tag
  LoadBtnPictures cmdVRDStreamFnd,cmdVRDStreamFnd.tag
  LoadBtnPictures cmdVRDStreamRun,cmdVRDStreamRun.tag
  LoadBtnPictures cmdVRDStreamAcc,cmdVRDStreamAcc.tag
  LoadBtnPictures cmdVRDStreamCfg,cmdVRDStreamCfg.tag
  item.VRDStream.PrepareGrid gridVRDStream
  LoadGridLayout gridVRDStream
  Set fndVRDStream = Nothing
  On Error Resume Next
  Set fndVRDStream = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDStream.Init gridVRDStream
end sub
private sub OnTabClick()

      gridVRDStream.Top = 40 * Screen.TwipsPerPixelX
      gridVRDStream.Left = 5 * Screen.TwipsPerPixelX
      gridVRDStream.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDStream.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDStream.Top = 40 * Screen.TwipsPerPixelX
      gridVRDStream.Left = 5 * Screen.TwipsPerPixelX
      gridVRDStream.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDStream.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDStream.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDStream = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDContractStage_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDContractStage" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDContractStage"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDContractStage" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDContractStage"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDContractStageAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDContractStageEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDContractStageDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDContractStageRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDContractStagePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStagePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDContractStageCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDContractStageFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDContractStageRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDContractStageRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDContractStageAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDContractStage" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Стадия договора"/><Properties Name="Name" PropValue="mnuPopupVRDContractStage"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDContractStageAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDContractStageAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDContractStageEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDContractStageEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDContractStageDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDContractStageDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDContractStageOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDContractStageOpen"/></ControlData><ControlData Name="mnuVRDContractStageRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDContractStageRef"/></ControlData><ControlData Name="mnuVRDContractStageS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDContractStageS1"/></ControlData><ControlData Name="mnuVRDContractStageBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDContractStageBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDContractStageCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDContractStageCOPY"/></ControlData><ControlData Name="mnuVRDContractStageCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDContractStageCUT"/></ControlData><ControlData Name="mnuVRDContractStagePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDContractStagePASTE"/></ControlData><ControlData Name="mnuVRDContractStageCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDContractStageCHANGE"/></ControlData><ControlData Name="mnuVRDContractStageCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDContractStageCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDContractStagePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDContractStagePrn"/></ControlData><ControlData Name="mnuVRDContractStageCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDContractStageCfg"/></ControlData><ControlData Name="mnuVRDContractStageFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDContractStageFind"/></ControlData><ControlData Name="mnuVRDContractStageAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDContractStageAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDContractStage" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDContractStage"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDContractStage as object
private menuActionVRDContractStage as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDContractStageCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDContractStage,&quot;gridVRDContractStage&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDContractStagePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDContractStage,&quot;Стадия договора&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDContractStageRef_Click()
  on error resume next
  item.VRDContractStage.Refresh
  gridVRDContractStage.itemCount = item.VRDContractStage.count
  gridVRDContractStage.Refetch
  gridVRDContractStage.Refresh
End Sub
Private Sub cmdVRDContractStageAcc_Click()
On Error Resume Next
If gridVRDContractStage.ItemCount = 0 Then Exit Sub
If gridVRDContractStage.Row &gt; 0 Then
 If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDContractStageEdit_Click()
  on error resume next
If gridVRDContractStage.ItemCount = 0 Then Exit Sub
If gridVRDContractStage.Row &gt; 0 then
 If gridVRDContractStage.RowIndex(gridVRDContractStage.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDContractStage_admi.Item = u
    again: frmVRDContractStage_admi.NotFirstTime = False
    frmVRDContractStage_admi.OnInit
    frmVRDContractStage_admi.Show vbModal
    If frmVRDContractStage_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDContractStage.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDContractStageDel_Click()
  on error resume next
  gridVRDContractStage.Delete
End Sub
Private Sub cmdVRDContractStageAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDContractStage.Add()

      Set frmVRDContractStage_admi.Item = u
      again: frmVRDContractStage_admi.NotFirstTime = False
      frmVRDContractStage_admi.OnInit
      frmVRDContractStage_admi.Show vbModal
      If frmVRDContractStage_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDContractStage.ItemCount = Item.VRDContractStage.Count
        gridVRDContractStage.Refresh
        gridVRDContractStage.RefreshGroups
        gridVRDContractStage.Refreshsort
        gridVRDContractStage.MoveToBookmark u.ID &amp; &quot;VRDContractStage&quot;
      Else
        Item.VRDContractStage.Delete u.ID
        Item.VRDContractStage.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDContractStageFnd_Click()
  on error resume next
  fndVRDContractStage.ShowForm
End Sub
Private Sub cmdVRDContractStageRun_Click()
  on error resume next
  gridVRDContractStage_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDContractStage_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDContractStage.LoadRow gridVRDContractStage, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDContractStage_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDContractStage.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDContractStage&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDContractStage_DblClick()
  cmdVRDContractStageEdit_Click
End Sub
Private Sub gridVRDContractStage_KeyPress(KeyAscii As Integer)
  If gridVRDContractStage.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDContractStage.FindOnPress KeyAscii
End Sub

Private Sub gridVRDContractStage_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDContractStage.Row And LastRow &gt; 0 Then
  gridVRDContractStage.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDContractStage.GetRowData(gridVRDContractStage.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDContractStagePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDContractStage.Add()
    If GetFromBuffer(u) Then
      gridVRDContractStage.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDContractStage_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDContractStageCfg_Click
        End If
    End If
end sub

private sub gridVRDContractStage_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDContractStage
End If
end sub
private sub mnuVRDContractStageAdd_click()
   menuActionVRDContractStage =&quot;ADD&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageEdit_click()
   menuActionVRDContractStage =&quot;EDIT&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageDelete_click()
   menuActionVRDContractStage =&quot;DEL&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageOpen_click()
   menuActionVRDContractStage =&quot;RUN&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageRef_click()
   menuActionVRDContractStage =&quot;REF&quot;
   menuTimerVRDContractStage.enabled = true
end sub
  Private Sub mnuVRDContractStageCOPY_Click()
    On Error Resume Next
    If gridVRDContractStage.ItemCount = 0 Then Exit Sub
    If gridVRDContractStage.Row &gt; 0 Then
     If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDContractStageCUT_Click()
    On Error Resume Next
    If gridVRDContractStage.ItemCount = 0 Then Exit Sub
    If gridVRDContractStage.Row &gt; 0 Then
     If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDContractStage.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDContractStageCHANGE_Click()
  On Error Resume Next
  If gridVRDContractStage.ItemCount = 0 Then Exit Sub
  If gridVRDContractStage.Row &gt; 0 Then
   If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDContractStage.ItemCount = u.parent.Count
      gridVRDContractStage.RefreshRowIndex gridVRDContractStage.RowIndex(gridVRDContractStage.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDContractStageCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDContractStagePrn_click()
   menuActionVRDContractStage =&quot;PRN&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageCfg_click()
   menuActionVRDContractStage =&quot;CFG&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageFind_click()
   menuActionVRDContractStage =&quot;FND&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageAcc_click()
   menuActionVRDContractStage =&quot;ACC&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub menuTimerVRDContractStage_timer()
   menuTimerVRDContractStage.enabled = false
   if menuActionVRDContractStage =&quot;ADD&quot; then cmdVRDContractStageADD_CLick
   if menuActionVRDContractStage =&quot;EDIT&quot; then cmdVRDContractStageEDIT_CLick
   if menuActionVRDContractStage =&quot;DEL&quot; then cmdVRDContractStageDEL_CLick
   if menuActionVRDContractStage =&quot;RUN&quot; then cmdVRDContractStageRUN_CLick
   if menuActionVRDContractStage =&quot;REF&quot; then cmdVRDContractStageREF_CLick
   if menuActionVRDContractStage =&quot;PRN&quot; then cmdVRDContractStagePRN_CLick
   if menuActionVRDContractStage =&quot;CFG&quot; then cmdVRDContractStageCFG_CLick
   if menuActionVRDContractStage =&quot;FND&quot; then cmdVRDContractStageFND_CLick
   if menuActionVRDContractStage =&quot;ACC&quot; then cmdVRDContractStageACC_CLick
   menuActionVRDContractStage =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDContractStageAdd,cmdVRDContractStageAdd.tag
  LoadBtnPictures cmdVRDContractStageEdit,cmdVRDContractStageEdit.tag
  LoadBtnPictures cmdVRDContractStageDel,cmdVRDContractStageDel.tag
  LoadBtnPictures cmdVRDContractStageRef,cmdVRDContractStageRef.tag
  LoadBtnPictures cmdVRDContractStagePrn,cmdVRDContractStagePrn.tag
  LoadBtnPictures cmdVRDContractStageFnd,cmdVRDContractStageFnd.tag
  LoadBtnPictures cmdVRDContractStageRun,cmdVRDContractStageRun.tag
  LoadBtnPictures cmdVRDContractStageAcc,cmdVRDContractStageAcc.tag
  LoadBtnPictures cmdVRDContractStageCfg,cmdVRDContractStageCfg.tag
  item.VRDContractStage.PrepareGrid gridVRDContractStage
  LoadGridLayout gridVRDContractStage
  Set fndVRDContractStage = Nothing
  On Error Resume Next
  Set fndVRDContractStage = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDContractStage.Init gridVRDContractStage
end sub
private sub OnTabClick()

      gridVRDContractStage.Top = 40 * Screen.TwipsPerPixelX
      gridVRDContractStage.Left = 5 * Screen.TwipsPerPixelX
      gridVRDContractStage.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDContractStage.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDContractStage.Top = 40 * Screen.TwipsPerPixelX
      gridVRDContractStage.Left = 5 * Screen.TwipsPerPixelX
      gridVRDContractStage.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDContractStage.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDContractStage.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDContractStage = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDLoyalty_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDLoyalty" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDLoyalty"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDLoyalty" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDLoyalty"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDLoyaltyAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDLoyaltyEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDLoyaltyDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDLoyaltyRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDLoyaltyPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDLoyaltyCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDLoyaltyFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDLoyaltyRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDLoyaltyAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDLoyalty" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Лояльность"/><Properties Name="Name" PropValue="mnuPopupVRDLoyalty"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDLoyaltyAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDLoyaltyEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDLoyaltyEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDLoyaltyDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDLoyaltyOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDLoyaltyOpen"/></ControlData><ControlData Name="mnuVRDLoyaltyRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyRef"/></ControlData><ControlData Name="mnuVRDLoyaltyS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDLoyaltyS1"/></ControlData><ControlData Name="mnuVRDLoyaltyBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDLoyaltyBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDLoyaltyCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCOPY"/></ControlData><ControlData Name="mnuVRDLoyaltyCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCUT"/></ControlData><ControlData Name="mnuVRDLoyaltyPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyPASTE"/></ControlData><ControlData Name="mnuVRDLoyaltyCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCHANGE"/></ControlData><ControlData Name="mnuVRDLoyaltyCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDLoyaltyPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyPrn"/></ControlData><ControlData Name="mnuVRDLoyaltyCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCfg"/></ControlData><ControlData Name="mnuVRDLoyaltyFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDLoyaltyFind"/></ControlData><ControlData Name="mnuVRDLoyaltyAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDLoyaltyAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDLoyalty" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDLoyalty"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDLoyalty as object
private menuActionVRDLoyalty as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDLoyaltyCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDLoyalty,&quot;gridVRDLoyalty&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDLoyaltyPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDLoyalty,&quot;Лояльность&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDLoyaltyRef_Click()
  on error resume next
  item.VRDLoyalty.Refresh
  gridVRDLoyalty.itemCount = item.VRDLoyalty.count
  gridVRDLoyalty.Refetch
  gridVRDLoyalty.Refresh
End Sub
Private Sub cmdVRDLoyaltyAcc_Click()
On Error Resume Next
If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
If gridVRDLoyalty.Row &gt; 0 Then
 If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDLoyaltyEdit_Click()
  on error resume next
If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
If gridVRDLoyalty.Row &gt; 0 then
 If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDLoyalty_admi.Item = u
    again: frmVRDLoyalty_admi.NotFirstTime = False
    frmVRDLoyalty_admi.OnInit
    frmVRDLoyalty_admi.Show vbModal
    If frmVRDLoyalty_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDLoyalty.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDLoyaltyDel_Click()
  on error resume next
  gridVRDLoyalty.Delete
End Sub
Private Sub cmdVRDLoyaltyAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDLoyalty.Add()

      Set frmVRDLoyalty_admi.Item = u
      again: frmVRDLoyalty_admi.NotFirstTime = False
      frmVRDLoyalty_admi.OnInit
      frmVRDLoyalty_admi.Show vbModal
      If frmVRDLoyalty_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDLoyalty.ItemCount = Item.VRDLoyalty.Count
        gridVRDLoyalty.Refresh
        gridVRDLoyalty.RefreshGroups
        gridVRDLoyalty.Refreshsort
        gridVRDLoyalty.MoveToBookmark u.ID &amp; &quot;VRDLoyalty&quot;
      Else
        Item.VRDLoyalty.Delete u.ID
        Item.VRDLoyalty.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDLoyaltyFnd_Click()
  on error resume next
  fndVRDLoyalty.ShowForm
End Sub
Private Sub cmdVRDLoyaltyRun_Click()
  on error resume next
  gridVRDLoyalty_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDLoyalty_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDLoyalty.LoadRow gridVRDLoyalty, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDLoyalty_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDLoyalty&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDLoyalty_DblClick()
  cmdVRDLoyaltyEdit_Click
End Sub
Private Sub gridVRDLoyalty_KeyPress(KeyAscii As Integer)
  If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDLoyalty.FindOnPress KeyAscii
End Sub

Private Sub gridVRDLoyalty_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDLoyalty.Row And LastRow &gt; 0 Then
  gridVRDLoyalty.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDLoyalty.GetRowData(gridVRDLoyalty.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDLoyaltyPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDLoyalty.Add()
    If GetFromBuffer(u) Then
      gridVRDLoyalty.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDLoyalty_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDLoyaltyCfg_Click
        End If
    End If
end sub

private sub gridVRDLoyalty_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDLoyalty
End If
end sub
private sub mnuVRDLoyaltyAdd_click()
   menuActionVRDLoyalty =&quot;ADD&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyEdit_click()
   menuActionVRDLoyalty =&quot;EDIT&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyDelete_click()
   menuActionVRDLoyalty =&quot;DEL&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyOpen_click()
   menuActionVRDLoyalty =&quot;RUN&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyRef_click()
   menuActionVRDLoyalty =&quot;REF&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
  Private Sub mnuVRDLoyaltyCOPY_Click()
    On Error Resume Next
    If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
    If gridVRDLoyalty.Row &gt; 0 Then
     If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDLoyaltyCUT_Click()
    On Error Resume Next
    If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
    If gridVRDLoyalty.Row &gt; 0 Then
     If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDLoyalty.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDLoyaltyCHANGE_Click()
  On Error Resume Next
  If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
  If gridVRDLoyalty.Row &gt; 0 Then
   If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDLoyalty.ItemCount = u.parent.Count
      gridVRDLoyalty.RefreshRowIndex gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDLoyaltyCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDLoyaltyPrn_click()
   menuActionVRDLoyalty =&quot;PRN&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyCfg_click()
   menuActionVRDLoyalty =&quot;CFG&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyFind_click()
   menuActionVRDLoyalty =&quot;FND&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyAcc_click()
   menuActionVRDLoyalty =&quot;ACC&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub menuTimerVRDLoyalty_timer()
   menuTimerVRDLoyalty.enabled = false
   if menuActionVRDLoyalty =&quot;ADD&quot; then cmdVRDLoyaltyADD_CLick
   if menuActionVRDLoyalty =&quot;EDIT&quot; then cmdVRDLoyaltyEDIT_CLick
   if menuActionVRDLoyalty =&quot;DEL&quot; then cmdVRDLoyaltyDEL_CLick
   if menuActionVRDLoyalty =&quot;RUN&quot; then cmdVRDLoyaltyRUN_CLick
   if menuActionVRDLoyalty =&quot;REF&quot; then cmdVRDLoyaltyREF_CLick
   if menuActionVRDLoyalty =&quot;PRN&quot; then cmdVRDLoyaltyPRN_CLick
   if menuActionVRDLoyalty =&quot;CFG&quot; then cmdVRDLoyaltyCFG_CLick
   if menuActionVRDLoyalty =&quot;FND&quot; then cmdVRDLoyaltyFND_CLick
   if menuActionVRDLoyalty =&quot;ACC&quot; then cmdVRDLoyaltyACC_CLick
   menuActionVRDLoyalty =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDLoyaltyAdd,cmdVRDLoyaltyAdd.tag
  LoadBtnPictures cmdVRDLoyaltyEdit,cmdVRDLoyaltyEdit.tag
  LoadBtnPictures cmdVRDLoyaltyDel,cmdVRDLoyaltyDel.tag
  LoadBtnPictures cmdVRDLoyaltyRef,cmdVRDLoyaltyRef.tag
  LoadBtnPictures cmdVRDLoyaltyPrn,cmdVRDLoyaltyPrn.tag
  LoadBtnPictures cmdVRDLoyaltyFnd,cmdVRDLoyaltyFnd.tag
  LoadBtnPictures cmdVRDLoyaltyRun,cmdVRDLoyaltyRun.tag
  LoadBtnPictures cmdVRDLoyaltyAcc,cmdVRDLoyaltyAcc.tag
  LoadBtnPictures cmdVRDLoyaltyCfg,cmdVRDLoyaltyCfg.tag
  item.VRDLoyalty.PrepareGrid gridVRDLoyalty
  LoadGridLayout gridVRDLoyalty
  Set fndVRDLoyalty = Nothing
  On Error Resume Next
  Set fndVRDLoyalty = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDLoyalty.Init gridVRDLoyalty
end sub
private sub OnTabClick()

      gridVRDLoyalty.Top = 40 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Left = 5 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDLoyalty.Top = 40 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Left = 5 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDLoyalty.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDLoyalty = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDDocType_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDDocType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDDocType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDDocType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDDocType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDDocTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDDocTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDDocTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDDocTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDDocTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDDocTypeCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDDocTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDDocTypeRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDDocTypeRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDDocTypeAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDDocType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип документа"/><Properties Name="Name" PropValue="mnuPopupVRDDocType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDDocTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDDocTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDDocTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDDocTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDDocTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDDocTypeDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDDocTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDDocTypeOpen"/></ControlData><ControlData Name="mnuVRDDocTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDDocTypeRef"/></ControlData><ControlData Name="mnuVRDDocTypeS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDDocTypeS1"/></ControlData><ControlData Name="mnuVRDDocTypeBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDDocTypeBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDDocTypeCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDDocTypeCOPY"/></ControlData><ControlData Name="mnuVRDDocTypeCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDDocTypeCUT"/></ControlData><ControlData Name="mnuVRDDocTypePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDDocTypePASTE"/></ControlData><ControlData Name="mnuVRDDocTypeCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDDocTypeCHANGE"/></ControlData><ControlData Name="mnuVRDDocTypeCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDDocTypeCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDDocTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDDocTypePrn"/></ControlData><ControlData Name="mnuVRDDocTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDDocTypeCfg"/></ControlData><ControlData Name="mnuVRDDocTypeFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDDocTypeFind"/></ControlData><ControlData Name="mnuVRDDocTypeAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDDocTypeAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDDocType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDDocType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDDocType as object
private menuActionVRDDocType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDDocTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDDocType,&quot;gridVRDDocType&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDDocTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDDocType,&quot;Тип документа&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDDocTypeRef_Click()
  on error resume next
  item.VRDDocType.Refresh
  gridVRDDocType.itemCount = item.VRDDocType.count
  gridVRDDocType.Refetch
  gridVRDDocType.Refresh
End Sub
Private Sub cmdVRDDocTypeAcc_Click()
On Error Resume Next
If gridVRDDocType.ItemCount = 0 Then Exit Sub
If gridVRDDocType.Row &gt; 0 Then
 If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDDocTypeEdit_Click()
  on error resume next
If gridVRDDocType.ItemCount = 0 Then Exit Sub
If gridVRDDocType.Row &gt; 0 then
 If gridVRDDocType.RowIndex(gridVRDDocType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDDocType_admi.Item = u
    again: frmVRDDocType_admi.NotFirstTime = False
    frmVRDDocType_admi.OnInit
    frmVRDDocType_admi.Show vbModal
    If frmVRDDocType_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDDocType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDDocTypeDel_Click()
  on error resume next
  gridVRDDocType.Delete
End Sub
Private Sub cmdVRDDocTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDDocType.Add()

      Set frmVRDDocType_admi.Item = u
      again: frmVRDDocType_admi.NotFirstTime = False
      frmVRDDocType_admi.OnInit
      frmVRDDocType_admi.Show vbModal
      If frmVRDDocType_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDDocType.ItemCount = Item.VRDDocType.Count
        gridVRDDocType.Refresh
        gridVRDDocType.RefreshGroups
        gridVRDDocType.Refreshsort
        gridVRDDocType.MoveToBookmark u.ID &amp; &quot;VRDDocType&quot;
      Else
        Item.VRDDocType.Delete u.ID
        Item.VRDDocType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDDocTypeFnd_Click()
  on error resume next
  fndVRDDocType.ShowForm
End Sub
Private Sub cmdVRDDocTypeRun_Click()
  on error resume next
  gridVRDDocType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDDocType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDDocType.LoadRow gridVRDDocType, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDDocType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDDocType.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDDocType&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDDocType_DblClick()
  cmdVRDDocTypeEdit_Click
End Sub
Private Sub gridVRDDocType_KeyPress(KeyAscii As Integer)
  If gridVRDDocType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDDocType.FindOnPress KeyAscii
End Sub

Private Sub gridVRDDocType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDDocType.Row And LastRow &gt; 0 Then
  gridVRDDocType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDDocType.GetRowData(gridVRDDocType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDDocTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDDocType.Add()
    If GetFromBuffer(u) Then
      gridVRDDocType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDDocType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDDocTypeCfg_Click
        End If
    End If
end sub

private sub gridVRDDocType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDDocType
End If
end sub
private sub mnuVRDDocTypeAdd_click()
   menuActionVRDDocType =&quot;ADD&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeEdit_click()
   menuActionVRDDocType =&quot;EDIT&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeDelete_click()
   menuActionVRDDocType =&quot;DEL&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeOpen_click()
   menuActionVRDDocType =&quot;RUN&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeRef_click()
   menuActionVRDDocType =&quot;REF&quot;
   menuTimerVRDDocType.enabled = true
end sub
  Private Sub mnuVRDDocTypeCOPY_Click()
    On Error Resume Next
    If gridVRDDocType.ItemCount = 0 Then Exit Sub
    If gridVRDDocType.Row &gt; 0 Then
     If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDDocTypeCUT_Click()
    On Error Resume Next
    If gridVRDDocType.ItemCount = 0 Then Exit Sub
    If gridVRDDocType.Row &gt; 0 Then
     If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDDocType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDDocTypeCHANGE_Click()
  On Error Resume Next
  If gridVRDDocType.ItemCount = 0 Then Exit Sub
  If gridVRDDocType.Row &gt; 0 Then
   If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDDocType.ItemCount = u.parent.Count
      gridVRDDocType.RefreshRowIndex gridVRDDocType.RowIndex(gridVRDDocType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDDocTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDDocTypePrn_click()
   menuActionVRDDocType =&quot;PRN&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeCfg_click()
   menuActionVRDDocType =&quot;CFG&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeFind_click()
   menuActionVRDDocType =&quot;FND&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeAcc_click()
   menuActionVRDDocType =&quot;ACC&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub menuTimerVRDDocType_timer()
   menuTimerVRDDocType.enabled = false
   if menuActionVRDDocType =&quot;ADD&quot; then cmdVRDDocTypeADD_CLick
   if menuActionVRDDocType =&quot;EDIT&quot; then cmdVRDDocTypeEDIT_CLick
   if menuActionVRDDocType =&quot;DEL&quot; then cmdVRDDocTypeDEL_CLick
   if menuActionVRDDocType =&quot;RUN&quot; then cmdVRDDocTypeRUN_CLick
   if menuActionVRDDocType =&quot;REF&quot; then cmdVRDDocTypeREF_CLick
   if menuActionVRDDocType =&quot;PRN&quot; then cmdVRDDocTypePRN_CLick
   if menuActionVRDDocType =&quot;CFG&quot; then cmdVRDDocTypeCFG_CLick
   if menuActionVRDDocType =&quot;FND&quot; then cmdVRDDocTypeFND_CLick
   if menuActionVRDDocType =&quot;ACC&quot; then cmdVRDDocTypeACC_CLick
   menuActionVRDDocType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDDocTypeAdd,cmdVRDDocTypeAdd.tag
  LoadBtnPictures cmdVRDDocTypeEdit,cmdVRDDocTypeEdit.tag
  LoadBtnPictures cmdVRDDocTypeDel,cmdVRDDocTypeDel.tag
  LoadBtnPictures cmdVRDDocTypeRef,cmdVRDDocTypeRef.tag
  LoadBtnPictures cmdVRDDocTypePrn,cmdVRDDocTypePrn.tag
  LoadBtnPictures cmdVRDDocTypeFnd,cmdVRDDocTypeFnd.tag
  LoadBtnPictures cmdVRDDocTypeRun,cmdVRDDocTypeRun.tag
  LoadBtnPictures cmdVRDDocTypeAcc,cmdVRDDocTypeAcc.tag
  LoadBtnPictures cmdVRDDocTypeCfg,cmdVRDDocTypeCfg.tag
  item.VRDDocType.PrepareGrid gridVRDDocType
  LoadGridLayout gridVRDDocType
  Set fndVRDDocType = Nothing
  On Error Resume Next
  Set fndVRDDocType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDDocType.Init gridVRDDocType
end sub
private sub OnTabClick()

      gridVRDDocType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDDocType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDDocType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDDocType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDDocType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDDocType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDDocType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDDocType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDDocType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDDocType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDPrjType_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDPrjType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDPrjType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDPrjType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDPrjType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDPrjTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDPrjTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDPrjTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDPrjTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDPrjTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDPrjTypeCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDPrjTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDPrjTypeRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDPrjTypeAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDPrjType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Типы проектов"/><Properties Name="Name" PropValue="mnuPopupVRDPrjType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDPrjTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDPrjTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDPrjTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDPrjTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDPrjTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDPrjTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDPrjTypeOpen"/></ControlData><ControlData Name="mnuVRDPrjTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeRef"/></ControlData><ControlData Name="mnuVRDPrjTypeS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDPrjTypeS1"/></ControlData><ControlData Name="mnuVRDPrjTypeBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDPrjTypeBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDPrjTypeCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCOPY"/></ControlData><ControlData Name="mnuVRDPrjTypeCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCUT"/></ControlData><ControlData Name="mnuVRDPrjTypePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDPrjTypePASTE"/></ControlData><ControlData Name="mnuVRDPrjTypeCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCHANGE"/></ControlData><ControlData Name="mnuVRDPrjTypeCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDPrjTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDPrjTypePrn"/></ControlData><ControlData Name="mnuVRDPrjTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCfg"/></ControlData><ControlData Name="mnuVRDPrjTypeFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDPrjTypeFind"/></ControlData><ControlData Name="mnuVRDPrjTypeAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDPrjTypeAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDPrjType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDPrjType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDPrjType as object
private menuActionVRDPrjType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDPrjTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDPrjType,&quot;gridVRDPrjType&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDPrjTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDPrjType,&quot;Типы проектов&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDPrjTypeRef_Click()
  on error resume next
  item.VRDPrjType.Refresh
  gridVRDPrjType.itemCount = item.VRDPrjType.count
  gridVRDPrjType.Refetch
  gridVRDPrjType.Refresh
End Sub
Private Sub cmdVRDPrjTypeAcc_Click()
On Error Resume Next
If gridVRDPrjType.ItemCount = 0 Then Exit Sub
If gridVRDPrjType.Row &gt; 0 Then
 If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDPrjTypeEdit_Click()
  on error resume next
If gridVRDPrjType.ItemCount = 0 Then Exit Sub
If gridVRDPrjType.Row &gt; 0 then
 If gridVRDPrjType.RowIndex(gridVRDPrjType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDPrjType_admi.Item = u
    again: frmVRDPrjType_admi.NotFirstTime = False
    frmVRDPrjType_admi.OnInit
    frmVRDPrjType_admi.Show vbModal
    If frmVRDPrjType_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDPrjType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDPrjTypeDel_Click()
  on error resume next
  gridVRDPrjType.Delete
End Sub
Private Sub cmdVRDPrjTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDPrjType.Add()

      Set frmVRDPrjType_admi.Item = u
      again: frmVRDPrjType_admi.NotFirstTime = False
      frmVRDPrjType_admi.OnInit
      frmVRDPrjType_admi.Show vbModal
      If frmVRDPrjType_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDPrjType.ItemCount = Item.VRDPrjType.Count
        gridVRDPrjType.Refresh
        gridVRDPrjType.RefreshGroups
        gridVRDPrjType.Refreshsort
        gridVRDPrjType.MoveToBookmark u.ID &amp; &quot;VRDPrjType&quot;
      Else
        Item.VRDPrjType.Delete u.ID
        Item.VRDPrjType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDPrjTypeFnd_Click()
  on error resume next
  fndVRDPrjType.ShowForm
End Sub
Private Sub cmdVRDPrjTypeRun_Click()
  on error resume next
  gridVRDPrjType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDPrjType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDPrjType.LoadRow gridVRDPrjType, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDPrjType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDPrjType.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDPrjType&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDPrjType_DblClick()
  cmdVRDPrjTypeEdit_Click
End Sub
Private Sub gridVRDPrjType_KeyPress(KeyAscii As Integer)
  If gridVRDPrjType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDPrjType.FindOnPress KeyAscii
End Sub

Private Sub gridVRDPrjType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDPrjType.Row And LastRow &gt; 0 Then
  gridVRDPrjType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDPrjType.GetRowData(gridVRDPrjType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDPrjTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDPrjType.Add()
    If GetFromBuffer(u) Then
      gridVRDPrjType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDPrjType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDPrjTypeCfg_Click
        End If
    End If
end sub

private sub gridVRDPrjType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDPrjType
End If
end sub
private sub mnuVRDPrjTypeAdd_click()
   menuActionVRDPrjType =&quot;ADD&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeEdit_click()
   menuActionVRDPrjType =&quot;EDIT&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeDelete_click()
   menuActionVRDPrjType =&quot;DEL&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeOpen_click()
   menuActionVRDPrjType =&quot;RUN&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeRef_click()
   menuActionVRDPrjType =&quot;REF&quot;
   menuTimerVRDPrjType.enabled = true
end sub
  Private Sub mnuVRDPrjTypeCOPY_Click()
    On Error Resume Next
    If gridVRDPrjType.ItemCount = 0 Then Exit Sub
    If gridVRDPrjType.Row &gt; 0 Then
     If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDPrjTypeCUT_Click()
    On Error Resume Next
    If gridVRDPrjType.ItemCount = 0 Then Exit Sub
    If gridVRDPrjType.Row &gt; 0 Then
     If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDPrjType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDPrjTypeCHANGE_Click()
  On Error Resume Next
  If gridVRDPrjType.ItemCount = 0 Then Exit Sub
  If gridVRDPrjType.Row &gt; 0 Then
   If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDPrjType.ItemCount = u.parent.Count
      gridVRDPrjType.RefreshRowIndex gridVRDPrjType.RowIndex(gridVRDPrjType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDPrjTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDPrjTypePrn_click()
   menuActionVRDPrjType =&quot;PRN&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeCfg_click()
   menuActionVRDPrjType =&quot;CFG&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeFind_click()
   menuActionVRDPrjType =&quot;FND&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeAcc_click()
   menuActionVRDPrjType =&quot;ACC&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub menuTimerVRDPrjType_timer()
   menuTimerVRDPrjType.enabled = false
   if menuActionVRDPrjType =&quot;ADD&quot; then cmdVRDPrjTypeADD_CLick
   if menuActionVRDPrjType =&quot;EDIT&quot; then cmdVRDPrjTypeEDIT_CLick
   if menuActionVRDPrjType =&quot;DEL&quot; then cmdVRDPrjTypeDEL_CLick
   if menuActionVRDPrjType =&quot;RUN&quot; then cmdVRDPrjTypeRUN_CLick
   if menuActionVRDPrjType =&quot;REF&quot; then cmdVRDPrjTypeREF_CLick
   if menuActionVRDPrjType =&quot;PRN&quot; then cmdVRDPrjTypePRN_CLick
   if menuActionVRDPrjType =&quot;CFG&quot; then cmdVRDPrjTypeCFG_CLick
   if menuActionVRDPrjType =&quot;FND&quot; then cmdVRDPrjTypeFND_CLick
   if menuActionVRDPrjType =&quot;ACC&quot; then cmdVRDPrjTypeACC_CLick
   menuActionVRDPrjType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDPrjTypeAdd,cmdVRDPrjTypeAdd.tag
  LoadBtnPictures cmdVRDPrjTypeEdit,cmdVRDPrjTypeEdit.tag
  LoadBtnPictures cmdVRDPrjTypeDel,cmdVRDPrjTypeDel.tag
  LoadBtnPictures cmdVRDPrjTypeRef,cmdVRDPrjTypeRef.tag
  LoadBtnPictures cmdVRDPrjTypePrn,cmdVRDPrjTypePrn.tag
  LoadBtnPictures cmdVRDPrjTypeFnd,cmdVRDPrjTypeFnd.tag
  LoadBtnPictures cmdVRDPrjTypeRun,cmdVRDPrjTypeRun.tag
  LoadBtnPictures cmdVRDPrjTypeAcc,cmdVRDPrjTypeAcc.tag
  LoadBtnPictures cmdVRDPrjTypeCfg,cmdVRDPrjTypeCfg.tag
  item.VRDPrjType.PrepareGrid gridVRDPrjType
  LoadGridLayout gridVRDPrjType
  Set fndVRDPrjType = Nothing
  On Error Resume Next
  Set fndVRDPrjType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDPrjType.Init gridVRDPrjType
end sub
private sub OnTabClick()

      gridVRDPrjType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDPrjType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDPrjType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDPrjType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDPrjType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDPrjType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDPrjType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDPrjType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDPrjType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDPrjType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDRreportType_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDRreportType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDRreportType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDRreportType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDRreportType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDRreportTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDRreportTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDRreportTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDRreportTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDRreportTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDRreportTypeCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDRreportTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDRreportTypeRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDRreportTypeAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDRreportType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип отчета"/><Properties Name="Name" PropValue="mnuPopupVRDRreportType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDRreportTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDRreportTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDRreportTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDRreportTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDRreportTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDRreportTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDRreportTypeOpen"/></ControlData><ControlData Name="mnuVRDRreportTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeRef"/></ControlData><ControlData Name="mnuVRDRreportTypeS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDRreportTypeS1"/></ControlData><ControlData Name="mnuVRDRreportTypeBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDRreportTypeBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDRreportTypeCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCOPY"/></ControlData><ControlData Name="mnuVRDRreportTypeCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCUT"/></ControlData><ControlData Name="mnuVRDRreportTypePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDRreportTypePASTE"/></ControlData><ControlData Name="mnuVRDRreportTypeCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCHANGE"/></ControlData><ControlData Name="mnuVRDRreportTypeCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDRreportTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDRreportTypePrn"/></ControlData><ControlData Name="mnuVRDRreportTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCfg"/></ControlData><ControlData Name="mnuVRDRreportTypeFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDRreportTypeFind"/></ControlData><ControlData Name="mnuVRDRreportTypeAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDRreportTypeAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDRreportType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDRreportType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDRreportType as object
private menuActionVRDRreportType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDRreportTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDRreportType,&quot;gridVRDRreportType&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDRreportTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDRreportType,&quot;Тип отчета&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDRreportTypeRef_Click()
  on error resume next
  item.VRDRreportType.Refresh
  gridVRDRreportType.itemCount = item.VRDRreportType.count
  gridVRDRreportType.Refetch
  gridVRDRreportType.Refresh
End Sub
Private Sub cmdVRDRreportTypeAcc_Click()
On Error Resume Next
If gridVRDRreportType.ItemCount = 0 Then Exit Sub
If gridVRDRreportType.Row &gt; 0 Then
 If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDRreportTypeEdit_Click()
  on error resume next
If gridVRDRreportType.ItemCount = 0 Then Exit Sub
If gridVRDRreportType.Row &gt; 0 then
 If gridVRDRreportType.RowIndex(gridVRDRreportType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDRreportType_admi.Item = u
    again: frmVRDRreportType_admi.NotFirstTime = False
    frmVRDRreportType_admi.OnInit
    frmVRDRreportType_admi.Show vbModal
    If frmVRDRreportType_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDRreportType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDRreportTypeDel_Click()
  on error resume next
  gridVRDRreportType.Delete
End Sub
Private Sub cmdVRDRreportTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDRreportType.Add()

      Set frmVRDRreportType_admi.Item = u
      again: frmVRDRreportType_admi.NotFirstTime = False
      frmVRDRreportType_admi.OnInit
      frmVRDRreportType_admi.Show vbModal
      If frmVRDRreportType_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDRreportType.ItemCount = Item.VRDRreportType.Count
        gridVRDRreportType.Refresh
        gridVRDRreportType.RefreshGroups
        gridVRDRreportType.Refreshsort
        gridVRDRreportType.MoveToBookmark u.ID &amp; &quot;VRDRreportType&quot;
      Else
        Item.VRDRreportType.Delete u.ID
        Item.VRDRreportType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDRreportTypeFnd_Click()
  on error resume next
  fndVRDRreportType.ShowForm
End Sub
Private Sub cmdVRDRreportTypeRun_Click()
  on error resume next
  gridVRDRreportType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDRreportType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDRreportType.LoadRow gridVRDRreportType, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDRreportType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRDRreportType.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRDRreportType&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRDRreportType_DblClick()
  cmdVRDRreportTypeEdit_Click
End Sub
Private Sub gridVRDRreportType_KeyPress(KeyAscii As Integer)
  If gridVRDRreportType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDRreportType.FindOnPress KeyAscii
End Sub

Private Sub gridVRDRreportType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDRreportType.Row And LastRow &gt; 0 Then
  gridVRDRreportType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDRreportType.GetRowData(gridVRDRreportType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDRreportTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDRreportType.Add()
    If GetFromBuffer(u) Then
      gridVRDRreportType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDRreportType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDRreportTypeCfg_Click
        End If
    End If
end sub

private sub gridVRDRreportType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDRreportType
End If
end sub
private sub mnuVRDRreportTypeAdd_click()
   menuActionVRDRreportType =&quot;ADD&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeEdit_click()
   menuActionVRDRreportType =&quot;EDIT&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeDelete_click()
   menuActionVRDRreportType =&quot;DEL&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeOpen_click()
   menuActionVRDRreportType =&quot;RUN&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeRef_click()
   menuActionVRDRreportType =&quot;REF&quot;
   menuTimerVRDRreportType.enabled = true
end sub
  Private Sub mnuVRDRreportTypeCOPY_Click()
    On Error Resume Next
    If gridVRDRreportType.ItemCount = 0 Then Exit Sub
    If gridVRDRreportType.Row &gt; 0 Then
     If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDRreportTypeCUT_Click()
    On Error Resume Next
    If gridVRDRreportType.ItemCount = 0 Then Exit Sub
    If gridVRDRreportType.Row &gt; 0 Then
     If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDRreportType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDRreportTypeCHANGE_Click()
  On Error Resume Next
  If gridVRDRreportType.ItemCount = 0 Then Exit Sub
  If gridVRDRreportType.Row &gt; 0 Then
   If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDRreportType.ItemCount = u.parent.Count
      gridVRDRreportType.RefreshRowIndex gridVRDRreportType.RowIndex(gridVRDRreportType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDRreportTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDRreportTypePrn_click()
   menuActionVRDRreportType =&quot;PRN&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeCfg_click()
   menuActionVRDRreportType =&quot;CFG&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeFind_click()
   menuActionVRDRreportType =&quot;FND&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeAcc_click()
   menuActionVRDRreportType =&quot;ACC&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub menuTimerVRDRreportType_timer()
   menuTimerVRDRreportType.enabled = false
   if menuActionVRDRreportType =&quot;ADD&quot; then cmdVRDRreportTypeADD_CLick
   if menuActionVRDRreportType =&quot;EDIT&quot; then cmdVRDRreportTypeEDIT_CLick
   if menuActionVRDRreportType =&quot;DEL&quot; then cmdVRDRreportTypeDEL_CLick
   if menuActionVRDRreportType =&quot;RUN&quot; then cmdVRDRreportTypeRUN_CLick
   if menuActionVRDRreportType =&quot;REF&quot; then cmdVRDRreportTypeREF_CLick
   if menuActionVRDRreportType =&quot;PRN&quot; then cmdVRDRreportTypePRN_CLick
   if menuActionVRDRreportType =&quot;CFG&quot; then cmdVRDRreportTypeCFG_CLick
   if menuActionVRDRreportType =&quot;FND&quot; then cmdVRDRreportTypeFND_CLick
   if menuActionVRDRreportType =&quot;ACC&quot; then cmdVRDRreportTypeACC_CLick
   menuActionVRDRreportType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDRreportTypeAdd,cmdVRDRreportTypeAdd.tag
  LoadBtnPictures cmdVRDRreportTypeEdit,cmdVRDRreportTypeEdit.tag
  LoadBtnPictures cmdVRDRreportTypeDel,cmdVRDRreportTypeDel.tag
  LoadBtnPictures cmdVRDRreportTypeRef,cmdVRDRreportTypeRef.tag
  LoadBtnPictures cmdVRDRreportTypePrn,cmdVRDRreportTypePrn.tag
  LoadBtnPictures cmdVRDRreportTypeFnd,cmdVRDRreportTypeFnd.tag
  LoadBtnPictures cmdVRDRreportTypeRun,cmdVRDRreportTypeRun.tag
  LoadBtnPictures cmdVRDRreportTypeAcc,cmdVRDRreportTypeAcc.tag
  LoadBtnPictures cmdVRDRreportTypeCfg,cmdVRDRreportTypeCfg.tag
  item.VRDRreportType.PrepareGrid gridVRDRreportType
  LoadGridLayout gridVRDRreportType
  Set fndVRDRreportType = Nothing
  On Error Resume Next
  Set fndVRDRreportType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDRreportType.Init gridVRDRreportType
end sub
private sub OnTabClick()

      gridVRDRreportType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDRreportType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDRreportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDRreportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDRreportType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDRreportType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDRreportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDRreportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDRreportType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDRreportType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRD_CompInfo_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRD_CompInfo" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRD_CompInfo"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRD_CompInfo" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRD_CompInfo"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRD_CompInfoAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRD_CompInfoEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRD_CompInfoDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRD_CompInfoRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRD_CompInfoPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRD_CompInfoCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRD_CompInfoFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRD_CompInfoRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRD_CompInfoAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRD_CompInfo" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Источник информации о компании"/><Properties Name="Name" PropValue="mnuPopupVRD_CompInfo"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRD_CompInfoAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRD_CompInfoEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRD_CompInfoEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRD_CompInfoDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRD_CompInfoOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRD_CompInfoOpen"/></ControlData><ControlData Name="mnuVRD_CompInfoRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoRef"/></ControlData><ControlData Name="mnuVRD_CompInfoS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRD_CompInfoS1"/></ControlData><ControlData Name="mnuVRD_CompInfoBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRD_CompInfoBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRD_CompInfoCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCOPY"/></ControlData><ControlData Name="mnuVRD_CompInfoCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCUT"/></ControlData><ControlData Name="mnuVRD_CompInfoPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoPASTE"/></ControlData><ControlData Name="mnuVRD_CompInfoCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCHANGE"/></ControlData><ControlData Name="mnuVRD_CompInfoCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRD_CompInfoPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoPrn"/></ControlData><ControlData Name="mnuVRD_CompInfoCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCfg"/></ControlData><ControlData Name="mnuVRD_CompInfoFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRD_CompInfoFind"/></ControlData><ControlData Name="mnuVRD_CompInfoAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRD_CompInfoAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRD_CompInfo" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRD_CompInfo"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRD_CompInfo as object
private menuActionVRD_CompInfo as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRD_CompInfoCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRD_CompInfo,&quot;gridVRD_CompInfo&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRD_CompInfoPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRD_CompInfo,&quot;Источник информации о компании&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRD_CompInfoRef_Click()
  on error resume next
  item.VRD_CompInfo.Refresh
  gridVRD_CompInfo.itemCount = item.VRD_CompInfo.count
  gridVRD_CompInfo.Refetch
  gridVRD_CompInfo.Refresh
End Sub
Private Sub cmdVRD_CompInfoAcc_Click()
On Error Resume Next
If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
If gridVRD_CompInfo.Row &gt; 0 Then
 If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRD_CompInfoEdit_Click()
  on error resume next
If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
If gridVRD_CompInfo.Row &gt; 0 then
 If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRD_CompInfo_admi.Item = u
    again: frmVRD_CompInfo_admi.NotFirstTime = False
    frmVRD_CompInfo_admi.OnInit
    frmVRD_CompInfo_admi.Show vbModal
    If frmVRD_CompInfo_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRD_CompInfo.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRD_CompInfoDel_Click()
  on error resume next
  gridVRD_CompInfo.Delete
End Sub
Private Sub cmdVRD_CompInfoAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRD_CompInfo.Add()

      Set frmVRD_CompInfo_admi.Item = u
      again: frmVRD_CompInfo_admi.NotFirstTime = False
      frmVRD_CompInfo_admi.OnInit
      frmVRD_CompInfo_admi.Show vbModal
      If frmVRD_CompInfo_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRD_CompInfo.ItemCount = Item.VRD_CompInfo.Count
        gridVRD_CompInfo.Refresh
        gridVRD_CompInfo.RefreshGroups
        gridVRD_CompInfo.Refreshsort
        gridVRD_CompInfo.MoveToBookmark u.ID &amp; &quot;VRD_CompInfo&quot;
      Else
        Item.VRD_CompInfo.Delete u.ID
        Item.VRD_CompInfo.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRD_CompInfoFnd_Click()
  on error resume next
  fndVRD_CompInfo.ShowForm
End Sub
Private Sub cmdVRD_CompInfoRun_Click()
  on error resume next
  gridVRD_CompInfo_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRD_CompInfo_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRD_CompInfo.LoadRow gridVRD_CompInfo, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRD_CompInfo_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRD_CompInfo&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRD_CompInfo_DblClick()
  cmdVRD_CompInfoEdit_Click
End Sub
Private Sub gridVRD_CompInfo_KeyPress(KeyAscii As Integer)
  If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRD_CompInfo.FindOnPress KeyAscii
End Sub

Private Sub gridVRD_CompInfo_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRD_CompInfo.Row And LastRow &gt; 0 Then
  gridVRD_CompInfo.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRD_CompInfo.GetRowData(gridVRD_CompInfo.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRD_CompInfoPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRD_CompInfo.Add()
    If GetFromBuffer(u) Then
      gridVRD_CompInfo.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRD_CompInfo_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRD_CompInfoCfg_Click
        End If
    End If
end sub

private sub gridVRD_CompInfo_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRD_CompInfo
End If
end sub
private sub mnuVRD_CompInfoAdd_click()
   menuActionVRD_CompInfo =&quot;ADD&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoEdit_click()
   menuActionVRD_CompInfo =&quot;EDIT&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoDelete_click()
   menuActionVRD_CompInfo =&quot;DEL&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoOpen_click()
   menuActionVRD_CompInfo =&quot;RUN&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoRef_click()
   menuActionVRD_CompInfo =&quot;REF&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
  Private Sub mnuVRD_CompInfoCOPY_Click()
    On Error Resume Next
    If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
    If gridVRD_CompInfo.Row &gt; 0 Then
     If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRD_CompInfoCUT_Click()
    On Error Resume Next
    If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
    If gridVRD_CompInfo.Row &gt; 0 Then
     If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRD_CompInfo.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRD_CompInfoCHANGE_Click()
  On Error Resume Next
  If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
  If gridVRD_CompInfo.Row &gt; 0 Then
   If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRD_CompInfo.ItemCount = u.parent.Count
      gridVRD_CompInfo.RefreshRowIndex gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRD_CompInfoCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRD_CompInfoPrn_click()
   menuActionVRD_CompInfo =&quot;PRN&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoCfg_click()
   menuActionVRD_CompInfo =&quot;CFG&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoFind_click()
   menuActionVRD_CompInfo =&quot;FND&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoAcc_click()
   menuActionVRD_CompInfo =&quot;ACC&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub menuTimerVRD_CompInfo_timer()
   menuTimerVRD_CompInfo.enabled = false
   if menuActionVRD_CompInfo =&quot;ADD&quot; then cmdVRD_CompInfoADD_CLick
   if menuActionVRD_CompInfo =&quot;EDIT&quot; then cmdVRD_CompInfoEDIT_CLick
   if menuActionVRD_CompInfo =&quot;DEL&quot; then cmdVRD_CompInfoDEL_CLick
   if menuActionVRD_CompInfo =&quot;RUN&quot; then cmdVRD_CompInfoRUN_CLick
   if menuActionVRD_CompInfo =&quot;REF&quot; then cmdVRD_CompInfoREF_CLick
   if menuActionVRD_CompInfo =&quot;PRN&quot; then cmdVRD_CompInfoPRN_CLick
   if menuActionVRD_CompInfo =&quot;CFG&quot; then cmdVRD_CompInfoCFG_CLick
   if menuActionVRD_CompInfo =&quot;FND&quot; then cmdVRD_CompInfoFND_CLick
   if menuActionVRD_CompInfo =&quot;ACC&quot; then cmdVRD_CompInfoACC_CLick
   menuActionVRD_CompInfo =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRD_CompInfoAdd,cmdVRD_CompInfoAdd.tag
  LoadBtnPictures cmdVRD_CompInfoEdit,cmdVRD_CompInfoEdit.tag
  LoadBtnPictures cmdVRD_CompInfoDel,cmdVRD_CompInfoDel.tag
  LoadBtnPictures cmdVRD_CompInfoRef,cmdVRD_CompInfoRef.tag
  LoadBtnPictures cmdVRD_CompInfoPrn,cmdVRD_CompInfoPrn.tag
  LoadBtnPictures cmdVRD_CompInfoFnd,cmdVRD_CompInfoFnd.tag
  LoadBtnPictures cmdVRD_CompInfoRun,cmdVRD_CompInfoRun.tag
  LoadBtnPictures cmdVRD_CompInfoAcc,cmdVRD_CompInfoAcc.tag
  LoadBtnPictures cmdVRD_CompInfoCfg,cmdVRD_CompInfoCfg.tag
  item.VRD_CompInfo.PrepareGrid gridVRD_CompInfo
  LoadGridLayout gridVRD_CompInfo
  Set fndVRD_CompInfo = Nothing
  On Error Resume Next
  Set fndVRD_CompInfo = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRD_CompInfo.Init gridVRD_CompInfo
end sub
private sub OnTabClick()

      gridVRD_CompInfo.Top = 40 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Left = 5 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRD_CompInfo.Top = 40 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Left = 5 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRD_CompInfo.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRD_CompInfo = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctladmi_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDMarket" ControlIndex="0" PROGID="VRD2GUI.vpnVRDMarket_admi"><Properties Name="Name" PropValue="pnlVRDMarket"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDInterest" ControlIndex="0" PROGID="VRD2GUI.vpnVRDInterest_admi"><Properties Name="Name" PropValue="pnlVRDInterest"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDStream" ControlIndex="0" PROGID="VRD2GUI.vpnVRDStream_admi"><Properties Name="Name" PropValue="pnlVRDStream"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDContractStage" ControlIndex="0" PROGID="VRD2GUI.vpnVRDContractStage_admi"><Properties Name="Name" PropValue="pnlVRDContractStage"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDLoyalty" ControlIndex="0" PROGID="VRD2GUI.vpnVRDLoyalty_admi"><Properties Name="Name" PropValue="pnlVRDLoyalty"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDDocType" ControlIndex="0" PROGID="VRD2GUI.vpnVRDDocType_admi"><Properties Name="Name" PropValue="pnlVRDDocType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDPrjType" ControlIndex="0" PROGID="VRD2GUI.vpnVRDPrjType_admi"><Properties Name="Name" PropValue="pnlVRDPrjType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDRreportType" ControlIndex="0" PROGID="VRD2GUI.vpnVRDRreportType_admi"><Properties Name="Name" PropValue="pnlVRDRreportType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRD_CompInfo" ControlIndex="0" PROGID="VRD2GUI.vpnVRD_CompInfo_admi"><Properties Name="Name" PropValue="pnlVRD_CompInfo"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: работа с клиентами"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRDMarket.IsOK
if IsItOk then IsItOk = pnlVRDInterest.IsOK
if IsItOk then IsItOk = pnlVRDStream.IsOK
if IsItOk then IsItOk = pnlVRDContractStage.IsOK
if IsItOk then IsItOk = pnlVRDLoyalty.IsOK
if IsItOk then IsItOk = pnlVRDDocType.IsOK
if IsItOk then IsItOk = pnlVRDPrjType.IsOK
if IsItOk then IsItOk = pnlVRDRreportType.IsOK
if IsItOk then IsItOk = pnlVRD_CompInfo.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRD_CompInfo.Visible = False
  pnlVRDRreportType.Visible = False
  pnlVRDPrjType.Visible = False
  pnlVRDDocType.Visible = False
  pnlVRDLoyalty.Visible = False
  pnlVRDContractStage.Visible = False
  pnlVRDStream.Visible = False
  pnlVRDInterest.Visible = False
  pnlVRDMarket.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRDMarket&quot;
     With pnlVRDMarket
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDMarket.OnClick item,parentform
     End With
   Case &quot;VRDInterest&quot;
     With pnlVRDInterest
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDInterest.OnClick item,parentform
     End With
   Case &quot;VRDStream&quot;
     With pnlVRDStream
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDStream.OnClick item,parentform
     End With
   Case &quot;VRDContractStage&quot;
     With pnlVRDContractStage
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDContractStage.OnClick item,parentform
     End With
   Case &quot;VRDLoyalty&quot;
     With pnlVRDLoyalty
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDLoyalty.OnClick item,parentform
     End With
   Case &quot;VRDDocType&quot;
     With pnlVRDDocType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDDocType.OnClick item,parentform
     End With
   Case &quot;VRDPrjType&quot;
     With pnlVRDPrjType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDPrjType.OnClick item,parentform
     End With
   Case &quot;VRDRreportType&quot;
     With pnlVRDRreportType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDRreportType.OnClick item,parentform
     End With
   Case &quot;VRD_CompInfo&quot;
     With pnlVRD_CompInfo
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRD_CompInfo.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Рынки&quot;
ts.Tabs.Item(1).key = &quot;VRDMarket&quot;
pnlVRDMarket.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDInterest&quot;, &quot;Заинтересованность&quot;)
pnlVRDInterest.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDStream&quot;, &quot;Направление деятельности&quot;)
pnlVRDStream.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDContractStage&quot;, &quot;Стадия договора&quot;)
pnlVRDContractStage.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDLoyalty&quot;, &quot;Лояльность&quot;)
pnlVRDLoyalty.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDDocType&quot;, &quot;Тип документа&quot;)
pnlVRDDocType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDPrjType&quot;, &quot;Типы проектов&quot;)
pnlVRDPrjType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDRreportType&quot;, &quot;Тип отчета&quot;)
pnlVRDRreportType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRD_CompInfo&quot;, &quot;Источник информации о компании&quot;)
pnlVRD_CompInfo.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRD2&quot;, &quot;ctladmi_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRDMarket.CloseClass
 pnlVRDInterest.CloseClass
 pnlVRDStream.CloseClass
 pnlVRDContractStage.CloseClass
 pnlVRDLoyalty.CloseClass
 pnlVRDDocType.CloseClass
 pnlVRDPrjType.CloseClass
 pnlVRDRreportType.CloseClass
 pnlVRD_CompInfo.CloseClass
End Sub
public sub OnSave()
 pnlVRDMarket.OnSave
 pnlVRDInterest.OnSave
 pnlVRDStream.OnSave
 pnlVRDContractStage.OnSave
 pnlVRDLoyalty.OnSave
 pnlVRDDocType.OnSave
 pnlVRDPrjType.OnSave
 pnlVRDRreportType.OnSave
 pnlVRD_CompInfo.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRDMarket.IsChanged
m_IsChanged = m_IsChanged or pnlVRDInterest.IsChanged
m_IsChanged = m_IsChanged or pnlVRDStream.IsChanged
m_IsChanged = m_IsChanged or pnlVRDContractStage.IsChanged
m_IsChanged = m_IsChanged or pnlVRDLoyalty.IsChanged
m_IsChanged = m_IsChanged or pnlVRDDocType.IsChanged
m_IsChanged = m_IsChanged or pnlVRDPrjType.IsChanged
m_IsChanged = m_IsChanged or pnlVRDRreportType.IsChanged
m_IsChanged = m_IsChanged or pnlVRD_CompInfo.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmadmi_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRD2GUI.ctladmi_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: работа с клиентами"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRD2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRD2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRD2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDMarket_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDMarketmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Рынки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Рынки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8D647377-AE4E-4EFF-ABB6-E584CFF8C8DD}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8D647377-AE4E-4EFF-ABB6-E584CFF8C8DD}&quot;
  Open s &amp; Me.name &amp; &quot;{8D647377-AE4E-4EFF-ABB6-E584CFF8C8DD}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDInterest_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDInterestmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Заинтересованность"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Заинтересованность"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{39469EB8-8D00-4861-B0B1-CC41D5BF2C1F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{39469EB8-8D00-4861-B0B1-CC41D5BF2C1F}&quot;
  Open s &amp; Me.name &amp; &quot;{39469EB8-8D00-4861-B0B1-CC41D5BF2C1F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDStream_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDStreammain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Направление деятельности"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Направление деятельности"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{6FD6E698-33B0-4550-8152-764B71F35022}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{6FD6E698-33B0-4550-8152-764B71F35022}&quot;
  Open s &amp; Me.name &amp; &quot;{6FD6E698-33B0-4550-8152-764B71F35022}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDContractStage_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDContractStagemain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Стадия договора"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Стадия договора"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{17A7CD05-E94F-48C9-B24D-06F2A9B09DA7}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{17A7CD05-E94F-48C9-B24D-06F2A9B09DA7}&quot;
  Open s &amp; Me.name &amp; &quot;{17A7CD05-E94F-48C9-B24D-06F2A9B09DA7}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDLoyalty_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDLoyaltymain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Лояльность"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Лояльность"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C9DD51FC-3DCF-4694-85F0-D97718AF949A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C9DD51FC-3DCF-4694-85F0-D97718AF949A}&quot;
  Open s &amp; Me.name &amp; &quot;{C9DD51FC-3DCF-4694-85F0-D97718AF949A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDDocType_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDDocTypemain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип документа"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип документа"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0EE611F3-1F4E-4227-9A3F-D88030F89B1F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0EE611F3-1F4E-4227-9A3F-D88030F89B1F}&quot;
  Open s &amp; Me.name &amp; &quot;{0EE611F3-1F4E-4227-9A3F-D88030F89B1F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDPrjType_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDPrjTypemain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы проектов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Типы проектов"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0A6BD9EC-4A11-4136-A4DC-6A7433B33507}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0A6BD9EC-4A11-4136-A4DC-6A7433B33507}&quot;
  Open s &amp; Me.name &amp; &quot;{0A6BD9EC-4A11-4136-A4DC-6A7433B33507}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRDRreportType_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRDRreportTypemain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип отчета"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип отчета"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2E3E5E59-B27A-4ACA-8AA0-50D234244C3D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2E3E5E59-B27A-4ACA-8AA0-50D234244C3D}&quot;
  Open s &amp; Me.name &amp; &quot;{2E3E5E59-B27A-4ACA-8AA0-50D234244C3D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRD_CompInfo_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRD2GUI.VRD_CompInfomain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Источник информации о компании"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1EDC01E0-2221-45FC-9E36-4D690DDDA8AB}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1EDC01E0-2221-45FC-9E36-4D690DDDA8AB}&quot;
  Open s &amp; Me.name &amp; &quot;{1EDC01E0-2221-45FC-9E36-4D690DDDA8AB}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDMarket_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDMarket" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDMarket"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="treeVRDMarket" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treeVRDMarket"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Indentation" PropValue="75"/><Properties Name="HideSelection" PropValue="False"/><Properties Name="Left" PropValue="225"/><Properties Name="Top" PropValue="600"/></ControlData><ControlData Name="cmdVRDMarketAddRoot" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketAddRoot"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEWROOT.ico"/><Properties Name="ToolTipText" PropValue="Добавить ветку"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDMarketAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDMarketEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDMarketDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDMarketRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDMarketAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupVRDMarket" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Рынки"/><Properties Name="Name" PropValue="mnuPopupVRDMarket"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDMarketAddRoot" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать ветку"/><Properties Name="Name" PropValue="mnuVRDMarketAddRoot"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDMarketAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDMarketAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDMarketEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDMarketEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDMarketDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDMarketDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDMarketS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDMarketS1"/></ControlData><ControlData Name="mnuVRDMarketBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDMarketBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDMarketCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDMarketCOPY"/></ControlData><ControlData Name="mnuVRDMarketCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDMarketCUT"/></ControlData><ControlData Name="mnuVRDMarketPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDMarketPASTE"/></ControlData><ControlData Name="mnuVRDMarketCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDMarketCHANGE"/></ControlData><ControlData Name="mnuVRDMarketCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDMarketCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDMarketRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDMarketRef"/></ControlData><ControlData Name="mnuVRDMarketAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDMarketAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDMarket" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDMarket"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private menuActionVRDMarket as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDMarketAdd_Click()
  on error resume next
  on error resume next
  Dim f As Object, p As Object
If (treeVRDMarket.SelectedItem is Nothing) Then  exit sub
  Set p = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  Set f = p.VRDMarket.Add()

      Set frmVRDMarket_main.Item = f
      again: frmVRDMarket_main.NotFirstTime = False
      frmVRDMarket_main.OnInit
      frmVRDMarket_main.Show vbModal
      If frmVRDMarket_main.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
          If treeVRDMarket.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
            f.LoadToTree treeVRDMarket, treeVRDMarket.SelectedItem.Key
          end if
          set treeVRDMarket.SelectedItem = treeVRDMarket.nodes.item(  f.ID &amp; &quot;VRDMarket&quot;)
      Else
        Item.VRDMarket.Delete f.ID
        Item.VRDMarket.Remove f.ID
      End If
End Sub

Private Sub cmdVRDMarketAddRoot_Click()
  on error resume next
Dim f As Object, p As Object
  Set f = Item.VRDMarket.Add()

      Set frmVRDMarket_main.Item = f
      again: frmVRDMarket_main.NotFirstTime = False
      frmVRDMarket_main.OnInit
      frmVRDMarket_main.Show vbModal
      If frmVRDMarket_main.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
    Item.VRDMarket.refresh
    treeVRDMarket.nodes.clear
    Item.VRDMarket.filltree treeVRDMarket
          set treeVRDMarket.SelectedItem = treeVRDMarket.nodes.item(  f.ID &amp; &quot;VRDMarket&quot;)
      Else
        Item.VRDMarket.Remove f.ID
      End If
End Sub

Private Sub cmdVRDMarketEdit_Click()
  on error resume next
  Dim f As Object
  If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  Set frmVRDMarket_main.Item = f
  again: frmVRDMarket_main.NotFirstTime = False
  frmVRDMarket_main.OnInit
  frmVRDMarket_main.Show vbModal
  If frmVRDMarket_main.OK Then
    err.clear
    f.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
  End If
End Sub

Private Sub cmdVRDMarketDel_Click()
  on error resume next
End Sub

Private Sub cmdVRDMarketAcc_Click()
  on error resume next
  Dim f As Object
  If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  item.application.manager.ShowSecurityDialog f
End Sub

Private Sub cmdVRDMarketREf_Click()
  on error resume next
  Item.VRDMarket.refresh
  treeVRDMarket.nodes.clear
  Item.VRDMarket.filltree treeVRDMarket
End Sub

Private Sub treeVRDMarket_DblClick()
If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  cmdVRDMarketEdit_Click
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub treeVRDMarket_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treeVRDMarket.Nodes.Remove Node.Child.Index
 Dim f As Object
 Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(Node.Key, 38))
 f.expandpart treeVRDMarket, Node.Key
 parentform.mousepointer = vbNormal
End If
End Sub

private sub treeVRDMarket_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupVRDMarket
End If
end sub
private sub mnuVRDMarketAddRoot_click()
   menuActionVRDMarket =&quot;ADDROOT&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketAdd_click()
   menuActionVRDMarket =&quot;ADD&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketEdit_click()
   menuActionVRDMarket =&quot;EDIT&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketDelete_click()
   menuActionVRDMarket =&quot;DEL&quot;
   menuTimerVRDMarket.enabled = true
end sub
  Private Sub mnuVRDMarketCOPY_Click()
    On Error Resume Next
    If TREEVRDMarket.SELECTEDItem is nothing Then Exit Sub
        Dim u As Object
        Set u = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
        SaveToBuffer u
  End Sub
  Private Sub mnuVRDMarketCUT_Click()
    On Error Resume Next
    If TREEVRDMarket.SELECTEDItem is nothing Then Exit Sub
    Dim u As Object,BM
    Set u = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
    SaveToBuffer u
    SET BM = u.parent
    u.parent.Delete u.ID
    TREEVRDMarket.nodes.remove TREEVRDMarket.selecteditem.key
  End Sub
Private Sub mnuVRDMarketPASTE_Click()
On Error Resume Next
If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  Dim u As Object, f as object
  Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  Set u = f.VRDMarket.Add()
  If GetFromBuffer(u) Then
    If treeVRDMarket.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
      u.LoadToTree treeVRDMarket, treeVRDMarket.SelectedItem.Key
    end if
  Else
   f.VRDMarket.refresh
  End If
End Sub
Private Sub mnuVRDMarketCHANGE_Click()
  On Error Resume Next
  If TREEVRDMarket.SELECTEDItem is nothing Then Exit Sub
  Dim u As Object,BM
  Set u = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  If GetFromBuffer(u) Then
    TREEVRDMarket.SELECTEDItem.text = u.brief
      treeVRDMarket.SelectedItem.Expanded = False
      While treeVRDMarket.SelectedItem.Children &gt; 0
        treeVRDMarket.Nodes.Remove treeVRDMarket.SelectedItem.Child.Key
      Wend
      treeVRDMarket.Nodes.Add(treeVRDMarket.SelectedItem.Key, 4, &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
      treeVRDMarket_Expand treeVRDMarket.SelectedItem
  End If
End Sub
  Private Sub mnuVRDMarketCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDMarketRef_click()
   menuActionVRDMarket =&quot;REF&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketAcc_click()
   menuActionVRDMarket =&quot;ACC&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub menuTimerVRDMarket_timer()
   menuTimerVRDMarket.enabled = false
   if menuActionVRDMarket =&quot;ADDROOT&quot; then cmdVRDMarketADDROOT_CLick
   if menuActionVRDMarket =&quot;ADD&quot; then cmdVRDMarketADD_CLick
   if menuActionVRDMarket =&quot;EDIT&quot; then cmdVRDMarketEDIT_CLick
   if menuActionVRDMarket =&quot;DEL&quot; then cmdVRDMarketDEL_CLick
   if menuActionVRDMarket =&quot;REF&quot; then cmdVRDMarketREF_CLick
   if menuActionVRDMarket =&quot;ACC&quot; then cmdVRDMarketACC_CLick
   menuActionVRDMarket =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDMarketAddRoot,cmdVRDMarketAddRoot.tag
  LoadBtnPictures cmdVRDMarketAdd,cmdVRDMarketAdd.tag
  LoadBtnPictures cmdVRDMarketEdit,cmdVRDMarketEdit.tag
  LoadBtnPictures cmdVRDMarketDel,cmdVRDMarketDel.tag
  LoadBtnPictures cmdVRDMarketRef,cmdVRDMarketRef.tag
  LoadBtnPictures cmdVRDMarketAcc,cmdVRDMarketAcc.tag
Item.VRDMarket.filltree treeVRDMarket
end sub
private sub OnTabClick()

      treeVRDMarket.Top = 40 * Screen.TwipsPerPixelX
      treeVRDMarket.Left = 5 * Screen.TwipsPerPixelX
      treeVRDMarket.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      treeVRDMarket.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDMarket.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDInterest_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDInterest" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDInterest"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDInterest" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDInterest"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDInterestAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDInterestEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDInterestDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDInterestRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDInterestPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDInterestCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDInterestFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDInterestRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDInterestRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDInterestAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDInterest" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Заинтересованность"/><Properties Name="Name" PropValue="mnuPopupVRDInterest"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDInterestAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDInterestAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDInterestEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDInterestEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDInterestDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDInterestDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDInterestOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDInterestOpen"/></ControlData><ControlData Name="mnuVRDInterestRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDInterestRef"/></ControlData><ControlData Name="mnuVRDInterestS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDInterestS1"/></ControlData><ControlData Name="mnuVRDInterestBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDInterestBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDInterestCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDInterestCOPY"/></ControlData><ControlData Name="mnuVRDInterestCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDInterestCUT"/></ControlData><ControlData Name="mnuVRDInterestPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDInterestPASTE"/></ControlData><ControlData Name="mnuVRDInterestCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDInterestCHANGE"/></ControlData><ControlData Name="mnuVRDInterestCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDInterestCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDInterestPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDInterestPrn"/></ControlData><ControlData Name="mnuVRDInterestCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDInterestCfg"/></ControlData><ControlData Name="mnuVRDInterestFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDInterestFind"/></ControlData><ControlData Name="mnuVRDInterestAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDInterestAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDInterest" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDInterest"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDInterest as object
private menuActionVRDInterest as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDInterestCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDInterest,&quot;gridVRDInterest&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDInterestPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDInterest,&quot;Заинтересованность&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDInterestRef_Click()
  on error resume next
  item.VRDInterest.Refresh
  gridVRDInterest.itemCount = item.VRDInterest.count
  gridVRDInterest.Refetch
  gridVRDInterest.Refresh
End Sub
Private Sub cmdVRDInterestAcc_Click()
On Error Resume Next
If gridVRDInterest.ItemCount = 0 Then Exit Sub
If gridVRDInterest.Row &gt; 0 Then
 If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDInterestEdit_Click()
  on error resume next
If gridVRDInterest.ItemCount = 0 Then Exit Sub
If gridVRDInterest.Row &gt; 0 then
 If gridVRDInterest.RowIndex(gridVRDInterest.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDInterest_main.Item = u
    again: frmVRDInterest_main.NotFirstTime = False
    frmVRDInterest_main.OnInit
    frmVRDInterest_main.Show vbModal
    If frmVRDInterest_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDInterest.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDInterestDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDInterestAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDInterest.Add()

      Set frmVRDInterest_main.Item = u
      again: frmVRDInterest_main.NotFirstTime = False
      frmVRDInterest_main.OnInit
      frmVRDInterest_main.Show vbModal
      If frmVRDInterest_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDInterest.ItemCount = Item.VRDInterest.Count
        gridVRDInterest.Refresh
        gridVRDInterest.RefreshGroups
        gridVRDInterest.Refreshsort
        gridVRDInterest.MoveToBookmark u.ID &amp; &quot;VRDInterest&quot;
      Else
        Item.VRDInterest.Delete u.ID
        Item.VRDInterest.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDInterestFnd_Click()
  on error resume next
  fndVRDInterest.ShowForm
End Sub
Private Sub cmdVRDInterestRun_Click()
  on error resume next
  gridVRDInterest_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDInterest_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDInterest.LoadRow gridVRDInterest, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDInterest_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDInterest_DblClick()
  cmdVRDInterestEdit_Click
End Sub
Private Sub gridVRDInterest_KeyPress(KeyAscii As Integer)
  If gridVRDInterest.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDInterest.FindOnPress KeyAscii
End Sub

Private Sub gridVRDInterest_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDInterest.Row And LastRow &gt; 0 Then
  gridVRDInterest.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDInterest.GetRowData(gridVRDInterest.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDInterestPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDInterest.Add()
    If GetFromBuffer(u) Then
      gridVRDInterest.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDInterest_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDInterestCfg_Click
        End If
    End If
end sub

private sub gridVRDInterest_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDInterest
End If
end sub
private sub mnuVRDInterestAdd_click()
   menuActionVRDInterest =&quot;ADD&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestEdit_click()
   menuActionVRDInterest =&quot;EDIT&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestDelete_click()
   menuActionVRDInterest =&quot;DEL&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestOpen_click()
   menuActionVRDInterest =&quot;RUN&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestRef_click()
   menuActionVRDInterest =&quot;REF&quot;
   menuTimerVRDInterest.enabled = true
end sub
  Private Sub mnuVRDInterestCOPY_Click()
    On Error Resume Next
    If gridVRDInterest.ItemCount = 0 Then Exit Sub
    If gridVRDInterest.Row &gt; 0 Then
     If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDInterestCUT_Click()
    On Error Resume Next
    If gridVRDInterest.ItemCount = 0 Then Exit Sub
    If gridVRDInterest.Row &gt; 0 Then
     If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDInterest.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDInterestCHANGE_Click()
  On Error Resume Next
  If gridVRDInterest.ItemCount = 0 Then Exit Sub
  If gridVRDInterest.Row &gt; 0 Then
   If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDInterest.ItemCount = u.parent.Count
      gridVRDInterest.RefreshRowIndex gridVRDInterest.RowIndex(gridVRDInterest.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDInterestCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDInterestPrn_click()
   menuActionVRDInterest =&quot;PRN&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestCfg_click()
   menuActionVRDInterest =&quot;CFG&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestFind_click()
   menuActionVRDInterest =&quot;FND&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestAcc_click()
   menuActionVRDInterest =&quot;ACC&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub menuTimerVRDInterest_timer()
   menuTimerVRDInterest.enabled = false
   if menuActionVRDInterest =&quot;ADD&quot; then cmdVRDInterestADD_CLick
   if menuActionVRDInterest =&quot;EDIT&quot; then cmdVRDInterestEDIT_CLick
   if menuActionVRDInterest =&quot;DEL&quot; then cmdVRDInterestDEL_CLick
   if menuActionVRDInterest =&quot;RUN&quot; then cmdVRDInterestRUN_CLick
   if menuActionVRDInterest =&quot;REF&quot; then cmdVRDInterestREF_CLick
   if menuActionVRDInterest =&quot;PRN&quot; then cmdVRDInterestPRN_CLick
   if menuActionVRDInterest =&quot;CFG&quot; then cmdVRDInterestCFG_CLick
   if menuActionVRDInterest =&quot;FND&quot; then cmdVRDInterestFND_CLick
   if menuActionVRDInterest =&quot;ACC&quot; then cmdVRDInterestACC_CLick
   menuActionVRDInterest =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDInterestAdd,cmdVRDInterestAdd.tag
  LoadBtnPictures cmdVRDInterestEdit,cmdVRDInterestEdit.tag
  LoadBtnPictures cmdVRDInterestDel,cmdVRDInterestDel.tag
  LoadBtnPictures cmdVRDInterestRef,cmdVRDInterestRef.tag
  LoadBtnPictures cmdVRDInterestPrn,cmdVRDInterestPrn.tag
  LoadBtnPictures cmdVRDInterestFnd,cmdVRDInterestFnd.tag
  LoadBtnPictures cmdVRDInterestRun,cmdVRDInterestRun.tag
  LoadBtnPictures cmdVRDInterestAcc,cmdVRDInterestAcc.tag
  LoadBtnPictures cmdVRDInterestCfg,cmdVRDInterestCfg.tag
  item.VRDInterest.PrepareGrid gridVRDInterest
  LoadGridLayout gridVRDInterest
  Set fndVRDInterest = Nothing
  On Error Resume Next
  Set fndVRDInterest = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDInterest.Init gridVRDInterest
end sub
private sub OnTabClick()

      gridVRDInterest.Top = 40 * Screen.TwipsPerPixelX
      gridVRDInterest.Left = 5 * Screen.TwipsPerPixelX
      gridVRDInterest.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDInterest.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDInterest.Top = 40 * Screen.TwipsPerPixelX
      gridVRDInterest.Left = 5 * Screen.TwipsPerPixelX
      gridVRDInterest.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDInterest.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDInterest.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDInterest = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDStream_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDStream" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDStream"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDStream" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDStream"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDStreamAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDStreamEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDStreamDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDStreamRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDStreamPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDStreamCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDStreamFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDStreamRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDStreamRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDStreamAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDStream" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Направление деятельности"/><Properties Name="Name" PropValue="mnuPopupVRDStream"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDStreamAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDStreamAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDStreamEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDStreamEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDStreamDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDStreamDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDStreamOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDStreamOpen"/></ControlData><ControlData Name="mnuVRDStreamRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDStreamRef"/></ControlData><ControlData Name="mnuVRDStreamS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDStreamS1"/></ControlData><ControlData Name="mnuVRDStreamBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDStreamBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDStreamCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDStreamCOPY"/></ControlData><ControlData Name="mnuVRDStreamCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDStreamCUT"/></ControlData><ControlData Name="mnuVRDStreamPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDStreamPASTE"/></ControlData><ControlData Name="mnuVRDStreamCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDStreamCHANGE"/></ControlData><ControlData Name="mnuVRDStreamCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDStreamCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDStreamPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDStreamPrn"/></ControlData><ControlData Name="mnuVRDStreamCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDStreamCfg"/></ControlData><ControlData Name="mnuVRDStreamFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDStreamFind"/></ControlData><ControlData Name="mnuVRDStreamAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDStreamAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDStream" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDStream"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDStream as object
private menuActionVRDStream as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDStreamCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDStream,&quot;gridVRDStream&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDStreamPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDStream,&quot;Направление деятельности&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDStreamRef_Click()
  on error resume next
  item.VRDStream.Refresh
  gridVRDStream.itemCount = item.VRDStream.count
  gridVRDStream.Refetch
  gridVRDStream.Refresh
End Sub
Private Sub cmdVRDStreamAcc_Click()
On Error Resume Next
If gridVRDStream.ItemCount = 0 Then Exit Sub
If gridVRDStream.Row &gt; 0 Then
 If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDStreamEdit_Click()
  on error resume next
If gridVRDStream.ItemCount = 0 Then Exit Sub
If gridVRDStream.Row &gt; 0 then
 If gridVRDStream.RowIndex(gridVRDStream.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDStream_main.Item = u
    again: frmVRDStream_main.NotFirstTime = False
    frmVRDStream_main.OnInit
    frmVRDStream_main.Show vbModal
    If frmVRDStream_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDStream.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDStreamDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDStreamAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDStream.Add()

      Set frmVRDStream_main.Item = u
      again: frmVRDStream_main.NotFirstTime = False
      frmVRDStream_main.OnInit
      frmVRDStream_main.Show vbModal
      If frmVRDStream_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDStream.ItemCount = Item.VRDStream.Count
        gridVRDStream.Refresh
        gridVRDStream.RefreshGroups
        gridVRDStream.Refreshsort
        gridVRDStream.MoveToBookmark u.ID &amp; &quot;VRDStream&quot;
      Else
        Item.VRDStream.Delete u.ID
        Item.VRDStream.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDStreamFnd_Click()
  on error resume next
  fndVRDStream.ShowForm
End Sub
Private Sub cmdVRDStreamRun_Click()
  on error resume next
  gridVRDStream_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDStream_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDStream.LoadRow gridVRDStream, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDStream_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDStream_DblClick()
  cmdVRDStreamEdit_Click
End Sub
Private Sub gridVRDStream_KeyPress(KeyAscii As Integer)
  If gridVRDStream.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDStream.FindOnPress KeyAscii
End Sub

Private Sub gridVRDStream_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDStream.Row And LastRow &gt; 0 Then
  gridVRDStream.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDStream.GetRowData(gridVRDStream.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDStreamPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDStream.Add()
    If GetFromBuffer(u) Then
      gridVRDStream.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDStream_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDStreamCfg_Click
        End If
    End If
end sub

private sub gridVRDStream_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDStream
End If
end sub
private sub mnuVRDStreamAdd_click()
   menuActionVRDStream =&quot;ADD&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamEdit_click()
   menuActionVRDStream =&quot;EDIT&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamDelete_click()
   menuActionVRDStream =&quot;DEL&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamOpen_click()
   menuActionVRDStream =&quot;RUN&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamRef_click()
   menuActionVRDStream =&quot;REF&quot;
   menuTimerVRDStream.enabled = true
end sub
  Private Sub mnuVRDStreamCOPY_Click()
    On Error Resume Next
    If gridVRDStream.ItemCount = 0 Then Exit Sub
    If gridVRDStream.Row &gt; 0 Then
     If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDStreamCUT_Click()
    On Error Resume Next
    If gridVRDStream.ItemCount = 0 Then Exit Sub
    If gridVRDStream.Row &gt; 0 Then
     If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDStream.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDStreamCHANGE_Click()
  On Error Resume Next
  If gridVRDStream.ItemCount = 0 Then Exit Sub
  If gridVRDStream.Row &gt; 0 Then
   If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDStream.ItemCount = u.parent.Count
      gridVRDStream.RefreshRowIndex gridVRDStream.RowIndex(gridVRDStream.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDStreamCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDStreamPrn_click()
   menuActionVRDStream =&quot;PRN&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamCfg_click()
   menuActionVRDStream =&quot;CFG&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamFind_click()
   menuActionVRDStream =&quot;FND&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamAcc_click()
   menuActionVRDStream =&quot;ACC&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub menuTimerVRDStream_timer()
   menuTimerVRDStream.enabled = false
   if menuActionVRDStream =&quot;ADD&quot; then cmdVRDStreamADD_CLick
   if menuActionVRDStream =&quot;EDIT&quot; then cmdVRDStreamEDIT_CLick
   if menuActionVRDStream =&quot;DEL&quot; then cmdVRDStreamDEL_CLick
   if menuActionVRDStream =&quot;RUN&quot; then cmdVRDStreamRUN_CLick
   if menuActionVRDStream =&quot;REF&quot; then cmdVRDStreamREF_CLick
   if menuActionVRDStream =&quot;PRN&quot; then cmdVRDStreamPRN_CLick
   if menuActionVRDStream =&quot;CFG&quot; then cmdVRDStreamCFG_CLick
   if menuActionVRDStream =&quot;FND&quot; then cmdVRDStreamFND_CLick
   if menuActionVRDStream =&quot;ACC&quot; then cmdVRDStreamACC_CLick
   menuActionVRDStream =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDStreamAdd,cmdVRDStreamAdd.tag
  LoadBtnPictures cmdVRDStreamEdit,cmdVRDStreamEdit.tag
  LoadBtnPictures cmdVRDStreamDel,cmdVRDStreamDel.tag
  LoadBtnPictures cmdVRDStreamRef,cmdVRDStreamRef.tag
  LoadBtnPictures cmdVRDStreamPrn,cmdVRDStreamPrn.tag
  LoadBtnPictures cmdVRDStreamFnd,cmdVRDStreamFnd.tag
  LoadBtnPictures cmdVRDStreamRun,cmdVRDStreamRun.tag
  LoadBtnPictures cmdVRDStreamAcc,cmdVRDStreamAcc.tag
  LoadBtnPictures cmdVRDStreamCfg,cmdVRDStreamCfg.tag
  item.VRDStream.PrepareGrid gridVRDStream
  LoadGridLayout gridVRDStream
  Set fndVRDStream = Nothing
  On Error Resume Next
  Set fndVRDStream = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDStream.Init gridVRDStream
end sub
private sub OnTabClick()

      gridVRDStream.Top = 40 * Screen.TwipsPerPixelX
      gridVRDStream.Left = 5 * Screen.TwipsPerPixelX
      gridVRDStream.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDStream.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDStream.Top = 40 * Screen.TwipsPerPixelX
      gridVRDStream.Left = 5 * Screen.TwipsPerPixelX
      gridVRDStream.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDStream.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDStream.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDStream = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDContractStage_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDContractStage" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDContractStage"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDContractStage" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDContractStage"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDContractStageAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDContractStageEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDContractStageDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDContractStageRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDContractStagePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStagePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDContractStageCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDContractStageFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDContractStageRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDContractStageRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDContractStageAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDContractStage" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Стадия договора"/><Properties Name="Name" PropValue="mnuPopupVRDContractStage"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDContractStageAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDContractStageAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDContractStageEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDContractStageEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDContractStageDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDContractStageDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDContractStageOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDContractStageOpen"/></ControlData><ControlData Name="mnuVRDContractStageRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDContractStageRef"/></ControlData><ControlData Name="mnuVRDContractStageS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDContractStageS1"/></ControlData><ControlData Name="mnuVRDContractStageBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDContractStageBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDContractStageCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDContractStageCOPY"/></ControlData><ControlData Name="mnuVRDContractStageCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDContractStageCUT"/></ControlData><ControlData Name="mnuVRDContractStagePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDContractStagePASTE"/></ControlData><ControlData Name="mnuVRDContractStageCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDContractStageCHANGE"/></ControlData><ControlData Name="mnuVRDContractStageCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDContractStageCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDContractStagePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDContractStagePrn"/></ControlData><ControlData Name="mnuVRDContractStageCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDContractStageCfg"/></ControlData><ControlData Name="mnuVRDContractStageFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDContractStageFind"/></ControlData><ControlData Name="mnuVRDContractStageAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDContractStageAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDContractStage" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDContractStage"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDContractStage as object
private menuActionVRDContractStage as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDContractStageCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDContractStage,&quot;gridVRDContractStage&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDContractStagePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDContractStage,&quot;Стадия договора&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDContractStageRef_Click()
  on error resume next
  item.VRDContractStage.Refresh
  gridVRDContractStage.itemCount = item.VRDContractStage.count
  gridVRDContractStage.Refetch
  gridVRDContractStage.Refresh
End Sub
Private Sub cmdVRDContractStageAcc_Click()
On Error Resume Next
If gridVRDContractStage.ItemCount = 0 Then Exit Sub
If gridVRDContractStage.Row &gt; 0 Then
 If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDContractStageEdit_Click()
  on error resume next
If gridVRDContractStage.ItemCount = 0 Then Exit Sub
If gridVRDContractStage.Row &gt; 0 then
 If gridVRDContractStage.RowIndex(gridVRDContractStage.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDContractStage_main.Item = u
    again: frmVRDContractStage_main.NotFirstTime = False
    frmVRDContractStage_main.OnInit
    frmVRDContractStage_main.Show vbModal
    If frmVRDContractStage_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDContractStage.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDContractStageDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDContractStageAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDContractStage.Add()

      Set frmVRDContractStage_main.Item = u
      again: frmVRDContractStage_main.NotFirstTime = False
      frmVRDContractStage_main.OnInit
      frmVRDContractStage_main.Show vbModal
      If frmVRDContractStage_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDContractStage.ItemCount = Item.VRDContractStage.Count
        gridVRDContractStage.Refresh
        gridVRDContractStage.RefreshGroups
        gridVRDContractStage.Refreshsort
        gridVRDContractStage.MoveToBookmark u.ID &amp; &quot;VRDContractStage&quot;
      Else
        Item.VRDContractStage.Delete u.ID
        Item.VRDContractStage.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDContractStageFnd_Click()
  on error resume next
  fndVRDContractStage.ShowForm
End Sub
Private Sub cmdVRDContractStageRun_Click()
  on error resume next
  gridVRDContractStage_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDContractStage_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDContractStage.LoadRow gridVRDContractStage, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDContractStage_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDContractStage_DblClick()
  cmdVRDContractStageEdit_Click
End Sub
Private Sub gridVRDContractStage_KeyPress(KeyAscii As Integer)
  If gridVRDContractStage.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDContractStage.FindOnPress KeyAscii
End Sub

Private Sub gridVRDContractStage_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDContractStage.Row And LastRow &gt; 0 Then
  gridVRDContractStage.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDContractStage.GetRowData(gridVRDContractStage.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDContractStagePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDContractStage.Add()
    If GetFromBuffer(u) Then
      gridVRDContractStage.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDContractStage_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDContractStageCfg_Click
        End If
    End If
end sub

private sub gridVRDContractStage_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDContractStage
End If
end sub
private sub mnuVRDContractStageAdd_click()
   menuActionVRDContractStage =&quot;ADD&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageEdit_click()
   menuActionVRDContractStage =&quot;EDIT&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageDelete_click()
   menuActionVRDContractStage =&quot;DEL&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageOpen_click()
   menuActionVRDContractStage =&quot;RUN&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageRef_click()
   menuActionVRDContractStage =&quot;REF&quot;
   menuTimerVRDContractStage.enabled = true
end sub
  Private Sub mnuVRDContractStageCOPY_Click()
    On Error Resume Next
    If gridVRDContractStage.ItemCount = 0 Then Exit Sub
    If gridVRDContractStage.Row &gt; 0 Then
     If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDContractStageCUT_Click()
    On Error Resume Next
    If gridVRDContractStage.ItemCount = 0 Then Exit Sub
    If gridVRDContractStage.Row &gt; 0 Then
     If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDContractStage.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDContractStageCHANGE_Click()
  On Error Resume Next
  If gridVRDContractStage.ItemCount = 0 Then Exit Sub
  If gridVRDContractStage.Row &gt; 0 Then
   If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDContractStage.ItemCount = u.parent.Count
      gridVRDContractStage.RefreshRowIndex gridVRDContractStage.RowIndex(gridVRDContractStage.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDContractStageCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDContractStagePrn_click()
   menuActionVRDContractStage =&quot;PRN&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageCfg_click()
   menuActionVRDContractStage =&quot;CFG&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageFind_click()
   menuActionVRDContractStage =&quot;FND&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageAcc_click()
   menuActionVRDContractStage =&quot;ACC&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub menuTimerVRDContractStage_timer()
   menuTimerVRDContractStage.enabled = false
   if menuActionVRDContractStage =&quot;ADD&quot; then cmdVRDContractStageADD_CLick
   if menuActionVRDContractStage =&quot;EDIT&quot; then cmdVRDContractStageEDIT_CLick
   if menuActionVRDContractStage =&quot;DEL&quot; then cmdVRDContractStageDEL_CLick
   if menuActionVRDContractStage =&quot;RUN&quot; then cmdVRDContractStageRUN_CLick
   if menuActionVRDContractStage =&quot;REF&quot; then cmdVRDContractStageREF_CLick
   if menuActionVRDContractStage =&quot;PRN&quot; then cmdVRDContractStagePRN_CLick
   if menuActionVRDContractStage =&quot;CFG&quot; then cmdVRDContractStageCFG_CLick
   if menuActionVRDContractStage =&quot;FND&quot; then cmdVRDContractStageFND_CLick
   if menuActionVRDContractStage =&quot;ACC&quot; then cmdVRDContractStageACC_CLick
   menuActionVRDContractStage =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDContractStageAdd,cmdVRDContractStageAdd.tag
  LoadBtnPictures cmdVRDContractStageEdit,cmdVRDContractStageEdit.tag
  LoadBtnPictures cmdVRDContractStageDel,cmdVRDContractStageDel.tag
  LoadBtnPictures cmdVRDContractStageRef,cmdVRDContractStageRef.tag
  LoadBtnPictures cmdVRDContractStagePrn,cmdVRDContractStagePrn.tag
  LoadBtnPictures cmdVRDContractStageFnd,cmdVRDContractStageFnd.tag
  LoadBtnPictures cmdVRDContractStageRun,cmdVRDContractStageRun.tag
  LoadBtnPictures cmdVRDContractStageAcc,cmdVRDContractStageAcc.tag
  LoadBtnPictures cmdVRDContractStageCfg,cmdVRDContractStageCfg.tag
  item.VRDContractStage.PrepareGrid gridVRDContractStage
  LoadGridLayout gridVRDContractStage
  Set fndVRDContractStage = Nothing
  On Error Resume Next
  Set fndVRDContractStage = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDContractStage.Init gridVRDContractStage
end sub
private sub OnTabClick()

      gridVRDContractStage.Top = 40 * Screen.TwipsPerPixelX
      gridVRDContractStage.Left = 5 * Screen.TwipsPerPixelX
      gridVRDContractStage.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDContractStage.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDContractStage.Top = 40 * Screen.TwipsPerPixelX
      gridVRDContractStage.Left = 5 * Screen.TwipsPerPixelX
      gridVRDContractStage.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDContractStage.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDContractStage.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDContractStage = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDLoyalty_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDLoyalty" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDLoyalty"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDLoyalty" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDLoyalty"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDLoyaltyAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDLoyaltyEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDLoyaltyDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDLoyaltyRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDLoyaltyPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDLoyaltyCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDLoyaltyFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDLoyaltyRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDLoyaltyAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDLoyalty" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Лояльность"/><Properties Name="Name" PropValue="mnuPopupVRDLoyalty"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDLoyaltyAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDLoyaltyEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDLoyaltyEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDLoyaltyDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDLoyaltyOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDLoyaltyOpen"/></ControlData><ControlData Name="mnuVRDLoyaltyRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyRef"/></ControlData><ControlData Name="mnuVRDLoyaltyS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDLoyaltyS1"/></ControlData><ControlData Name="mnuVRDLoyaltyBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDLoyaltyBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDLoyaltyCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCOPY"/></ControlData><ControlData Name="mnuVRDLoyaltyCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCUT"/></ControlData><ControlData Name="mnuVRDLoyaltyPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyPASTE"/></ControlData><ControlData Name="mnuVRDLoyaltyCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCHANGE"/></ControlData><ControlData Name="mnuVRDLoyaltyCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDLoyaltyPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyPrn"/></ControlData><ControlData Name="mnuVRDLoyaltyCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCfg"/></ControlData><ControlData Name="mnuVRDLoyaltyFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDLoyaltyFind"/></ControlData><ControlData Name="mnuVRDLoyaltyAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDLoyaltyAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDLoyalty" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDLoyalty"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDLoyalty as object
private menuActionVRDLoyalty as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDLoyaltyCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDLoyalty,&quot;gridVRDLoyalty&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDLoyaltyPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDLoyalty,&quot;Лояльность&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDLoyaltyRef_Click()
  on error resume next
  item.VRDLoyalty.Refresh
  gridVRDLoyalty.itemCount = item.VRDLoyalty.count
  gridVRDLoyalty.Refetch
  gridVRDLoyalty.Refresh
End Sub
Private Sub cmdVRDLoyaltyAcc_Click()
On Error Resume Next
If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
If gridVRDLoyalty.Row &gt; 0 Then
 If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDLoyaltyEdit_Click()
  on error resume next
If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
If gridVRDLoyalty.Row &gt; 0 then
 If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDLoyalty_main.Item = u
    again: frmVRDLoyalty_main.NotFirstTime = False
    frmVRDLoyalty_main.OnInit
    frmVRDLoyalty_main.Show vbModal
    If frmVRDLoyalty_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDLoyalty.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDLoyaltyDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDLoyaltyAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDLoyalty.Add()

      Set frmVRDLoyalty_main.Item = u
      again: frmVRDLoyalty_main.NotFirstTime = False
      frmVRDLoyalty_main.OnInit
      frmVRDLoyalty_main.Show vbModal
      If frmVRDLoyalty_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDLoyalty.ItemCount = Item.VRDLoyalty.Count
        gridVRDLoyalty.Refresh
        gridVRDLoyalty.RefreshGroups
        gridVRDLoyalty.Refreshsort
        gridVRDLoyalty.MoveToBookmark u.ID &amp; &quot;VRDLoyalty&quot;
      Else
        Item.VRDLoyalty.Delete u.ID
        Item.VRDLoyalty.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDLoyaltyFnd_Click()
  on error resume next
  fndVRDLoyalty.ShowForm
End Sub
Private Sub cmdVRDLoyaltyRun_Click()
  on error resume next
  gridVRDLoyalty_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDLoyalty_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDLoyalty.LoadRow gridVRDLoyalty, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDLoyalty_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDLoyalty_DblClick()
  cmdVRDLoyaltyEdit_Click
End Sub
Private Sub gridVRDLoyalty_KeyPress(KeyAscii As Integer)
  If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDLoyalty.FindOnPress KeyAscii
End Sub

Private Sub gridVRDLoyalty_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDLoyalty.Row And LastRow &gt; 0 Then
  gridVRDLoyalty.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDLoyalty.GetRowData(gridVRDLoyalty.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDLoyaltyPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDLoyalty.Add()
    If GetFromBuffer(u) Then
      gridVRDLoyalty.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDLoyalty_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDLoyaltyCfg_Click
        End If
    End If
end sub

private sub gridVRDLoyalty_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDLoyalty
End If
end sub
private sub mnuVRDLoyaltyAdd_click()
   menuActionVRDLoyalty =&quot;ADD&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyEdit_click()
   menuActionVRDLoyalty =&quot;EDIT&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyDelete_click()
   menuActionVRDLoyalty =&quot;DEL&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyOpen_click()
   menuActionVRDLoyalty =&quot;RUN&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyRef_click()
   menuActionVRDLoyalty =&quot;REF&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
  Private Sub mnuVRDLoyaltyCOPY_Click()
    On Error Resume Next
    If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
    If gridVRDLoyalty.Row &gt; 0 Then
     If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDLoyaltyCUT_Click()
    On Error Resume Next
    If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
    If gridVRDLoyalty.Row &gt; 0 Then
     If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDLoyalty.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDLoyaltyCHANGE_Click()
  On Error Resume Next
  If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
  If gridVRDLoyalty.Row &gt; 0 Then
   If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDLoyalty.ItemCount = u.parent.Count
      gridVRDLoyalty.RefreshRowIndex gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDLoyaltyCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDLoyaltyPrn_click()
   menuActionVRDLoyalty =&quot;PRN&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyCfg_click()
   menuActionVRDLoyalty =&quot;CFG&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyFind_click()
   menuActionVRDLoyalty =&quot;FND&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyAcc_click()
   menuActionVRDLoyalty =&quot;ACC&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub menuTimerVRDLoyalty_timer()
   menuTimerVRDLoyalty.enabled = false
   if menuActionVRDLoyalty =&quot;ADD&quot; then cmdVRDLoyaltyADD_CLick
   if menuActionVRDLoyalty =&quot;EDIT&quot; then cmdVRDLoyaltyEDIT_CLick
   if menuActionVRDLoyalty =&quot;DEL&quot; then cmdVRDLoyaltyDEL_CLick
   if menuActionVRDLoyalty =&quot;RUN&quot; then cmdVRDLoyaltyRUN_CLick
   if menuActionVRDLoyalty =&quot;REF&quot; then cmdVRDLoyaltyREF_CLick
   if menuActionVRDLoyalty =&quot;PRN&quot; then cmdVRDLoyaltyPRN_CLick
   if menuActionVRDLoyalty =&quot;CFG&quot; then cmdVRDLoyaltyCFG_CLick
   if menuActionVRDLoyalty =&quot;FND&quot; then cmdVRDLoyaltyFND_CLick
   if menuActionVRDLoyalty =&quot;ACC&quot; then cmdVRDLoyaltyACC_CLick
   menuActionVRDLoyalty =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDLoyaltyAdd,cmdVRDLoyaltyAdd.tag
  LoadBtnPictures cmdVRDLoyaltyEdit,cmdVRDLoyaltyEdit.tag
  LoadBtnPictures cmdVRDLoyaltyDel,cmdVRDLoyaltyDel.tag
  LoadBtnPictures cmdVRDLoyaltyRef,cmdVRDLoyaltyRef.tag
  LoadBtnPictures cmdVRDLoyaltyPrn,cmdVRDLoyaltyPrn.tag
  LoadBtnPictures cmdVRDLoyaltyFnd,cmdVRDLoyaltyFnd.tag
  LoadBtnPictures cmdVRDLoyaltyRun,cmdVRDLoyaltyRun.tag
  LoadBtnPictures cmdVRDLoyaltyAcc,cmdVRDLoyaltyAcc.tag
  LoadBtnPictures cmdVRDLoyaltyCfg,cmdVRDLoyaltyCfg.tag
  item.VRDLoyalty.PrepareGrid gridVRDLoyalty
  LoadGridLayout gridVRDLoyalty
  Set fndVRDLoyalty = Nothing
  On Error Resume Next
  Set fndVRDLoyalty = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDLoyalty.Init gridVRDLoyalty
end sub
private sub OnTabClick()

      gridVRDLoyalty.Top = 40 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Left = 5 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDLoyalty.Top = 40 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Left = 5 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDLoyalty.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDLoyalty = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDDocType_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDDocType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDDocType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDDocType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDDocType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDDocTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDDocTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDDocTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDDocTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDDocTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDDocTypeCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDDocTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDDocTypeRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDDocTypeRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDDocTypeAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDDocType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип документа"/><Properties Name="Name" PropValue="mnuPopupVRDDocType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDDocTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDDocTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDDocTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDDocTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDDocTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDDocTypeDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDDocTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDDocTypeOpen"/></ControlData><ControlData Name="mnuVRDDocTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDDocTypeRef"/></ControlData><ControlData Name="mnuVRDDocTypeS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDDocTypeS1"/></ControlData><ControlData Name="mnuVRDDocTypeBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDDocTypeBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDDocTypeCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDDocTypeCOPY"/></ControlData><ControlData Name="mnuVRDDocTypeCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDDocTypeCUT"/></ControlData><ControlData Name="mnuVRDDocTypePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDDocTypePASTE"/></ControlData><ControlData Name="mnuVRDDocTypeCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDDocTypeCHANGE"/></ControlData><ControlData Name="mnuVRDDocTypeCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDDocTypeCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDDocTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDDocTypePrn"/></ControlData><ControlData Name="mnuVRDDocTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDDocTypeCfg"/></ControlData><ControlData Name="mnuVRDDocTypeFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDDocTypeFind"/></ControlData><ControlData Name="mnuVRDDocTypeAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDDocTypeAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDDocType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDDocType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDDocType as object
private menuActionVRDDocType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDDocTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDDocType,&quot;gridVRDDocType&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDDocTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDDocType,&quot;Тип документа&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDDocTypeRef_Click()
  on error resume next
  item.VRDDocType.Refresh
  gridVRDDocType.itemCount = item.VRDDocType.count
  gridVRDDocType.Refetch
  gridVRDDocType.Refresh
End Sub
Private Sub cmdVRDDocTypeAcc_Click()
On Error Resume Next
If gridVRDDocType.ItemCount = 0 Then Exit Sub
If gridVRDDocType.Row &gt; 0 Then
 If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDDocTypeEdit_Click()
  on error resume next
If gridVRDDocType.ItemCount = 0 Then Exit Sub
If gridVRDDocType.Row &gt; 0 then
 If gridVRDDocType.RowIndex(gridVRDDocType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDDocType_main.Item = u
    again: frmVRDDocType_main.NotFirstTime = False
    frmVRDDocType_main.OnInit
    frmVRDDocType_main.Show vbModal
    If frmVRDDocType_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDDocType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDDocTypeDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDDocTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDDocType.Add()

      Set frmVRDDocType_main.Item = u
      again: frmVRDDocType_main.NotFirstTime = False
      frmVRDDocType_main.OnInit
      frmVRDDocType_main.Show vbModal
      If frmVRDDocType_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDDocType.ItemCount = Item.VRDDocType.Count
        gridVRDDocType.Refresh
        gridVRDDocType.RefreshGroups
        gridVRDDocType.Refreshsort
        gridVRDDocType.MoveToBookmark u.ID &amp; &quot;VRDDocType&quot;
      Else
        Item.VRDDocType.Delete u.ID
        Item.VRDDocType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDDocTypeFnd_Click()
  on error resume next
  fndVRDDocType.ShowForm
End Sub
Private Sub cmdVRDDocTypeRun_Click()
  on error resume next
  gridVRDDocType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDDocType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDDocType.LoadRow gridVRDDocType, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDDocType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDDocType_DblClick()
  cmdVRDDocTypeEdit_Click
End Sub
Private Sub gridVRDDocType_KeyPress(KeyAscii As Integer)
  If gridVRDDocType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDDocType.FindOnPress KeyAscii
End Sub

Private Sub gridVRDDocType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDDocType.Row And LastRow &gt; 0 Then
  gridVRDDocType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDDocType.GetRowData(gridVRDDocType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDDocTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDDocType.Add()
    If GetFromBuffer(u) Then
      gridVRDDocType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDDocType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDDocTypeCfg_Click
        End If
    End If
end sub

private sub gridVRDDocType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDDocType
End If
end sub
private sub mnuVRDDocTypeAdd_click()
   menuActionVRDDocType =&quot;ADD&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeEdit_click()
   menuActionVRDDocType =&quot;EDIT&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeDelete_click()
   menuActionVRDDocType =&quot;DEL&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeOpen_click()
   menuActionVRDDocType =&quot;RUN&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeRef_click()
   menuActionVRDDocType =&quot;REF&quot;
   menuTimerVRDDocType.enabled = true
end sub
  Private Sub mnuVRDDocTypeCOPY_Click()
    On Error Resume Next
    If gridVRDDocType.ItemCount = 0 Then Exit Sub
    If gridVRDDocType.Row &gt; 0 Then
     If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDDocTypeCUT_Click()
    On Error Resume Next
    If gridVRDDocType.ItemCount = 0 Then Exit Sub
    If gridVRDDocType.Row &gt; 0 Then
     If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDDocType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDDocTypeCHANGE_Click()
  On Error Resume Next
  If gridVRDDocType.ItemCount = 0 Then Exit Sub
  If gridVRDDocType.Row &gt; 0 Then
   If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDDocType.ItemCount = u.parent.Count
      gridVRDDocType.RefreshRowIndex gridVRDDocType.RowIndex(gridVRDDocType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDDocTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDDocTypePrn_click()
   menuActionVRDDocType =&quot;PRN&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeCfg_click()
   menuActionVRDDocType =&quot;CFG&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeFind_click()
   menuActionVRDDocType =&quot;FND&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeAcc_click()
   menuActionVRDDocType =&quot;ACC&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub menuTimerVRDDocType_timer()
   menuTimerVRDDocType.enabled = false
   if menuActionVRDDocType =&quot;ADD&quot; then cmdVRDDocTypeADD_CLick
   if menuActionVRDDocType =&quot;EDIT&quot; then cmdVRDDocTypeEDIT_CLick
   if menuActionVRDDocType =&quot;DEL&quot; then cmdVRDDocTypeDEL_CLick
   if menuActionVRDDocType =&quot;RUN&quot; then cmdVRDDocTypeRUN_CLick
   if menuActionVRDDocType =&quot;REF&quot; then cmdVRDDocTypeREF_CLick
   if menuActionVRDDocType =&quot;PRN&quot; then cmdVRDDocTypePRN_CLick
   if menuActionVRDDocType =&quot;CFG&quot; then cmdVRDDocTypeCFG_CLick
   if menuActionVRDDocType =&quot;FND&quot; then cmdVRDDocTypeFND_CLick
   if menuActionVRDDocType =&quot;ACC&quot; then cmdVRDDocTypeACC_CLick
   menuActionVRDDocType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDDocTypeAdd,cmdVRDDocTypeAdd.tag
  LoadBtnPictures cmdVRDDocTypeEdit,cmdVRDDocTypeEdit.tag
  LoadBtnPictures cmdVRDDocTypeDel,cmdVRDDocTypeDel.tag
  LoadBtnPictures cmdVRDDocTypeRef,cmdVRDDocTypeRef.tag
  LoadBtnPictures cmdVRDDocTypePrn,cmdVRDDocTypePrn.tag
  LoadBtnPictures cmdVRDDocTypeFnd,cmdVRDDocTypeFnd.tag
  LoadBtnPictures cmdVRDDocTypeRun,cmdVRDDocTypeRun.tag
  LoadBtnPictures cmdVRDDocTypeAcc,cmdVRDDocTypeAcc.tag
  LoadBtnPictures cmdVRDDocTypeCfg,cmdVRDDocTypeCfg.tag
  item.VRDDocType.PrepareGrid gridVRDDocType
  LoadGridLayout gridVRDDocType
  Set fndVRDDocType = Nothing
  On Error Resume Next
  Set fndVRDDocType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDDocType.Init gridVRDDocType
end sub
private sub OnTabClick()

      gridVRDDocType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDDocType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDDocType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDDocType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDDocType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDDocType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDDocType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDDocType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDDocType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDDocType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDPrjType_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDPrjType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDPrjType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDPrjType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDPrjType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDPrjTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDPrjTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDPrjTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDPrjTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDPrjTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDPrjTypeCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDPrjTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDPrjTypeRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDPrjTypeAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDPrjType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Типы проектов"/><Properties Name="Name" PropValue="mnuPopupVRDPrjType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDPrjTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDPrjTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDPrjTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDPrjTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDPrjTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDPrjTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDPrjTypeOpen"/></ControlData><ControlData Name="mnuVRDPrjTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeRef"/></ControlData><ControlData Name="mnuVRDPrjTypeS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDPrjTypeS1"/></ControlData><ControlData Name="mnuVRDPrjTypeBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDPrjTypeBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDPrjTypeCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCOPY"/></ControlData><ControlData Name="mnuVRDPrjTypeCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCUT"/></ControlData><ControlData Name="mnuVRDPrjTypePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDPrjTypePASTE"/></ControlData><ControlData Name="mnuVRDPrjTypeCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCHANGE"/></ControlData><ControlData Name="mnuVRDPrjTypeCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDPrjTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDPrjTypePrn"/></ControlData><ControlData Name="mnuVRDPrjTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCfg"/></ControlData><ControlData Name="mnuVRDPrjTypeFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDPrjTypeFind"/></ControlData><ControlData Name="mnuVRDPrjTypeAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDPrjTypeAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDPrjType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDPrjType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDPrjType as object
private menuActionVRDPrjType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDPrjTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDPrjType,&quot;gridVRDPrjType&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDPrjTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDPrjType,&quot;Типы проектов&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDPrjTypeRef_Click()
  on error resume next
  item.VRDPrjType.Refresh
  gridVRDPrjType.itemCount = item.VRDPrjType.count
  gridVRDPrjType.Refetch
  gridVRDPrjType.Refresh
End Sub
Private Sub cmdVRDPrjTypeAcc_Click()
On Error Resume Next
If gridVRDPrjType.ItemCount = 0 Then Exit Sub
If gridVRDPrjType.Row &gt; 0 Then
 If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDPrjTypeEdit_Click()
  on error resume next
If gridVRDPrjType.ItemCount = 0 Then Exit Sub
If gridVRDPrjType.Row &gt; 0 then
 If gridVRDPrjType.RowIndex(gridVRDPrjType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDPrjType_main.Item = u
    again: frmVRDPrjType_main.NotFirstTime = False
    frmVRDPrjType_main.OnInit
    frmVRDPrjType_main.Show vbModal
    If frmVRDPrjType_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDPrjType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDPrjTypeDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDPrjTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDPrjType.Add()

      Set frmVRDPrjType_main.Item = u
      again: frmVRDPrjType_main.NotFirstTime = False
      frmVRDPrjType_main.OnInit
      frmVRDPrjType_main.Show vbModal
      If frmVRDPrjType_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDPrjType.ItemCount = Item.VRDPrjType.Count
        gridVRDPrjType.Refresh
        gridVRDPrjType.RefreshGroups
        gridVRDPrjType.Refreshsort
        gridVRDPrjType.MoveToBookmark u.ID &amp; &quot;VRDPrjType&quot;
      Else
        Item.VRDPrjType.Delete u.ID
        Item.VRDPrjType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDPrjTypeFnd_Click()
  on error resume next
  fndVRDPrjType.ShowForm
End Sub
Private Sub cmdVRDPrjTypeRun_Click()
  on error resume next
  gridVRDPrjType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDPrjType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDPrjType.LoadRow gridVRDPrjType, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDPrjType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDPrjType_DblClick()
  cmdVRDPrjTypeEdit_Click
End Sub
Private Sub gridVRDPrjType_KeyPress(KeyAscii As Integer)
  If gridVRDPrjType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDPrjType.FindOnPress KeyAscii
End Sub

Private Sub gridVRDPrjType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDPrjType.Row And LastRow &gt; 0 Then
  gridVRDPrjType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDPrjType.GetRowData(gridVRDPrjType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDPrjTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDPrjType.Add()
    If GetFromBuffer(u) Then
      gridVRDPrjType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDPrjType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDPrjTypeCfg_Click
        End If
    End If
end sub

private sub gridVRDPrjType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDPrjType
End If
end sub
private sub mnuVRDPrjTypeAdd_click()
   menuActionVRDPrjType =&quot;ADD&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeEdit_click()
   menuActionVRDPrjType =&quot;EDIT&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeDelete_click()
   menuActionVRDPrjType =&quot;DEL&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeOpen_click()
   menuActionVRDPrjType =&quot;RUN&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeRef_click()
   menuActionVRDPrjType =&quot;REF&quot;
   menuTimerVRDPrjType.enabled = true
end sub
  Private Sub mnuVRDPrjTypeCOPY_Click()
    On Error Resume Next
    If gridVRDPrjType.ItemCount = 0 Then Exit Sub
    If gridVRDPrjType.Row &gt; 0 Then
     If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDPrjTypeCUT_Click()
    On Error Resume Next
    If gridVRDPrjType.ItemCount = 0 Then Exit Sub
    If gridVRDPrjType.Row &gt; 0 Then
     If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDPrjType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDPrjTypeCHANGE_Click()
  On Error Resume Next
  If gridVRDPrjType.ItemCount = 0 Then Exit Sub
  If gridVRDPrjType.Row &gt; 0 Then
   If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDPrjType.ItemCount = u.parent.Count
      gridVRDPrjType.RefreshRowIndex gridVRDPrjType.RowIndex(gridVRDPrjType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDPrjTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDPrjTypePrn_click()
   menuActionVRDPrjType =&quot;PRN&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeCfg_click()
   menuActionVRDPrjType =&quot;CFG&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeFind_click()
   menuActionVRDPrjType =&quot;FND&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeAcc_click()
   menuActionVRDPrjType =&quot;ACC&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub menuTimerVRDPrjType_timer()
   menuTimerVRDPrjType.enabled = false
   if menuActionVRDPrjType =&quot;ADD&quot; then cmdVRDPrjTypeADD_CLick
   if menuActionVRDPrjType =&quot;EDIT&quot; then cmdVRDPrjTypeEDIT_CLick
   if menuActionVRDPrjType =&quot;DEL&quot; then cmdVRDPrjTypeDEL_CLick
   if menuActionVRDPrjType =&quot;RUN&quot; then cmdVRDPrjTypeRUN_CLick
   if menuActionVRDPrjType =&quot;REF&quot; then cmdVRDPrjTypeREF_CLick
   if menuActionVRDPrjType =&quot;PRN&quot; then cmdVRDPrjTypePRN_CLick
   if menuActionVRDPrjType =&quot;CFG&quot; then cmdVRDPrjTypeCFG_CLick
   if menuActionVRDPrjType =&quot;FND&quot; then cmdVRDPrjTypeFND_CLick
   if menuActionVRDPrjType =&quot;ACC&quot; then cmdVRDPrjTypeACC_CLick
   menuActionVRDPrjType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDPrjTypeAdd,cmdVRDPrjTypeAdd.tag
  LoadBtnPictures cmdVRDPrjTypeEdit,cmdVRDPrjTypeEdit.tag
  LoadBtnPictures cmdVRDPrjTypeDel,cmdVRDPrjTypeDel.tag
  LoadBtnPictures cmdVRDPrjTypeRef,cmdVRDPrjTypeRef.tag
  LoadBtnPictures cmdVRDPrjTypePrn,cmdVRDPrjTypePrn.tag
  LoadBtnPictures cmdVRDPrjTypeFnd,cmdVRDPrjTypeFnd.tag
  LoadBtnPictures cmdVRDPrjTypeRun,cmdVRDPrjTypeRun.tag
  LoadBtnPictures cmdVRDPrjTypeAcc,cmdVRDPrjTypeAcc.tag
  LoadBtnPictures cmdVRDPrjTypeCfg,cmdVRDPrjTypeCfg.tag
  item.VRDPrjType.PrepareGrid gridVRDPrjType
  LoadGridLayout gridVRDPrjType
  Set fndVRDPrjType = Nothing
  On Error Resume Next
  Set fndVRDPrjType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDPrjType.Init gridVRDPrjType
end sub
private sub OnTabClick()

      gridVRDPrjType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDPrjType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDPrjType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDPrjType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDPrjType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDPrjType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDPrjType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDPrjType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDPrjType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDPrjType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDRreportType_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDRreportType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDRreportType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDRreportType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDRreportType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDRreportTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDRreportTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDRreportTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDRreportTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDRreportTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDRreportTypeCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDRreportTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDRreportTypeRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDRreportTypeAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDRreportType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип отчета"/><Properties Name="Name" PropValue="mnuPopupVRDRreportType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDRreportTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDRreportTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDRreportTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDRreportTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDRreportTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDRreportTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDRreportTypeOpen"/></ControlData><ControlData Name="mnuVRDRreportTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeRef"/></ControlData><ControlData Name="mnuVRDRreportTypeS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDRreportTypeS1"/></ControlData><ControlData Name="mnuVRDRreportTypeBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDRreportTypeBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDRreportTypeCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCOPY"/></ControlData><ControlData Name="mnuVRDRreportTypeCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCUT"/></ControlData><ControlData Name="mnuVRDRreportTypePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDRreportTypePASTE"/></ControlData><ControlData Name="mnuVRDRreportTypeCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCHANGE"/></ControlData><ControlData Name="mnuVRDRreportTypeCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDRreportTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDRreportTypePrn"/></ControlData><ControlData Name="mnuVRDRreportTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCfg"/></ControlData><ControlData Name="mnuVRDRreportTypeFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDRreportTypeFind"/></ControlData><ControlData Name="mnuVRDRreportTypeAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDRreportTypeAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDRreportType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDRreportType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDRreportType as object
private menuActionVRDRreportType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDRreportTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDRreportType,&quot;gridVRDRreportType&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDRreportTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDRreportType,&quot;Тип отчета&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDRreportTypeRef_Click()
  on error resume next
  item.VRDRreportType.Refresh
  gridVRDRreportType.itemCount = item.VRDRreportType.count
  gridVRDRreportType.Refetch
  gridVRDRreportType.Refresh
End Sub
Private Sub cmdVRDRreportTypeAcc_Click()
On Error Resume Next
If gridVRDRreportType.ItemCount = 0 Then Exit Sub
If gridVRDRreportType.Row &gt; 0 Then
 If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDRreportTypeEdit_Click()
  on error resume next
If gridVRDRreportType.ItemCount = 0 Then Exit Sub
If gridVRDRreportType.Row &gt; 0 then
 If gridVRDRreportType.RowIndex(gridVRDRreportType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDRreportType_main.Item = u
    again: frmVRDRreportType_main.NotFirstTime = False
    frmVRDRreportType_main.OnInit
    frmVRDRreportType_main.Show vbModal
    If frmVRDRreportType_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDRreportType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDRreportTypeDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDRreportTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDRreportType.Add()

      Set frmVRDRreportType_main.Item = u
      again: frmVRDRreportType_main.NotFirstTime = False
      frmVRDRreportType_main.OnInit
      frmVRDRreportType_main.Show vbModal
      If frmVRDRreportType_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDRreportType.ItemCount = Item.VRDRreportType.Count
        gridVRDRreportType.Refresh
        gridVRDRreportType.RefreshGroups
        gridVRDRreportType.Refreshsort
        gridVRDRreportType.MoveToBookmark u.ID &amp; &quot;VRDRreportType&quot;
      Else
        Item.VRDRreportType.Delete u.ID
        Item.VRDRreportType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDRreportTypeFnd_Click()
  on error resume next
  fndVRDRreportType.ShowForm
End Sub
Private Sub cmdVRDRreportTypeRun_Click()
  on error resume next
  gridVRDRreportType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDRreportType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDRreportType.LoadRow gridVRDRreportType, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDRreportType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDRreportType_DblClick()
  cmdVRDRreportTypeEdit_Click
End Sub
Private Sub gridVRDRreportType_KeyPress(KeyAscii As Integer)
  If gridVRDRreportType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDRreportType.FindOnPress KeyAscii
End Sub

Private Sub gridVRDRreportType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDRreportType.Row And LastRow &gt; 0 Then
  gridVRDRreportType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDRreportType.GetRowData(gridVRDRreportType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDRreportTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDRreportType.Add()
    If GetFromBuffer(u) Then
      gridVRDRreportType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDRreportType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDRreportTypeCfg_Click
        End If
    End If
end sub

private sub gridVRDRreportType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDRreportType
End If
end sub
private sub mnuVRDRreportTypeAdd_click()
   menuActionVRDRreportType =&quot;ADD&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeEdit_click()
   menuActionVRDRreportType =&quot;EDIT&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeDelete_click()
   menuActionVRDRreportType =&quot;DEL&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeOpen_click()
   menuActionVRDRreportType =&quot;RUN&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeRef_click()
   menuActionVRDRreportType =&quot;REF&quot;
   menuTimerVRDRreportType.enabled = true
end sub
  Private Sub mnuVRDRreportTypeCOPY_Click()
    On Error Resume Next
    If gridVRDRreportType.ItemCount = 0 Then Exit Sub
    If gridVRDRreportType.Row &gt; 0 Then
     If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDRreportTypeCUT_Click()
    On Error Resume Next
    If gridVRDRreportType.ItemCount = 0 Then Exit Sub
    If gridVRDRreportType.Row &gt; 0 Then
     If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDRreportType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDRreportTypeCHANGE_Click()
  On Error Resume Next
  If gridVRDRreportType.ItemCount = 0 Then Exit Sub
  If gridVRDRreportType.Row &gt; 0 Then
   If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDRreportType.ItemCount = u.parent.Count
      gridVRDRreportType.RefreshRowIndex gridVRDRreportType.RowIndex(gridVRDRreportType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDRreportTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDRreportTypePrn_click()
   menuActionVRDRreportType =&quot;PRN&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeCfg_click()
   menuActionVRDRreportType =&quot;CFG&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeFind_click()
   menuActionVRDRreportType =&quot;FND&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeAcc_click()
   menuActionVRDRreportType =&quot;ACC&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub menuTimerVRDRreportType_timer()
   menuTimerVRDRreportType.enabled = false
   if menuActionVRDRreportType =&quot;ADD&quot; then cmdVRDRreportTypeADD_CLick
   if menuActionVRDRreportType =&quot;EDIT&quot; then cmdVRDRreportTypeEDIT_CLick
   if menuActionVRDRreportType =&quot;DEL&quot; then cmdVRDRreportTypeDEL_CLick
   if menuActionVRDRreportType =&quot;RUN&quot; then cmdVRDRreportTypeRUN_CLick
   if menuActionVRDRreportType =&quot;REF&quot; then cmdVRDRreportTypeREF_CLick
   if menuActionVRDRreportType =&quot;PRN&quot; then cmdVRDRreportTypePRN_CLick
   if menuActionVRDRreportType =&quot;CFG&quot; then cmdVRDRreportTypeCFG_CLick
   if menuActionVRDRreportType =&quot;FND&quot; then cmdVRDRreportTypeFND_CLick
   if menuActionVRDRreportType =&quot;ACC&quot; then cmdVRDRreportTypeACC_CLick
   menuActionVRDRreportType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDRreportTypeAdd,cmdVRDRreportTypeAdd.tag
  LoadBtnPictures cmdVRDRreportTypeEdit,cmdVRDRreportTypeEdit.tag
  LoadBtnPictures cmdVRDRreportTypeDel,cmdVRDRreportTypeDel.tag
  LoadBtnPictures cmdVRDRreportTypeRef,cmdVRDRreportTypeRef.tag
  LoadBtnPictures cmdVRDRreportTypePrn,cmdVRDRreportTypePrn.tag
  LoadBtnPictures cmdVRDRreportTypeFnd,cmdVRDRreportTypeFnd.tag
  LoadBtnPictures cmdVRDRreportTypeRun,cmdVRDRreportTypeRun.tag
  LoadBtnPictures cmdVRDRreportTypeAcc,cmdVRDRreportTypeAcc.tag
  LoadBtnPictures cmdVRDRreportTypeCfg,cmdVRDRreportTypeCfg.tag
  item.VRDRreportType.PrepareGrid gridVRDRreportType
  LoadGridLayout gridVRDRreportType
  Set fndVRDRreportType = Nothing
  On Error Resume Next
  Set fndVRDRreportType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDRreportType.Init gridVRDRreportType
end sub
private sub OnTabClick()

      gridVRDRreportType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDRreportType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDRreportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDRreportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDRreportType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDRreportType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDRreportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDRreportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDRreportType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDRreportType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRD_CompInfo_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRD_CompInfo" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRD_CompInfo"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRD_CompInfo" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRD_CompInfo"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRD_CompInfoAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRD_CompInfoEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRD_CompInfoDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRD_CompInfoRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRD_CompInfoPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRD_CompInfoCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRD_CompInfoFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRD_CompInfoRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRD_CompInfoAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRD_CompInfo" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Источник информации о компании"/><Properties Name="Name" PropValue="mnuPopupVRD_CompInfo"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRD_CompInfoAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRD_CompInfoEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRD_CompInfoEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRD_CompInfoDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRD_CompInfoOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRD_CompInfoOpen"/></ControlData><ControlData Name="mnuVRD_CompInfoRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoRef"/></ControlData><ControlData Name="mnuVRD_CompInfoS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRD_CompInfoS1"/></ControlData><ControlData Name="mnuVRD_CompInfoBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRD_CompInfoBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRD_CompInfoCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCOPY"/></ControlData><ControlData Name="mnuVRD_CompInfoCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCUT"/></ControlData><ControlData Name="mnuVRD_CompInfoPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoPASTE"/></ControlData><ControlData Name="mnuVRD_CompInfoCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCHANGE"/></ControlData><ControlData Name="mnuVRD_CompInfoCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRD_CompInfoPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoPrn"/></ControlData><ControlData Name="mnuVRD_CompInfoCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCfg"/></ControlData><ControlData Name="mnuVRD_CompInfoFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRD_CompInfoFind"/></ControlData><ControlData Name="mnuVRD_CompInfoAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRD_CompInfoAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRD_CompInfo" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRD_CompInfo"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRD_CompInfo as object
private menuActionVRD_CompInfo as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRD_CompInfoCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRD_CompInfo,&quot;gridVRD_CompInfo&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRD_CompInfoPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRD_CompInfo,&quot;Источник информации о компании&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRD_CompInfoRef_Click()
  on error resume next
  item.VRD_CompInfo.Refresh
  gridVRD_CompInfo.itemCount = item.VRD_CompInfo.count
  gridVRD_CompInfo.Refetch
  gridVRD_CompInfo.Refresh
End Sub
Private Sub cmdVRD_CompInfoAcc_Click()
On Error Resume Next
If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
If gridVRD_CompInfo.Row &gt; 0 Then
 If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRD_CompInfoEdit_Click()
  on error resume next
If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
If gridVRD_CompInfo.Row &gt; 0 then
 If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRD_CompInfo_main.Item = u
    again: frmVRD_CompInfo_main.NotFirstTime = False
    frmVRD_CompInfo_main.OnInit
    frmVRD_CompInfo_main.Show vbModal
    If frmVRD_CompInfo_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRD_CompInfo.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRD_CompInfoDel_Click()
  on error resume next
  gridVRD_CompInfo.Delete
End Sub
Private Sub cmdVRD_CompInfoAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRD_CompInfo.Add()

      Set frmVRD_CompInfo_main.Item = u
      again: frmVRD_CompInfo_main.NotFirstTime = False
      frmVRD_CompInfo_main.OnInit
      frmVRD_CompInfo_main.Show vbModal
      If frmVRD_CompInfo_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRD_CompInfo.ItemCount = Item.VRD_CompInfo.Count
        gridVRD_CompInfo.Refresh
        gridVRD_CompInfo.RefreshGroups
        gridVRD_CompInfo.Refreshsort
        gridVRD_CompInfo.MoveToBookmark u.ID &amp; &quot;VRD_CompInfo&quot;
      Else
        Item.VRD_CompInfo.Delete u.ID
        Item.VRD_CompInfo.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRD_CompInfoFnd_Click()
  on error resume next
  fndVRD_CompInfo.ShowForm
End Sub
Private Sub cmdVRD_CompInfoRun_Click()
  on error resume next
  gridVRD_CompInfo_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRD_CompInfo_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRD_CompInfo.LoadRow gridVRD_CompInfo, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRD_CompInfo_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRD_CompInfo&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRD_CompInfo_DblClick()
  cmdVRD_CompInfoEdit_Click
End Sub
Private Sub gridVRD_CompInfo_KeyPress(KeyAscii As Integer)
  If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRD_CompInfo.FindOnPress KeyAscii
End Sub

Private Sub gridVRD_CompInfo_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRD_CompInfo.Row And LastRow &gt; 0 Then
  gridVRD_CompInfo.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRD_CompInfo.GetRowData(gridVRD_CompInfo.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRD_CompInfoPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRD_CompInfo.Add()
    If GetFromBuffer(u) Then
      gridVRD_CompInfo.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRD_CompInfo_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRD_CompInfoCfg_Click
        End If
    End If
end sub

private sub gridVRD_CompInfo_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRD_CompInfo
End If
end sub
private sub mnuVRD_CompInfoAdd_click()
   menuActionVRD_CompInfo =&quot;ADD&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoEdit_click()
   menuActionVRD_CompInfo =&quot;EDIT&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoDelete_click()
   menuActionVRD_CompInfo =&quot;DEL&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoOpen_click()
   menuActionVRD_CompInfo =&quot;RUN&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoRef_click()
   menuActionVRD_CompInfo =&quot;REF&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
  Private Sub mnuVRD_CompInfoCOPY_Click()
    On Error Resume Next
    If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
    If gridVRD_CompInfo.Row &gt; 0 Then
     If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRD_CompInfoCUT_Click()
    On Error Resume Next
    If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
    If gridVRD_CompInfo.Row &gt; 0 Then
     If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRD_CompInfo.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRD_CompInfoCHANGE_Click()
  On Error Resume Next
  If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
  If gridVRD_CompInfo.Row &gt; 0 Then
   If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRD_CompInfo.ItemCount = u.parent.Count
      gridVRD_CompInfo.RefreshRowIndex gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRD_CompInfoCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRD_CompInfoPrn_click()
   menuActionVRD_CompInfo =&quot;PRN&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoCfg_click()
   menuActionVRD_CompInfo =&quot;CFG&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoFind_click()
   menuActionVRD_CompInfo =&quot;FND&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoAcc_click()
   menuActionVRD_CompInfo =&quot;ACC&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub menuTimerVRD_CompInfo_timer()
   menuTimerVRD_CompInfo.enabled = false
   if menuActionVRD_CompInfo =&quot;ADD&quot; then cmdVRD_CompInfoADD_CLick
   if menuActionVRD_CompInfo =&quot;EDIT&quot; then cmdVRD_CompInfoEDIT_CLick
   if menuActionVRD_CompInfo =&quot;DEL&quot; then cmdVRD_CompInfoDEL_CLick
   if menuActionVRD_CompInfo =&quot;RUN&quot; then cmdVRD_CompInfoRUN_CLick
   if menuActionVRD_CompInfo =&quot;REF&quot; then cmdVRD_CompInfoREF_CLick
   if menuActionVRD_CompInfo =&quot;PRN&quot; then cmdVRD_CompInfoPRN_CLick
   if menuActionVRD_CompInfo =&quot;CFG&quot; then cmdVRD_CompInfoCFG_CLick
   if menuActionVRD_CompInfo =&quot;FND&quot; then cmdVRD_CompInfoFND_CLick
   if menuActionVRD_CompInfo =&quot;ACC&quot; then cmdVRD_CompInfoACC_CLick
   menuActionVRD_CompInfo =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRD_CompInfoAdd,cmdVRD_CompInfoAdd.tag
  LoadBtnPictures cmdVRD_CompInfoEdit,cmdVRD_CompInfoEdit.tag
  LoadBtnPictures cmdVRD_CompInfoDel,cmdVRD_CompInfoDel.tag
  LoadBtnPictures cmdVRD_CompInfoRef,cmdVRD_CompInfoRef.tag
  LoadBtnPictures cmdVRD_CompInfoPrn,cmdVRD_CompInfoPrn.tag
  LoadBtnPictures cmdVRD_CompInfoFnd,cmdVRD_CompInfoFnd.tag
  LoadBtnPictures cmdVRD_CompInfoRun,cmdVRD_CompInfoRun.tag
  LoadBtnPictures cmdVRD_CompInfoAcc,cmdVRD_CompInfoAcc.tag
  LoadBtnPictures cmdVRD_CompInfoCfg,cmdVRD_CompInfoCfg.tag
  item.VRD_CompInfo.PrepareGrid gridVRD_CompInfo
  LoadGridLayout gridVRD_CompInfo
  Set fndVRD_CompInfo = Nothing
  On Error Resume Next
  Set fndVRD_CompInfo = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRD_CompInfo.Init gridVRD_CompInfo
end sub
private sub OnTabClick()

      gridVRD_CompInfo.Top = 40 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Left = 5 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRD_CompInfo.Top = 40 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Left = 5 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRD_CompInfo.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRD_CompInfo = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlmain_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDMarket" ControlIndex="0" PROGID="VRD2GUI.vpnVRDMarket_main"><Properties Name="Name" PropValue="pnlVRDMarket"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDInterest" ControlIndex="0" PROGID="VRD2GUI.vpnVRDInterest_main"><Properties Name="Name" PropValue="pnlVRDInterest"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDStream" ControlIndex="0" PROGID="VRD2GUI.vpnVRDStream_main"><Properties Name="Name" PropValue="pnlVRDStream"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDContractStage" ControlIndex="0" PROGID="VRD2GUI.vpnVRDContractStage_main"><Properties Name="Name" PropValue="pnlVRDContractStage"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDLoyalty" ControlIndex="0" PROGID="VRD2GUI.vpnVRDLoyalty_main"><Properties Name="Name" PropValue="pnlVRDLoyalty"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDDocType" ControlIndex="0" PROGID="VRD2GUI.vpnVRDDocType_main"><Properties Name="Name" PropValue="pnlVRDDocType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDPrjType" ControlIndex="0" PROGID="VRD2GUI.vpnVRDPrjType_main"><Properties Name="Name" PropValue="pnlVRDPrjType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDRreportType" ControlIndex="0" PROGID="VRD2GUI.vpnVRDRreportType_main"><Properties Name="Name" PropValue="pnlVRDRreportType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRD_CompInfo" ControlIndex="0" PROGID="VRD2GUI.vpnVRD_CompInfo_main"><Properties Name="Name" PropValue="pnlVRD_CompInfo"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: работа с клиентами"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRDMarket.IsOK
if IsItOk then IsItOk = pnlVRDInterest.IsOK
if IsItOk then IsItOk = pnlVRDStream.IsOK
if IsItOk then IsItOk = pnlVRDContractStage.IsOK
if IsItOk then IsItOk = pnlVRDLoyalty.IsOK
if IsItOk then IsItOk = pnlVRDDocType.IsOK
if IsItOk then IsItOk = pnlVRDPrjType.IsOK
if IsItOk then IsItOk = pnlVRDRreportType.IsOK
if IsItOk then IsItOk = pnlVRD_CompInfo.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRD_CompInfo.Visible = False
  pnlVRDRreportType.Visible = False
  pnlVRDPrjType.Visible = False
  pnlVRDDocType.Visible = False
  pnlVRDLoyalty.Visible = False
  pnlVRDContractStage.Visible = False
  pnlVRDStream.Visible = False
  pnlVRDInterest.Visible = False
  pnlVRDMarket.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRDMarket&quot;
     With pnlVRDMarket
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDMarket.OnClick item,parentform
     End With
   Case &quot;VRDInterest&quot;
     With pnlVRDInterest
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDInterest.OnClick item,parentform
     End With
   Case &quot;VRDStream&quot;
     With pnlVRDStream
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDStream.OnClick item,parentform
     End With
   Case &quot;VRDContractStage&quot;
     With pnlVRDContractStage
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDContractStage.OnClick item,parentform
     End With
   Case &quot;VRDLoyalty&quot;
     With pnlVRDLoyalty
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDLoyalty.OnClick item,parentform
     End With
   Case &quot;VRDDocType&quot;
     With pnlVRDDocType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDDocType.OnClick item,parentform
     End With
   Case &quot;VRDPrjType&quot;
     With pnlVRDPrjType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDPrjType.OnClick item,parentform
     End With
   Case &quot;VRDRreportType&quot;
     With pnlVRDRreportType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDRreportType.OnClick item,parentform
     End With
   Case &quot;VRD_CompInfo&quot;
     With pnlVRD_CompInfo
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRD_CompInfo.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Рынки&quot;
ts.Tabs.Item(1).key = &quot;VRDMarket&quot;
pnlVRDMarket.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDInterest&quot;, &quot;Заинтересованность&quot;)
pnlVRDInterest.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDStream&quot;, &quot;Направление деятельности&quot;)
pnlVRDStream.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDContractStage&quot;, &quot;Стадия договора&quot;)
pnlVRDContractStage.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDLoyalty&quot;, &quot;Лояльность&quot;)
pnlVRDLoyalty.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDDocType&quot;, &quot;Тип документа&quot;)
pnlVRDDocType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDPrjType&quot;, &quot;Типы проектов&quot;)
pnlVRDPrjType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDRreportType&quot;, &quot;Тип отчета&quot;)
pnlVRDRreportType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRD_CompInfo&quot;, &quot;Источник информации о компании&quot;)
pnlVRD_CompInfo.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRD2&quot;, &quot;ctlmain_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRDMarket.CloseClass
 pnlVRDInterest.CloseClass
 pnlVRDStream.CloseClass
 pnlVRDContractStage.CloseClass
 pnlVRDLoyalty.CloseClass
 pnlVRDDocType.CloseClass
 pnlVRDPrjType.CloseClass
 pnlVRDRreportType.CloseClass
 pnlVRD_CompInfo.CloseClass
End Sub
public sub OnSave()
 pnlVRDMarket.OnSave
 pnlVRDInterest.OnSave
 pnlVRDStream.OnSave
 pnlVRDContractStage.OnSave
 pnlVRDLoyalty.OnSave
 pnlVRDDocType.OnSave
 pnlVRDPrjType.OnSave
 pnlVRDRreportType.OnSave
 pnlVRD_CompInfo.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRDMarket.IsChanged
m_IsChanged = m_IsChanged or pnlVRDInterest.IsChanged
m_IsChanged = m_IsChanged or pnlVRDStream.IsChanged
m_IsChanged = m_IsChanged or pnlVRDContractStage.IsChanged
m_IsChanged = m_IsChanged or pnlVRDLoyalty.IsChanged
m_IsChanged = m_IsChanged or pnlVRDDocType.IsChanged
m_IsChanged = m_IsChanged or pnlVRDPrjType.IsChanged
m_IsChanged = m_IsChanged or pnlVRDRreportType.IsChanged
m_IsChanged = m_IsChanged or pnlVRD_CompInfo.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmmain_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRD2GUI.ctlmain_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: работа с клиентами"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRD2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRD2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRD2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDMarket_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDMarket" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDMarket"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="treeVRDMarket" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treeVRDMarket"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Indentation" PropValue="75"/><Properties Name="HideSelection" PropValue="False"/><Properties Name="Left" PropValue="225"/><Properties Name="Top" PropValue="600"/></ControlData><ControlData Name="cmdVRDMarketAddRoot" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketAddRoot"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEWROOT.ico"/><Properties Name="ToolTipText" PropValue="Добавить ветку"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDMarketAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDMarketEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDMarketDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDMarketRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDMarketAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDMarketAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupVRDMarket" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Рынки"/><Properties Name="Name" PropValue="mnuPopupVRDMarket"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDMarketAddRoot" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать ветку"/><Properties Name="Name" PropValue="mnuVRDMarketAddRoot"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDMarketAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDMarketAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDMarketEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDMarketEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDMarketDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDMarketDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDMarketS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDMarketS1"/></ControlData><ControlData Name="mnuVRDMarketBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDMarketBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDMarketCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDMarketCOPY"/></ControlData><ControlData Name="mnuVRDMarketCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDMarketCUT"/></ControlData><ControlData Name="mnuVRDMarketPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDMarketPASTE"/></ControlData><ControlData Name="mnuVRDMarketCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDMarketCHANGE"/></ControlData><ControlData Name="mnuVRDMarketCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDMarketCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDMarketRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDMarketRef"/></ControlData><ControlData Name="mnuVRDMarketAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDMarketAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDMarket" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDMarket"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private menuActionVRDMarket as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDMarketAdd_Click()
  on error resume next
  on error resume next
  Dim f As Object, p As Object
If (treeVRDMarket.SelectedItem is Nothing) Then  exit sub
  Set p = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  Set f = p.VRDMarket.Add()

      Set frmVRDMarket_.Item = f
      again: frmVRDMarket_.NotFirstTime = False
      frmVRDMarket_.OnInit
      frmVRDMarket_.Show vbModal
      If frmVRDMarket_.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
          If treeVRDMarket.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
            f.LoadToTree treeVRDMarket, treeVRDMarket.SelectedItem.Key
          end if
          set treeVRDMarket.SelectedItem = treeVRDMarket.nodes.item(  f.ID &amp; &quot;VRDMarket&quot;)
      Else
        Item.VRDMarket.Delete f.ID
        Item.VRDMarket.Remove f.ID
      End If
End Sub

Private Sub cmdVRDMarketAddRoot_Click()
  on error resume next
Dim f As Object, p As Object
  Set f = Item.VRDMarket.Add()

      Set frmVRDMarket_.Item = f
      again: frmVRDMarket_.NotFirstTime = False
      frmVRDMarket_.OnInit
      frmVRDMarket_.Show vbModal
      If frmVRDMarket_.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
    Item.VRDMarket.refresh
    treeVRDMarket.nodes.clear
    Item.VRDMarket.filltree treeVRDMarket
          set treeVRDMarket.SelectedItem = treeVRDMarket.nodes.item(  f.ID &amp; &quot;VRDMarket&quot;)
      Else
        Item.VRDMarket.Remove f.ID
      End If
End Sub

Private Sub cmdVRDMarketEdit_Click()
  on error resume next
  Dim f As Object
  If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  Set frmVRDMarket_.Item = f
  again: frmVRDMarket_.NotFirstTime = False
  frmVRDMarket_.OnInit
  frmVRDMarket_.Show vbModal
  If frmVRDMarket_.OK Then
    err.clear
    f.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
  End If
End Sub

Private Sub cmdVRDMarketDel_Click()
  on error resume next
End Sub

Private Sub cmdVRDMarketAcc_Click()
  on error resume next
  Dim f As Object
  If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  item.application.manager.ShowSecurityDialog f
End Sub

Private Sub cmdVRDMarketREf_Click()
  on error resume next
  Item.VRDMarket.refresh
  treeVRDMarket.nodes.clear
  Item.VRDMarket.filltree treeVRDMarket
End Sub

Private Sub treeVRDMarket_DblClick()
If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  cmdVRDMarketEdit_Click
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub treeVRDMarket_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treeVRDMarket.Nodes.Remove Node.Child.Index
 Dim f As Object
 Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(Node.Key, 38))
 f.expandpart treeVRDMarket, Node.Key
 parentform.mousepointer = vbNormal
End If
End Sub

private sub treeVRDMarket_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupVRDMarket
End If
end sub
private sub mnuVRDMarketAddRoot_click()
   menuActionVRDMarket =&quot;ADDROOT&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketAdd_click()
   menuActionVRDMarket =&quot;ADD&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketEdit_click()
   menuActionVRDMarket =&quot;EDIT&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketDelete_click()
   menuActionVRDMarket =&quot;DEL&quot;
   menuTimerVRDMarket.enabled = true
end sub
  Private Sub mnuVRDMarketCOPY_Click()
    On Error Resume Next
    If TREEVRDMarket.SELECTEDItem is nothing Then Exit Sub
        Dim u As Object
        Set u = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
        SaveToBuffer u
  End Sub
  Private Sub mnuVRDMarketCUT_Click()
    On Error Resume Next
    If TREEVRDMarket.SELECTEDItem is nothing Then Exit Sub
    Dim u As Object,BM
    Set u = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
    SaveToBuffer u
    SET BM = u.parent
    u.parent.Delete u.ID
    TREEVRDMarket.nodes.remove TREEVRDMarket.selecteditem.key
  End Sub
Private Sub mnuVRDMarketPASTE_Click()
On Error Resume Next
If treeVRDMarket.SelectedItem Is Nothing Then Exit Sub
  Dim u As Object, f as object
  Set f = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  Set u = f.VRDMarket.Add()
  If GetFromBuffer(u) Then
    If treeVRDMarket.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
      u.LoadToTree treeVRDMarket, treeVRDMarket.SelectedItem.Key
    end if
  Else
   f.VRDMarket.refresh
  End If
End Sub
Private Sub mnuVRDMarketCHANGE_Click()
  On Error Resume Next
  If TREEVRDMarket.SELECTEDItem is nothing Then Exit Sub
  Dim u As Object,BM
  Set u = Item.FindRowObject(&quot;VRDMarket&quot;, Left(treeVRDMarket.SelectedItem.Key, 38))
  If GetFromBuffer(u) Then
    TREEVRDMarket.SELECTEDItem.text = u.brief
      treeVRDMarket.SelectedItem.Expanded = False
      While treeVRDMarket.SelectedItem.Children &gt; 0
        treeVRDMarket.Nodes.Remove treeVRDMarket.SelectedItem.Child.Key
      Wend
      treeVRDMarket.Nodes.Add(treeVRDMarket.SelectedItem.Key, 4, &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
      treeVRDMarket_Expand treeVRDMarket.SelectedItem
  End If
End Sub
  Private Sub mnuVRDMarketCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDMarketRef_click()
   menuActionVRDMarket =&quot;REF&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub mnuVRDMarketAcc_click()
   menuActionVRDMarket =&quot;ACC&quot;
   menuTimerVRDMarket.enabled = true
end sub
private sub menuTimerVRDMarket_timer()
   menuTimerVRDMarket.enabled = false
   if menuActionVRDMarket =&quot;ADDROOT&quot; then cmdVRDMarketADDROOT_CLick
   if menuActionVRDMarket =&quot;ADD&quot; then cmdVRDMarketADD_CLick
   if menuActionVRDMarket =&quot;EDIT&quot; then cmdVRDMarketEDIT_CLick
   if menuActionVRDMarket =&quot;DEL&quot; then cmdVRDMarketDEL_CLick
   if menuActionVRDMarket =&quot;REF&quot; then cmdVRDMarketREF_CLick
   if menuActionVRDMarket =&quot;ACC&quot; then cmdVRDMarketACC_CLick
   menuActionVRDMarket =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDMarketAddRoot,cmdVRDMarketAddRoot.tag
  LoadBtnPictures cmdVRDMarketAdd,cmdVRDMarketAdd.tag
  LoadBtnPictures cmdVRDMarketEdit,cmdVRDMarketEdit.tag
  LoadBtnPictures cmdVRDMarketDel,cmdVRDMarketDel.tag
  LoadBtnPictures cmdVRDMarketRef,cmdVRDMarketRef.tag
  LoadBtnPictures cmdVRDMarketAcc,cmdVRDMarketAcc.tag
Item.VRDMarket.filltree treeVRDMarket
end sub
private sub OnTabClick()

      treeVRDMarket.Top = 40 * Screen.TwipsPerPixelX
      treeVRDMarket.Left = 5 * Screen.TwipsPerPixelX
      treeVRDMarket.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      treeVRDMarket.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDMarket.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDInterest_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDInterest" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDInterest"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDInterest" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDInterest"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDInterestAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDInterestEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDInterestDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDInterestRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDInterestPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDInterestCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDInterestFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDInterestRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDInterestRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDInterestAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDInterestAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDInterest" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Заинтересованность"/><Properties Name="Name" PropValue="mnuPopupVRDInterest"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDInterestAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDInterestAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDInterestEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDInterestEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDInterestDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDInterestDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDInterestOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDInterestOpen"/></ControlData><ControlData Name="mnuVRDInterestRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDInterestRef"/></ControlData><ControlData Name="mnuVRDInterestS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDInterestS1"/></ControlData><ControlData Name="mnuVRDInterestBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDInterestBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDInterestCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDInterestCOPY"/></ControlData><ControlData Name="mnuVRDInterestCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDInterestCUT"/></ControlData><ControlData Name="mnuVRDInterestPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDInterestPASTE"/></ControlData><ControlData Name="mnuVRDInterestCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDInterestCHANGE"/></ControlData><ControlData Name="mnuVRDInterestCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDInterestCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDInterestPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDInterestPrn"/></ControlData><ControlData Name="mnuVRDInterestCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDInterestCfg"/></ControlData><ControlData Name="mnuVRDInterestFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDInterestFind"/></ControlData><ControlData Name="mnuVRDInterestAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDInterestAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDInterest" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDInterest"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDInterest as object
private menuActionVRDInterest as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDInterestCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDInterest,&quot;gridVRDInterest&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDInterestPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDInterest,&quot;Заинтересованность&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDInterestRef_Click()
  on error resume next
  item.VRDInterest.Refresh
  gridVRDInterest.itemCount = item.VRDInterest.count
  gridVRDInterest.Refetch
  gridVRDInterest.Refresh
End Sub
Private Sub cmdVRDInterestAcc_Click()
On Error Resume Next
If gridVRDInterest.ItemCount = 0 Then Exit Sub
If gridVRDInterest.Row &gt; 0 Then
 If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDInterestEdit_Click()
  on error resume next
If gridVRDInterest.ItemCount = 0 Then Exit Sub
If gridVRDInterest.Row &gt; 0 then
 If gridVRDInterest.RowIndex(gridVRDInterest.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDInterest_.Item = u
    again: frmVRDInterest_.NotFirstTime = False
    frmVRDInterest_.OnInit
    frmVRDInterest_.Show vbModal
    If frmVRDInterest_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDInterest.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDInterestDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDInterestAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDInterest.Add()

      Set frmVRDInterest_.Item = u
      again: frmVRDInterest_.NotFirstTime = False
      frmVRDInterest_.OnInit
      frmVRDInterest_.Show vbModal
      If frmVRDInterest_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDInterest.ItemCount = Item.VRDInterest.Count
        gridVRDInterest.Refresh
        gridVRDInterest.RefreshGroups
        gridVRDInterest.Refreshsort
        gridVRDInterest.MoveToBookmark u.ID &amp; &quot;VRDInterest&quot;
      Else
        Item.VRDInterest.Delete u.ID
        Item.VRDInterest.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDInterestFnd_Click()
  on error resume next
  fndVRDInterest.ShowForm
End Sub
Private Sub cmdVRDInterestRun_Click()
  on error resume next
  gridVRDInterest_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDInterest_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDInterest.LoadRow gridVRDInterest, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDInterest_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDInterest_DblClick()
  cmdVRDInterestEdit_Click
End Sub
Private Sub gridVRDInterest_KeyPress(KeyAscii As Integer)
  If gridVRDInterest.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDInterest.FindOnPress KeyAscii
End Sub

Private Sub gridVRDInterest_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDInterest.Row And LastRow &gt; 0 Then
  gridVRDInterest.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDInterest.GetRowData(gridVRDInterest.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDInterestPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDInterest.Add()
    If GetFromBuffer(u) Then
      gridVRDInterest.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDInterest_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDInterestCfg_Click
        End If
    End If
end sub

private sub gridVRDInterest_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDInterest
End If
end sub
private sub mnuVRDInterestAdd_click()
   menuActionVRDInterest =&quot;ADD&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestEdit_click()
   menuActionVRDInterest =&quot;EDIT&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestDelete_click()
   menuActionVRDInterest =&quot;DEL&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestOpen_click()
   menuActionVRDInterest =&quot;RUN&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestRef_click()
   menuActionVRDInterest =&quot;REF&quot;
   menuTimerVRDInterest.enabled = true
end sub
  Private Sub mnuVRDInterestCOPY_Click()
    On Error Resume Next
    If gridVRDInterest.ItemCount = 0 Then Exit Sub
    If gridVRDInterest.Row &gt; 0 Then
     If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDInterestCUT_Click()
    On Error Resume Next
    If gridVRDInterest.ItemCount = 0 Then Exit Sub
    If gridVRDInterest.Row &gt; 0 Then
     If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDInterest.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDInterestCHANGE_Click()
  On Error Resume Next
  If gridVRDInterest.ItemCount = 0 Then Exit Sub
  If gridVRDInterest.Row &gt; 0 Then
   If gridVRDInterest.RowIndex(gridVRDInterest.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDInterest.RowBookmark(gridVRDInterest.RowIndex(gridVRDInterest.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDInterest.ItemCount = u.parent.Count
      gridVRDInterest.RefreshRowIndex gridVRDInterest.RowIndex(gridVRDInterest.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDInterestCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDInterestPrn_click()
   menuActionVRDInterest =&quot;PRN&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestCfg_click()
   menuActionVRDInterest =&quot;CFG&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestFind_click()
   menuActionVRDInterest =&quot;FND&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub mnuVRDInterestAcc_click()
   menuActionVRDInterest =&quot;ACC&quot;
   menuTimerVRDInterest.enabled = true
end sub
private sub menuTimerVRDInterest_timer()
   menuTimerVRDInterest.enabled = false
   if menuActionVRDInterest =&quot;ADD&quot; then cmdVRDInterestADD_CLick
   if menuActionVRDInterest =&quot;EDIT&quot; then cmdVRDInterestEDIT_CLick
   if menuActionVRDInterest =&quot;DEL&quot; then cmdVRDInterestDEL_CLick
   if menuActionVRDInterest =&quot;RUN&quot; then cmdVRDInterestRUN_CLick
   if menuActionVRDInterest =&quot;REF&quot; then cmdVRDInterestREF_CLick
   if menuActionVRDInterest =&quot;PRN&quot; then cmdVRDInterestPRN_CLick
   if menuActionVRDInterest =&quot;CFG&quot; then cmdVRDInterestCFG_CLick
   if menuActionVRDInterest =&quot;FND&quot; then cmdVRDInterestFND_CLick
   if menuActionVRDInterest =&quot;ACC&quot; then cmdVRDInterestACC_CLick
   menuActionVRDInterest =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDInterestAdd,cmdVRDInterestAdd.tag
  LoadBtnPictures cmdVRDInterestEdit,cmdVRDInterestEdit.tag
  LoadBtnPictures cmdVRDInterestDel,cmdVRDInterestDel.tag
  LoadBtnPictures cmdVRDInterestRef,cmdVRDInterestRef.tag
  LoadBtnPictures cmdVRDInterestPrn,cmdVRDInterestPrn.tag
  LoadBtnPictures cmdVRDInterestFnd,cmdVRDInterestFnd.tag
  LoadBtnPictures cmdVRDInterestRun,cmdVRDInterestRun.tag
  LoadBtnPictures cmdVRDInterestAcc,cmdVRDInterestAcc.tag
  LoadBtnPictures cmdVRDInterestCfg,cmdVRDInterestCfg.tag
  item.VRDInterest.PrepareGrid gridVRDInterest
  LoadGridLayout gridVRDInterest
  Set fndVRDInterest = Nothing
  On Error Resume Next
  Set fndVRDInterest = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDInterest.Init gridVRDInterest
end sub
private sub OnTabClick()

      gridVRDInterest.Top = 40 * Screen.TwipsPerPixelX
      gridVRDInterest.Left = 5 * Screen.TwipsPerPixelX
      gridVRDInterest.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDInterest.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDInterest.Top = 40 * Screen.TwipsPerPixelX
      gridVRDInterest.Left = 5 * Screen.TwipsPerPixelX
      gridVRDInterest.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDInterest.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDInterest.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDInterest = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDStream_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDStream" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDStream"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDStream" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDStream"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDStreamAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDStreamEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDStreamDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDStreamRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDStreamPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDStreamCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDStreamFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDStreamRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDStreamRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDStreamAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDStreamAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDStream" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Направление деятельности"/><Properties Name="Name" PropValue="mnuPopupVRDStream"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDStreamAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDStreamAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDStreamEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDStreamEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDStreamDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDStreamDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDStreamOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDStreamOpen"/></ControlData><ControlData Name="mnuVRDStreamRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDStreamRef"/></ControlData><ControlData Name="mnuVRDStreamS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDStreamS1"/></ControlData><ControlData Name="mnuVRDStreamBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDStreamBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDStreamCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDStreamCOPY"/></ControlData><ControlData Name="mnuVRDStreamCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDStreamCUT"/></ControlData><ControlData Name="mnuVRDStreamPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDStreamPASTE"/></ControlData><ControlData Name="mnuVRDStreamCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDStreamCHANGE"/></ControlData><ControlData Name="mnuVRDStreamCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDStreamCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDStreamPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDStreamPrn"/></ControlData><ControlData Name="mnuVRDStreamCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDStreamCfg"/></ControlData><ControlData Name="mnuVRDStreamFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDStreamFind"/></ControlData><ControlData Name="mnuVRDStreamAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDStreamAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDStream" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDStream"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDStream as object
private menuActionVRDStream as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDStreamCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDStream,&quot;gridVRDStream&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDStreamPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDStream,&quot;Направление деятельности&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDStreamRef_Click()
  on error resume next
  item.VRDStream.Refresh
  gridVRDStream.itemCount = item.VRDStream.count
  gridVRDStream.Refetch
  gridVRDStream.Refresh
End Sub
Private Sub cmdVRDStreamAcc_Click()
On Error Resume Next
If gridVRDStream.ItemCount = 0 Then Exit Sub
If gridVRDStream.Row &gt; 0 Then
 If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDStreamEdit_Click()
  on error resume next
If gridVRDStream.ItemCount = 0 Then Exit Sub
If gridVRDStream.Row &gt; 0 then
 If gridVRDStream.RowIndex(gridVRDStream.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDStream_.Item = u
    again: frmVRDStream_.NotFirstTime = False
    frmVRDStream_.OnInit
    frmVRDStream_.Show vbModal
    If frmVRDStream_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDStream.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDStreamDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDStreamAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDStream.Add()

      Set frmVRDStream_.Item = u
      again: frmVRDStream_.NotFirstTime = False
      frmVRDStream_.OnInit
      frmVRDStream_.Show vbModal
      If frmVRDStream_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDStream.ItemCount = Item.VRDStream.Count
        gridVRDStream.Refresh
        gridVRDStream.RefreshGroups
        gridVRDStream.Refreshsort
        gridVRDStream.MoveToBookmark u.ID &amp; &quot;VRDStream&quot;
      Else
        Item.VRDStream.Delete u.ID
        Item.VRDStream.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDStreamFnd_Click()
  on error resume next
  fndVRDStream.ShowForm
End Sub
Private Sub cmdVRDStreamRun_Click()
  on error resume next
  gridVRDStream_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDStream_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDStream.LoadRow gridVRDStream, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDStream_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDStream_DblClick()
  cmdVRDStreamEdit_Click
End Sub
Private Sub gridVRDStream_KeyPress(KeyAscii As Integer)
  If gridVRDStream.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDStream.FindOnPress KeyAscii
End Sub

Private Sub gridVRDStream_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDStream.Row And LastRow &gt; 0 Then
  gridVRDStream.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDStream.GetRowData(gridVRDStream.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDStreamPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDStream.Add()
    If GetFromBuffer(u) Then
      gridVRDStream.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDStream_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDStreamCfg_Click
        End If
    End If
end sub

private sub gridVRDStream_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDStream
End If
end sub
private sub mnuVRDStreamAdd_click()
   menuActionVRDStream =&quot;ADD&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamEdit_click()
   menuActionVRDStream =&quot;EDIT&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamDelete_click()
   menuActionVRDStream =&quot;DEL&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamOpen_click()
   menuActionVRDStream =&quot;RUN&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamRef_click()
   menuActionVRDStream =&quot;REF&quot;
   menuTimerVRDStream.enabled = true
end sub
  Private Sub mnuVRDStreamCOPY_Click()
    On Error Resume Next
    If gridVRDStream.ItemCount = 0 Then Exit Sub
    If gridVRDStream.Row &gt; 0 Then
     If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDStreamCUT_Click()
    On Error Resume Next
    If gridVRDStream.ItemCount = 0 Then Exit Sub
    If gridVRDStream.Row &gt; 0 Then
     If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDStream.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDStreamCHANGE_Click()
  On Error Resume Next
  If gridVRDStream.ItemCount = 0 Then Exit Sub
  If gridVRDStream.Row &gt; 0 Then
   If gridVRDStream.RowIndex(gridVRDStream.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDStream.RowBookmark(gridVRDStream.RowIndex(gridVRDStream.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDStream.ItemCount = u.parent.Count
      gridVRDStream.RefreshRowIndex gridVRDStream.RowIndex(gridVRDStream.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDStreamCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDStreamPrn_click()
   menuActionVRDStream =&quot;PRN&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamCfg_click()
   menuActionVRDStream =&quot;CFG&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamFind_click()
   menuActionVRDStream =&quot;FND&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub mnuVRDStreamAcc_click()
   menuActionVRDStream =&quot;ACC&quot;
   menuTimerVRDStream.enabled = true
end sub
private sub menuTimerVRDStream_timer()
   menuTimerVRDStream.enabled = false
   if menuActionVRDStream =&quot;ADD&quot; then cmdVRDStreamADD_CLick
   if menuActionVRDStream =&quot;EDIT&quot; then cmdVRDStreamEDIT_CLick
   if menuActionVRDStream =&quot;DEL&quot; then cmdVRDStreamDEL_CLick
   if menuActionVRDStream =&quot;RUN&quot; then cmdVRDStreamRUN_CLick
   if menuActionVRDStream =&quot;REF&quot; then cmdVRDStreamREF_CLick
   if menuActionVRDStream =&quot;PRN&quot; then cmdVRDStreamPRN_CLick
   if menuActionVRDStream =&quot;CFG&quot; then cmdVRDStreamCFG_CLick
   if menuActionVRDStream =&quot;FND&quot; then cmdVRDStreamFND_CLick
   if menuActionVRDStream =&quot;ACC&quot; then cmdVRDStreamACC_CLick
   menuActionVRDStream =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDStreamAdd,cmdVRDStreamAdd.tag
  LoadBtnPictures cmdVRDStreamEdit,cmdVRDStreamEdit.tag
  LoadBtnPictures cmdVRDStreamDel,cmdVRDStreamDel.tag
  LoadBtnPictures cmdVRDStreamRef,cmdVRDStreamRef.tag
  LoadBtnPictures cmdVRDStreamPrn,cmdVRDStreamPrn.tag
  LoadBtnPictures cmdVRDStreamFnd,cmdVRDStreamFnd.tag
  LoadBtnPictures cmdVRDStreamRun,cmdVRDStreamRun.tag
  LoadBtnPictures cmdVRDStreamAcc,cmdVRDStreamAcc.tag
  LoadBtnPictures cmdVRDStreamCfg,cmdVRDStreamCfg.tag
  item.VRDStream.PrepareGrid gridVRDStream
  LoadGridLayout gridVRDStream
  Set fndVRDStream = Nothing
  On Error Resume Next
  Set fndVRDStream = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDStream.Init gridVRDStream
end sub
private sub OnTabClick()

      gridVRDStream.Top = 40 * Screen.TwipsPerPixelX
      gridVRDStream.Left = 5 * Screen.TwipsPerPixelX
      gridVRDStream.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDStream.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDStream.Top = 40 * Screen.TwipsPerPixelX
      gridVRDStream.Left = 5 * Screen.TwipsPerPixelX
      gridVRDStream.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDStream.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDStream.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDStream = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDContractStage_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDContractStage" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDContractStage"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDContractStage" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDContractStage"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDContractStageAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDContractStageEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDContractStageDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDContractStageRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDContractStagePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStagePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDContractStageCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDContractStageFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDContractStageRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDContractStageRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDContractStageAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDContractStageAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDContractStage" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Стадия договора"/><Properties Name="Name" PropValue="mnuPopupVRDContractStage"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDContractStageAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDContractStageAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDContractStageEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDContractStageEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDContractStageDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDContractStageDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDContractStageOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDContractStageOpen"/></ControlData><ControlData Name="mnuVRDContractStageRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDContractStageRef"/></ControlData><ControlData Name="mnuVRDContractStageS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDContractStageS1"/></ControlData><ControlData Name="mnuVRDContractStageBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDContractStageBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDContractStageCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDContractStageCOPY"/></ControlData><ControlData Name="mnuVRDContractStageCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDContractStageCUT"/></ControlData><ControlData Name="mnuVRDContractStagePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDContractStagePASTE"/></ControlData><ControlData Name="mnuVRDContractStageCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDContractStageCHANGE"/></ControlData><ControlData Name="mnuVRDContractStageCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDContractStageCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDContractStagePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDContractStagePrn"/></ControlData><ControlData Name="mnuVRDContractStageCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDContractStageCfg"/></ControlData><ControlData Name="mnuVRDContractStageFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDContractStageFind"/></ControlData><ControlData Name="mnuVRDContractStageAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDContractStageAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDContractStage" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDContractStage"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDContractStage as object
private menuActionVRDContractStage as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDContractStageCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDContractStage,&quot;gridVRDContractStage&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDContractStagePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDContractStage,&quot;Стадия договора&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDContractStageRef_Click()
  on error resume next
  item.VRDContractStage.Refresh
  gridVRDContractStage.itemCount = item.VRDContractStage.count
  gridVRDContractStage.Refetch
  gridVRDContractStage.Refresh
End Sub
Private Sub cmdVRDContractStageAcc_Click()
On Error Resume Next
If gridVRDContractStage.ItemCount = 0 Then Exit Sub
If gridVRDContractStage.Row &gt; 0 Then
 If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDContractStageEdit_Click()
  on error resume next
If gridVRDContractStage.ItemCount = 0 Then Exit Sub
If gridVRDContractStage.Row &gt; 0 then
 If gridVRDContractStage.RowIndex(gridVRDContractStage.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDContractStage_.Item = u
    again: frmVRDContractStage_.NotFirstTime = False
    frmVRDContractStage_.OnInit
    frmVRDContractStage_.Show vbModal
    If frmVRDContractStage_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDContractStage.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDContractStageDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDContractStageAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDContractStage.Add()

      Set frmVRDContractStage_.Item = u
      again: frmVRDContractStage_.NotFirstTime = False
      frmVRDContractStage_.OnInit
      frmVRDContractStage_.Show vbModal
      If frmVRDContractStage_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDContractStage.ItemCount = Item.VRDContractStage.Count
        gridVRDContractStage.Refresh
        gridVRDContractStage.RefreshGroups
        gridVRDContractStage.Refreshsort
        gridVRDContractStage.MoveToBookmark u.ID &amp; &quot;VRDContractStage&quot;
      Else
        Item.VRDContractStage.Delete u.ID
        Item.VRDContractStage.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDContractStageFnd_Click()
  on error resume next
  fndVRDContractStage.ShowForm
End Sub
Private Sub cmdVRDContractStageRun_Click()
  on error resume next
  gridVRDContractStage_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDContractStage_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDContractStage.LoadRow gridVRDContractStage, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDContractStage_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDContractStage_DblClick()
  cmdVRDContractStageEdit_Click
End Sub
Private Sub gridVRDContractStage_KeyPress(KeyAscii As Integer)
  If gridVRDContractStage.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDContractStage.FindOnPress KeyAscii
End Sub

Private Sub gridVRDContractStage_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDContractStage.Row And LastRow &gt; 0 Then
  gridVRDContractStage.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDContractStage.GetRowData(gridVRDContractStage.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDContractStagePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDContractStage.Add()
    If GetFromBuffer(u) Then
      gridVRDContractStage.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDContractStage_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDContractStageCfg_Click
        End If
    End If
end sub

private sub gridVRDContractStage_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDContractStage
End If
end sub
private sub mnuVRDContractStageAdd_click()
   menuActionVRDContractStage =&quot;ADD&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageEdit_click()
   menuActionVRDContractStage =&quot;EDIT&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageDelete_click()
   menuActionVRDContractStage =&quot;DEL&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageOpen_click()
   menuActionVRDContractStage =&quot;RUN&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageRef_click()
   menuActionVRDContractStage =&quot;REF&quot;
   menuTimerVRDContractStage.enabled = true
end sub
  Private Sub mnuVRDContractStageCOPY_Click()
    On Error Resume Next
    If gridVRDContractStage.ItemCount = 0 Then Exit Sub
    If gridVRDContractStage.Row &gt; 0 Then
     If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDContractStageCUT_Click()
    On Error Resume Next
    If gridVRDContractStage.ItemCount = 0 Then Exit Sub
    If gridVRDContractStage.Row &gt; 0 Then
     If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDContractStage.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDContractStageCHANGE_Click()
  On Error Resume Next
  If gridVRDContractStage.ItemCount = 0 Then Exit Sub
  If gridVRDContractStage.Row &gt; 0 Then
   If gridVRDContractStage.RowIndex(gridVRDContractStage.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDContractStage.RowBookmark(gridVRDContractStage.RowIndex(gridVRDContractStage.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDContractStage.ItemCount = u.parent.Count
      gridVRDContractStage.RefreshRowIndex gridVRDContractStage.RowIndex(gridVRDContractStage.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDContractStageCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDContractStagePrn_click()
   menuActionVRDContractStage =&quot;PRN&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageCfg_click()
   menuActionVRDContractStage =&quot;CFG&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageFind_click()
   menuActionVRDContractStage =&quot;FND&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub mnuVRDContractStageAcc_click()
   menuActionVRDContractStage =&quot;ACC&quot;
   menuTimerVRDContractStage.enabled = true
end sub
private sub menuTimerVRDContractStage_timer()
   menuTimerVRDContractStage.enabled = false
   if menuActionVRDContractStage =&quot;ADD&quot; then cmdVRDContractStageADD_CLick
   if menuActionVRDContractStage =&quot;EDIT&quot; then cmdVRDContractStageEDIT_CLick
   if menuActionVRDContractStage =&quot;DEL&quot; then cmdVRDContractStageDEL_CLick
   if menuActionVRDContractStage =&quot;RUN&quot; then cmdVRDContractStageRUN_CLick
   if menuActionVRDContractStage =&quot;REF&quot; then cmdVRDContractStageREF_CLick
   if menuActionVRDContractStage =&quot;PRN&quot; then cmdVRDContractStagePRN_CLick
   if menuActionVRDContractStage =&quot;CFG&quot; then cmdVRDContractStageCFG_CLick
   if menuActionVRDContractStage =&quot;FND&quot; then cmdVRDContractStageFND_CLick
   if menuActionVRDContractStage =&quot;ACC&quot; then cmdVRDContractStageACC_CLick
   menuActionVRDContractStage =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDContractStageAdd,cmdVRDContractStageAdd.tag
  LoadBtnPictures cmdVRDContractStageEdit,cmdVRDContractStageEdit.tag
  LoadBtnPictures cmdVRDContractStageDel,cmdVRDContractStageDel.tag
  LoadBtnPictures cmdVRDContractStageRef,cmdVRDContractStageRef.tag
  LoadBtnPictures cmdVRDContractStagePrn,cmdVRDContractStagePrn.tag
  LoadBtnPictures cmdVRDContractStageFnd,cmdVRDContractStageFnd.tag
  LoadBtnPictures cmdVRDContractStageRun,cmdVRDContractStageRun.tag
  LoadBtnPictures cmdVRDContractStageAcc,cmdVRDContractStageAcc.tag
  LoadBtnPictures cmdVRDContractStageCfg,cmdVRDContractStageCfg.tag
  item.VRDContractStage.PrepareGrid gridVRDContractStage
  LoadGridLayout gridVRDContractStage
  Set fndVRDContractStage = Nothing
  On Error Resume Next
  Set fndVRDContractStage = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDContractStage.Init gridVRDContractStage
end sub
private sub OnTabClick()

      gridVRDContractStage.Top = 40 * Screen.TwipsPerPixelX
      gridVRDContractStage.Left = 5 * Screen.TwipsPerPixelX
      gridVRDContractStage.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDContractStage.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDContractStage.Top = 40 * Screen.TwipsPerPixelX
      gridVRDContractStage.Left = 5 * Screen.TwipsPerPixelX
      gridVRDContractStage.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDContractStage.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDContractStage.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDContractStage = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDLoyalty_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDLoyalty" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDLoyalty"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDLoyalty" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDLoyalty"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDLoyaltyAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDLoyaltyEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDLoyaltyDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDLoyaltyRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDLoyaltyPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDLoyaltyCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDLoyaltyFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDLoyaltyRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDLoyaltyAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDLoyaltyAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDLoyalty" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Лояльность"/><Properties Name="Name" PropValue="mnuPopupVRDLoyalty"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDLoyaltyAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDLoyaltyEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDLoyaltyEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDLoyaltyDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDLoyaltyOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDLoyaltyOpen"/></ControlData><ControlData Name="mnuVRDLoyaltyRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyRef"/></ControlData><ControlData Name="mnuVRDLoyaltyS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDLoyaltyS1"/></ControlData><ControlData Name="mnuVRDLoyaltyBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDLoyaltyBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDLoyaltyCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCOPY"/></ControlData><ControlData Name="mnuVRDLoyaltyCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCUT"/></ControlData><ControlData Name="mnuVRDLoyaltyPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyPASTE"/></ControlData><ControlData Name="mnuVRDLoyaltyCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCHANGE"/></ControlData><ControlData Name="mnuVRDLoyaltyCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDLoyaltyPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDLoyaltyPrn"/></ControlData><ControlData Name="mnuVRDLoyaltyCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDLoyaltyCfg"/></ControlData><ControlData Name="mnuVRDLoyaltyFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDLoyaltyFind"/></ControlData><ControlData Name="mnuVRDLoyaltyAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDLoyaltyAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDLoyalty" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDLoyalty"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDLoyalty as object
private menuActionVRDLoyalty as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDLoyaltyCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDLoyalty,&quot;gridVRDLoyalty&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDLoyaltyPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDLoyalty,&quot;Лояльность&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDLoyaltyRef_Click()
  on error resume next
  item.VRDLoyalty.Refresh
  gridVRDLoyalty.itemCount = item.VRDLoyalty.count
  gridVRDLoyalty.Refetch
  gridVRDLoyalty.Refresh
End Sub
Private Sub cmdVRDLoyaltyAcc_Click()
On Error Resume Next
If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
If gridVRDLoyalty.Row &gt; 0 Then
 If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDLoyaltyEdit_Click()
  on error resume next
If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
If gridVRDLoyalty.Row &gt; 0 then
 If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDLoyalty_.Item = u
    again: frmVRDLoyalty_.NotFirstTime = False
    frmVRDLoyalty_.OnInit
    frmVRDLoyalty_.Show vbModal
    If frmVRDLoyalty_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDLoyalty.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDLoyaltyDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDLoyaltyAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDLoyalty.Add()

      Set frmVRDLoyalty_.Item = u
      again: frmVRDLoyalty_.NotFirstTime = False
      frmVRDLoyalty_.OnInit
      frmVRDLoyalty_.Show vbModal
      If frmVRDLoyalty_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDLoyalty.ItemCount = Item.VRDLoyalty.Count
        gridVRDLoyalty.Refresh
        gridVRDLoyalty.RefreshGroups
        gridVRDLoyalty.Refreshsort
        gridVRDLoyalty.MoveToBookmark u.ID &amp; &quot;VRDLoyalty&quot;
      Else
        Item.VRDLoyalty.Delete u.ID
        Item.VRDLoyalty.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDLoyaltyFnd_Click()
  on error resume next
  fndVRDLoyalty.ShowForm
End Sub
Private Sub cmdVRDLoyaltyRun_Click()
  on error resume next
  gridVRDLoyalty_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDLoyalty_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDLoyalty.LoadRow gridVRDLoyalty, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDLoyalty_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDLoyalty_DblClick()
  cmdVRDLoyaltyEdit_Click
End Sub
Private Sub gridVRDLoyalty_KeyPress(KeyAscii As Integer)
  If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDLoyalty.FindOnPress KeyAscii
End Sub

Private Sub gridVRDLoyalty_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDLoyalty.Row And LastRow &gt; 0 Then
  gridVRDLoyalty.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDLoyalty.GetRowData(gridVRDLoyalty.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDLoyaltyPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDLoyalty.Add()
    If GetFromBuffer(u) Then
      gridVRDLoyalty.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDLoyalty_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDLoyaltyCfg_Click
        End If
    End If
end sub

private sub gridVRDLoyalty_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDLoyalty
End If
end sub
private sub mnuVRDLoyaltyAdd_click()
   menuActionVRDLoyalty =&quot;ADD&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyEdit_click()
   menuActionVRDLoyalty =&quot;EDIT&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyDelete_click()
   menuActionVRDLoyalty =&quot;DEL&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyOpen_click()
   menuActionVRDLoyalty =&quot;RUN&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyRef_click()
   menuActionVRDLoyalty =&quot;REF&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
  Private Sub mnuVRDLoyaltyCOPY_Click()
    On Error Resume Next
    If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
    If gridVRDLoyalty.Row &gt; 0 Then
     If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDLoyaltyCUT_Click()
    On Error Resume Next
    If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
    If gridVRDLoyalty.Row &gt; 0 Then
     If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDLoyalty.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDLoyaltyCHANGE_Click()
  On Error Resume Next
  If gridVRDLoyalty.ItemCount = 0 Then Exit Sub
  If gridVRDLoyalty.Row &gt; 0 Then
   If gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDLoyalty.RowBookmark(gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDLoyalty.ItemCount = u.parent.Count
      gridVRDLoyalty.RefreshRowIndex gridVRDLoyalty.RowIndex(gridVRDLoyalty.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDLoyaltyCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDLoyaltyPrn_click()
   menuActionVRDLoyalty =&quot;PRN&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyCfg_click()
   menuActionVRDLoyalty =&quot;CFG&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyFind_click()
   menuActionVRDLoyalty =&quot;FND&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub mnuVRDLoyaltyAcc_click()
   menuActionVRDLoyalty =&quot;ACC&quot;
   menuTimerVRDLoyalty.enabled = true
end sub
private sub menuTimerVRDLoyalty_timer()
   menuTimerVRDLoyalty.enabled = false
   if menuActionVRDLoyalty =&quot;ADD&quot; then cmdVRDLoyaltyADD_CLick
   if menuActionVRDLoyalty =&quot;EDIT&quot; then cmdVRDLoyaltyEDIT_CLick
   if menuActionVRDLoyalty =&quot;DEL&quot; then cmdVRDLoyaltyDEL_CLick
   if menuActionVRDLoyalty =&quot;RUN&quot; then cmdVRDLoyaltyRUN_CLick
   if menuActionVRDLoyalty =&quot;REF&quot; then cmdVRDLoyaltyREF_CLick
   if menuActionVRDLoyalty =&quot;PRN&quot; then cmdVRDLoyaltyPRN_CLick
   if menuActionVRDLoyalty =&quot;CFG&quot; then cmdVRDLoyaltyCFG_CLick
   if menuActionVRDLoyalty =&quot;FND&quot; then cmdVRDLoyaltyFND_CLick
   if menuActionVRDLoyalty =&quot;ACC&quot; then cmdVRDLoyaltyACC_CLick
   menuActionVRDLoyalty =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDLoyaltyAdd,cmdVRDLoyaltyAdd.tag
  LoadBtnPictures cmdVRDLoyaltyEdit,cmdVRDLoyaltyEdit.tag
  LoadBtnPictures cmdVRDLoyaltyDel,cmdVRDLoyaltyDel.tag
  LoadBtnPictures cmdVRDLoyaltyRef,cmdVRDLoyaltyRef.tag
  LoadBtnPictures cmdVRDLoyaltyPrn,cmdVRDLoyaltyPrn.tag
  LoadBtnPictures cmdVRDLoyaltyFnd,cmdVRDLoyaltyFnd.tag
  LoadBtnPictures cmdVRDLoyaltyRun,cmdVRDLoyaltyRun.tag
  LoadBtnPictures cmdVRDLoyaltyAcc,cmdVRDLoyaltyAcc.tag
  LoadBtnPictures cmdVRDLoyaltyCfg,cmdVRDLoyaltyCfg.tag
  item.VRDLoyalty.PrepareGrid gridVRDLoyalty
  LoadGridLayout gridVRDLoyalty
  Set fndVRDLoyalty = Nothing
  On Error Resume Next
  Set fndVRDLoyalty = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDLoyalty.Init gridVRDLoyalty
end sub
private sub OnTabClick()

      gridVRDLoyalty.Top = 40 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Left = 5 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDLoyalty.Top = 40 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Left = 5 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDLoyalty.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDLoyalty.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDLoyalty = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDDocType_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDDocType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDDocType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDDocType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDDocType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDDocTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDDocTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDDocTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDDocTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDDocTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDDocTypeCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDDocTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDDocTypeRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDDocTypeRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDDocTypeAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDDocTypeAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDDocType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип документа"/><Properties Name="Name" PropValue="mnuPopupVRDDocType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDDocTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDDocTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDDocTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDDocTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDDocTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDDocTypeDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDDocTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDDocTypeOpen"/></ControlData><ControlData Name="mnuVRDDocTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDDocTypeRef"/></ControlData><ControlData Name="mnuVRDDocTypeS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDDocTypeS1"/></ControlData><ControlData Name="mnuVRDDocTypeBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDDocTypeBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDDocTypeCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDDocTypeCOPY"/></ControlData><ControlData Name="mnuVRDDocTypeCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDDocTypeCUT"/></ControlData><ControlData Name="mnuVRDDocTypePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDDocTypePASTE"/></ControlData><ControlData Name="mnuVRDDocTypeCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDDocTypeCHANGE"/></ControlData><ControlData Name="mnuVRDDocTypeCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDDocTypeCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDDocTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDDocTypePrn"/></ControlData><ControlData Name="mnuVRDDocTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDDocTypeCfg"/></ControlData><ControlData Name="mnuVRDDocTypeFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDDocTypeFind"/></ControlData><ControlData Name="mnuVRDDocTypeAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDDocTypeAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDDocType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDDocType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDDocType as object
private menuActionVRDDocType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDDocTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDDocType,&quot;gridVRDDocType&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDDocTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDDocType,&quot;Тип документа&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDDocTypeRef_Click()
  on error resume next
  item.VRDDocType.Refresh
  gridVRDDocType.itemCount = item.VRDDocType.count
  gridVRDDocType.Refetch
  gridVRDDocType.Refresh
End Sub
Private Sub cmdVRDDocTypeAcc_Click()
On Error Resume Next
If gridVRDDocType.ItemCount = 0 Then Exit Sub
If gridVRDDocType.Row &gt; 0 Then
 If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDDocTypeEdit_Click()
  on error resume next
If gridVRDDocType.ItemCount = 0 Then Exit Sub
If gridVRDDocType.Row &gt; 0 then
 If gridVRDDocType.RowIndex(gridVRDDocType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDDocType_.Item = u
    again: frmVRDDocType_.NotFirstTime = False
    frmVRDDocType_.OnInit
    frmVRDDocType_.Show vbModal
    If frmVRDDocType_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDDocType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDDocTypeDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDDocTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDDocType.Add()

      Set frmVRDDocType_.Item = u
      again: frmVRDDocType_.NotFirstTime = False
      frmVRDDocType_.OnInit
      frmVRDDocType_.Show vbModal
      If frmVRDDocType_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDDocType.ItemCount = Item.VRDDocType.Count
        gridVRDDocType.Refresh
        gridVRDDocType.RefreshGroups
        gridVRDDocType.Refreshsort
        gridVRDDocType.MoveToBookmark u.ID &amp; &quot;VRDDocType&quot;
      Else
        Item.VRDDocType.Delete u.ID
        Item.VRDDocType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDDocTypeFnd_Click()
  on error resume next
  fndVRDDocType.ShowForm
End Sub
Private Sub cmdVRDDocTypeRun_Click()
  on error resume next
  gridVRDDocType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDDocType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDDocType.LoadRow gridVRDDocType, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDDocType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDDocType_DblClick()
  cmdVRDDocTypeEdit_Click
End Sub
Private Sub gridVRDDocType_KeyPress(KeyAscii As Integer)
  If gridVRDDocType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDDocType.FindOnPress KeyAscii
End Sub

Private Sub gridVRDDocType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDDocType.Row And LastRow &gt; 0 Then
  gridVRDDocType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDDocType.GetRowData(gridVRDDocType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDDocTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDDocType.Add()
    If GetFromBuffer(u) Then
      gridVRDDocType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDDocType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDDocTypeCfg_Click
        End If
    End If
end sub

private sub gridVRDDocType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDDocType
End If
end sub
private sub mnuVRDDocTypeAdd_click()
   menuActionVRDDocType =&quot;ADD&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeEdit_click()
   menuActionVRDDocType =&quot;EDIT&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeDelete_click()
   menuActionVRDDocType =&quot;DEL&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeOpen_click()
   menuActionVRDDocType =&quot;RUN&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeRef_click()
   menuActionVRDDocType =&quot;REF&quot;
   menuTimerVRDDocType.enabled = true
end sub
  Private Sub mnuVRDDocTypeCOPY_Click()
    On Error Resume Next
    If gridVRDDocType.ItemCount = 0 Then Exit Sub
    If gridVRDDocType.Row &gt; 0 Then
     If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDDocTypeCUT_Click()
    On Error Resume Next
    If gridVRDDocType.ItemCount = 0 Then Exit Sub
    If gridVRDDocType.Row &gt; 0 Then
     If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDDocType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDDocTypeCHANGE_Click()
  On Error Resume Next
  If gridVRDDocType.ItemCount = 0 Then Exit Sub
  If gridVRDDocType.Row &gt; 0 Then
   If gridVRDDocType.RowIndex(gridVRDDocType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDDocType.RowBookmark(gridVRDDocType.RowIndex(gridVRDDocType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDDocType.ItemCount = u.parent.Count
      gridVRDDocType.RefreshRowIndex gridVRDDocType.RowIndex(gridVRDDocType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDDocTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDDocTypePrn_click()
   menuActionVRDDocType =&quot;PRN&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeCfg_click()
   menuActionVRDDocType =&quot;CFG&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeFind_click()
   menuActionVRDDocType =&quot;FND&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub mnuVRDDocTypeAcc_click()
   menuActionVRDDocType =&quot;ACC&quot;
   menuTimerVRDDocType.enabled = true
end sub
private sub menuTimerVRDDocType_timer()
   menuTimerVRDDocType.enabled = false
   if menuActionVRDDocType =&quot;ADD&quot; then cmdVRDDocTypeADD_CLick
   if menuActionVRDDocType =&quot;EDIT&quot; then cmdVRDDocTypeEDIT_CLick
   if menuActionVRDDocType =&quot;DEL&quot; then cmdVRDDocTypeDEL_CLick
   if menuActionVRDDocType =&quot;RUN&quot; then cmdVRDDocTypeRUN_CLick
   if menuActionVRDDocType =&quot;REF&quot; then cmdVRDDocTypeREF_CLick
   if menuActionVRDDocType =&quot;PRN&quot; then cmdVRDDocTypePRN_CLick
   if menuActionVRDDocType =&quot;CFG&quot; then cmdVRDDocTypeCFG_CLick
   if menuActionVRDDocType =&quot;FND&quot; then cmdVRDDocTypeFND_CLick
   if menuActionVRDDocType =&quot;ACC&quot; then cmdVRDDocTypeACC_CLick
   menuActionVRDDocType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDDocTypeAdd,cmdVRDDocTypeAdd.tag
  LoadBtnPictures cmdVRDDocTypeEdit,cmdVRDDocTypeEdit.tag
  LoadBtnPictures cmdVRDDocTypeDel,cmdVRDDocTypeDel.tag
  LoadBtnPictures cmdVRDDocTypeRef,cmdVRDDocTypeRef.tag
  LoadBtnPictures cmdVRDDocTypePrn,cmdVRDDocTypePrn.tag
  LoadBtnPictures cmdVRDDocTypeFnd,cmdVRDDocTypeFnd.tag
  LoadBtnPictures cmdVRDDocTypeRun,cmdVRDDocTypeRun.tag
  LoadBtnPictures cmdVRDDocTypeAcc,cmdVRDDocTypeAcc.tag
  LoadBtnPictures cmdVRDDocTypeCfg,cmdVRDDocTypeCfg.tag
  item.VRDDocType.PrepareGrid gridVRDDocType
  LoadGridLayout gridVRDDocType
  Set fndVRDDocType = Nothing
  On Error Resume Next
  Set fndVRDDocType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDDocType.Init gridVRDDocType
end sub
private sub OnTabClick()

      gridVRDDocType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDDocType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDDocType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDDocType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDDocType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDDocType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDDocType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDDocType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDDocType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDDocType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDPrjType_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDPrjType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDPrjType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDPrjType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDPrjType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDPrjTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDPrjTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDPrjTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDPrjTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDPrjTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDPrjTypeCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDPrjTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDPrjTypeRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDPrjTypeAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDPrjTypeAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDPrjType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Типы проектов"/><Properties Name="Name" PropValue="mnuPopupVRDPrjType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDPrjTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDPrjTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDPrjTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDPrjTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDPrjTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDPrjTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDPrjTypeOpen"/></ControlData><ControlData Name="mnuVRDPrjTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeRef"/></ControlData><ControlData Name="mnuVRDPrjTypeS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDPrjTypeS1"/></ControlData><ControlData Name="mnuVRDPrjTypeBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDPrjTypeBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDPrjTypeCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCOPY"/></ControlData><ControlData Name="mnuVRDPrjTypeCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCUT"/></ControlData><ControlData Name="mnuVRDPrjTypePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDPrjTypePASTE"/></ControlData><ControlData Name="mnuVRDPrjTypeCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCHANGE"/></ControlData><ControlData Name="mnuVRDPrjTypeCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDPrjTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDPrjTypePrn"/></ControlData><ControlData Name="mnuVRDPrjTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDPrjTypeCfg"/></ControlData><ControlData Name="mnuVRDPrjTypeFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDPrjTypeFind"/></ControlData><ControlData Name="mnuVRDPrjTypeAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDPrjTypeAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDPrjType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDPrjType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDPrjType as object
private menuActionVRDPrjType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDPrjTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDPrjType,&quot;gridVRDPrjType&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDPrjTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDPrjType,&quot;Типы проектов&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDPrjTypeRef_Click()
  on error resume next
  item.VRDPrjType.Refresh
  gridVRDPrjType.itemCount = item.VRDPrjType.count
  gridVRDPrjType.Refetch
  gridVRDPrjType.Refresh
End Sub
Private Sub cmdVRDPrjTypeAcc_Click()
On Error Resume Next
If gridVRDPrjType.ItemCount = 0 Then Exit Sub
If gridVRDPrjType.Row &gt; 0 Then
 If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDPrjTypeEdit_Click()
  on error resume next
If gridVRDPrjType.ItemCount = 0 Then Exit Sub
If gridVRDPrjType.Row &gt; 0 then
 If gridVRDPrjType.RowIndex(gridVRDPrjType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDPrjType_.Item = u
    again: frmVRDPrjType_.NotFirstTime = False
    frmVRDPrjType_.OnInit
    frmVRDPrjType_.Show vbModal
    If frmVRDPrjType_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDPrjType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDPrjTypeDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDPrjTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDPrjType.Add()

      Set frmVRDPrjType_.Item = u
      again: frmVRDPrjType_.NotFirstTime = False
      frmVRDPrjType_.OnInit
      frmVRDPrjType_.Show vbModal
      If frmVRDPrjType_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDPrjType.ItemCount = Item.VRDPrjType.Count
        gridVRDPrjType.Refresh
        gridVRDPrjType.RefreshGroups
        gridVRDPrjType.Refreshsort
        gridVRDPrjType.MoveToBookmark u.ID &amp; &quot;VRDPrjType&quot;
      Else
        Item.VRDPrjType.Delete u.ID
        Item.VRDPrjType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDPrjTypeFnd_Click()
  on error resume next
  fndVRDPrjType.ShowForm
End Sub
Private Sub cmdVRDPrjTypeRun_Click()
  on error resume next
  gridVRDPrjType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDPrjType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDPrjType.LoadRow gridVRDPrjType, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDPrjType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDPrjType_DblClick()
  cmdVRDPrjTypeEdit_Click
End Sub
Private Sub gridVRDPrjType_KeyPress(KeyAscii As Integer)
  If gridVRDPrjType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDPrjType.FindOnPress KeyAscii
End Sub

Private Sub gridVRDPrjType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDPrjType.Row And LastRow &gt; 0 Then
  gridVRDPrjType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDPrjType.GetRowData(gridVRDPrjType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDPrjTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDPrjType.Add()
    If GetFromBuffer(u) Then
      gridVRDPrjType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDPrjType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDPrjTypeCfg_Click
        End If
    End If
end sub

private sub gridVRDPrjType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDPrjType
End If
end sub
private sub mnuVRDPrjTypeAdd_click()
   menuActionVRDPrjType =&quot;ADD&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeEdit_click()
   menuActionVRDPrjType =&quot;EDIT&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeDelete_click()
   menuActionVRDPrjType =&quot;DEL&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeOpen_click()
   menuActionVRDPrjType =&quot;RUN&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeRef_click()
   menuActionVRDPrjType =&quot;REF&quot;
   menuTimerVRDPrjType.enabled = true
end sub
  Private Sub mnuVRDPrjTypeCOPY_Click()
    On Error Resume Next
    If gridVRDPrjType.ItemCount = 0 Then Exit Sub
    If gridVRDPrjType.Row &gt; 0 Then
     If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDPrjTypeCUT_Click()
    On Error Resume Next
    If gridVRDPrjType.ItemCount = 0 Then Exit Sub
    If gridVRDPrjType.Row &gt; 0 Then
     If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDPrjType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDPrjTypeCHANGE_Click()
  On Error Resume Next
  If gridVRDPrjType.ItemCount = 0 Then Exit Sub
  If gridVRDPrjType.Row &gt; 0 Then
   If gridVRDPrjType.RowIndex(gridVRDPrjType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDPrjType.RowBookmark(gridVRDPrjType.RowIndex(gridVRDPrjType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDPrjType.ItemCount = u.parent.Count
      gridVRDPrjType.RefreshRowIndex gridVRDPrjType.RowIndex(gridVRDPrjType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDPrjTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDPrjTypePrn_click()
   menuActionVRDPrjType =&quot;PRN&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeCfg_click()
   menuActionVRDPrjType =&quot;CFG&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeFind_click()
   menuActionVRDPrjType =&quot;FND&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub mnuVRDPrjTypeAcc_click()
   menuActionVRDPrjType =&quot;ACC&quot;
   menuTimerVRDPrjType.enabled = true
end sub
private sub menuTimerVRDPrjType_timer()
   menuTimerVRDPrjType.enabled = false
   if menuActionVRDPrjType =&quot;ADD&quot; then cmdVRDPrjTypeADD_CLick
   if menuActionVRDPrjType =&quot;EDIT&quot; then cmdVRDPrjTypeEDIT_CLick
   if menuActionVRDPrjType =&quot;DEL&quot; then cmdVRDPrjTypeDEL_CLick
   if menuActionVRDPrjType =&quot;RUN&quot; then cmdVRDPrjTypeRUN_CLick
   if menuActionVRDPrjType =&quot;REF&quot; then cmdVRDPrjTypeREF_CLick
   if menuActionVRDPrjType =&quot;PRN&quot; then cmdVRDPrjTypePRN_CLick
   if menuActionVRDPrjType =&quot;CFG&quot; then cmdVRDPrjTypeCFG_CLick
   if menuActionVRDPrjType =&quot;FND&quot; then cmdVRDPrjTypeFND_CLick
   if menuActionVRDPrjType =&quot;ACC&quot; then cmdVRDPrjTypeACC_CLick
   menuActionVRDPrjType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDPrjTypeAdd,cmdVRDPrjTypeAdd.tag
  LoadBtnPictures cmdVRDPrjTypeEdit,cmdVRDPrjTypeEdit.tag
  LoadBtnPictures cmdVRDPrjTypeDel,cmdVRDPrjTypeDel.tag
  LoadBtnPictures cmdVRDPrjTypeRef,cmdVRDPrjTypeRef.tag
  LoadBtnPictures cmdVRDPrjTypePrn,cmdVRDPrjTypePrn.tag
  LoadBtnPictures cmdVRDPrjTypeFnd,cmdVRDPrjTypeFnd.tag
  LoadBtnPictures cmdVRDPrjTypeRun,cmdVRDPrjTypeRun.tag
  LoadBtnPictures cmdVRDPrjTypeAcc,cmdVRDPrjTypeAcc.tag
  LoadBtnPictures cmdVRDPrjTypeCfg,cmdVRDPrjTypeCfg.tag
  item.VRDPrjType.PrepareGrid gridVRDPrjType
  LoadGridLayout gridVRDPrjType
  Set fndVRDPrjType = Nothing
  On Error Resume Next
  Set fndVRDPrjType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDPrjType.Init gridVRDPrjType
end sub
private sub OnTabClick()

      gridVRDPrjType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDPrjType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDPrjType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDPrjType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDPrjType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDPrjType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDPrjType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDPrjType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDPrjType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDPrjType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRDRreportType_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRDRreportType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRDRreportType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRDRreportType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRDRreportType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRDRreportTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDRreportTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRDRreportTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdVRDRreportTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRDRreportTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRDRreportTypeCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRDRreportTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRDRreportTypeRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRDRreportTypeAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRDRreportTypeAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRDRreportType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип отчета"/><Properties Name="Name" PropValue="mnuPopupVRDRreportType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRDRreportTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRDRreportTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDRreportTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRDRreportTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRDRreportTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuVRDRreportTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRDRreportTypeOpen"/></ControlData><ControlData Name="mnuVRDRreportTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeRef"/></ControlData><ControlData Name="mnuVRDRreportTypeS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRDRreportTypeS1"/></ControlData><ControlData Name="mnuVRDRreportTypeBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRDRreportTypeBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRDRreportTypeCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCOPY"/></ControlData><ControlData Name="mnuVRDRreportTypeCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCUT"/></ControlData><ControlData Name="mnuVRDRreportTypePASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRDRreportTypePASTE"/></ControlData><ControlData Name="mnuVRDRreportTypeCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCHANGE"/></ControlData><ControlData Name="mnuVRDRreportTypeCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRDRreportTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRDRreportTypePrn"/></ControlData><ControlData Name="mnuVRDRreportTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRDRreportTypeCfg"/></ControlData><ControlData Name="mnuVRDRreportTypeFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRDRreportTypeFind"/></ControlData><ControlData Name="mnuVRDRreportTypeAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRDRreportTypeAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRDRreportType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRDRreportType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRDRreportType as object
private menuActionVRDRreportType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRDRreportTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRDRreportType,&quot;gridVRDRreportType&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDRreportTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRDRreportType,&quot;Тип отчета&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRDRreportTypeRef_Click()
  on error resume next
  item.VRDRreportType.Refresh
  gridVRDRreportType.itemCount = item.VRDRreportType.count
  gridVRDRreportType.Refetch
  gridVRDRreportType.Refresh
End Sub
Private Sub cmdVRDRreportTypeAcc_Click()
On Error Resume Next
If gridVRDRreportType.ItemCount = 0 Then Exit Sub
If gridVRDRreportType.Row &gt; 0 Then
 If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRDRreportTypeEdit_Click()
  on error resume next
If gridVRDRreportType.ItemCount = 0 Then Exit Sub
If gridVRDRreportType.Row &gt; 0 then
 If gridVRDRreportType.RowIndex(gridVRDRreportType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRDRreportType_.Item = u
    again: frmVRDRreportType_.NotFirstTime = False
    frmVRDRreportType_.OnInit
    frmVRDRreportType_.Show vbModal
    If frmVRDRreportType_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRDRreportType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRDRreportTypeDel_Click()
  on error resume next
End Sub
Private Sub cmdVRDRreportTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRDRreportType.Add()

      Set frmVRDRreportType_.Item = u
      again: frmVRDRreportType_.NotFirstTime = False
      frmVRDRreportType_.OnInit
      frmVRDRreportType_.Show vbModal
      If frmVRDRreportType_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRDRreportType.ItemCount = Item.VRDRreportType.Count
        gridVRDRreportType.Refresh
        gridVRDRreportType.RefreshGroups
        gridVRDRreportType.Refreshsort
        gridVRDRreportType.MoveToBookmark u.ID &amp; &quot;VRDRreportType&quot;
      Else
        Item.VRDRreportType.Delete u.ID
        Item.VRDRreportType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRDRreportTypeFnd_Click()
  on error resume next
  fndVRDRreportType.ShowForm
End Sub
Private Sub cmdVRDRreportTypeRun_Click()
  on error resume next
  gridVRDRreportType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRDRreportType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRDRreportType.LoadRow gridVRDRreportType, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRDRreportType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridVRDRreportType_DblClick()
  cmdVRDRreportTypeEdit_Click
End Sub
Private Sub gridVRDRreportType_KeyPress(KeyAscii As Integer)
  If gridVRDRreportType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRDRreportType.FindOnPress KeyAscii
End Sub

Private Sub gridVRDRreportType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRDRreportType.Row And LastRow &gt; 0 Then
  gridVRDRreportType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRDRreportType.GetRowData(gridVRDRreportType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRDRreportTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRDRreportType.Add()
    If GetFromBuffer(u) Then
      gridVRDRreportType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRDRreportType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRDRreportTypeCfg_Click
        End If
    End If
end sub

private sub gridVRDRreportType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRDRreportType
End If
end sub
private sub mnuVRDRreportTypeAdd_click()
   menuActionVRDRreportType =&quot;ADD&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeEdit_click()
   menuActionVRDRreportType =&quot;EDIT&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeDelete_click()
   menuActionVRDRreportType =&quot;DEL&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeOpen_click()
   menuActionVRDRreportType =&quot;RUN&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeRef_click()
   menuActionVRDRreportType =&quot;REF&quot;
   menuTimerVRDRreportType.enabled = true
end sub
  Private Sub mnuVRDRreportTypeCOPY_Click()
    On Error Resume Next
    If gridVRDRreportType.ItemCount = 0 Then Exit Sub
    If gridVRDRreportType.Row &gt; 0 Then
     If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRDRreportTypeCUT_Click()
    On Error Resume Next
    If gridVRDRreportType.ItemCount = 0 Then Exit Sub
    If gridVRDRreportType.Row &gt; 0 Then
     If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRDRreportType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRDRreportTypeCHANGE_Click()
  On Error Resume Next
  If gridVRDRreportType.ItemCount = 0 Then Exit Sub
  If gridVRDRreportType.Row &gt; 0 Then
   If gridVRDRreportType.RowIndex(gridVRDRreportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRDRreportType.RowBookmark(gridVRDRreportType.RowIndex(gridVRDRreportType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRDRreportType.ItemCount = u.parent.Count
      gridVRDRreportType.RefreshRowIndex gridVRDRreportType.RowIndex(gridVRDRreportType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRDRreportTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRDRreportTypePrn_click()
   menuActionVRDRreportType =&quot;PRN&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeCfg_click()
   menuActionVRDRreportType =&quot;CFG&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeFind_click()
   menuActionVRDRreportType =&quot;FND&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub mnuVRDRreportTypeAcc_click()
   menuActionVRDRreportType =&quot;ACC&quot;
   menuTimerVRDRreportType.enabled = true
end sub
private sub menuTimerVRDRreportType_timer()
   menuTimerVRDRreportType.enabled = false
   if menuActionVRDRreportType =&quot;ADD&quot; then cmdVRDRreportTypeADD_CLick
   if menuActionVRDRreportType =&quot;EDIT&quot; then cmdVRDRreportTypeEDIT_CLick
   if menuActionVRDRreportType =&quot;DEL&quot; then cmdVRDRreportTypeDEL_CLick
   if menuActionVRDRreportType =&quot;RUN&quot; then cmdVRDRreportTypeRUN_CLick
   if menuActionVRDRreportType =&quot;REF&quot; then cmdVRDRreportTypeREF_CLick
   if menuActionVRDRreportType =&quot;PRN&quot; then cmdVRDRreportTypePRN_CLick
   if menuActionVRDRreportType =&quot;CFG&quot; then cmdVRDRreportTypeCFG_CLick
   if menuActionVRDRreportType =&quot;FND&quot; then cmdVRDRreportTypeFND_CLick
   if menuActionVRDRreportType =&quot;ACC&quot; then cmdVRDRreportTypeACC_CLick
   menuActionVRDRreportType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRDRreportTypeAdd,cmdVRDRreportTypeAdd.tag
  LoadBtnPictures cmdVRDRreportTypeEdit,cmdVRDRreportTypeEdit.tag
  LoadBtnPictures cmdVRDRreportTypeDel,cmdVRDRreportTypeDel.tag
  LoadBtnPictures cmdVRDRreportTypeRef,cmdVRDRreportTypeRef.tag
  LoadBtnPictures cmdVRDRreportTypePrn,cmdVRDRreportTypePrn.tag
  LoadBtnPictures cmdVRDRreportTypeFnd,cmdVRDRreportTypeFnd.tag
  LoadBtnPictures cmdVRDRreportTypeRun,cmdVRDRreportTypeRun.tag
  LoadBtnPictures cmdVRDRreportTypeAcc,cmdVRDRreportTypeAcc.tag
  LoadBtnPictures cmdVRDRreportTypeCfg,cmdVRDRreportTypeCfg.tag
  item.VRDRreportType.PrepareGrid gridVRDRreportType
  LoadGridLayout gridVRDRreportType
  Set fndVRDRreportType = Nothing
  On Error Resume Next
  Set fndVRDRreportType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRDRreportType.Init gridVRDRreportType
end sub
private sub OnTabClick()

      gridVRDRreportType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDRreportType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDRreportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDRreportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRDRreportType.Top = 40 * Screen.TwipsPerPixelX
      gridVRDRreportType.Left = 5 * Screen.TwipsPerPixelX
      gridVRDRreportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRDRreportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRDRreportType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRDRreportType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRD_CompInfo_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRD_CompInfo" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRD_CompInfo"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRD_CompInfo" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRD_CompInfo"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRD_CompInfoAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRD_CompInfoEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRD_CompInfoDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRD_CompInfoRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRD_CompInfoPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRD_CompInfoCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRD_CompInfoFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRD_CompInfoRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRD_CompInfoAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRD_CompInfoAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRD_CompInfo" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Источник информации о компании"/><Properties Name="Name" PropValue="mnuPopupVRD_CompInfo"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRD_CompInfoAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRD_CompInfoEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRD_CompInfoEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRD_CompInfoDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRD_CompInfoOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRD_CompInfoOpen"/></ControlData><ControlData Name="mnuVRD_CompInfoRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoRef"/></ControlData><ControlData Name="mnuVRD_CompInfoS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRD_CompInfoS1"/></ControlData><ControlData Name="mnuVRD_CompInfoBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRD_CompInfoBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRD_CompInfoCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCOPY"/></ControlData><ControlData Name="mnuVRD_CompInfoCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCUT"/></ControlData><ControlData Name="mnuVRD_CompInfoPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoPASTE"/></ControlData><ControlData Name="mnuVRD_CompInfoCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCHANGE"/></ControlData><ControlData Name="mnuVRD_CompInfoCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRD_CompInfoPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRD_CompInfoPrn"/></ControlData><ControlData Name="mnuVRD_CompInfoCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRD_CompInfoCfg"/></ControlData><ControlData Name="mnuVRD_CompInfoFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRD_CompInfoFind"/></ControlData><ControlData Name="mnuVRD_CompInfoAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRD_CompInfoAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRD_CompInfo" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRD_CompInfo"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRD_CompInfo as object
private menuActionVRD_CompInfo as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRD_CompInfoCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRD_CompInfo,&quot;gridVRD_CompInfo&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRD_CompInfoPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRD_CompInfo,&quot;Источник информации о компании&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRD_CompInfoRef_Click()
  on error resume next
  item.VRD_CompInfo.Refresh
  gridVRD_CompInfo.itemCount = item.VRD_CompInfo.count
  gridVRD_CompInfo.Refetch
  gridVRD_CompInfo.Refresh
End Sub
Private Sub cmdVRD_CompInfoAcc_Click()
On Error Resume Next
If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
If gridVRD_CompInfo.Row &gt; 0 Then
 If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRD_CompInfoEdit_Click()
  on error resume next
If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
If gridVRD_CompInfo.Row &gt; 0 then
 If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRD_CompInfo_.Item = u
    again: frmVRD_CompInfo_.NotFirstTime = False
    frmVRD_CompInfo_.OnInit
    frmVRD_CompInfo_.Show vbModal
    If frmVRD_CompInfo_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRD_CompInfo.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRD_CompInfoDel_Click()
  on error resume next
  gridVRD_CompInfo.Delete
End Sub
Private Sub cmdVRD_CompInfoAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRD_CompInfo.Add()

      Set frmVRD_CompInfo_.Item = u
      again: frmVRD_CompInfo_.NotFirstTime = False
      frmVRD_CompInfo_.OnInit
      frmVRD_CompInfo_.Show vbModal
      If frmVRD_CompInfo_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRD_CompInfo.ItemCount = Item.VRD_CompInfo.Count
        gridVRD_CompInfo.Refresh
        gridVRD_CompInfo.RefreshGroups
        gridVRD_CompInfo.Refreshsort
        gridVRD_CompInfo.MoveToBookmark u.ID &amp; &quot;VRD_CompInfo&quot;
      Else
        Item.VRD_CompInfo.Delete u.ID
        Item.VRD_CompInfo.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRD_CompInfoFnd_Click()
  on error resume next
  fndVRD_CompInfo.ShowForm
End Sub
Private Sub cmdVRD_CompInfoRun_Click()
  on error resume next
  gridVRD_CompInfo_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRD_CompInfo_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRD_CompInfo.LoadRow gridVRD_CompInfo, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRD_CompInfo_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRD_CompInfo&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRD_CompInfo_DblClick()
  cmdVRD_CompInfoEdit_Click
End Sub
Private Sub gridVRD_CompInfo_KeyPress(KeyAscii As Integer)
  If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRD_CompInfo.FindOnPress KeyAscii
End Sub

Private Sub gridVRD_CompInfo_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRD_CompInfo.Row And LastRow &gt; 0 Then
  gridVRD_CompInfo.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRD_CompInfo.GetRowData(gridVRD_CompInfo.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRD_CompInfoPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRD_CompInfo.Add()
    If GetFromBuffer(u) Then
      gridVRD_CompInfo.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRD_CompInfo_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRD_CompInfoCfg_Click
        End If
    End If
end sub

private sub gridVRD_CompInfo_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRD_CompInfo
End If
end sub
private sub mnuVRD_CompInfoAdd_click()
   menuActionVRD_CompInfo =&quot;ADD&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoEdit_click()
   menuActionVRD_CompInfo =&quot;EDIT&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoDelete_click()
   menuActionVRD_CompInfo =&quot;DEL&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoOpen_click()
   menuActionVRD_CompInfo =&quot;RUN&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoRef_click()
   menuActionVRD_CompInfo =&quot;REF&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
  Private Sub mnuVRD_CompInfoCOPY_Click()
    On Error Resume Next
    If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
    If gridVRD_CompInfo.Row &gt; 0 Then
     If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRD_CompInfoCUT_Click()
    On Error Resume Next
    If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
    If gridVRD_CompInfo.Row &gt; 0 Then
     If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRD_CompInfo.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRD_CompInfoCHANGE_Click()
  On Error Resume Next
  If gridVRD_CompInfo.ItemCount = 0 Then Exit Sub
  If gridVRD_CompInfo.Row &gt; 0 Then
   If gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRD_CompInfo.RowBookmark(gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRD_CompInfo.ItemCount = u.parent.Count
      gridVRD_CompInfo.RefreshRowIndex gridVRD_CompInfo.RowIndex(gridVRD_CompInfo.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRD_CompInfoCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRD_CompInfoPrn_click()
   menuActionVRD_CompInfo =&quot;PRN&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoCfg_click()
   menuActionVRD_CompInfo =&quot;CFG&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoFind_click()
   menuActionVRD_CompInfo =&quot;FND&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub mnuVRD_CompInfoAcc_click()
   menuActionVRD_CompInfo =&quot;ACC&quot;
   menuTimerVRD_CompInfo.enabled = true
end sub
private sub menuTimerVRD_CompInfo_timer()
   menuTimerVRD_CompInfo.enabled = false
   if menuActionVRD_CompInfo =&quot;ADD&quot; then cmdVRD_CompInfoADD_CLick
   if menuActionVRD_CompInfo =&quot;EDIT&quot; then cmdVRD_CompInfoEDIT_CLick
   if menuActionVRD_CompInfo =&quot;DEL&quot; then cmdVRD_CompInfoDEL_CLick
   if menuActionVRD_CompInfo =&quot;RUN&quot; then cmdVRD_CompInfoRUN_CLick
   if menuActionVRD_CompInfo =&quot;REF&quot; then cmdVRD_CompInfoREF_CLick
   if menuActionVRD_CompInfo =&quot;PRN&quot; then cmdVRD_CompInfoPRN_CLick
   if menuActionVRD_CompInfo =&quot;CFG&quot; then cmdVRD_CompInfoCFG_CLick
   if menuActionVRD_CompInfo =&quot;FND&quot; then cmdVRD_CompInfoFND_CLick
   if menuActionVRD_CompInfo =&quot;ACC&quot; then cmdVRD_CompInfoACC_CLick
   menuActionVRD_CompInfo =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRD_CompInfoAdd,cmdVRD_CompInfoAdd.tag
  LoadBtnPictures cmdVRD_CompInfoEdit,cmdVRD_CompInfoEdit.tag
  LoadBtnPictures cmdVRD_CompInfoDel,cmdVRD_CompInfoDel.tag
  LoadBtnPictures cmdVRD_CompInfoRef,cmdVRD_CompInfoRef.tag
  LoadBtnPictures cmdVRD_CompInfoPrn,cmdVRD_CompInfoPrn.tag
  LoadBtnPictures cmdVRD_CompInfoFnd,cmdVRD_CompInfoFnd.tag
  LoadBtnPictures cmdVRD_CompInfoRun,cmdVRD_CompInfoRun.tag
  LoadBtnPictures cmdVRD_CompInfoAcc,cmdVRD_CompInfoAcc.tag
  LoadBtnPictures cmdVRD_CompInfoCfg,cmdVRD_CompInfoCfg.tag
  item.VRD_CompInfo.PrepareGrid gridVRD_CompInfo
  LoadGridLayout gridVRD_CompInfo
  Set fndVRD_CompInfo = Nothing
  On Error Resume Next
  Set fndVRD_CompInfo = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRD_CompInfo.Init gridVRD_CompInfo
end sub
private sub OnTabClick()

      gridVRD_CompInfo.Top = 40 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Left = 5 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRD_CompInfo.Top = 40 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Left = 5 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRD_CompInfo.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRD_CompInfo.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRD_CompInfo = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDMarket" ControlIndex="0" PROGID="VRD2GUI.vpnVRDMarket_"><Properties Name="Name" PropValue="pnlVRDMarket"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDInterest" ControlIndex="0" PROGID="VRD2GUI.vpnVRDInterest_"><Properties Name="Name" PropValue="pnlVRDInterest"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDStream" ControlIndex="0" PROGID="VRD2GUI.vpnVRDStream_"><Properties Name="Name" PropValue="pnlVRDStream"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDContractStage" ControlIndex="0" PROGID="VRD2GUI.vpnVRDContractStage_"><Properties Name="Name" PropValue="pnlVRDContractStage"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDLoyalty" ControlIndex="0" PROGID="VRD2GUI.vpnVRDLoyalty_"><Properties Name="Name" PropValue="pnlVRDLoyalty"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDDocType" ControlIndex="0" PROGID="VRD2GUI.vpnVRDDocType_"><Properties Name="Name" PropValue="pnlVRDDocType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDPrjType" ControlIndex="0" PROGID="VRD2GUI.vpnVRDPrjType_"><Properties Name="Name" PropValue="pnlVRDPrjType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRDRreportType" ControlIndex="0" PROGID="VRD2GUI.vpnVRDRreportType_"><Properties Name="Name" PropValue="pnlVRDRreportType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRD_CompInfo" ControlIndex="0" PROGID="VRD2GUI.vpnVRD_CompInfo_"><Properties Name="Name" PropValue="pnlVRD_CompInfo"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: работа с клиентами"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRDMarket.IsOK
if IsItOk then IsItOk = pnlVRDInterest.IsOK
if IsItOk then IsItOk = pnlVRDStream.IsOK
if IsItOk then IsItOk = pnlVRDContractStage.IsOK
if IsItOk then IsItOk = pnlVRDLoyalty.IsOK
if IsItOk then IsItOk = pnlVRDDocType.IsOK
if IsItOk then IsItOk = pnlVRDPrjType.IsOK
if IsItOk then IsItOk = pnlVRDRreportType.IsOK
if IsItOk then IsItOk = pnlVRD_CompInfo.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRD_CompInfo.Visible = False
  pnlVRDRreportType.Visible = False
  pnlVRDPrjType.Visible = False
  pnlVRDDocType.Visible = False
  pnlVRDLoyalty.Visible = False
  pnlVRDContractStage.Visible = False
  pnlVRDStream.Visible = False
  pnlVRDInterest.Visible = False
  pnlVRDMarket.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRDMarket&quot;
     With pnlVRDMarket
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDMarket.OnClick item,parentform
     End With
   Case &quot;VRDInterest&quot;
     With pnlVRDInterest
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDInterest.OnClick item,parentform
     End With
   Case &quot;VRDStream&quot;
     With pnlVRDStream
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDStream.OnClick item,parentform
     End With
   Case &quot;VRDContractStage&quot;
     With pnlVRDContractStage
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDContractStage.OnClick item,parentform
     End With
   Case &quot;VRDLoyalty&quot;
     With pnlVRDLoyalty
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDLoyalty.OnClick item,parentform
     End With
   Case &quot;VRDDocType&quot;
     With pnlVRDDocType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDDocType.OnClick item,parentform
     End With
   Case &quot;VRDPrjType&quot;
     With pnlVRDPrjType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDPrjType.OnClick item,parentform
     End With
   Case &quot;VRDRreportType&quot;
     With pnlVRDRreportType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRDRreportType.OnClick item,parentform
     End With
   Case &quot;VRD_CompInfo&quot;
     With pnlVRD_CompInfo
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRD_CompInfo.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Рынки&quot;
ts.Tabs.Item(1).key = &quot;VRDMarket&quot;
pnlVRDMarket.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDInterest&quot;, &quot;Заинтересованность&quot;)
pnlVRDInterest.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDStream&quot;, &quot;Направление деятельности&quot;)
pnlVRDStream.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDContractStage&quot;, &quot;Стадия договора&quot;)
pnlVRDContractStage.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDLoyalty&quot;, &quot;Лояльность&quot;)
pnlVRDLoyalty.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDDocType&quot;, &quot;Тип документа&quot;)
pnlVRDDocType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDPrjType&quot;, &quot;Типы проектов&quot;)
pnlVRDPrjType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRDRreportType&quot;, &quot;Тип отчета&quot;)
pnlVRDRreportType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRD_CompInfo&quot;, &quot;Источник информации о компании&quot;)
pnlVRD_CompInfo.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRD2&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRDMarket.CloseClass
 pnlVRDInterest.CloseClass
 pnlVRDStream.CloseClass
 pnlVRDContractStage.CloseClass
 pnlVRDLoyalty.CloseClass
 pnlVRDDocType.CloseClass
 pnlVRDPrjType.CloseClass
 pnlVRDRreportType.CloseClass
 pnlVRD_CompInfo.CloseClass
End Sub
public sub OnSave()
 pnlVRDMarket.OnSave
 pnlVRDInterest.OnSave
 pnlVRDStream.OnSave
 pnlVRDContractStage.OnSave
 pnlVRDLoyalty.OnSave
 pnlVRDDocType.OnSave
 pnlVRDPrjType.OnSave
 pnlVRDRreportType.OnSave
 pnlVRD_CompInfo.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRDMarket.IsChanged
m_IsChanged = m_IsChanged or pnlVRDInterest.IsChanged
m_IsChanged = m_IsChanged or pnlVRDStream.IsChanged
m_IsChanged = m_IsChanged or pnlVRDContractStage.IsChanged
m_IsChanged = m_IsChanged or pnlVRDLoyalty.IsChanged
m_IsChanged = m_IsChanged or pnlVRDDocType.IsChanged
m_IsChanged = m_IsChanged or pnlVRDPrjType.IsChanged
m_IsChanged = m_IsChanged or pnlVRDRreportType.IsChanged
m_IsChanged = m_IsChanged or pnlVRD_CompInfo.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRD2GUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: работа с клиентами"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRD2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRD2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRD2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;admi&quot; then

if Name=&quot;VRDMarket&quot; then 
 set FormByName = new frmVRDMarket_admi
 exit function
end if

if Name=&quot;VRDInterest&quot; then 
 set FormByName = new frmVRDInterest_admi
 exit function
end if

if Name=&quot;VRDStream&quot; then 
 set FormByName = new frmVRDStream_admi
 exit function
end if

if Name=&quot;VRDContractStage&quot; then 
 set FormByName = new frmVRDContractStage_admi
 exit function
end if

if Name=&quot;VRDLoyalty&quot; then 
 set FormByName = new frmVRDLoyalty_admi
 exit function
end if

if Name=&quot;VRDDocType&quot; then 
 set FormByName = new frmVRDDocType_admi
 exit function
end if

if Name=&quot;VRDPrjType&quot; then 
 set FormByName = new frmVRDPrjType_admi
 exit function
end if

if Name=&quot;VRDRreportType&quot; then 
 set FormByName = new frmVRDRreportType_admi
 exit function
end if

if Name=&quot;VRD_CompInfo&quot; then 
 set FormByName = new frmVRD_CompInfo_admi
 exit function
end if

end if
if Mode=&quot;main&quot; then

if Name=&quot;VRDMarket&quot; then 
 set FormByName = new frmVRDMarket_main
 exit function
end if

if Name=&quot;VRDInterest&quot; then 
 set FormByName = new frmVRDInterest_main
 exit function
end if

if Name=&quot;VRDStream&quot; then 
 set FormByName = new frmVRDStream_main
 exit function
end if

if Name=&quot;VRDContractStage&quot; then 
 set FormByName = new frmVRDContractStage_main
 exit function
end if

if Name=&quot;VRDLoyalty&quot; then 
 set FormByName = new frmVRDLoyalty_main
 exit function
end if

if Name=&quot;VRDDocType&quot; then 
 set FormByName = new frmVRDDocType_main
 exit function
end if

if Name=&quot;VRDPrjType&quot; then 
 set FormByName = new frmVRDPrjType_main
 exit function
end if

if Name=&quot;VRDRreportType&quot; then 
 set FormByName = new frmVRDRreportType_main
 exit function
end if

if Name=&quot;VRD_CompInfo&quot; then 
 set FormByName = new frmVRD_CompInfo_main
 exit function
end if

end if
if Mode=&quot;&quot; then

if Name=&quot;VRDMarket&quot; then 
 set FormByName = new frmVRDMarket_
 exit function
end if

if Name=&quot;VRDInterest&quot; then 
 set FormByName = new frmVRDInterest_
 exit function
end if

if Name=&quot;VRDStream&quot; then 
 set FormByName = new frmVRDStream_
 exit function
end if

if Name=&quot;VRDContractStage&quot; then 
 set FormByName = new frmVRDContractStage_
 exit function
end if

if Name=&quot;VRDLoyalty&quot; then 
 set FormByName = new frmVRDLoyalty_
 exit function
end if

if Name=&quot;VRDDocType&quot; then 
 set FormByName = new frmVRDDocType_
 exit function
end if

if Name=&quot;VRDPrjType&quot; then 
 set FormByName = new frmVRDPrjType_
 exit function
end if

if Name=&quot;VRDRreportType&quot; then 
 set FormByName = new frmVRDRreportType_
 exit function
end if

if Name=&quot;VRD_CompInfo&quot; then 
 set FormByName = new frmVRD_CompInfo_
 exit function
end if

end if
end function
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub

Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
