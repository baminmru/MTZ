<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Контактное лицо"/><AttributeHolder Name="Name" Value="VRCP2GUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Контактное лицо&quot;
End Sub

Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub
public property get IsModal() as boolean
 IsModal = mOpenModal
end property
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Контактное лицо)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRCP2:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Контактное лицо&quot; 
  end if
end if
if OpenModal then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;VRCP2:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Контактное лицо&quot; 
  end if
end if
end sub
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;VRCPSEEALSO&quot; Then
    Set f = New frmVRCPSeeAlso_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRCPSPECIAL&quot; Then
    Set f = New frmVRCPSpecial_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRCPPRESENTS&quot; Then
    Set f = New frmVRCPPresents_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRCPREPORTS&quot; Then
    Set f = New frmVRCPReports_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRCPDATES&quot; Then
    Set f = New frmVRCPDates_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRCPNEIGBORHOOD&quot; Then
    Set f = New frmVRCPNeigborhood_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRCPINTEREST&quot; Then
    Set f = New frmVRCPInterest_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;VRCPCOMMON&quot; Then
    Set f = New frmVRCPCommon_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRCPSeeAlso" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDocument"/><Properties Name="Caption" PropValue="Документ:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDocument"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Документ"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDocument"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Документ"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Comment"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Comment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDocument_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdDocument_CLick()
  on error resume next
     If txtDocument.Tag =&quot;&quot; then
       cmdDocument_MenuClick &quot;Выбрать&quot; 
     Else
       cmdDocument_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdDocument_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtDocument.Tag = &quot;&quot;
          txtDocument = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtDocument.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtDocument.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtDocument.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;&quot;)
        If OK Then
          txtDocument.Tag = left(ID,38)
          txtDocument = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Set obj = Item.Application.Manager.GetNewObject()
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtDocument.Tag = obj.ID
              txtDocument = obj.brief
          else
              txtDocument.Tag = &quot;&quot;
              txtDocument = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtthe_Comment_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtDocument.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Document Is Nothing Then
  txtDocument.Tag = item.Document.id
  txtDocument = item.Document.brief
else
  txtDocument.Tag = &quot;&quot; 
  txtDocument = &quot;&quot; 
End If
 LoadBtnPictures cmdDocument,cmdDocument.tag
  cmdDocument.RemoveAllMenu
  cmdDocument.AddMenu &quot;Очистить&quot; 
  cmdDocument.AddMenu &quot;Создать&quot; 
  cmdDocument.AddMenu &quot;Выбрать&quot; 
  cmdDocument.AddMenu &quot;Открыть&quot; 
txtthe_Comment = item.the_Comment
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtDocument.Tag &lt;&gt; &quot;&quot; Then
  Set item.Document = Item.Application.Manager.GetInstanceObject(txtDocument.Tag)
Else
  Set item.Document = Nothing
End If
item.the_Comment = txtthe_Comment
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRCPSpecial" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOF"/><Properties Name="Caption" PropValue="Дата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOF"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfo"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Описание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Timer"><Properties Name="NAME" PropValue="theFile"/><Properties Name="Interval" PropValue="500"/><Properties Name="Left" PropValue="100"/><Properties Name="Top" PropValue="100"/><Properties Name="Enabled" PropValue="0"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltheFile"/><Properties Name="Caption" PropValue="Файл:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttheFile"/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Файл"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdtheFile"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Файл"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="2940"/><Properties Name="Left" PropValue="300"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfoSrc"/><Properties Name="Caption" PropValue="Источник:"/><Properties Name="Top" PropValue="3090"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfoSrc"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3420"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Источник"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private PaththeFile as string 
  private ModtheFile as Date 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOF_Change()
  Changing

end sub
private sub txtInfo_Change()
  Changing

end sub

Private Sub theFile_Timer()
    If PaththeFile &lt;&gt; &quot;&quot; Then
        'Try Lock file
        Dim ff As Integer
        ff = FreeFile
        On Error GoTo EndCheck
        Open PaththeFile For Binary Access Read Lock Read As ff
        Close ff
        'Файл свободен, проверяем блокировку
        Dim fso, f, s
        Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
        Set f = fso.GetFile(PaththeFile)
        Dim Modifyed As Date
        Modifyed = f.DateLastModified
        theFile.Enabled = False
        If ModtheFile &lt;&gt; Modifyed Then
            'Нада обновлять...
            If MsgBox(&quot;Файл изменён, обновить?&quot;, vbYesNo, &quot;&quot;) = vbYes Then

                item.theFile = FileToArray(PaththeFile)
                item.theFile_ext = GetFileExtension2(PaththeFile)
                Call f.Delete(True)
                Changing
            End If
        End If
        Exit Sub
EndCheck:
        'Файл заблокированн! Ждёмс...
    End If
End Sub

Private Sub cmdtheFile_Click()
  on error resume next
  if item.theFile_ext &lt;&gt;&quot;&quot; and not isnull(item.theFile)  then
    cmdtheFile_MenuClick &quot;Открыть&quot;
  else
    cmdtheFile_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdtheFile_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txttheFile = Dialog.FileName
   item.theFile = FileToArray(Dialog.FileName)
   item.theFile_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txttheFile = &quot;&quot; 
   item.theFile = null
   item.theFile_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    PaththeFile = DoOpenFile(item.theFile, item.theFile_ext)
    'Get LastModify Date
    Dim fso, f, s
    On Error Resume Next
    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)
    Set f = fso.GetFile(PaththeFile)
    ModtheFile = f.DateLastModified
    
    item.Application.Manager.StoreTempFileData PaththeFile, item.PartName, item.ID
    theFile.Enabled = True
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.theFile
  End If
End Sub
private sub txtInfoSrc_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOF.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOF = date
if item.DateOF &lt;&gt; 0 then
 dtpDateOF = item.DateOF
end if
txtInfo = item.Info
 if  lenb(item.theFile)&gt;0 then 
   txttheFile=&quot;Данные (&quot; &amp; item.theFile_ext &amp; &quot;)&quot;
 else 
   txttheFile=&quot;&quot;
 end if 
 LoadBtnPictures cmdtheFile,cmdtheFile.tag
 cmdtheFile.RemoveAllMenu
 cmdtheFile.AddMenu &quot;Очистить&quot;
 cmdtheFile.AddMenu &quot;Выбрать&quot;
 cmdtheFile.AddMenu &quot;Сохранить&quot;
 cmdtheFile.AddMenu &quot;Открыть&quot;
txtInfoSrc = item.InfoSrc
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOF) then
    item.DateOF = 0
  else
    item.DateOF = dtpDateOF.value
  end if
item.Info = txtInfo
 ' SEE cmdtheFile_CLICK
item.InfoSrc = txtInfoSrc
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRCPPresents" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOF"/><Properties Name="Caption" PropValue="Дата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOF"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGift"/><Properties Name="Caption" PropValue="Подарок:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtGift"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Подарок"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPresentCost"/><Properties Name="Caption" PropValue="Цена подарка:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPresentCost"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Цена подарка"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblreason"/><Properties Name="Caption" PropValue="Повод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtreason"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Повод"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOF_Change()
  Changing

end sub
private sub txtGift_Change()
  Changing

end sub
private sub txtPresentCost_Validate(cancel as boolean)
if txtPresentCost.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPresentCost.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPresentCost.SetFocus 
  elseif Val(txtPresentCost.text) &lt; -922337203685477.5808 or Val(txtPresentCost.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPresentCost.SetFocus 
  end if
end if
end sub
Private Sub txtPresentCost_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPresentCost_Change()
  Changing

end sub
private sub txtreason_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOF.value)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOF = date
if item.DateOF &lt;&gt; 0 then
 dtpDateOF = item.DateOF
end if
  on error resume next
txtGift = item.Gift
txtPresentCost = item.PresentCost
txtreason = item.reason
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOF) then
    item.DateOF = 0
  else
    item.DateOF = dtpDateOF.value
  end if
item.Gift = txtGift
item.PresentCost = cdbl(txtPresentCost)
item.reason = txtreason
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRCPReports" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReport"/><Properties Name="Caption" PropValue="Отчет:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReport"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Отчет"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdReport"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Отчет"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtReport_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdReport_CLick()
  on error resume next
     If txtReport.Tag =&quot;&quot; then
       cmdReport_MenuClick &quot;Создать&quot; 
     Else
       cmdReport_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdReport_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
       if txtReport.Tag &lt;&gt; &quot;&quot; then
         item.Application.MTZSession.SetOwner txtReport.Tag, &quot;&quot;, item.ID
         item.Application.Manager.DeleteInstance txtReport.Tag
       end if
          txtReport.Tag = &quot;&quot;
          txtReport = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtReport.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtReport.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtReport.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRRPT2&quot;)
        If OK Then
          txtReport.Tag = left(ID,38)
          txtReport = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRRPT2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRRPT2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtReport.Tag = ID
              txtReport = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          item.Application.MTZSession.SetOwner obj.ID, item.PartName, item.ID
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtReport.Tag = obj.ID
              txtReport = obj.brief
          else
              txtReport.Tag = &quot;&quot;
              txtReport = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtReport.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Report Is Nothing Then
  txtReport.Tag = item.Report.id
  txtReport = item.Report.brief
else
  txtReport.Tag = &quot;&quot; 
  txtReport = &quot;&quot; 
End If
 LoadBtnPictures cmdReport,cmdReport.tag
  cmdReport.RemoveAllMenu
  cmdReport.AddMenu &quot;Очистить&quot; 
  cmdReport.AddMenu &quot;Открыть&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtReport.Tag &lt;&gt; &quot;&quot; Then
  Set item.Report = Item.Application.Manager.GetInstanceObject(txtReport.Tag)
Else
  Set item.Report = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRCPDates" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateOf"/><Properties Name="Caption" PropValue="Дата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpDateOf"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDateEvent"/><Properties Name="Caption" PropValue="Событие:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDateEvent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Событие"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpDateOf_Change()
  Changing

end sub
private sub txtDateEvent_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpDateOf.value)
if mIsOK then mIsOK =IsSet(txtDateEvent.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpDateOf = date
if item.DateOf &lt;&gt; 0 then
 dtpDateOf = item.DateOf
end if
  on error resume next
txtDateEvent = item.DateEvent
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpDateOf) then
    item.DateOf = 0
  else
    item.DateOf = dtpDateOf.value
  end if
item.DateEvent = txtDateEvent
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRCPNeigborhood" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Level"/><Properties Name="Caption" PropValue="Степень родства:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Level"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Степень родства"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblperson"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtperson"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Описание"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdperson"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Описание"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtthe_Level_Change()
  Changing

end sub
private sub txtperson_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdperson_CLick()
  on error resume next
     If txtperson.Tag =&quot;&quot; then
       cmdperson_MenuClick &quot;Создать&quot; 
     Else
       cmdperson_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdperson_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
       if txtperson.Tag &lt;&gt; &quot;&quot; then
         item.Application.MTZSession.SetOwner txtperson.Tag, &quot;&quot;, item.ID
         item.Application.Manager.DeleteInstance txtperson.Tag
       end if
          txtperson.Tag = &quot;&quot;
          txtperson = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtperson.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtperson.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtperson.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRCP2&quot;)
        If OK Then
          txtperson.Tag = left(ID,38)
          txtperson = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRCP2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRCP2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtperson.Tag = ID
              txtperson = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRCP2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          item.Application.MTZSession.SetOwner obj.ID, item.PartName, item.ID
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtperson.Tag = obj.ID
              txtperson = obj.brief
          else
              txtperson.Tag = &quot;&quot;
              txtperson = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtthe_Level = item.the_Level
If Not item.person Is Nothing Then
  txtperson.Tag = item.person.id
  txtperson = item.person.brief
else
  txtperson.Tag = &quot;&quot; 
  txtperson = &quot;&quot; 
End If
 LoadBtnPictures cmdperson,cmdperson.tag
  cmdperson.RemoveAllMenu
  cmdperson.AddMenu &quot;Очистить&quot; 
  cmdperson.AddMenu &quot;Открыть&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.the_Level = txtthe_Level
If txtperson.Tag &lt;&gt; &quot;&quot; Then
  Set item.person = Item.Application.Manager.GetInstanceObject(txtperson.Tag)
Else
  Set item.person = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRCPInterest" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInfo"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Описание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtInfo_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtInfo.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtInfo = item.Info
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Info = txtInfo
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VRCPCommon" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFamily"/><Properties Name="Caption" PropValue="Фамилия:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFamily"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Фамилия"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Имя:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Имя"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSurName"/><Properties Name="Caption" PropValue="Отчество:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSurName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Отчество"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPrivelegie"/><Properties Name="Caption" PropValue="Звание:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPrivelegie"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Звание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblphone"/><Properties Name="Caption" PropValue="Телефон:"/><Properties Name="Top" PropValue="3795"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtphone"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4125"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Телефон"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblemail"/><Properties Name="Caption" PropValue="e-mail:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtemail"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="e-mail"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdemail"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="mailopen.ico"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="e-mail"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblfax"/><Properties Name="Caption" PropValue="Факс:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtfax"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Факс"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLoyality"/><Properties Name="Caption" PropValue="Лояльность:"/><Properties Name="Top" PropValue="5910"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLoyality"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="6240"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Лояльность"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdLoyality"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="6240"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Лояльность"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Comment"/><Properties Name="Caption" PropValue="Примечания:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Comment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечания"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCurator"/><Properties Name="Caption" PropValue="Ответственный:"/><Properties Name="Top" PropValue="1680"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCurator"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ответственный"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCurator"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2010"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ответственный"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmobile"/><Properties Name="Caption" PropValue="Мобильный телефон:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmobile"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Мобильный телефон"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPersonDeYuro"/><Properties Name="Caption" PropValue="Официальный представитель:"/><Properties Name="Top" PropValue="3090"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbPersonDeYuro"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3420"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Официальный представитель"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblActionReason"/><Properties Name="Caption" PropValue="Действует на основании:"/><Properties Name="Top" PropValue="3795"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtActionReason"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4125"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Действует на основании"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblActionStart"/><Properties Name="Caption" PropValue="Начало действия доверености:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpActionStart"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Начало действия доверености"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblActionEnd"/><Properties Name="Caption" PropValue="Конец действия доверенности:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpActionEnd"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Конец действия доверенности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPassportInfo"/><Properties Name="Caption" PropValue="Паспортные данные:"/><Properties Name="Top" PropValue="5910"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPassportInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6240"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Паспортные данные"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAddress"/><Properties Name="Caption" PropValue="Адрес:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAddress"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Адрес"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtFamily_Change()
  Changing

end sub
private sub txtName_Change()
  Changing

end sub
private sub txtSurName_Change()
  Changing

end sub
private sub txtPrivelegie_Change()
  Changing

end sub
private sub txtphone_Change()
  Changing

end sub
private sub txtemail_Change()
  Changing

end sub
private sub cmdemail_Click()
  on error resume next
  Dim s As String
  s = s &amp; &quot;mailto:&quot; &amp; txtemail.text 
  OpenDocument 0, s
end sub
private sub txtfax_Change()
  Changing

end sub
private sub txtLoyality_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdLoyality_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;VRDLoyalty&quot;, id, brief) Then
          txtLoyality.Tag = Left(id, 38)
          txtLoyality = brief
        End If
end sub
private sub cmdLoyality_MenuClick(ByVal sCaption As String)
          txtLoyality.Tag = &quot;&quot;
          txtLoyality = &quot;&quot;
End sub
private sub txtthe_Comment_Change()
  Changing

end sub
private sub txtCurator_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCurator_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Users&quot;, id, brief) Then
          txtCurator.Tag = Left(id, 38)
          txtCurator = brief
        End If
end sub
private sub cmdCurator_MenuClick(ByVal sCaption As String)
          txtCurator.Tag = &quot;&quot;
          txtCurator = &quot;&quot;
End sub
private sub txtmobile_Change()
  Changing

end sub
private sub cmbPersonDeYuro_Click()
  on error resume next
  Changing

end sub
private sub txtActionReason_Change()
  Changing

end sub
private sub dtpActionStart_Change()
  Changing

end sub
private sub dtpActionEnd_Change()
  Changing

end sub
private sub txtPassportInfo_Change()
  Changing

end sub
private sub txtAddress_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtFamily.text)
if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtFamily = item.Family
  on error resume next
txtName = item.Name
  on error resume next
txtSurName = item.SurName
txtPrivelegie = item.Privelegie
  on error resume next
txtphone = item.phone
  on error resume next
txtemail = item.email
 LoadBtnPictures cmdemail,cmdemail.tag
  cmdemail.RemoveAllMenu
  on error resume next
txtfax = item.fax
If Not item.Loyality Is Nothing Then
  txtLoyality.Tag = item.Loyality.id
  txtLoyality = item.Loyality.brief
else
  txtLoyality.Tag = &quot;&quot; 
  txtLoyality = &quot;&quot; 
End If
 LoadBtnPictures cmdLoyality,cmdLoyality.tag
  cmdLoyality.RemoveAllMenu
  cmdLoyality.AddMenu &quot;Очистить&quot; 
txtthe_Comment = item.the_Comment
If Not item.Curator Is Nothing Then
  txtCurator.Tag = item.Curator.id
  txtCurator = item.Curator.brief
else
  txtCurator.Tag = &quot;&quot; 
  txtCurator = &quot;&quot; 
End If
 LoadBtnPictures cmdCurator,cmdCurator.tag
  cmdCurator.RemoveAllMenu
  cmdCurator.AddMenu &quot;Очистить&quot; 
  on error resume next
txtmobile = item.mobile
cmbPersonDeYuro.Clear
cmbPersonDeYuro.additem &quot;Да&quot;
cmbPersonDeYuro.itemdata(cmbPersonDeYuro.newindex)= -1
cmbPersonDeYuro.additem &quot;Нет&quot;
cmbPersonDeYuro.itemdata(cmbPersonDeYuro.newindex)= 0
 For iii = 0 To cmbPersonDeYuro.ListCount-1
  If Item.PersonDeYuro = cmbPersonDeYuro.ItemData(iii) Then
   cmbPersonDeYuro.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtActionReason = item.ActionReason
dtpActionStart = date
if item.ActionStart &lt;&gt; 0 then
 dtpActionStart = item.ActionStart
else
 dtpActionStart.value = null
end if
dtpActionEnd = date
if item.ActionEnd &lt;&gt; 0 then
 dtpActionEnd = item.ActionEnd
else
 dtpActionEnd.value = null
end if
txtPassportInfo = item.PassportInfo
txtAddress = item.Address
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Family = txtFamily
item.Name = txtName
item.SurName = txtSurName
item.Privelegie = txtPrivelegie
item.phone = txtphone
item.email = txtemail
item.fax = txtfax
If txtLoyality.Tag &lt;&gt; &quot;&quot; Then
  Set item.Loyality = Item.Application.FindRowObject(&quot;VRDLoyalty&quot;,txtLoyality.Tag)
Else
  Set item.Loyality = Nothing
End If
item.the_Comment = txtthe_Comment
If txtCurator.Tag &lt;&gt; &quot;&quot; Then
  Set item.Curator = Item.Application.FindRowObject(&quot;Users&quot;,txtCurator.Tag)
Else
  Set item.Curator = Nothing
End If
item.mobile = txtmobile
 if cmbPersonDeYuro.listindex&gt;=0 then
   item.PersonDeYuro = cmbPersonDeYuro.itemdata(cmbPersonDeYuro.listindex)
 end if
item.ActionReason = txtActionReason
  if  isnull(dtpActionStart) then
    item.ActionStart = 0
  else
    item.ActionStart = dtpActionStart.value
  end if
  if  isnull(dtpActionEnd) then
    item.ActionEnd = 0
  else
    item.ActionEnd = dtpActionEnd.value
  end if
item.PassportInfo = txtPassportInfo
item.Address = txtAddress
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRCPSeeAlso_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRCP2GUI.VRCPSeeAlso"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Смотри также"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Смотри также"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{52642C9A-2B56-472B-AB75-27710165E189}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{52642C9A-2B56-472B-AB75-27710165E189}&quot;
  Open s &amp; Me.name &amp; &quot;{52642C9A-2B56-472B-AB75-27710165E189}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRCPSpecial_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRCP2GUI.VRCPSpecial"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Факты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Факты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0749EC72-E926-411C-946E-37E83CA40929}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0749EC72-E926-411C-946E-37E83CA40929}&quot;
  Open s &amp; Me.name &amp; &quot;{0749EC72-E926-411C-946E-37E83CA40929}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRCPPresents_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRCP2GUI.VRCPPresents"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Подарки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Подарки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{A24BE8BF-2296-49E4-9CFE-5CE372994048}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{A24BE8BF-2296-49E4-9CFE-5CE372994048}&quot;
  Open s &amp; Me.name &amp; &quot;{A24BE8BF-2296-49E4-9CFE-5CE372994048}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRCPReports_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRCP2GUI.VRCPReports"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Отчеты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Отчеты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9905D164-0376-400A-B322-76179B3CD9AB}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9905D164-0376-400A-B322-76179B3CD9AB}&quot;
  Open s &amp; Me.name &amp; &quot;{9905D164-0376-400A-B322-76179B3CD9AB}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRCPDates_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRCP2GUI.VRCPDates"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Памятные даты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Памятные даты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{E1631216-C66A-41F4-98AF-9D94E647377A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{E1631216-C66A-41F4-98AF-9D94E647377A}&quot;
  Open s &amp; Me.name &amp; &quot;{E1631216-C66A-41F4-98AF-9D94E647377A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRCPNeigborhood_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRCP2GUI.VRCPNeigborhood"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Родственники"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Родственники"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{DAE8579A-0279-4093-96BE-B302FC8E6917}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{DAE8579A-0279-4093-96BE-B302FC8E6917}&quot;
  Open s &amp; Me.name &amp; &quot;{DAE8579A-0279-4093-96BE-B302FC8E6917}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRCPInterest_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRCP2GUI.VRCPInterest"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Увлечения"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Увлечения"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{AFD3E255-86CF-45CB-9918-BD6665A65BAF}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{AFD3E255-86CF-45CB-9918-BD6665A65BAF}&quot;
  Open s &amp; Me.name &amp; &quot;{AFD3E255-86CF-45CB-9918-BD6665A65BAF}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmVRCPCommon_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="VRCP2GUI.VRCPCommon"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Общая информация"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Общая информация"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2D0B85AE-3902-4943-AA3F-F145E342A144}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2D0B85AE-3902-4943-AA3F-F145E342A144}&quot;
  Open s &amp; Me.name &amp; &quot;{2D0B85AE-3902-4943-AA3F-F145E342A144}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRCPCommon_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRCPCommon" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRCPCommon"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editVRCPCommon" ControlIndex="0" PROGID="VRCP2GUI.VRCPCommon"><Properties Name="Name" PropValue="editVRCPCommon"/></ControlData><ControlData Name="cmdVRCPCommonSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPCommonSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRCPCommonRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPCommonRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdVRCPCommonCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPCommonCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRCPCommon_UpdateitemName_(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=( .Family &amp; &quot; &quot; &amp; .Name &amp; &quot; &quot; &amp; .SurName),  RowItem:=RowItem
end with
end sub
Private Sub cmdVRCPCommonRef_Click()
  on error resume next
  Item.VRCPCommon.Refresh
  cmdVRCPCommonAdd_Click
End Sub
Private Sub cmdVRCPCommonCfg_Click()
    on error resume next 
    editVRCPCommon.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;VRCP2_editVRCPCommon_&quot; For Output As #ff
    print #ff, editVRCPCommon.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdVRCPCommonAdd_Click()
  on error resume next
 dim u as object
 If Item.VRCPCommon.Count = 0 Then
   set u=Item.VRCPCommon.Add
set u.Curator = u.Application.FindRowObject(&quot;Users&quot;, u.application.mtzsession.GetSessionUserID())

 End If
 Set editVRCPCommon.Item = Item.VRCPCommon.Item(1)
 editVRCPCommon.InitPanel
 cmdVRCPCommonSave.Enabled = True
End Sub
Private Sub cmdVRCPCommonDel_Click()
  on error resume next
  if  editVRCPCommon.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editVRCPCommon.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editVRCPCommon.item.parent.Delete editVRCPCommon.item.id
    cmdVRCPCommonSave.Enabled = false
    editVRCPCommon.Enabled = false
    set editVRCPCommon.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editVRCPCommon_Changed()
 cmdVRCPCommonSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editVRCPCommon.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdVRCPCommonSave_Click()
  on error resume next
    if editVRCPCommon.IsOK then
    MousePointer = vbHourglass
    editVRCPCommon.Save
  on error goto bye
    editVRCPCommon.item.Save
    MousePointer = vbNormal
        opVRCPCommon_UpdateitemName_ editVRCPCommon.item
    cmdVRCPCommonSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editVRCPCommon.item.REFRESH
  'editVRCPCommon.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRCPCommonSave,cmdVRCPCommonSave.tag
  LoadBtnPictures cmdVRCPCommonRef,cmdVRCPCommonRef.tag
  LoadBtnPictures cmdVRCPCommonCfg,cmdVRCPCommonCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;VRCP2_editVRCPCommon_&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editVRCPCommon.PanelCustomisationString = buf
  cmdVRCPCommonAdd_click
end sub
private sub OnTabClick()

      editVRCPCommon.Top = 40 * Screen.TwipsPerPixelX
      editVRCPCommon.Left = 5 * Screen.TwipsPerPixelX
      editVRCPCommon.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editVRCPCommon.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editVRCPCommon.Save
if editVRCPCommon.item.Changed then
  editVRCPCommon.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editVRCPCommon.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRCPCommon.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRCPNeigborhood_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRCPNeigborhood" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRCPNeigborhood"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRCPNeigborhood" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRCPNeigborhood"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRCPNeigborhoodAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPNeigborhoodAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPNeigborhoodEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPNeigborhoodEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPNeigborhoodDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPNeigborhoodDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPNeigborhoodRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPNeigborhoodRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRCPNeigborhoodPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPNeigborhoodPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRCPNeigborhoodCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPNeigborhoodCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRCPNeigborhoodFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPNeigborhoodFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRCPNeigborhoodRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRCPNeigborhoodRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRCPNeigborhoodAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPNeigborhoodAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRCPNeigborhood" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Родственники"/><Properties Name="Name" PropValue="mnuPopupVRCPNeigborhood"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRCPNeigborhoodAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPNeigborhoodEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPNeigborhoodDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPNeigborhoodOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodOpen"/></ControlData><ControlData Name="mnuVRCPNeigborhoodRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodRef"/></ControlData><ControlData Name="mnuVRCPNeigborhoodS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodS1"/></ControlData><ControlData Name="mnuVRCPNeigborhoodBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRCPNeigborhoodCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodCOPY"/></ControlData><ControlData Name="mnuVRCPNeigborhoodCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodCUT"/></ControlData><ControlData Name="mnuVRCPNeigborhoodPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodPASTE"/></ControlData><ControlData Name="mnuVRCPNeigborhoodCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodCHANGE"/></ControlData><ControlData Name="mnuVRCPNeigborhoodCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRCPNeigborhoodPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodPrn"/></ControlData><ControlData Name="mnuVRCPNeigborhoodCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodCfg"/></ControlData><ControlData Name="mnuVRCPNeigborhoodFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodFind"/></ControlData><ControlData Name="mnuVRCPNeigborhoodAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRCPNeigborhoodAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRCPNeigborhood" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRCPNeigborhood"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRCPNeigborhood as object
private menuActionVRCPNeigborhood as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRCPNeigborhood_OpenRef_(RowItem as object)
with RowItem
Run_VBOpenRef  ID:=.person.ID, StartMode:=&quot;AUTO&quot;,  RowItem:=RowItem
end with
end sub
Private Sub cmdVRCPNeigborhoodCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRCPNeigborhood,&quot;gridVRCPNeigborhood&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPNeigborhoodPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRCPNeigborhood,&quot;Родственники&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPNeigborhoodRef_Click()
  on error resume next
  item.VRCPNeigborhood.Refresh
  gridVRCPNeigborhood.itemCount = item.VRCPNeigborhood.count
  gridVRCPNeigborhood.Refetch
  gridVRCPNeigborhood.Refresh
End Sub
Private Sub cmdVRCPNeigborhoodAcc_Click()
On Error Resume Next
If gridVRCPNeigborhood.ItemCount = 0 Then Exit Sub
If gridVRCPNeigborhood.Row &gt; 0 Then
 If gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPNeigborhood.RowBookmark(gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRCPNeigborhoodEdit_Click()
  on error resume next
If gridVRCPNeigborhood.ItemCount = 0 Then Exit Sub
If gridVRCPNeigborhood.Row &gt; 0 then
 If gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPNeigborhood.RowBookmark(gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRCPNeigborhood_.Item = u
    again: frmVRCPNeigborhood_.NotFirstTime = False
    frmVRCPNeigborhood_.OnInit
    frmVRCPNeigborhood_.Show vbModal
    If frmVRCPNeigborhood_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRCPNeigborhood.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRCPNeigborhoodDel_Click()
  on error resume next
  gridVRCPNeigborhood.Delete
End Sub
Private Sub cmdVRCPNeigborhoodAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRCPNeigborhood.Add()
 Dim ID As String
 ID = CreateGUID2
 Call u.Application.Manager.NewInstance(ID, &quot;VRCP&quot;, &quot;Родственник &quot; &amp; Date)
 Set u.person = u.Application.Manager.GetInstanceObject(ID)
 u.Save
 u.application.mtzsession.Setowner u.person.id,u.partname,u.id

        gridVRCPNeigborhood.ItemCount = Item.VRCPNeigborhood.Count
        gridVRCPNeigborhood.Refresh
        gridVRCPNeigborhood.RefreshGroups
        gridVRCPNeigborhood.Refreshsort
        gridVRCPNeigborhood.MoveToBookmark u.ID &amp; &quot;VRCPNeigborhood&quot;
        cmdVRCPNeigborhoodRun_click
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRCPNeigborhoodFnd_Click()
  on error resume next
  fndVRCPNeigborhood.ShowForm
End Sub
Private Sub cmdVRCPNeigborhoodRun_Click()
  on error resume next
  gridVRCPNeigborhood_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRCPNeigborhood_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRCPNeigborhood.LoadRow gridVRCPNeigborhood, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRCPNeigborhood_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRCPNeigborhood.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRCPNeigborhood&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRCPNeigborhood_DblClick()
If gridVRCPNeigborhood.ItemCount = 0 Then Exit Sub
If gridVRCPNeigborhood.Row &gt; 0 then
  If gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPNeigborhood.RowBookmark(gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    on error resume next
    if not u is nothing then
      opVRCPNeigborhood_OpenRef_ u
    end if
     u.refresh
  End If
End If
End Sub
Private Sub gridVRCPNeigborhood_KeyPress(KeyAscii As Integer)
  If gridVRCPNeigborhood.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRCPNeigborhood.FindOnPress KeyAscii
End Sub

Private Sub gridVRCPNeigborhood_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRCPNeigborhood.Row And LastRow &gt; 0 Then
  gridVRCPNeigborhood.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRCPNeigborhood.GetRowData(gridVRCPNeigborhood.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRCPNeigborhoodPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRCPNeigborhood.Add()
    If GetFromBuffer(u) Then
      gridVRCPNeigborhood.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRCPNeigborhood_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRCPNeigborhoodCfg_Click
        End If
    End If
end sub

private sub gridVRCPNeigborhood_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRCPNeigborhood
End If
end sub
private sub mnuVRCPNeigborhoodAdd_click()
   menuActionVRCPNeigborhood =&quot;ADD&quot;
   menuTimerVRCPNeigborhood.enabled = true
end sub
private sub mnuVRCPNeigborhoodEdit_click()
   menuActionVRCPNeigborhood =&quot;EDIT&quot;
   menuTimerVRCPNeigborhood.enabled = true
end sub
private sub mnuVRCPNeigborhoodDelete_click()
   menuActionVRCPNeigborhood =&quot;DEL&quot;
   menuTimerVRCPNeigborhood.enabled = true
end sub
private sub mnuVRCPNeigborhoodOpen_click()
   menuActionVRCPNeigborhood =&quot;RUN&quot;
   menuTimerVRCPNeigborhood.enabled = true
end sub
private sub mnuVRCPNeigborhoodRef_click()
   menuActionVRCPNeigborhood =&quot;REF&quot;
   menuTimerVRCPNeigborhood.enabled = true
end sub
  Private Sub mnuVRCPNeigborhoodCOPY_Click()
    On Error Resume Next
    If gridVRCPNeigborhood.ItemCount = 0 Then Exit Sub
    If gridVRCPNeigborhood.Row &gt; 0 Then
     If gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPNeigborhood.RowBookmark(gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRCPNeigborhoodCUT_Click()
    On Error Resume Next
    If gridVRCPNeigborhood.ItemCount = 0 Then Exit Sub
    If gridVRCPNeigborhood.Row &gt; 0 Then
     If gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPNeigborhood.RowBookmark(gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRCPNeigborhood.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRCPNeigborhoodCHANGE_Click()
  On Error Resume Next
  If gridVRCPNeigborhood.ItemCount = 0 Then Exit Sub
  If gridVRCPNeigborhood.Row &gt; 0 Then
   If gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPNeigborhood.RowBookmark(gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRCPNeigborhood.ItemCount = u.parent.Count
      gridVRCPNeigborhood.RefreshRowIndex gridVRCPNeigborhood.RowIndex(gridVRCPNeigborhood.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRCPNeigborhoodCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRCPNeigborhoodPrn_click()
   menuActionVRCPNeigborhood =&quot;PRN&quot;
   menuTimerVRCPNeigborhood.enabled = true
end sub
private sub mnuVRCPNeigborhoodCfg_click()
   menuActionVRCPNeigborhood =&quot;CFG&quot;
   menuTimerVRCPNeigborhood.enabled = true
end sub
private sub mnuVRCPNeigborhoodFind_click()
   menuActionVRCPNeigborhood =&quot;FND&quot;
   menuTimerVRCPNeigborhood.enabled = true
end sub
private sub mnuVRCPNeigborhoodAcc_click()
   menuActionVRCPNeigborhood =&quot;ACC&quot;
   menuTimerVRCPNeigborhood.enabled = true
end sub
private sub menuTimerVRCPNeigborhood_timer()
   menuTimerVRCPNeigborhood.enabled = false
   if menuActionVRCPNeigborhood =&quot;ADD&quot; then cmdVRCPNeigborhoodADD_CLick
   if menuActionVRCPNeigborhood =&quot;EDIT&quot; then cmdVRCPNeigborhoodEDIT_CLick
   if menuActionVRCPNeigborhood =&quot;DEL&quot; then cmdVRCPNeigborhoodDEL_CLick
   if menuActionVRCPNeigborhood =&quot;RUN&quot; then cmdVRCPNeigborhoodRUN_CLick
   if menuActionVRCPNeigborhood =&quot;REF&quot; then cmdVRCPNeigborhoodREF_CLick
   if menuActionVRCPNeigborhood =&quot;PRN&quot; then cmdVRCPNeigborhoodPRN_CLick
   if menuActionVRCPNeigborhood =&quot;CFG&quot; then cmdVRCPNeigborhoodCFG_CLick
   if menuActionVRCPNeigborhood =&quot;FND&quot; then cmdVRCPNeigborhoodFND_CLick
   if menuActionVRCPNeigborhood =&quot;ACC&quot; then cmdVRCPNeigborhoodACC_CLick
   menuActionVRCPNeigborhood =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRCPNeigborhoodAdd,cmdVRCPNeigborhoodAdd.tag
  LoadBtnPictures cmdVRCPNeigborhoodEdit,cmdVRCPNeigborhoodEdit.tag
  LoadBtnPictures cmdVRCPNeigborhoodDel,cmdVRCPNeigborhoodDel.tag
  LoadBtnPictures cmdVRCPNeigborhoodRef,cmdVRCPNeigborhoodRef.tag
  LoadBtnPictures cmdVRCPNeigborhoodPrn,cmdVRCPNeigborhoodPrn.tag
  LoadBtnPictures cmdVRCPNeigborhoodFnd,cmdVRCPNeigborhoodFnd.tag
  LoadBtnPictures cmdVRCPNeigborhoodRun,cmdVRCPNeigborhoodRun.tag
  LoadBtnPictures cmdVRCPNeigborhoodAcc,cmdVRCPNeigborhoodAcc.tag
  LoadBtnPictures cmdVRCPNeigborhoodCfg,cmdVRCPNeigborhoodCfg.tag
  item.VRCPNeigborhood.PrepareGrid gridVRCPNeigborhood
  LoadGridLayout gridVRCPNeigborhood
  Set fndVRCPNeigborhood = Nothing
  On Error Resume Next
  Set fndVRCPNeigborhood = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRCPNeigborhood.Init gridVRCPNeigborhood
end sub
private sub OnTabClick()

      gridVRCPNeigborhood.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPNeigborhood.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPNeigborhood.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPNeigborhood.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRCPNeigborhood.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPNeigborhood.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPNeigborhood.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPNeigborhood.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRCPNeigborhood.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRCPNeigborhood = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRCPInterest_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRCPInterest" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRCPInterest"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRCPInterest" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRCPInterest"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRCPInterestAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPInterestAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPInterestEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPInterestEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPInterestDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPInterestDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPInterestRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPInterestRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRCPInterestPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPInterestPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRCPInterestCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPInterestCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRCPInterestFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPInterestFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRCPInterestRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRCPInterestRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRCPInterestAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPInterestAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRCPInterest" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Увлечения"/><Properties Name="Name" PropValue="mnuPopupVRCPInterest"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRCPInterestAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRCPInterestAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPInterestEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRCPInterestEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPInterestDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRCPInterestDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPInterestOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRCPInterestOpen"/></ControlData><ControlData Name="mnuVRCPInterestRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRCPInterestRef"/></ControlData><ControlData Name="mnuVRCPInterestS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRCPInterestS1"/></ControlData><ControlData Name="mnuVRCPInterestBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRCPInterestBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRCPInterestCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRCPInterestCOPY"/></ControlData><ControlData Name="mnuVRCPInterestCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRCPInterestCUT"/></ControlData><ControlData Name="mnuVRCPInterestPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRCPInterestPASTE"/></ControlData><ControlData Name="mnuVRCPInterestCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRCPInterestCHANGE"/></ControlData><ControlData Name="mnuVRCPInterestCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRCPInterestCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRCPInterestPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRCPInterestPrn"/></ControlData><ControlData Name="mnuVRCPInterestCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRCPInterestCfg"/></ControlData><ControlData Name="mnuVRCPInterestFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRCPInterestFind"/></ControlData><ControlData Name="mnuVRCPInterestAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRCPInterestAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRCPInterest" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRCPInterest"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRCPInterest as object
private menuActionVRCPInterest as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRCPInterestCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRCPInterest,&quot;gridVRCPInterest&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPInterestPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRCPInterest,&quot;Увлечения&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPInterestRef_Click()
  on error resume next
  item.VRCPInterest.Refresh
  gridVRCPInterest.itemCount = item.VRCPInterest.count
  gridVRCPInterest.Refetch
  gridVRCPInterest.Refresh
End Sub
Private Sub cmdVRCPInterestAcc_Click()
On Error Resume Next
If gridVRCPInterest.ItemCount = 0 Then Exit Sub
If gridVRCPInterest.Row &gt; 0 Then
 If gridVRCPInterest.RowIndex(gridVRCPInterest.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPInterest.RowBookmark(gridVRCPInterest.RowIndex(gridVRCPInterest.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRCPInterestEdit_Click()
  on error resume next
If gridVRCPInterest.ItemCount = 0 Then Exit Sub
If gridVRCPInterest.Row &gt; 0 then
 If gridVRCPInterest.RowIndex(gridVRCPInterest.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPInterest.RowBookmark(gridVRCPInterest.RowIndex(gridVRCPInterest.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRCPInterest_.Item = u
    again: frmVRCPInterest_.NotFirstTime = False
    frmVRCPInterest_.OnInit
    frmVRCPInterest_.Show vbModal
    If frmVRCPInterest_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRCPInterest.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRCPInterestDel_Click()
  on error resume next
  gridVRCPInterest.Delete
End Sub
Private Sub cmdVRCPInterestAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRCPInterest.Add()

      Set frmVRCPInterest_.Item = u
      again: frmVRCPInterest_.NotFirstTime = False
      frmVRCPInterest_.OnInit
      frmVRCPInterest_.Show vbModal
      If frmVRCPInterest_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRCPInterest.ItemCount = Item.VRCPInterest.Count
        gridVRCPInterest.Refresh
        gridVRCPInterest.RefreshGroups
        gridVRCPInterest.Refreshsort
        gridVRCPInterest.MoveToBookmark u.ID &amp; &quot;VRCPInterest&quot;
      Else
        Item.VRCPInterest.Delete u.ID
        Item.VRCPInterest.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRCPInterestFnd_Click()
  on error resume next
  fndVRCPInterest.ShowForm
End Sub
Private Sub cmdVRCPInterestRun_Click()
  on error resume next
  gridVRCPInterest_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRCPInterest_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRCPInterest.LoadRow gridVRCPInterest, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRCPInterest_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRCPInterest.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRCPInterest&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRCPInterest_DblClick()
  cmdVRCPInterestEdit_Click
End Sub
Private Sub gridVRCPInterest_KeyPress(KeyAscii As Integer)
  If gridVRCPInterest.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRCPInterest.FindOnPress KeyAscii
End Sub

Private Sub gridVRCPInterest_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRCPInterest.Row And LastRow &gt; 0 Then
  gridVRCPInterest.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRCPInterest.GetRowData(gridVRCPInterest.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRCPInterestPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRCPInterest.Add()
    If GetFromBuffer(u) Then
      gridVRCPInterest.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRCPInterest_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRCPInterestCfg_Click
        End If
    End If
end sub

private sub gridVRCPInterest_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRCPInterest
End If
end sub
private sub mnuVRCPInterestAdd_click()
   menuActionVRCPInterest =&quot;ADD&quot;
   menuTimerVRCPInterest.enabled = true
end sub
private sub mnuVRCPInterestEdit_click()
   menuActionVRCPInterest =&quot;EDIT&quot;
   menuTimerVRCPInterest.enabled = true
end sub
private sub mnuVRCPInterestDelete_click()
   menuActionVRCPInterest =&quot;DEL&quot;
   menuTimerVRCPInterest.enabled = true
end sub
private sub mnuVRCPInterestOpen_click()
   menuActionVRCPInterest =&quot;RUN&quot;
   menuTimerVRCPInterest.enabled = true
end sub
private sub mnuVRCPInterestRef_click()
   menuActionVRCPInterest =&quot;REF&quot;
   menuTimerVRCPInterest.enabled = true
end sub
  Private Sub mnuVRCPInterestCOPY_Click()
    On Error Resume Next
    If gridVRCPInterest.ItemCount = 0 Then Exit Sub
    If gridVRCPInterest.Row &gt; 0 Then
     If gridVRCPInterest.RowIndex(gridVRCPInterest.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPInterest.RowBookmark(gridVRCPInterest.RowIndex(gridVRCPInterest.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRCPInterestCUT_Click()
    On Error Resume Next
    If gridVRCPInterest.ItemCount = 0 Then Exit Sub
    If gridVRCPInterest.Row &gt; 0 Then
     If gridVRCPInterest.RowIndex(gridVRCPInterest.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPInterest.RowBookmark(gridVRCPInterest.RowIndex(gridVRCPInterest.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRCPInterest.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRCPInterestCHANGE_Click()
  On Error Resume Next
  If gridVRCPInterest.ItemCount = 0 Then Exit Sub
  If gridVRCPInterest.Row &gt; 0 Then
   If gridVRCPInterest.RowIndex(gridVRCPInterest.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPInterest.RowBookmark(gridVRCPInterest.RowIndex(gridVRCPInterest.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRCPInterest.ItemCount = u.parent.Count
      gridVRCPInterest.RefreshRowIndex gridVRCPInterest.RowIndex(gridVRCPInterest.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRCPInterestCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRCPInterestPrn_click()
   menuActionVRCPInterest =&quot;PRN&quot;
   menuTimerVRCPInterest.enabled = true
end sub
private sub mnuVRCPInterestCfg_click()
   menuActionVRCPInterest =&quot;CFG&quot;
   menuTimerVRCPInterest.enabled = true
end sub
private sub mnuVRCPInterestFind_click()
   menuActionVRCPInterest =&quot;FND&quot;
   menuTimerVRCPInterest.enabled = true
end sub
private sub mnuVRCPInterestAcc_click()
   menuActionVRCPInterest =&quot;ACC&quot;
   menuTimerVRCPInterest.enabled = true
end sub
private sub menuTimerVRCPInterest_timer()
   menuTimerVRCPInterest.enabled = false
   if menuActionVRCPInterest =&quot;ADD&quot; then cmdVRCPInterestADD_CLick
   if menuActionVRCPInterest =&quot;EDIT&quot; then cmdVRCPInterestEDIT_CLick
   if menuActionVRCPInterest =&quot;DEL&quot; then cmdVRCPInterestDEL_CLick
   if menuActionVRCPInterest =&quot;RUN&quot; then cmdVRCPInterestRUN_CLick
   if menuActionVRCPInterest =&quot;REF&quot; then cmdVRCPInterestREF_CLick
   if menuActionVRCPInterest =&quot;PRN&quot; then cmdVRCPInterestPRN_CLick
   if menuActionVRCPInterest =&quot;CFG&quot; then cmdVRCPInterestCFG_CLick
   if menuActionVRCPInterest =&quot;FND&quot; then cmdVRCPInterestFND_CLick
   if menuActionVRCPInterest =&quot;ACC&quot; then cmdVRCPInterestACC_CLick
   menuActionVRCPInterest =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRCPInterestAdd,cmdVRCPInterestAdd.tag
  LoadBtnPictures cmdVRCPInterestEdit,cmdVRCPInterestEdit.tag
  LoadBtnPictures cmdVRCPInterestDel,cmdVRCPInterestDel.tag
  LoadBtnPictures cmdVRCPInterestRef,cmdVRCPInterestRef.tag
  LoadBtnPictures cmdVRCPInterestPrn,cmdVRCPInterestPrn.tag
  LoadBtnPictures cmdVRCPInterestFnd,cmdVRCPInterestFnd.tag
  LoadBtnPictures cmdVRCPInterestRun,cmdVRCPInterestRun.tag
  LoadBtnPictures cmdVRCPInterestAcc,cmdVRCPInterestAcc.tag
  LoadBtnPictures cmdVRCPInterestCfg,cmdVRCPInterestCfg.tag
  item.VRCPInterest.PrepareGrid gridVRCPInterest
  LoadGridLayout gridVRCPInterest
  Set fndVRCPInterest = Nothing
  On Error Resume Next
  Set fndVRCPInterest = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRCPInterest.Init gridVRCPInterest
end sub
private sub OnTabClick()

      gridVRCPInterest.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPInterest.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPInterest.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPInterest.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRCPInterest.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPInterest.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPInterest.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPInterest.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRCPInterest.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRCPInterest = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRCPPresents_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRCPPresents" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRCPPresents"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRCPPresents" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRCPPresents"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRCPPresentsAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPPresentsAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPPresentsEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPPresentsEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPPresentsDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPPresentsDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPPresentsRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPPresentsRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRCPPresentsPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPPresentsPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRCPPresentsCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPPresentsCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRCPPresentsFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPPresentsFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRCPPresentsRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRCPPresentsRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRCPPresentsAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPPresentsAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRCPPresents" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Подарки"/><Properties Name="Name" PropValue="mnuPopupVRCPPresents"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRCPPresentsAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRCPPresentsAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPPresentsEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRCPPresentsEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPPresentsDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRCPPresentsDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPPresentsOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRCPPresentsOpen"/></ControlData><ControlData Name="mnuVRCPPresentsRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRCPPresentsRef"/></ControlData><ControlData Name="mnuVRCPPresentsS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRCPPresentsS1"/></ControlData><ControlData Name="mnuVRCPPresentsBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRCPPresentsBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRCPPresentsCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRCPPresentsCOPY"/></ControlData><ControlData Name="mnuVRCPPresentsCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRCPPresentsCUT"/></ControlData><ControlData Name="mnuVRCPPresentsPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRCPPresentsPASTE"/></ControlData><ControlData Name="mnuVRCPPresentsCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRCPPresentsCHANGE"/></ControlData><ControlData Name="mnuVRCPPresentsCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRCPPresentsCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRCPPresentsPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRCPPresentsPrn"/></ControlData><ControlData Name="mnuVRCPPresentsCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRCPPresentsCfg"/></ControlData><ControlData Name="mnuVRCPPresentsFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRCPPresentsFind"/></ControlData><ControlData Name="mnuVRCPPresentsAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRCPPresentsAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRCPPresents" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRCPPresents"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRCPPresents as object
private menuActionVRCPPresents as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRCPPresentsCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRCPPresents,&quot;gridVRCPPresents&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPPresentsPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRCPPresents,&quot;Подарки&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPPresentsRef_Click()
  on error resume next
  item.VRCPPresents.Refresh
  gridVRCPPresents.itemCount = item.VRCPPresents.count
  gridVRCPPresents.Refetch
  gridVRCPPresents.Refresh
End Sub
Private Sub cmdVRCPPresentsAcc_Click()
On Error Resume Next
If gridVRCPPresents.ItemCount = 0 Then Exit Sub
If gridVRCPPresents.Row &gt; 0 Then
 If gridVRCPPresents.RowIndex(gridVRCPPresents.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPPresents.RowBookmark(gridVRCPPresents.RowIndex(gridVRCPPresents.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRCPPresentsEdit_Click()
  on error resume next
If gridVRCPPresents.ItemCount = 0 Then Exit Sub
If gridVRCPPresents.Row &gt; 0 then
 If gridVRCPPresents.RowIndex(gridVRCPPresents.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPPresents.RowBookmark(gridVRCPPresents.RowIndex(gridVRCPPresents.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRCPPresents_.Item = u
    again: frmVRCPPresents_.NotFirstTime = False
    frmVRCPPresents_.OnInit
    frmVRCPPresents_.Show vbModal
    If frmVRCPPresents_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRCPPresents.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRCPPresentsDel_Click()
  on error resume next
  gridVRCPPresents.Delete
End Sub
Private Sub cmdVRCPPresentsAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRCPPresents.Add()

      Set frmVRCPPresents_.Item = u
      again: frmVRCPPresents_.NotFirstTime = False
      frmVRCPPresents_.OnInit
      frmVRCPPresents_.Show vbModal
      If frmVRCPPresents_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRCPPresents.ItemCount = Item.VRCPPresents.Count
        gridVRCPPresents.Refresh
        gridVRCPPresents.RefreshGroups
        gridVRCPPresents.Refreshsort
        gridVRCPPresents.MoveToBookmark u.ID &amp; &quot;VRCPPresents&quot;
      Else
        Item.VRCPPresents.Delete u.ID
        Item.VRCPPresents.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRCPPresentsFnd_Click()
  on error resume next
  fndVRCPPresents.ShowForm
End Sub
Private Sub cmdVRCPPresentsRun_Click()
  on error resume next
  gridVRCPPresents_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRCPPresents_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRCPPresents.LoadRow gridVRCPPresents, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRCPPresents_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRCPPresents.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRCPPresents&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRCPPresents_DblClick()
  cmdVRCPPresentsEdit_Click
End Sub
Private Sub gridVRCPPresents_KeyPress(KeyAscii As Integer)
  If gridVRCPPresents.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRCPPresents.FindOnPress KeyAscii
End Sub

Private Sub gridVRCPPresents_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRCPPresents.Row And LastRow &gt; 0 Then
  gridVRCPPresents.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRCPPresents.GetRowData(gridVRCPPresents.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRCPPresentsPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRCPPresents.Add()
    If GetFromBuffer(u) Then
      gridVRCPPresents.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRCPPresents_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRCPPresentsCfg_Click
        End If
    End If
end sub

private sub gridVRCPPresents_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRCPPresents
End If
end sub
private sub mnuVRCPPresentsAdd_click()
   menuActionVRCPPresents =&quot;ADD&quot;
   menuTimerVRCPPresents.enabled = true
end sub
private sub mnuVRCPPresentsEdit_click()
   menuActionVRCPPresents =&quot;EDIT&quot;
   menuTimerVRCPPresents.enabled = true
end sub
private sub mnuVRCPPresentsDelete_click()
   menuActionVRCPPresents =&quot;DEL&quot;
   menuTimerVRCPPresents.enabled = true
end sub
private sub mnuVRCPPresentsOpen_click()
   menuActionVRCPPresents =&quot;RUN&quot;
   menuTimerVRCPPresents.enabled = true
end sub
private sub mnuVRCPPresentsRef_click()
   menuActionVRCPPresents =&quot;REF&quot;
   menuTimerVRCPPresents.enabled = true
end sub
  Private Sub mnuVRCPPresentsCOPY_Click()
    On Error Resume Next
    If gridVRCPPresents.ItemCount = 0 Then Exit Sub
    If gridVRCPPresents.Row &gt; 0 Then
     If gridVRCPPresents.RowIndex(gridVRCPPresents.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPPresents.RowBookmark(gridVRCPPresents.RowIndex(gridVRCPPresents.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRCPPresentsCUT_Click()
    On Error Resume Next
    If gridVRCPPresents.ItemCount = 0 Then Exit Sub
    If gridVRCPPresents.Row &gt; 0 Then
     If gridVRCPPresents.RowIndex(gridVRCPPresents.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPPresents.RowBookmark(gridVRCPPresents.RowIndex(gridVRCPPresents.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRCPPresents.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRCPPresentsCHANGE_Click()
  On Error Resume Next
  If gridVRCPPresents.ItemCount = 0 Then Exit Sub
  If gridVRCPPresents.Row &gt; 0 Then
   If gridVRCPPresents.RowIndex(gridVRCPPresents.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPPresents.RowBookmark(gridVRCPPresents.RowIndex(gridVRCPPresents.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRCPPresents.ItemCount = u.parent.Count
      gridVRCPPresents.RefreshRowIndex gridVRCPPresents.RowIndex(gridVRCPPresents.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRCPPresentsCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRCPPresentsPrn_click()
   menuActionVRCPPresents =&quot;PRN&quot;
   menuTimerVRCPPresents.enabled = true
end sub
private sub mnuVRCPPresentsCfg_click()
   menuActionVRCPPresents =&quot;CFG&quot;
   menuTimerVRCPPresents.enabled = true
end sub
private sub mnuVRCPPresentsFind_click()
   menuActionVRCPPresents =&quot;FND&quot;
   menuTimerVRCPPresents.enabled = true
end sub
private sub mnuVRCPPresentsAcc_click()
   menuActionVRCPPresents =&quot;ACC&quot;
   menuTimerVRCPPresents.enabled = true
end sub
private sub menuTimerVRCPPresents_timer()
   menuTimerVRCPPresents.enabled = false
   if menuActionVRCPPresents =&quot;ADD&quot; then cmdVRCPPresentsADD_CLick
   if menuActionVRCPPresents =&quot;EDIT&quot; then cmdVRCPPresentsEDIT_CLick
   if menuActionVRCPPresents =&quot;DEL&quot; then cmdVRCPPresentsDEL_CLick
   if menuActionVRCPPresents =&quot;RUN&quot; then cmdVRCPPresentsRUN_CLick
   if menuActionVRCPPresents =&quot;REF&quot; then cmdVRCPPresentsREF_CLick
   if menuActionVRCPPresents =&quot;PRN&quot; then cmdVRCPPresentsPRN_CLick
   if menuActionVRCPPresents =&quot;CFG&quot; then cmdVRCPPresentsCFG_CLick
   if menuActionVRCPPresents =&quot;FND&quot; then cmdVRCPPresentsFND_CLick
   if menuActionVRCPPresents =&quot;ACC&quot; then cmdVRCPPresentsACC_CLick
   menuActionVRCPPresents =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRCPPresentsAdd,cmdVRCPPresentsAdd.tag
  LoadBtnPictures cmdVRCPPresentsEdit,cmdVRCPPresentsEdit.tag
  LoadBtnPictures cmdVRCPPresentsDel,cmdVRCPPresentsDel.tag
  LoadBtnPictures cmdVRCPPresentsRef,cmdVRCPPresentsRef.tag
  LoadBtnPictures cmdVRCPPresentsPrn,cmdVRCPPresentsPrn.tag
  LoadBtnPictures cmdVRCPPresentsFnd,cmdVRCPPresentsFnd.tag
  LoadBtnPictures cmdVRCPPresentsRun,cmdVRCPPresentsRun.tag
  LoadBtnPictures cmdVRCPPresentsAcc,cmdVRCPPresentsAcc.tag
  LoadBtnPictures cmdVRCPPresentsCfg,cmdVRCPPresentsCfg.tag
  item.VRCPPresents.PrepareGrid gridVRCPPresents
  LoadGridLayout gridVRCPPresents
  Set fndVRCPPresents = Nothing
  On Error Resume Next
  Set fndVRCPPresents = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRCPPresents.Init gridVRCPPresents
end sub
private sub OnTabClick()

      gridVRCPPresents.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPPresents.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPPresents.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPPresents.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRCPPresents.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPPresents.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPPresents.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPPresents.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRCPPresents.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRCPPresents = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRCPSpecial_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRCPSpecial" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRCPSpecial"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRCPSpecial" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRCPSpecial"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRCPSpecialAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSpecialAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPSpecialEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSpecialEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPSpecialDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSpecialDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPSpecialRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSpecialRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRCPSpecialPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSpecialPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRCPSpecialCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSpecialCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRCPSpecialFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSpecialFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRCPSpecialRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRCPSpecialRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRCPSpecialAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSpecialAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRCPSpecial" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Факты"/><Properties Name="Name" PropValue="mnuPopupVRCPSpecial"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRCPSpecialAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRCPSpecialAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPSpecialEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRCPSpecialEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPSpecialDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRCPSpecialDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPSpecialOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRCPSpecialOpen"/></ControlData><ControlData Name="mnuVRCPSpecialRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRCPSpecialRef"/></ControlData><ControlData Name="mnuVRCPSpecialS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRCPSpecialS1"/></ControlData><ControlData Name="mnuVRCPSpecialBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRCPSpecialBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRCPSpecialCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRCPSpecialCOPY"/></ControlData><ControlData Name="mnuVRCPSpecialCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRCPSpecialCUT"/></ControlData><ControlData Name="mnuVRCPSpecialPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRCPSpecialPASTE"/></ControlData><ControlData Name="mnuVRCPSpecialCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRCPSpecialCHANGE"/></ControlData><ControlData Name="mnuVRCPSpecialCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRCPSpecialCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRCPSpecialPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRCPSpecialPrn"/></ControlData><ControlData Name="mnuVRCPSpecialCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRCPSpecialCfg"/></ControlData><ControlData Name="mnuVRCPSpecialFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRCPSpecialFind"/></ControlData><ControlData Name="mnuVRCPSpecialAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRCPSpecialAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRCPSpecial" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRCPSpecial"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRCPSpecial as object
private menuActionVRCPSpecial as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRCPSpecialCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRCPSpecial,&quot;gridVRCPSpecial&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPSpecialPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRCPSpecial,&quot;Факты&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPSpecialRef_Click()
  on error resume next
  item.VRCPSpecial.Refresh
  gridVRCPSpecial.itemCount = item.VRCPSpecial.count
  gridVRCPSpecial.Refetch
  gridVRCPSpecial.Refresh
End Sub
Private Sub cmdVRCPSpecialAcc_Click()
On Error Resume Next
If gridVRCPSpecial.ItemCount = 0 Then Exit Sub
If gridVRCPSpecial.Row &gt; 0 Then
 If gridVRCPSpecial.RowIndex(gridVRCPSpecial.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPSpecial.RowBookmark(gridVRCPSpecial.RowIndex(gridVRCPSpecial.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRCPSpecialEdit_Click()
  on error resume next
If gridVRCPSpecial.ItemCount = 0 Then Exit Sub
If gridVRCPSpecial.Row &gt; 0 then
 If gridVRCPSpecial.RowIndex(gridVRCPSpecial.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPSpecial.RowBookmark(gridVRCPSpecial.RowIndex(gridVRCPSpecial.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRCPSpecial_.Item = u
    again: frmVRCPSpecial_.NotFirstTime = False
    frmVRCPSpecial_.OnInit
    frmVRCPSpecial_.Show vbModal
    If frmVRCPSpecial_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRCPSpecial.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRCPSpecialDel_Click()
  on error resume next
  gridVRCPSpecial.Delete
End Sub
Private Sub cmdVRCPSpecialAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRCPSpecial.Add()

      Set frmVRCPSpecial_.Item = u
      again: frmVRCPSpecial_.NotFirstTime = False
      frmVRCPSpecial_.OnInit
      frmVRCPSpecial_.Show vbModal
      If frmVRCPSpecial_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRCPSpecial.ItemCount = Item.VRCPSpecial.Count
        gridVRCPSpecial.Refresh
        gridVRCPSpecial.RefreshGroups
        gridVRCPSpecial.Refreshsort
        gridVRCPSpecial.MoveToBookmark u.ID &amp; &quot;VRCPSpecial&quot;
      Else
        Item.VRCPSpecial.Delete u.ID
        Item.VRCPSpecial.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRCPSpecialFnd_Click()
  on error resume next
  fndVRCPSpecial.ShowForm
End Sub
Private Sub cmdVRCPSpecialRun_Click()
  on error resume next
  gridVRCPSpecial_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRCPSpecial_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRCPSpecial.LoadRow gridVRCPSpecial, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRCPSpecial_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRCPSpecial.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRCPSpecial&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRCPSpecial_DblClick()
  cmdVRCPSpecialEdit_Click
End Sub
Private Sub gridVRCPSpecial_KeyPress(KeyAscii As Integer)
  If gridVRCPSpecial.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRCPSpecial.FindOnPress KeyAscii
End Sub

Private Sub gridVRCPSpecial_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRCPSpecial.Row And LastRow &gt; 0 Then
  gridVRCPSpecial.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRCPSpecial.GetRowData(gridVRCPSpecial.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRCPSpecialPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRCPSpecial.Add()
    If GetFromBuffer(u) Then
      gridVRCPSpecial.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRCPSpecial_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRCPSpecialCfg_Click
        End If
    End If
end sub

private sub gridVRCPSpecial_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRCPSpecial
End If
end sub
private sub mnuVRCPSpecialAdd_click()
   menuActionVRCPSpecial =&quot;ADD&quot;
   menuTimerVRCPSpecial.enabled = true
end sub
private sub mnuVRCPSpecialEdit_click()
   menuActionVRCPSpecial =&quot;EDIT&quot;
   menuTimerVRCPSpecial.enabled = true
end sub
private sub mnuVRCPSpecialDelete_click()
   menuActionVRCPSpecial =&quot;DEL&quot;
   menuTimerVRCPSpecial.enabled = true
end sub
private sub mnuVRCPSpecialOpen_click()
   menuActionVRCPSpecial =&quot;RUN&quot;
   menuTimerVRCPSpecial.enabled = true
end sub
private sub mnuVRCPSpecialRef_click()
   menuActionVRCPSpecial =&quot;REF&quot;
   menuTimerVRCPSpecial.enabled = true
end sub
  Private Sub mnuVRCPSpecialCOPY_Click()
    On Error Resume Next
    If gridVRCPSpecial.ItemCount = 0 Then Exit Sub
    If gridVRCPSpecial.Row &gt; 0 Then
     If gridVRCPSpecial.RowIndex(gridVRCPSpecial.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPSpecial.RowBookmark(gridVRCPSpecial.RowIndex(gridVRCPSpecial.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRCPSpecialCUT_Click()
    On Error Resume Next
    If gridVRCPSpecial.ItemCount = 0 Then Exit Sub
    If gridVRCPSpecial.Row &gt; 0 Then
     If gridVRCPSpecial.RowIndex(gridVRCPSpecial.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPSpecial.RowBookmark(gridVRCPSpecial.RowIndex(gridVRCPSpecial.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRCPSpecial.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRCPSpecialCHANGE_Click()
  On Error Resume Next
  If gridVRCPSpecial.ItemCount = 0 Then Exit Sub
  If gridVRCPSpecial.Row &gt; 0 Then
   If gridVRCPSpecial.RowIndex(gridVRCPSpecial.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPSpecial.RowBookmark(gridVRCPSpecial.RowIndex(gridVRCPSpecial.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRCPSpecial.ItemCount = u.parent.Count
      gridVRCPSpecial.RefreshRowIndex gridVRCPSpecial.RowIndex(gridVRCPSpecial.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRCPSpecialCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRCPSpecialPrn_click()
   menuActionVRCPSpecial =&quot;PRN&quot;
   menuTimerVRCPSpecial.enabled = true
end sub
private sub mnuVRCPSpecialCfg_click()
   menuActionVRCPSpecial =&quot;CFG&quot;
   menuTimerVRCPSpecial.enabled = true
end sub
private sub mnuVRCPSpecialFind_click()
   menuActionVRCPSpecial =&quot;FND&quot;
   menuTimerVRCPSpecial.enabled = true
end sub
private sub mnuVRCPSpecialAcc_click()
   menuActionVRCPSpecial =&quot;ACC&quot;
   menuTimerVRCPSpecial.enabled = true
end sub
private sub menuTimerVRCPSpecial_timer()
   menuTimerVRCPSpecial.enabled = false
   if menuActionVRCPSpecial =&quot;ADD&quot; then cmdVRCPSpecialADD_CLick
   if menuActionVRCPSpecial =&quot;EDIT&quot; then cmdVRCPSpecialEDIT_CLick
   if menuActionVRCPSpecial =&quot;DEL&quot; then cmdVRCPSpecialDEL_CLick
   if menuActionVRCPSpecial =&quot;RUN&quot; then cmdVRCPSpecialRUN_CLick
   if menuActionVRCPSpecial =&quot;REF&quot; then cmdVRCPSpecialREF_CLick
   if menuActionVRCPSpecial =&quot;PRN&quot; then cmdVRCPSpecialPRN_CLick
   if menuActionVRCPSpecial =&quot;CFG&quot; then cmdVRCPSpecialCFG_CLick
   if menuActionVRCPSpecial =&quot;FND&quot; then cmdVRCPSpecialFND_CLick
   if menuActionVRCPSpecial =&quot;ACC&quot; then cmdVRCPSpecialACC_CLick
   menuActionVRCPSpecial =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRCPSpecialAdd,cmdVRCPSpecialAdd.tag
  LoadBtnPictures cmdVRCPSpecialEdit,cmdVRCPSpecialEdit.tag
  LoadBtnPictures cmdVRCPSpecialDel,cmdVRCPSpecialDel.tag
  LoadBtnPictures cmdVRCPSpecialRef,cmdVRCPSpecialRef.tag
  LoadBtnPictures cmdVRCPSpecialPrn,cmdVRCPSpecialPrn.tag
  LoadBtnPictures cmdVRCPSpecialFnd,cmdVRCPSpecialFnd.tag
  LoadBtnPictures cmdVRCPSpecialRun,cmdVRCPSpecialRun.tag
  LoadBtnPictures cmdVRCPSpecialAcc,cmdVRCPSpecialAcc.tag
  LoadBtnPictures cmdVRCPSpecialCfg,cmdVRCPSpecialCfg.tag
  item.VRCPSpecial.PrepareGrid gridVRCPSpecial
  LoadGridLayout gridVRCPSpecial
  Set fndVRCPSpecial = Nothing
  On Error Resume Next
  Set fndVRCPSpecial = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRCPSpecial.Init gridVRCPSpecial
end sub
private sub OnTabClick()

      gridVRCPSpecial.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPSpecial.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPSpecial.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPSpecial.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRCPSpecial.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPSpecial.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPSpecial.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPSpecial.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRCPSpecial.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRCPSpecial = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRCPDates_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRCPDates" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRCPDates"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRCPDates" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRCPDates"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRCPDatesAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPDatesAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPDatesEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPDatesEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPDatesDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPDatesDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPDatesRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPDatesRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRCPDatesPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPDatesPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRCPDatesCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPDatesCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRCPDatesFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPDatesFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRCPDatesRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRCPDatesRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRCPDatesAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPDatesAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRCPDates" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Памятные даты"/><Properties Name="Name" PropValue="mnuPopupVRCPDates"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRCPDatesAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRCPDatesAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPDatesEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRCPDatesEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPDatesDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRCPDatesDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPDatesOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRCPDatesOpen"/></ControlData><ControlData Name="mnuVRCPDatesRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRCPDatesRef"/></ControlData><ControlData Name="mnuVRCPDatesS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRCPDatesS1"/></ControlData><ControlData Name="mnuVRCPDatesBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRCPDatesBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRCPDatesCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRCPDatesCOPY"/></ControlData><ControlData Name="mnuVRCPDatesCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRCPDatesCUT"/></ControlData><ControlData Name="mnuVRCPDatesPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRCPDatesPASTE"/></ControlData><ControlData Name="mnuVRCPDatesCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRCPDatesCHANGE"/></ControlData><ControlData Name="mnuVRCPDatesCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRCPDatesCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRCPDatesPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRCPDatesPrn"/></ControlData><ControlData Name="mnuVRCPDatesCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRCPDatesCfg"/></ControlData><ControlData Name="mnuVRCPDatesFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRCPDatesFind"/></ControlData><ControlData Name="mnuVRCPDatesAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRCPDatesAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRCPDates" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRCPDates"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRCPDates as object
private menuActionVRCPDates as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRCPDatesCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRCPDates,&quot;gridVRCPDates&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPDatesPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRCPDates,&quot;Памятные даты&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPDatesRef_Click()
  on error resume next
  item.VRCPDates.Refresh
  gridVRCPDates.itemCount = item.VRCPDates.count
  gridVRCPDates.Refetch
  gridVRCPDates.Refresh
End Sub
Private Sub cmdVRCPDatesAcc_Click()
On Error Resume Next
If gridVRCPDates.ItemCount = 0 Then Exit Sub
If gridVRCPDates.Row &gt; 0 Then
 If gridVRCPDates.RowIndex(gridVRCPDates.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPDates.RowBookmark(gridVRCPDates.RowIndex(gridVRCPDates.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRCPDatesEdit_Click()
  on error resume next
If gridVRCPDates.ItemCount = 0 Then Exit Sub
If gridVRCPDates.Row &gt; 0 then
 If gridVRCPDates.RowIndex(gridVRCPDates.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPDates.RowBookmark(gridVRCPDates.RowIndex(gridVRCPDates.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRCPDates_.Item = u
    again: frmVRCPDates_.NotFirstTime = False
    frmVRCPDates_.OnInit
    frmVRCPDates_.Show vbModal
    If frmVRCPDates_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRCPDates.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRCPDatesDel_Click()
  on error resume next
  gridVRCPDates.Delete
End Sub
Private Sub cmdVRCPDatesAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRCPDates.Add()

      Set frmVRCPDates_.Item = u
      again: frmVRCPDates_.NotFirstTime = False
      frmVRCPDates_.OnInit
      frmVRCPDates_.Show vbModal
      If frmVRCPDates_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRCPDates.ItemCount = Item.VRCPDates.Count
        gridVRCPDates.Refresh
        gridVRCPDates.RefreshGroups
        gridVRCPDates.Refreshsort
        gridVRCPDates.MoveToBookmark u.ID &amp; &quot;VRCPDates&quot;
      Else
        Item.VRCPDates.Delete u.ID
        Item.VRCPDates.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRCPDatesFnd_Click()
  on error resume next
  fndVRCPDates.ShowForm
End Sub
Private Sub cmdVRCPDatesRun_Click()
  on error resume next
  gridVRCPDates_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRCPDates_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRCPDates.LoadRow gridVRCPDates, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRCPDates_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRCPDates.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRCPDates&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRCPDates_DblClick()
  cmdVRCPDatesEdit_Click
End Sub
Private Sub gridVRCPDates_KeyPress(KeyAscii As Integer)
  If gridVRCPDates.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRCPDates.FindOnPress KeyAscii
End Sub

Private Sub gridVRCPDates_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRCPDates.Row And LastRow &gt; 0 Then
  gridVRCPDates.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRCPDates.GetRowData(gridVRCPDates.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRCPDatesPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRCPDates.Add()
    If GetFromBuffer(u) Then
      gridVRCPDates.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRCPDates_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRCPDatesCfg_Click
        End If
    End If
end sub

private sub gridVRCPDates_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRCPDates
End If
end sub
private sub mnuVRCPDatesAdd_click()
   menuActionVRCPDates =&quot;ADD&quot;
   menuTimerVRCPDates.enabled = true
end sub
private sub mnuVRCPDatesEdit_click()
   menuActionVRCPDates =&quot;EDIT&quot;
   menuTimerVRCPDates.enabled = true
end sub
private sub mnuVRCPDatesDelete_click()
   menuActionVRCPDates =&quot;DEL&quot;
   menuTimerVRCPDates.enabled = true
end sub
private sub mnuVRCPDatesOpen_click()
   menuActionVRCPDates =&quot;RUN&quot;
   menuTimerVRCPDates.enabled = true
end sub
private sub mnuVRCPDatesRef_click()
   menuActionVRCPDates =&quot;REF&quot;
   menuTimerVRCPDates.enabled = true
end sub
  Private Sub mnuVRCPDatesCOPY_Click()
    On Error Resume Next
    If gridVRCPDates.ItemCount = 0 Then Exit Sub
    If gridVRCPDates.Row &gt; 0 Then
     If gridVRCPDates.RowIndex(gridVRCPDates.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPDates.RowBookmark(gridVRCPDates.RowIndex(gridVRCPDates.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRCPDatesCUT_Click()
    On Error Resume Next
    If gridVRCPDates.ItemCount = 0 Then Exit Sub
    If gridVRCPDates.Row &gt; 0 Then
     If gridVRCPDates.RowIndex(gridVRCPDates.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPDates.RowBookmark(gridVRCPDates.RowIndex(gridVRCPDates.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRCPDates.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRCPDatesCHANGE_Click()
  On Error Resume Next
  If gridVRCPDates.ItemCount = 0 Then Exit Sub
  If gridVRCPDates.Row &gt; 0 Then
   If gridVRCPDates.RowIndex(gridVRCPDates.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPDates.RowBookmark(gridVRCPDates.RowIndex(gridVRCPDates.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRCPDates.ItemCount = u.parent.Count
      gridVRCPDates.RefreshRowIndex gridVRCPDates.RowIndex(gridVRCPDates.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRCPDatesCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRCPDatesPrn_click()
   menuActionVRCPDates =&quot;PRN&quot;
   menuTimerVRCPDates.enabled = true
end sub
private sub mnuVRCPDatesCfg_click()
   menuActionVRCPDates =&quot;CFG&quot;
   menuTimerVRCPDates.enabled = true
end sub
private sub mnuVRCPDatesFind_click()
   menuActionVRCPDates =&quot;FND&quot;
   menuTimerVRCPDates.enabled = true
end sub
private sub mnuVRCPDatesAcc_click()
   menuActionVRCPDates =&quot;ACC&quot;
   menuTimerVRCPDates.enabled = true
end sub
private sub menuTimerVRCPDates_timer()
   menuTimerVRCPDates.enabled = false
   if menuActionVRCPDates =&quot;ADD&quot; then cmdVRCPDatesADD_CLick
   if menuActionVRCPDates =&quot;EDIT&quot; then cmdVRCPDatesEDIT_CLick
   if menuActionVRCPDates =&quot;DEL&quot; then cmdVRCPDatesDEL_CLick
   if menuActionVRCPDates =&quot;RUN&quot; then cmdVRCPDatesRUN_CLick
   if menuActionVRCPDates =&quot;REF&quot; then cmdVRCPDatesREF_CLick
   if menuActionVRCPDates =&quot;PRN&quot; then cmdVRCPDatesPRN_CLick
   if menuActionVRCPDates =&quot;CFG&quot; then cmdVRCPDatesCFG_CLick
   if menuActionVRCPDates =&quot;FND&quot; then cmdVRCPDatesFND_CLick
   if menuActionVRCPDates =&quot;ACC&quot; then cmdVRCPDatesACC_CLick
   menuActionVRCPDates =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRCPDatesAdd,cmdVRCPDatesAdd.tag
  LoadBtnPictures cmdVRCPDatesEdit,cmdVRCPDatesEdit.tag
  LoadBtnPictures cmdVRCPDatesDel,cmdVRCPDatesDel.tag
  LoadBtnPictures cmdVRCPDatesRef,cmdVRCPDatesRef.tag
  LoadBtnPictures cmdVRCPDatesPrn,cmdVRCPDatesPrn.tag
  LoadBtnPictures cmdVRCPDatesFnd,cmdVRCPDatesFnd.tag
  LoadBtnPictures cmdVRCPDatesRun,cmdVRCPDatesRun.tag
  LoadBtnPictures cmdVRCPDatesAcc,cmdVRCPDatesAcc.tag
  LoadBtnPictures cmdVRCPDatesCfg,cmdVRCPDatesCfg.tag
  item.VRCPDates.PrepareGrid gridVRCPDates
  LoadGridLayout gridVRCPDates
  Set fndVRCPDates = Nothing
  On Error Resume Next
  Set fndVRCPDates = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRCPDates.Init gridVRCPDates
end sub
private sub OnTabClick()

      gridVRCPDates.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPDates.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPDates.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPDates.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRCPDates.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPDates.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPDates.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPDates.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRCPDates.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRCPDates = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRCPReports_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRCPReports" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRCPReports"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRCPReports" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRCPReports"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRCPReportsAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPReportsAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPReportsEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPReportsEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPReportsDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPReportsDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPReportsRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPReportsRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRCPReportsPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPReportsPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRCPReportsCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPReportsCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRCPReportsFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPReportsFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRCPReportsRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRCPReportsRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRCPReportsAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPReportsAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRCPReports" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Отчеты"/><Properties Name="Name" PropValue="mnuPopupVRCPReports"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRCPReportsAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRCPReportsAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPReportsEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRCPReportsEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPReportsDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRCPReportsDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPReportsOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRCPReportsOpen"/></ControlData><ControlData Name="mnuVRCPReportsRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRCPReportsRef"/></ControlData><ControlData Name="mnuVRCPReportsS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRCPReportsS1"/></ControlData><ControlData Name="mnuVRCPReportsBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRCPReportsBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRCPReportsCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRCPReportsCOPY"/></ControlData><ControlData Name="mnuVRCPReportsCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRCPReportsCUT"/></ControlData><ControlData Name="mnuVRCPReportsPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRCPReportsPASTE"/></ControlData><ControlData Name="mnuVRCPReportsCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRCPReportsCHANGE"/></ControlData><ControlData Name="mnuVRCPReportsCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRCPReportsCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRCPReportsPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRCPReportsPrn"/></ControlData><ControlData Name="mnuVRCPReportsCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRCPReportsCfg"/></ControlData><ControlData Name="mnuVRCPReportsFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRCPReportsFind"/></ControlData><ControlData Name="mnuVRCPReportsAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRCPReportsAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRCPReports" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRCPReports"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRCPReports as object
private menuActionVRCPReports as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opVRCPReports_MakeRpt_(RowItem as object)
with RowItem
Run_VBMakeReport  ReportType:=&quot;PERS&quot;,  RowItem:=RowItem
end with
end sub
private sub opVRCPReports_OpenRef_(RowItem as object)
with RowItem
Run_VBOpenRef  ID:=.Report.ID, StartMode:=&quot;PERS&quot;,  RowItem:=RowItem
end with
end sub
Private Sub cmdVRCPReportsCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRCPReports,&quot;gridVRCPReports&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPReportsPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRCPReports,&quot;Отчеты&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPReportsRef_Click()
  on error resume next
  item.VRCPReports.Refresh
  gridVRCPReports.itemCount = item.VRCPReports.count
  gridVRCPReports.Refetch
  gridVRCPReports.Refresh
End Sub
Private Sub cmdVRCPReportsAcc_Click()
On Error Resume Next
If gridVRCPReports.ItemCount = 0 Then Exit Sub
If gridVRCPReports.Row &gt; 0 Then
 If gridVRCPReports.RowIndex(gridVRCPReports.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPReports.RowBookmark(gridVRCPReports.RowIndex(gridVRCPReports.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRCPReportsEdit_Click()
  on error resume next
If gridVRCPReports.ItemCount = 0 Then Exit Sub
If gridVRCPReports.Row &gt; 0 then
 If gridVRCPReports.RowIndex(gridVRCPReports.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPReports.RowBookmark(gridVRCPReports.RowIndex(gridVRCPReports.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRCPReports_.Item = u
    again: frmVRCPReports_.NotFirstTime = False
    frmVRCPReports_.OnInit
    frmVRCPReports_.Show vbModal
    If frmVRCPReports_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRCPReports.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRCPReportsDel_Click()
  on error resume next
  gridVRCPReports.Delete
End Sub
Private Sub cmdVRCPReportsAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRCPReports.Add()
 Dim ID As String
 ID = CreateGUID2
 Call u.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 Set u.Report = u.Application.Manager.GetInstanceObject(ID)
 u.Save
 u.application.mtzsession.Setowner u.report.id,u.partname,u.id

        opVRCPReports_MakeRpt_ u
        gridVRCPReports.ItemCount = Item.VRCPReports.Count
        gridVRCPReports.Refresh
        gridVRCPReports.RefreshGroups
        gridVRCPReports.Refreshsort
        gridVRCPReports.MoveToBookmark u.ID &amp; &quot;VRCPReports&quot;
        cmdVRCPReportsRun_click
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRCPReportsFnd_Click()
  on error resume next
  fndVRCPReports.ShowForm
End Sub
Private Sub cmdVRCPReportsRun_Click()
  on error resume next
  gridVRCPReports_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRCPReports_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRCPReports.LoadRow gridVRCPReports, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRCPReports_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRCPReports.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRCPReports&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRCPReports_DblClick()
If gridVRCPReports.ItemCount = 0 Then Exit Sub
If gridVRCPReports.Row &gt; 0 then
  If gridVRCPReports.RowIndex(gridVRCPReports.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPReports.RowBookmark(gridVRCPReports.RowIndex(gridVRCPReports.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    on error resume next
    if not u is nothing then
      opVRCPReports_OpenRef_ u
    end if
     u.refresh
  End If
End If
End Sub
Private Sub gridVRCPReports_KeyPress(KeyAscii As Integer)
  If gridVRCPReports.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRCPReports.FindOnPress KeyAscii
End Sub

Private Sub gridVRCPReports_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRCPReports.Row And LastRow &gt; 0 Then
  gridVRCPReports.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRCPReports.GetRowData(gridVRCPReports.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRCPReportsPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRCPReports.Add()
    If GetFromBuffer(u) Then
      gridVRCPReports.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRCPReports_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRCPReportsCfg_Click
        End If
    End If
end sub

private sub gridVRCPReports_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRCPReports
End If
end sub
private sub mnuVRCPReportsAdd_click()
   menuActionVRCPReports =&quot;ADD&quot;
   menuTimerVRCPReports.enabled = true
end sub
private sub mnuVRCPReportsEdit_click()
   menuActionVRCPReports =&quot;EDIT&quot;
   menuTimerVRCPReports.enabled = true
end sub
private sub mnuVRCPReportsDelete_click()
   menuActionVRCPReports =&quot;DEL&quot;
   menuTimerVRCPReports.enabled = true
end sub
private sub mnuVRCPReportsOpen_click()
   menuActionVRCPReports =&quot;RUN&quot;
   menuTimerVRCPReports.enabled = true
end sub
private sub mnuVRCPReportsRef_click()
   menuActionVRCPReports =&quot;REF&quot;
   menuTimerVRCPReports.enabled = true
end sub
  Private Sub mnuVRCPReportsCOPY_Click()
    On Error Resume Next
    If gridVRCPReports.ItemCount = 0 Then Exit Sub
    If gridVRCPReports.Row &gt; 0 Then
     If gridVRCPReports.RowIndex(gridVRCPReports.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPReports.RowBookmark(gridVRCPReports.RowIndex(gridVRCPReports.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRCPReportsCUT_Click()
    On Error Resume Next
    If gridVRCPReports.ItemCount = 0 Then Exit Sub
    If gridVRCPReports.Row &gt; 0 Then
     If gridVRCPReports.RowIndex(gridVRCPReports.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPReports.RowBookmark(gridVRCPReports.RowIndex(gridVRCPReports.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRCPReports.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRCPReportsCHANGE_Click()
  On Error Resume Next
  If gridVRCPReports.ItemCount = 0 Then Exit Sub
  If gridVRCPReports.Row &gt; 0 Then
   If gridVRCPReports.RowIndex(gridVRCPReports.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPReports.RowBookmark(gridVRCPReports.RowIndex(gridVRCPReports.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRCPReports.ItemCount = u.parent.Count
      gridVRCPReports.RefreshRowIndex gridVRCPReports.RowIndex(gridVRCPReports.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRCPReportsCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRCPReportsPrn_click()
   menuActionVRCPReports =&quot;PRN&quot;
   menuTimerVRCPReports.enabled = true
end sub
private sub mnuVRCPReportsCfg_click()
   menuActionVRCPReports =&quot;CFG&quot;
   menuTimerVRCPReports.enabled = true
end sub
private sub mnuVRCPReportsFind_click()
   menuActionVRCPReports =&quot;FND&quot;
   menuTimerVRCPReports.enabled = true
end sub
private sub mnuVRCPReportsAcc_click()
   menuActionVRCPReports =&quot;ACC&quot;
   menuTimerVRCPReports.enabled = true
end sub
private sub menuTimerVRCPReports_timer()
   menuTimerVRCPReports.enabled = false
   if menuActionVRCPReports =&quot;ADD&quot; then cmdVRCPReportsADD_CLick
   if menuActionVRCPReports =&quot;EDIT&quot; then cmdVRCPReportsEDIT_CLick
   if menuActionVRCPReports =&quot;DEL&quot; then cmdVRCPReportsDEL_CLick
   if menuActionVRCPReports =&quot;RUN&quot; then cmdVRCPReportsRUN_CLick
   if menuActionVRCPReports =&quot;REF&quot; then cmdVRCPReportsREF_CLick
   if menuActionVRCPReports =&quot;PRN&quot; then cmdVRCPReportsPRN_CLick
   if menuActionVRCPReports =&quot;CFG&quot; then cmdVRCPReportsCFG_CLick
   if menuActionVRCPReports =&quot;FND&quot; then cmdVRCPReportsFND_CLick
   if menuActionVRCPReports =&quot;ACC&quot; then cmdVRCPReportsACC_CLick
   menuActionVRCPReports =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRCPReportsAdd,cmdVRCPReportsAdd.tag
  LoadBtnPictures cmdVRCPReportsEdit,cmdVRCPReportsEdit.tag
  LoadBtnPictures cmdVRCPReportsDel,cmdVRCPReportsDel.tag
  LoadBtnPictures cmdVRCPReportsRef,cmdVRCPReportsRef.tag
  LoadBtnPictures cmdVRCPReportsPrn,cmdVRCPReportsPrn.tag
  LoadBtnPictures cmdVRCPReportsFnd,cmdVRCPReportsFnd.tag
  LoadBtnPictures cmdVRCPReportsRun,cmdVRCPReportsRun.tag
  LoadBtnPictures cmdVRCPReportsAcc,cmdVRCPReportsAcc.tag
  LoadBtnPictures cmdVRCPReportsCfg,cmdVRCPReportsCfg.tag
  item.VRCPReports.PrepareGrid gridVRCPReports
  LoadGridLayout gridVRCPReports
  Set fndVRCPReports = Nothing
  On Error Resume Next
  Set fndVRCPReports = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRCPReports.Init gridVRCPReports
end sub
private sub OnTabClick()

      gridVRCPReports.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPReports.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPReports.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPReports.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRCPReports.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPReports.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPReports.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPReports.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRCPReports.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRCPReports = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnVRCPSeeAlso_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlVRCPSeeAlso" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlVRCPSeeAlso"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridVRCPSeeAlso" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridVRCPSeeAlso"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdVRCPSeeAlsoAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSeeAlsoAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPSeeAlsoEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSeeAlsoEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPSeeAlsoDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSeeAlsoDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdVRCPSeeAlsoRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSeeAlsoRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdVRCPSeeAlsoPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSeeAlsoPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdVRCPSeeAlsoCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSeeAlsoCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdVRCPSeeAlsoFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSeeAlsoFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdVRCPSeeAlsoRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdVRCPSeeAlsoRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdVRCPSeeAlsoAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdVRCPSeeAlsoAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupVRCPSeeAlso" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Смотри также"/><Properties Name="Name" PropValue="mnuPopupVRCPSeeAlso"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuVRCPSeeAlsoAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPSeeAlsoEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPSeeAlsoDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuVRCPSeeAlsoOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoOpen"/></ControlData><ControlData Name="mnuVRCPSeeAlsoRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoRef"/></ControlData><ControlData Name="mnuVRCPSeeAlsoS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoS1"/></ControlData><ControlData Name="mnuVRCPSeeAlsoBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuVRCPSeeAlsoCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoCOPY"/></ControlData><ControlData Name="mnuVRCPSeeAlsoCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoCUT"/></ControlData><ControlData Name="mnuVRCPSeeAlsoPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoPASTE"/></ControlData><ControlData Name="mnuVRCPSeeAlsoCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoCHANGE"/></ControlData><ControlData Name="mnuVRCPSeeAlsoCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoCLEAN"/></ControlData></ControlData><ControlData Name="mnuVRCPSeeAlsoPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoPrn"/></ControlData><ControlData Name="mnuVRCPSeeAlsoCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoCfg"/></ControlData><ControlData Name="mnuVRCPSeeAlsoFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoFind"/></ControlData><ControlData Name="mnuVRCPSeeAlsoAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuVRCPSeeAlsoAcc"/></ControlData></ControlData><ControlData Name="menuTimerVRCPSeeAlso" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerVRCPSeeAlso"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndVRCPSeeAlso as object
private menuActionVRCPSeeAlso as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdVRCPSeeAlsoCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridVRCPSeeAlso,&quot;gridVRCPSeeAlso&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPSeeAlsoPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridVRCPSeeAlso,&quot;Смотри также&quot;
Set jset = Nothing
End Sub

Private Sub cmdVRCPSeeAlsoRef_Click()
  on error resume next
  item.VRCPSeeAlso.Refresh
  gridVRCPSeeAlso.itemCount = item.VRCPSeeAlso.count
  gridVRCPSeeAlso.Refetch
  gridVRCPSeeAlso.Refresh
End Sub
Private Sub cmdVRCPSeeAlsoAcc_Click()
On Error Resume Next
If gridVRCPSeeAlso.ItemCount = 0 Then Exit Sub
If gridVRCPSeeAlso.Row &gt; 0 Then
 If gridVRCPSeeAlso.RowIndex(gridVRCPSeeAlso.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPSeeAlso.RowBookmark(gridVRCPSeeAlso.RowIndex(gridVRCPSeeAlso.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdVRCPSeeAlsoEdit_Click()
  on error resume next
If gridVRCPSeeAlso.ItemCount = 0 Then Exit Sub
If gridVRCPSeeAlso.Row &gt; 0 then
 If gridVRCPSeeAlso.RowIndex(gridVRCPSeeAlso.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPSeeAlso.RowBookmark(gridVRCPSeeAlso.RowIndex(gridVRCPSeeAlso.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmVRCPSeeAlso_.Item = u
    again: frmVRCPSeeAlso_.NotFirstTime = False
    frmVRCPSeeAlso_.OnInit
    frmVRCPSeeAlso_.Show vbModal
    If frmVRCPSeeAlso_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridVRCPSeeAlso.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdVRCPSeeAlsoDel_Click()
  on error resume next
  gridVRCPSeeAlso.Delete
End Sub
Private Sub cmdVRCPSeeAlsoAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.VRCPSeeAlso.Add()

      Set frmVRCPSeeAlso_.Item = u
      again: frmVRCPSeeAlso_.NotFirstTime = False
      frmVRCPSeeAlso_.OnInit
      frmVRCPSeeAlso_.Show vbModal
      If frmVRCPSeeAlso_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridVRCPSeeAlso.ItemCount = Item.VRCPSeeAlso.Count
        gridVRCPSeeAlso.Refresh
        gridVRCPSeeAlso.RefreshGroups
        gridVRCPSeeAlso.Refreshsort
        gridVRCPSeeAlso.MoveToBookmark u.ID &amp; &quot;VRCPSeeAlso&quot;
      Else
        Item.VRCPSeeAlso.Delete u.ID
        Item.VRCPSeeAlso.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdVRCPSeeAlsoFnd_Click()
  on error resume next
  fndVRCPSeeAlso.ShowForm
End Sub
Private Sub cmdVRCPSeeAlsoRun_Click()
  on error resume next
  gridVRCPSeeAlso_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridVRCPSeeAlso_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.VRCPSeeAlso.LoadRow gridVRCPSeeAlso, RowIndex, Bookmark, Values
End Sub
Private Sub gridVRCPSeeAlso_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridVRCPSeeAlso.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;VRCPSeeAlso&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridVRCPSeeAlso_DblClick()
  cmdVRCPSeeAlsoEdit_Click
End Sub
Private Sub gridVRCPSeeAlso_KeyPress(KeyAscii As Integer)
  If gridVRCPSeeAlso.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndVRCPSeeAlso.FindOnPress KeyAscii
End Sub

Private Sub gridVRCPSeeAlso_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridVRCPSeeAlso.Row And LastRow &gt; 0 Then
  gridVRCPSeeAlso.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridVRCPSeeAlso.GetRowData(gridVRCPSeeAlso.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuVRCPSeeAlsoPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.VRCPSeeAlso.Add()
    If GetFromBuffer(u) Then
      gridVRCPSeeAlso.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridVRCPSeeAlso_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdVRCPSeeAlsoCfg_Click
        End If
    End If
end sub

private sub gridVRCPSeeAlso_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupVRCPSeeAlso
End If
end sub
private sub mnuVRCPSeeAlsoAdd_click()
   menuActionVRCPSeeAlso =&quot;ADD&quot;
   menuTimerVRCPSeeAlso.enabled = true
end sub
private sub mnuVRCPSeeAlsoEdit_click()
   menuActionVRCPSeeAlso =&quot;EDIT&quot;
   menuTimerVRCPSeeAlso.enabled = true
end sub
private sub mnuVRCPSeeAlsoDelete_click()
   menuActionVRCPSeeAlso =&quot;DEL&quot;
   menuTimerVRCPSeeAlso.enabled = true
end sub
private sub mnuVRCPSeeAlsoOpen_click()
   menuActionVRCPSeeAlso =&quot;RUN&quot;
   menuTimerVRCPSeeAlso.enabled = true
end sub
private sub mnuVRCPSeeAlsoRef_click()
   menuActionVRCPSeeAlso =&quot;REF&quot;
   menuTimerVRCPSeeAlso.enabled = true
end sub
  Private Sub mnuVRCPSeeAlsoCOPY_Click()
    On Error Resume Next
    If gridVRCPSeeAlso.ItemCount = 0 Then Exit Sub
    If gridVRCPSeeAlso.Row &gt; 0 Then
     If gridVRCPSeeAlso.RowIndex(gridVRCPSeeAlso.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPSeeAlso.RowBookmark(gridVRCPSeeAlso.RowIndex(gridVRCPSeeAlso.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuVRCPSeeAlsoCUT_Click()
    On Error Resume Next
    If gridVRCPSeeAlso.ItemCount = 0 Then Exit Sub
    If gridVRCPSeeAlso.Row &gt; 0 Then
     If gridVRCPSeeAlso.RowIndex(gridVRCPSeeAlso.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridVRCPSeeAlso.RowBookmark(gridVRCPSeeAlso.RowIndex(gridVRCPSeeAlso.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridVRCPSeeAlso.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuVRCPSeeAlsoCHANGE_Click()
  On Error Resume Next
  If gridVRCPSeeAlso.ItemCount = 0 Then Exit Sub
  If gridVRCPSeeAlso.Row &gt; 0 Then
   If gridVRCPSeeAlso.RowIndex(gridVRCPSeeAlso.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridVRCPSeeAlso.RowBookmark(gridVRCPSeeAlso.RowIndex(gridVRCPSeeAlso.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridVRCPSeeAlso.ItemCount = u.parent.Count
      gridVRCPSeeAlso.RefreshRowIndex gridVRCPSeeAlso.RowIndex(gridVRCPSeeAlso.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuVRCPSeeAlsoCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuVRCPSeeAlsoPrn_click()
   menuActionVRCPSeeAlso =&quot;PRN&quot;
   menuTimerVRCPSeeAlso.enabled = true
end sub
private sub mnuVRCPSeeAlsoCfg_click()
   menuActionVRCPSeeAlso =&quot;CFG&quot;
   menuTimerVRCPSeeAlso.enabled = true
end sub
private sub mnuVRCPSeeAlsoFind_click()
   menuActionVRCPSeeAlso =&quot;FND&quot;
   menuTimerVRCPSeeAlso.enabled = true
end sub
private sub mnuVRCPSeeAlsoAcc_click()
   menuActionVRCPSeeAlso =&quot;ACC&quot;
   menuTimerVRCPSeeAlso.enabled = true
end sub
private sub menuTimerVRCPSeeAlso_timer()
   menuTimerVRCPSeeAlso.enabled = false
   if menuActionVRCPSeeAlso =&quot;ADD&quot; then cmdVRCPSeeAlsoADD_CLick
   if menuActionVRCPSeeAlso =&quot;EDIT&quot; then cmdVRCPSeeAlsoEDIT_CLick
   if menuActionVRCPSeeAlso =&quot;DEL&quot; then cmdVRCPSeeAlsoDEL_CLick
   if menuActionVRCPSeeAlso =&quot;RUN&quot; then cmdVRCPSeeAlsoRUN_CLick
   if menuActionVRCPSeeAlso =&quot;REF&quot; then cmdVRCPSeeAlsoREF_CLick
   if menuActionVRCPSeeAlso =&quot;PRN&quot; then cmdVRCPSeeAlsoPRN_CLick
   if menuActionVRCPSeeAlso =&quot;CFG&quot; then cmdVRCPSeeAlsoCFG_CLick
   if menuActionVRCPSeeAlso =&quot;FND&quot; then cmdVRCPSeeAlsoFND_CLick
   if menuActionVRCPSeeAlso =&quot;ACC&quot; then cmdVRCPSeeAlsoACC_CLick
   menuActionVRCPSeeAlso =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdVRCPSeeAlsoAdd,cmdVRCPSeeAlsoAdd.tag
  LoadBtnPictures cmdVRCPSeeAlsoEdit,cmdVRCPSeeAlsoEdit.tag
  LoadBtnPictures cmdVRCPSeeAlsoDel,cmdVRCPSeeAlsoDel.tag
  LoadBtnPictures cmdVRCPSeeAlsoRef,cmdVRCPSeeAlsoRef.tag
  LoadBtnPictures cmdVRCPSeeAlsoPrn,cmdVRCPSeeAlsoPrn.tag
  LoadBtnPictures cmdVRCPSeeAlsoFnd,cmdVRCPSeeAlsoFnd.tag
  LoadBtnPictures cmdVRCPSeeAlsoRun,cmdVRCPSeeAlsoRun.tag
  LoadBtnPictures cmdVRCPSeeAlsoAcc,cmdVRCPSeeAlsoAcc.tag
  LoadBtnPictures cmdVRCPSeeAlsoCfg,cmdVRCPSeeAlsoCfg.tag
  item.VRCPSeeAlso.PrepareGrid gridVRCPSeeAlso
  LoadGridLayout gridVRCPSeeAlso
  Set fndVRCPSeeAlso = Nothing
  On Error Resume Next
  Set fndVRCPSeeAlso = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndVRCPSeeAlso.Init gridVRCPSeeAlso
end sub
private sub OnTabClick()

      gridVRCPSeeAlso.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPSeeAlso.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPSeeAlso.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPSeeAlso.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridVRCPSeeAlso.Top = 40 * Screen.TwipsPerPixelX
      gridVRCPSeeAlso.Left = 5 * Screen.TwipsPerPixelX
      gridVRCPSeeAlso.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridVRCPSeeAlso.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlVRCPSeeAlso.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndVRCPSeeAlso = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRCPCommon" ControlIndex="0" PROGID="VRCP2GUI.vpnVRCPCommon_"><Properties Name="Name" PropValue="pnlVRCPCommon"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRCPNeigborhood" ControlIndex="0" PROGID="VRCP2GUI.vpnVRCPNeigborhood_"><Properties Name="Name" PropValue="pnlVRCPNeigborhood"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRCPInterest" ControlIndex="0" PROGID="VRCP2GUI.vpnVRCPInterest_"><Properties Name="Name" PropValue="pnlVRCPInterest"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRCPPresents" ControlIndex="0" PROGID="VRCP2GUI.vpnVRCPPresents_"><Properties Name="Name" PropValue="pnlVRCPPresents"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRCPSpecial" ControlIndex="0" PROGID="VRCP2GUI.vpnVRCPSpecial_"><Properties Name="Name" PropValue="pnlVRCPSpecial"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRCPDates" ControlIndex="0" PROGID="VRCP2GUI.vpnVRCPDates_"><Properties Name="Name" PropValue="pnlVRCPDates"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRCPReports" ControlIndex="0" PROGID="VRCP2GUI.vpnVRCPReports_"><Properties Name="Name" PropValue="pnlVRCPReports"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlVRCPSeeAlso" ControlIndex="0" PROGID="VRCP2GUI.vpnVRCPSeeAlso_"><Properties Name="Name" PropValue="pnlVRCPSeeAlso"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Контактное лицо"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlVRCPCommon.IsOK
if IsItOk then IsItOk = pnlVRCPNeigborhood.IsOK
if IsItOk then IsItOk = pnlVRCPInterest.IsOK
if IsItOk then IsItOk = pnlVRCPPresents.IsOK
if IsItOk then IsItOk = pnlVRCPSpecial.IsOK
if IsItOk then IsItOk = pnlVRCPDates.IsOK
if IsItOk then IsItOk = pnlVRCPReports.IsOK
if IsItOk then IsItOk = pnlVRCPSeeAlso.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlVRCPSeeAlso.Visible = False
  pnlVRCPReports.Visible = False
  pnlVRCPDates.Visible = False
  pnlVRCPSpecial.Visible = False
  pnlVRCPPresents.Visible = False
  pnlVRCPInterest.Visible = False
  pnlVRCPNeigborhood.Visible = False
  pnlVRCPCommon.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;VRCPCommon&quot;
     With pnlVRCPCommon
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRCPCommon.OnClick item,parentform
     End With
   Case &quot;VRCPNeigborhood&quot;
     With pnlVRCPNeigborhood
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRCPNeigborhood.OnClick item,parentform
     End With
   Case &quot;VRCPInterest&quot;
     With pnlVRCPInterest
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRCPInterest.OnClick item,parentform
     End With
   Case &quot;VRCPPresents&quot;
     With pnlVRCPPresents
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRCPPresents.OnClick item,parentform
     End With
   Case &quot;VRCPSpecial&quot;
     With pnlVRCPSpecial
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRCPSpecial.OnClick item,parentform
     End With
   Case &quot;VRCPDates&quot;
     With pnlVRCPDates
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRCPDates.OnClick item,parentform
     End With
   Case &quot;VRCPReports&quot;
     With pnlVRCPReports
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRCPReports.OnClick item,parentform
     End With
   Case &quot;VRCPSeeAlso&quot;
     With pnlVRCPSeeAlso
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlVRCPSeeAlso.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Общая информация&quot;
ts.Tabs.Item(1).key = &quot;VRCPCommon&quot;
pnlVRCPCommon.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRCPNeigborhood&quot;, &quot;Родственники&quot;)
pnlVRCPNeigborhood.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRCPInterest&quot;, &quot;Увлечения&quot;)
pnlVRCPInterest.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRCPPresents&quot;, &quot;Подарки&quot;)
pnlVRCPPresents.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRCPSpecial&quot;, &quot;Факты&quot;)
pnlVRCPSpecial.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRCPDates&quot;, &quot;Памятные даты&quot;)
pnlVRCPDates.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRCPReports&quot;, &quot;Отчеты&quot;)
pnlVRCPReports.OnInit item, parentForm
call ts.Tabs.Add(, &quot;VRCPSeeAlso&quot;, &quot;Смотри также&quot;)
pnlVRCPSeeAlso.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;VRCP2&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlVRCPCommon.CloseClass
 pnlVRCPNeigborhood.CloseClass
 pnlVRCPInterest.CloseClass
 pnlVRCPPresents.CloseClass
 pnlVRCPSpecial.CloseClass
 pnlVRCPDates.CloseClass
 pnlVRCPReports.CloseClass
 pnlVRCPSeeAlso.CloseClass
End Sub
public sub OnSave()
 pnlVRCPCommon.OnSave
 pnlVRCPNeigborhood.OnSave
 pnlVRCPInterest.OnSave
 pnlVRCPPresents.OnSave
 pnlVRCPSpecial.OnSave
 pnlVRCPDates.OnSave
 pnlVRCPReports.OnSave
 pnlVRCPSeeAlso.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlVRCPCommon.IsChanged
m_IsChanged = m_IsChanged or pnlVRCPNeigborhood.IsChanged
m_IsChanged = m_IsChanged or pnlVRCPInterest.IsChanged
m_IsChanged = m_IsChanged or pnlVRCPPresents.IsChanged
m_IsChanged = m_IsChanged or pnlVRCPSpecial.IsChanged
m_IsChanged = m_IsChanged or pnlVRCPDates.IsChanged
m_IsChanged = m_IsChanged or pnlVRCPReports.IsChanged
m_IsChanged = m_IsChanged or pnlVRCPSeeAlso.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 3
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;В архиве&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{5F698A84-DA28-42D1-9526-1B31E3C4A082}&quot;
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{91FC698E-C7A0-421C-9B27-497F6D25A621}&quot;
    i = i + 1
    m(i).Caption = &quot;Готов&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{8F69C5CF-1A44-4265-BCC6-77ECC65D4878}&quot;
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{5F698A84-DA28-42D1-9526-1B31E3C4A082}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
      If Item.Statusid = &quot;{91FC698E-C7A0-421C-9B27-497F6D25A621}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{5F698A84-DA28-42D1-9526-1B31E3C4A082}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{8F69C5CF-1A44-4265-BCC6-77ECC65D4878}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{8F69C5CF-1A44-4265-BCC6-77ECC65D4878}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{5F698A84-DA28-42D1-9526-1B31E3C4A082}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="VRCP2GUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Контактное лицо"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRCP2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;VRCP2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;VRCP2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;&quot; then

if Name=&quot;VRCPCommon&quot; then 
 set FormByName = new frmVRCPCommon_
 exit function
end if

if Name=&quot;VRCPNeigborhood&quot; then 
 set FormByName = new frmVRCPNeigborhood_
 exit function
end if

if Name=&quot;VRCPInterest&quot; then 
 set FormByName = new frmVRCPInterest_
 exit function
end if

if Name=&quot;VRCPPresents&quot; then 
 set FormByName = new frmVRCPPresents_
 exit function
end if

if Name=&quot;VRCPSpecial&quot; then 
 set FormByName = new frmVRCPSpecial_
 exit function
end if

if Name=&quot;VRCPDates&quot; then 
 set FormByName = new frmVRCPDates_
 exit function
end if

if Name=&quot;VRCPReports&quot; then 
 set FormByName = new frmVRCPReports_
 exit function
end if

if Name=&quot;VRCPSeeAlso&quot; then 
 set FormByName = new frmVRCPSeeAlso_
 exit function
end if

end if
end function
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub

Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
