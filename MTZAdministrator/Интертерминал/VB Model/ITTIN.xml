<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="dll"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221}"/><AttributeHolder Name="Name" Value="ITTIN"/><AttributeHolder Name="Description" Value="Приемка груза"/><ModuleHolder ModuleName="Application" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="multiuse"/><BlockHolder BlockName="'description" BlockCode="'корневой интерфейс документа (Приемка груза)
private m_Logger as MTZUtil.Logger
private m_MTZSession as MTZSession.Session
private m_Manager as MTZManager.Main
Private findCash As Collection
private m_ID as string
private m_SecureStyleID as string
private m_StatusID as string
private m_Name as string
private const m_TypeName as string=&quot;ITTIN&quot;
private m_WorkOffline as boolean
private m_AutoLoadPart as boolean


enum enumHACCPStep'Тип шага в ХАССП процессе
  HACCPStep_Operaciy=3'Операция
  HACCPStep_Zaversenie_processa=1'Завершение процесса
  HACCPStep_Kontrol_nay_tocka=4'Контрольная точка
  HACCPStep_Korrektiruusee_deystvie=5'Корректирующее действие
  HACCPStep_Ostanov_processa=2'Останов процесса
  HACCPStep_Process=6'Процесс
  HACCPStep_Nacalo_processa=0'Начало процесса
end enum 
enum enumPCB_FileType'Тип файла
  PCB_FileType_Proekt_PP=0'Проект ПП
  PCB_FileType_HZ=1'ХЗ
end enum 
enum enumHaccpIdent'Идентификация
  HaccpIdent_Kacestvo_poverhnosti=6'Качество поверхности
  HaccpIdent_Zapah=2'Запах
  HaccpIdent_Forma=3'Форма
  HaccpIdent_Cvet=1'Цвет
  HaccpIdent_Vkus=4'Вкус
  HaccpIdent_Procee=100'Прочее
  HaccpIdent_Zvuk=5'Звук
  HaccpIdent_Vnesniy_vid=0'Внешний вид
end enum 
enum enumtypeFace'Физическое лицо \ Юрифическое лицо
  typeFace_FizLico=0'ФизЛицо
  typeFace_UrLico=1'ЮрЛицо
end enum 
enum enumWFStepClass'Тип шага процесса
  WFStepClass_SimpleFunction=0'SimpleFunction
  WFStepClass_StartFunction=1'StartFunction
  WFStepClass_StopFunction=2'StopFunction
  WFStepClass_PeriodicFunction=3'PeriodicFunction
end enum 
enum enumMonths'Месяцы
  Months_Noybr_=11'Ноябрь
  Months_Fevral_=2'Февраль
  Months_Dekabr_=12'Декабрь
  Months_Mart=3'Март
  Months_Ynvar_=1'Январь
  Months_Sentybr_=9'Сентябрь
  Months_Iun_=6'Июнь
  Months_Oktybr_=10'Октябрь
  Months_May=5'Май
  Months_Avgust=8'Август
  Months_Iul_=7'Июль
  Months_Aprel_=4'Апрель
end enum 
enum enumTypeStyle'Вариант трактовки типа поля
  TypeStyle_Interval=3'Интервал
  TypeStyle_Element_oformleniy=5'Элемент оформления
  TypeStyle_Skalyrniy_tip=0'Скалярный тип
  TypeStyle_Ssilka=4'Ссылка
  TypeStyle_Perecislenie=2'Перечисление
  TypeStyle_Viragenie=1'Выражение
end enum 
enum enumAggregationType'Вариант агрегации по полю
  AggregationType_MAX=5'MAX
  AggregationType_AVG=1'AVG
  AggregationType_SUM=3'SUM
  AggregationType_COUNT=2'COUNT
  AggregationType_MIN=4'MIN
  AggregationType_CUSTOM=6'CUSTOM
  AggregationType_none=0'none
end enum 
enum enumVHAlignment'Выравнивание
  VHAlignment_Center_Center=4'Center Center
  VHAlignment_Center_Top=3'Center Top
  VHAlignment_Right_Top=6'Right Top
  VHAlignment_Right_Bottom=8'Right Bottom
  VHAlignment_Left_Bottom=2'Left Bottom
  VHAlignment_Right_Center=7'Right Center
  VHAlignment_Center_Bottom=5'Center Bottom
  VHAlignment_Left_Center=1'Left Center
  VHAlignment_Left_Top=0'Left Top
end enum 
enum enumtypePackage'Тип отправления
  typePackage_Vse=-1'Все
  typePackage_Tovar=1'Товар
  typePackage_Dokumenti=0'Документы
end enum 
enum enumPCB_HoleType'Тип отверстия
  PCB_HoleType_Gluhoe=2'Глухое
  PCB_HoleType_Metalizirovannoe=0'Метализированное
  PCB_HoleType_Nemetallizirovannoe=1'Неметаллизированное
end enum 
enum enumWFProcessState'Состояния процесса
  WFProcessState_Active=2'Active
  WFProcessState_Pause=3'Pause
  WFProcessState_Processed=5'Processed
  WFProcessState_Done=4'Done
  WFProcessState_Prepare=1'Prepare
  WFProcessState_Initial=0'Initial
end enum 
enum enumNumerationRule'Правило нумерации
  NumerationRule_Edinay_zona=0'Единая зона
  NumerationRule_Po_godu=1'По году
  NumerationRule_Po_dnu=4'По дню
  NumerationRule_Po_kvartalu=2'По кварталу
  NumerationRule_Po_mesycu=3'По месяцу
  NumerationRule_Proizvol_nie_zoni=10'Произвольные зоны
end enum 
enum enumMenuActionType'Вариант действия при выборе пункта меню
  MenuActionType_Otkrit__otcet=5'Открыть отчет
  MenuActionType_Nicego_ne_delat_=0'Ничего не делать
  MenuActionType_Vipolnit__metod=2'Выполнить метод
  MenuActionType_Otkrit__dokument=1'Открыть документ
  MenuActionType_Zapustit__ARM=4'Запустить АРМ
  MenuActionType_Otkrit__gurnal=3'Открыть журнал
end enum 
enum enumColumnSortType'Вариант сортиовки данных колонки
  ColumnSortType_As_String=0'As String
  ColumnSortType_As_Numeric=1'As Numeric
  ColumnSortType_As_Date=2'As Date
end enum 
enum enumAdditionType'Тип надбавки
  AdditionType_Ob_em=1'Объем
  AdditionType_Plotnost_=2'Плотность
  AdditionType_Procee=3'Прочее
  AdditionType_Ves=0'Вес
end enum 
enum enumTypeSempling'Тип выборки
  TypeSempling_Klienti=-1'Клиенты
  TypeSempling_Adresati_operatorov=0'Адресаты операторов
  TypeSempling_Spisok_adresov_SPb=2'Список адресов СПб
  TypeSempling_Spisok_adresatov=1'Список адресатов
end enum 
enum enumStructType'Тип раздела
  StructType_Derevo=2'Дерево
  StructType_Kollekciy=1'Коллекция
  StructType_Stroka_atributov=0'Строка атрибутов
end enum 
enum enumTargetType'Вариант уровня приложения, куда может генерироваться код
  TargetType_SUBD=0'СУБД
  TargetType_ARM=4'АРМ
  TargetType_Dokumentaciy=3'Документация
  TargetType_MODEL_=1'МОДЕЛЬ
  TargetType_Prilogenie=2'Приложение
end enum 
enum enumDeliveryOn'
  DeliveryOn_Gorod=4'Город
  DeliveryOn_Rossiy=0'Россия
  DeliveryOn_Megdunarodnay=1'Международная
  DeliveryOn_Strana2=2'Страна2
  DeliveryOn_Sub_ekt=3'Субъект
end enum 
enum enumtypeOperatorSystem'
  typeOperatorSystem_Menedger=2'Менеджер
  typeOperatorSystem_Procee=0'Прочее
  typeOperatorSystem_Operator=1'Оператор
end enum 
enum enumstateNomen'
  stateNomen_Pereadresaciy=6'Переадресация
  stateNomen_Oformlyetsy=0'Оформляется
  stateNomen_Dostavleno=4'Доставлено
  stateNomen_V_processe=3'В процессе
  stateNomen_Vozvrat=5'Возврат
  stateNomen_Prinyto=2'Принято
end enum 
enum enumPartAddBehaivor'Поведение при добавлении строки раздела
  PartAddBehaivor_AddForm=0'AddForm
  PartAddBehaivor_RunAction=2'RunAction
  PartAddBehaivor_RefreshOnly=1'RefreshOnly
end enum 
enum enumFolderType'Тип папки
  FolderType_Ishodysie=2'Исходящие
  FolderType_Zaversennie=10'Завершенные
  FolderType_cls__=0'cls__
  FolderType_Kalendar_=5'Календарь
  FolderType_Vhodysie=1'Входящие
  FolderType_Otlogennie=9'Отложенные
  FolderType_Gurnal=4'Журнал
  FolderType_V_rabote=8'В работе
  FolderType_Cernoviki=7'Черновики
  FolderType_Otpravlennie=6'Отправленные
  FolderType_Udalennie=3'Удаленные
end enum 
enum enummsgState'Состояние заявки
  msgState_Sostoynie_zayvki=0'Состояние заявки
  msgState_Soobseno_abonentu=1'Сообщено абоненту
  msgState_Abonent_ne_otvetil=2'Абонент не ответил
  msgState_Promegutocniy_otvet=3'Промежуточный ответ
end enum 
enum enumWFShortcutType'Варианты ярлыков, которые может размещать процесс
  WFShortcutType_Function=1'Function
  WFShortcutType_Process=2'Process
  WFShortcutType_Document=0'Document
end enum 
enum enumReferenceType'ReferenceType
  ReferenceType_Na_stroku_razdela=2'На строку раздела
  ReferenceType_Na_istocnik_dannih=3'На источник данных
  ReferenceType_Skalyrnoe_pole_OPN_ne_ssilkaCLS=0'Скалярное поле ( не ссылка)
  ReferenceType_Na_ob_ekt_=1'На объект 
end enum 
enum enumSex'Мужской / Женский
  Sex_Mugskoy=1'Мужской
  Sex_Ne_susestvenno=0'Не существенно
  Sex_Genskiy=-1'Женский
end enum 
enum enumMesureFormat'Формат индикатора
  MesureFormat_Data=1'Дата
  MesureFormat_Tekst=5'Текст
  MesureFormat_Ob_ekt=4'Объект
  MesureFormat_Spravocnik=2'Справочник
  MesureFormat_Cislo=0'Число
end enum 
enum enumWFFuncParam'Вариант расшифровки параметра функции
  WFFuncParam_Dokument=5'Документ
  WFFuncParam_Znacenie=0'Значение
  WFFuncParam_Dokument_processa=4'Документ процесса
  WFFuncParam_Viragenie=2'Выражение
  WFFuncParam_Rol_=8'Роль
  WFFuncParam_Papka=3'Папка
  WFFuncParam_Pole=7'Поле
  WFFuncParam_Znacenie_iz_parametra=1'Значение из параметра
  WFFuncParam_Razdel=6'Раздел
  WFFuncParam_Tip_dokumenta=9'Тип документа
end enum 
enum enumYesNo'Да / Нет (0 или 1)
  YesNo_Da=1'Да
  YesNo_Net=0'Нет
end enum 
enum enumtypeOrder'
  typeOrder_Dostavka_bez_uvedomleniy=2'Доставка без уведомления
  typeOrder_Bezadresniy_zakaz=0'Безадресный заказ
  typeOrder_Adresniy_zakaz=1'Адресный заказ
end enum 
enum enummsgResult'Результат
  msgResult_Vipolneno=2'Выполнено
  msgResult_V_rabote=1'В работе
  msgResult_Rezul_tat=0'Результат
end enum 
enum enumGeneratorStyle'GeneratorStyle
  GeneratorStyle_Odin_tip=0'Один тип
  GeneratorStyle_Vse_tipi_srazu=1'Все типы сразу
end enum 
enum enumReportType'Вариант отчета
  ReportType_Dvumernay_matrica=1'Двумерная матрица
  ReportType_Tablica=0'Таблица
  ReportType_Eksport_po_WORD_sablonu=3'Экспорт по WORD шаблону
  ReportType_Tol_ko_rascet=2'Только расчет
  ReportType_Eksport_po_Excel_sablonu=4'Экспорт по Excel шаблону
end enum 
enum enumHACCPPStep'Тип шага в ХАССП процессе
  HACCPPStep_Sir_e=5'Сырье
  HACCPPStep_Transportirovka=7'Транспортировка
  HACCPPStep_Operaciy=3'Операция
  HACCPPStep_Zaversenie_processa=1'Завершение процесса
  HACCPPStep_Nacalo_processa=0'Начало процесса
  HACCPPStep_Ostanov_processa=2'Останов процесса
  HACCPPStep_Vhod_iz=9'Вход из
  HACCPPStep_Vihod_v=8'Выход в
  HACCPPStep_Hranenie=6'Хранение
  HACCPPStep_Resenie=4'Решение
end enum 
enum enumtypeDocOrder'Тип документов для печати заказчику
  typeDocOrder_Nalicniy_OPNPKO_PLS_kasDOTcekCLS=1'Наличный (ПКО + кас.чек)
  typeDocOrder_Nalicniy_OPNtovarniy_cek_PLS_kasDOTcekCLS=0'Наличный (товарный чек + кас.чек)
  typeDocOrder_Beznalicniy_rascet=3'Безналичный расчет
end enum 
enum enumPCB_LayerP'Представление поля
  PCB_LayerP_Negativ=2'Негатив
  PCB_LayerP_Ne_imeet_znaceniy=0'Не имеет значения
  PCB_LayerP_Pozitiv=1'Позитив
end enum 
enum enumDayInWeek'День недели
  DayInWeek_Ponedel_nik=1'Понедельник
  DayInWeek_Sreda=3'Среда
  DayInWeek_Vtornik=2'Вторник
  DayInWeek_Pytnica=5'Пятница
  DayInWeek_Subbota=6'Суббота
  DayInWeek_Cetverg=4'Четверг
  DayInWeek_Voskresen_e=7'Воскресенье
end enum 
enum enumPlatType'Тип плательщика
  PlatType_Otpravitel_=0'Отправитель
  PlatType_Polucatel_=1'Получатель
  PlatType_Drugoy=2'Другой
end enum 
enum enumPartType'PartType
  PartType_Rassirenie=3'Расширение
  PartType_Kollekciy=1'Коллекция
  PartType_Stroka=0'Строка
  PartType_Derevo=2'Дерево
  PartType_Rassirenie_s_dannimi=4'Расширение с данными
end enum 
enum enumEmployment'Занятость
  Employment_Polnay=0'Полная
  Employment_Casticnay=1'Частичная
  Employment_Ne_vagno=-1'Не важно
end enum 
enum enumtypeClient'Тип заказчика
  typeClient_Razoviy=0'Разовый
end enum 
enum enumtypeNomen'Тип номенкатуры
  typeNomen_Listovki=2'Листовки
  typeNomen_Tovar=1'Товар
  typeNomen_GazetiCOMA_gurnaliCOMA_brosuri=4'Газеты, журналы, брошюры
  typeNomen_Pis_mo=3'Письмо
  typeNomen_Dokument=0'Документ
end enum 
enum enumKONTR_TYPE'Тип контрагента
  KONTR_TYPE_Procee=5'Прочее
  KONTR_TYPE_Perevozcik=4'Перевозчик
  KONTR_TYPE_Partner=2'Партнер
  KONTR_TYPE_Pokupatel_=0'Покупатель
  KONTR_TYPE_Ucreditel_=3'Учредитель
  KONTR_TYPE_Postavsik=1'Поставщик
end enum 
enum enumtypePersonPay'
  typePersonPay_Otpravitel_=0'Отправитель
  typePersonPay_Polucatel_=1'Получатель
end enum 
enum enumJournalLinkType'Для связи журналов друг с другом
  JournalLinkType_Ssilka_na_stroku=2'Ссылка на строку
  JournalLinkType_Ssilka_na_ob_ekt=1'Ссылка на объект
  JournalLinkType_Svyzka_InstanceID_OPNv_peredlah_ob_ektaCLS=3'Связка InstanceID (в передлах объекта)
  JournalLinkType_Svyzka_ParentStructRowID__OPNv_peredlah_ob_ektaCLS=4'Связка ParentStructRowID  (в передлах объекта)
  JournalLinkType_Net=0'Нет
end enum 
enum enumConditionType'Варианты условий
  ConditionType_LSGT=2'&lt;&gt;
  ConditionType_GT=3'&gt;
  ConditionType_EQ=1'=
  ConditionType_GTEQ=4'&gt;=
  ConditionType_LSEQ=7'&lt;=
  ConditionType_like=8'like
  ConditionType_LS=6'&lt;
  ConditionType_none=0'none
end enum 
enum enumtypePay'Сдельная \ Ставка
  typePay_Stavka=1'Ставка
  typePay_Sdel_nay=0'Сдельная
end enum 
enum enumPCB_TaskType'Тип задачи
  PCB_TaskType_Dostavka=4'Доставка
  PCB_TaskType_Izgotovlenie_PP=1'Изготовление ПП
  PCB_TaskType_Postavka_komplektuusih=2'Поставка комплектующих
  PCB_TaskType_Montag_PP=0'Монтаж ПП
  PCB_TaskType_Proektirovanie_PP=3'Проектирование ПП
end enum 
enum enumVRTaskType'Тип задачи
  VRTaskType_V_opredelenniy_moment=0'В определенный момент
  VRTaskType_Fonovay=2'Фоновая
  VRTaskType_K_opredelennomu_vremeni=1'К определенному времени
end enum 
enum enumtypeReceiv'
  typeReceiv_PTS=1'ПТС
  typeReceiv_SVS=0'СВС
end enum 
enum enumPCB_CustomerType'Статус заказчика
  PCB_CustomerType_Real_niy=1'Реальный
  PCB_CustomerType_Potencial_niy=0'Потенциальный
end enum 
enum enumOnJournalRowClick'действие при открытии строки журнала
  OnJournalRowClick_Otkrit__dokument=2'Открыть документ
  OnJournalRowClick_Otkrit__stroku=1'Открыть строку
  OnJournalRowClick_Nicego_ne_delat_=0'Ничего не делать
end enum 
enum enumtypeRowCheque'Тип строки чека
  typeRowCheque_PO=1'ПО
  typeRowCheque_Procee=0'Прочее
  typeRowCheque_Prostoe_PO=4'Простое ПО
  typeRowCheque_dopDOTusluga_PO=2'доп.услуга ПО
  typeRowCheque_dopDOTusluga_zakaza=3'доп.услуга заказа
  typeRowCheque_Tovar=5'Товар
end enum 
enum enumPCB_clear'Тип задачи
  PCB_clear_Zadaca_1=1'Задача 1
  PCB_clear_Zadaca_2=0'Задача 2
end enum 
enum enumtypeTariff'
  typeTariff_Usluga=1'Услуга
  typeTariff_Dostavka=0'Доставка
end enum 
enum enumEducation'Образование
  Education_Srednee_special_noe=2'Среднее специальное
  Education_Srednee=1'Среднее
  Education_Ne_vagno=-1'Не важно
  Education_Vissee=4'Высшее
  Education_Nepolnoe_srednee=0'Неполное среднее
  Education_Nepolnoe_vissee=3'Неполное высшее
  Education_Neskol_ko_vissih=5'Несколько высших
end enum 
enum enumDCType'Остатки/Дебит/Кредит
  DCType_Ostatki=-1'Остатки
  DCType_Debit=0'Дебит
  DCType_Kredit=1'Кредит
end enum 
enum enumDevelopmentBase'Платформа разработки
  DevelopmentBase_JAVA=2'JAVA
  DevelopmentBase_OTHER=3'OTHER
  DevelopmentBase_DOTNET=1'DOTNET
  DevelopmentBase_VB6=0'VB6
end enum 
enum enumBoolean'Да / Нет
  Boolean_Da=-1'Да
  Boolean_Net=0'Нет
end enum 
enum enumTriState'Да / Нет / Не определено
  TriState_Net=0'Нет
  TriState_Ne_susestvenno=-1'Не существенно
  TriState_Da=1'Да
end enum 
enum enumtypeTRF'Тип тарифа СС
  typeTRF_Tarif_podrydcika=0'Тариф подрядчика
  typeTRF_Tarif_klienta=1'Тариф клиента
  typeTRF_Obsiy_tarif=-1'Общий тариф
end enum 
enum enumCurrencyType'Валюта платежа
  CurrencyType_Rubl_=0'Рубль
  CurrencyType_Evro=2'Евро
  CurrencyType_Dollar=1'Доллар
end enum 
enum enumWFFuncState'Состояние функции в бизнес процессе
  WFFuncState_Processed=8'Processed
  WFFuncState_InWork=3'InWork
  WFFuncState_Pause=4'Pause
  WFFuncState_Ready=5'Ready
  WFFuncState_InControl=6'InControl
  WFFuncState_Prepare=1'Prepare
  WFFuncState_Active=2'Active
  WFFuncState_Done=7'Done
  WFFuncState_Initial=0'Initial
end enum 
enum enumtypeCourier'Договор \ ТрудКнижка
  typeCourier_Trudovay_knigka=1'Трудовая книжка
  typeCourier_Dogovor_podryda=0'Договор подряда
end enum 
enum enumEmployment_'осталось для совместимости
  Employment__Polnay=0'Полная
  Employment__Casticnay=1'Частичная
  Employment__Ne_vagno=-1'Не важно
end enum 
enum enumKONTR_STATUS'Состояние партнера
  KONTR_STATUS_Blokirovan=2'Блокирован
  KONTR_STATUS_Aktiveniy=0'Активеный
  KONTR_STATUS_Pssivniy=1'Пссивный
  KONTR_STATUS_Operacii_zapreseni=3'Операции запрещены
end enum 
enum enumMailSenderType'Да / Нет
  MailSenderType_Komu=0'Кому
  MailSenderType_Skritay_kopiy=2'Скрытая копия
  MailSenderType_Kopiy=1'Копия
end enum 
enum enumExtentionType'Тип расширения
  ExtentionType_OnFormExt=1'OnFormExt
  ExtentionType_CodeGenerator=7'CodeGenerator
  ExtentionType_JrnlAddExt=3'JrnlAddExt
  ExtentionType_VerifyRowExt=6'VerifyRowExt
  ExtentionType_StatusExt=0'StatusExt
  ExtentionType_ARMGenerator=8'ARMGenerator
  ExtentionType_DefaultExt=5'DefaultExt
  ExtentionType_CustomExt=2'CustomExt
  ExtentionType_JrnlRunExt=4'JrnlRunExt
end enum 
enum enumReplicationType'Вариант репликации докуента
  ReplicationType_Ves__dokument=0'Весь документ
  ReplicationType_Lokal_niy=2'Локальный
  ReplicationType_Postrocno=1'Построчно
end enum 
enum enumInfoStoreType'Тип каталога
  InfoStoreType_Gruppovoy=2'Групповой
  InfoStoreType_Personal_niy=1'Персональный
  InfoStoreType_cls__Obsiy=0' Общий
end enum 
private m_ITTIN_QLINE as ITTIN_QLINE_col
private m_ITTIN_SRV as ITTIN_SRV_col
private m_ITTIN_DEF as ITTIN_DEF_col
private m_ITTIN_EPL as ITTIN_EPL_col
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="


'Название типа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. TypeName
public property get TypeName() as string
  TypeName = m_TypeName
end property


'Отладочный компонент
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZUtil.Logger
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZUtil.Logger
' Set variable = me. Logger
public property get Logger() as MTZUtil.Logger
  if m_Logger is nothing then
    set m_Logger = new MTZUtil.Logger
    m_Logger.CreateLog TypeName &amp; &quot;_&quot; &amp; ID ,TypeName
  end if
  set Logger = m_Logger
end property


'Получить Название документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Name
public property get Name() as string
  Name = m_Name
end property


'Задать название документа
'Parameters:
'[IN][OUT]  n , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Name = value
public property Let Name(n as string)
  m_Name = n
end property


'Получить корневой объект системы - менеджер документов
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZManager.Main
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZManager.Main
' Set variable = me. Manager
public property get Manager() as MTZManager.Main
  set Manager = m_Manager
end property


'Задать менеджер документов
'Parameters:
'[IN][OUT]  m , тип параметра: MTZManager.Main  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Manager = value
public property Set Manager(m as MTZManager.Main)
  if not m_Manager is nothing then exit property
  set m_Manager = m
  Logger.Message &quot;Manager defined&quot;
end property


'Получить текущую сессию пользователя
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZSession.Session
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZSession.Session
' Set variable = me. MTZSession
public property get MTZSession() as MTZSession.Session
  set MTZSession = m_MTZSession
end property


'Задть текущую сессию пользователя
'Parameters:
'[IN][OUT]  m , тип параметра: MTZSession.Session  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. MTZSession = value
public property Set MTZSession(m as MTZSession.Session)
  if not m_MTZSession is nothing then exit property
  set m_MTZSession = m
  Logger.Message &quot;Session defined&quot;
  m_AutoLoadPart=true
end property


'Признак - работа без соединения с базой
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. WorkOffline
public property Get WorkOffline() as boolean
    WorkOffline = m_WorkOffline
end property


'Получить значение признака работы без соединения
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. WorkOffline = value
public property Let WorkOffline(v as boolean)
  if MTZSession is nothing then 
    m_WorkOffline = false
  else 
    m_WorkOffline = v
  end if 
end property


'Получить признак автоматической загрузки всеех полей
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. AutoLoadPart
public property Get AutoLoadPart() as boolean
    AutoLoadPart = m_AutoLoadPart
end property


'Признак загрузки всех полей (не только идентификатора)
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AutoLoadPart = value
public property Let AutoLoadPart(v as boolean)
    m_AutoLoadPart = v
end property


'Идентификатор документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  ID = m_ID
end property


'Задать идентификатор документа
'Parameters:
'[IN][OUT]  v , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
public property Let ID(v as string)
  m_ID=v
end property


'Родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = nothing
end property


'Корневой объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = me
end property


'Добавить в оптимизтор поиска строку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string, 
'[IN]   Item , тип параметра: Object  - ...
'See Also:
'Example:
'  call me.AddToCash({параметры})
public Sub AddToCash( byval Key as string, byval Item as Object)
  on error resume next
  findCash.Add Item,Key
end sub


'Исключить из оптимизатора сторку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string  - ...
'See Also:
'Example:
'  call me.RemoveFromCash({параметры})
public Sub RemoveFromCash( byval Key as string)
  on error resume next
  findCash.Remove Key
end sub

'Задать идентификатор стиля защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
public property let SecureStyleID(byval newID as string)
  Secure newID
  GetStatus
end property

'Получить идентификатор стиля защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  GetStatus
  SecureStyleID = m_SecureStyleID
end property

'Задать идентификатор сосотяния документа
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. StatusID = value
public property let StatusID(byval newID as string)
    SetStatus newID
    GetStatus
end property

'Получить идентификатор состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusID
public property Get StatusID() as string
  GetStatus
  StatusID = m_StatusID
end property

'Получить название состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusName
public property Get StatusName() as string
  GetStatus
  StatusName=&quot;&quot;
if statusid =&quot;{49A919F7-94A6-49DE-9280-1EEAC973647B}&quot; then StatusName = &quot;Оформляется&quot; : exit property
if statusid =&quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot; then StatusName = &quot;Приемка завершена&quot; : exit property
if statusid =&quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; then StatusName = &quot;Идет приемка&quot; : exit property
if statusid =&quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot; then StatusName = &quot;Приемка обработана&quot; : exit property
end property

'Даные раздела Строки заказа
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса ITTIN_QLINE_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_QLINE_col
' Set variable = me. ITTIN_QLINE (...параметры...)
public property Get ITTIN_QLINE (optional byval Refresh as boolean = true) as ITTIN_QLINE_col
 if m_ITTIN_QLINE is nothing then
   set  m_ITTIN_QLINE = new ITTIN_QLINE_col
   set m_ITTIN_QLINE.Parent = me
   set m_ITTIN_QLINE.Application = me.Application
   if Refresh then m_ITTIN_QLINE.Refresh
 end if
 set  ITTIN_QLINE = m_ITTIN_QLINE
end property

'Даные раздела Услуги к заказу
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса ITTIN_SRV_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_SRV_col
' Set variable = me. ITTIN_SRV (...параметры...)
public property Get ITTIN_SRV (optional byval Refresh as boolean = true) as ITTIN_SRV_col
 if m_ITTIN_SRV is nothing then
   set  m_ITTIN_SRV = new ITTIN_SRV_col
   set m_ITTIN_SRV.Parent = me
   set m_ITTIN_SRV.Application = me.Application
   if Refresh then m_ITTIN_SRV.Refresh
 end if
 set  ITTIN_SRV = m_ITTIN_SRV
end property

'Даные раздела Описание
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса ITTIN_DEF_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_DEF_col
' Set variable = me. ITTIN_DEF (...параметры...)
public property Get ITTIN_DEF (optional byval Refresh as boolean = true) as ITTIN_DEF_col
 if m_ITTIN_DEF is nothing then
   set  m_ITTIN_DEF = new ITTIN_DEF_col
   set m_ITTIN_DEF.Parent = me
   set m_ITTIN_DEF.Application = me.Application
   if Refresh then m_ITTIN_DEF.Refresh
 end if
 set  ITTIN_DEF = m_ITTIN_DEF
end property

'Даные раздела Поддоны к заказу
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса ITTIN_EPL_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_EPL_col
' Set variable = me. ITTIN_EPL (...параметры...)
public property Get ITTIN_EPL (optional byval Refresh as boolean = true) as ITTIN_EPL_col
 if m_ITTIN_EPL is nothing then
   set  m_ITTIN_EPL = new ITTIN_EPL_col
   set m_ITTIN_EPL.Parent = me
   set m_ITTIN_EPL.Application = me.Application
   if Refresh then m_ITTIN_EPL.Refresh
 end if
 set  ITTIN_EPL = m_ITTIN_EPL
end property

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Public sub CloseClass()
 on error resume next
 Set findCash = Nothing

  if not m_ITTIN_QLINE is nothing then 
    m_ITTIN_QLINE.CloseClass 
    set m_ITTIN_QLINE = nothing 
  end if
  if not m_ITTIN_SRV is nothing then 
    m_ITTIN_SRV.CloseClass 
    set m_ITTIN_SRV = nothing 
  end if
  if not m_ITTIN_DEF is nothing then 
    m_ITTIN_DEF.CloseClass 
    set m_ITTIN_DEF = nothing 
  end if
  if not m_ITTIN_EPL is nothing then 
    m_ITTIN_EPL.CloseClass 
    set m_ITTIN_EPL = nothing 
  end if
  if not m_manager is nothing then
    set m_manager = nothing
  end if
  if not m_MTZSession is nothing then
    set m_MTZSession = nothing
  end if
  if not m_Logger is nothing then
    m_Logger.Message &quot;Application.CloseClass&quot; 
    set m_Logger = nothing
  end if
end sub

'Поиск  строки раздела по ключу и названию раздела во всех документах
'Parameters:
'[IN]   StrID , тип параметра: String, 
'[IN]   RowID , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as Object
' Set variable = me.FindRowObject(...параметры...)
Public Function FindRowObject(ByVal StrID As String, ByVal RowID As String) As Object
  Dim obj As Object
  Dim Rowobj As Object
  Dim i As Long
Dim m_FindObject As Object

If StrID = &quot;&quot; Then Exit Function
If RowID = &quot;&quot; Then Exit Function
If findCash Is Nothing Then
 Set findCash = New Collection
End If
On Error Resume Next
Set m_FindObject = findCash.Item(StrID &amp; RowID)
If Not m_FindObject Is Nothing Then
  If m_FindObject.Application Is Nothing Then
    Set m_FindObject = Nothing
    findCash.Remove StrID &amp; RowID
  Else
   Set FindRowObject = m_FindObject
   Exit Function
  End If
End If

  Dim rpl As RowParentList
  Set rpl = MTZSession.TheFinder.RowParents(StrID, RowID)
  If rpl.Count &gt; 0 Then

 If rpl.Item(1).RowID = ID Then
    Set Rowobj = Me
    For i = 2 To rpl.Count
     Set Rowobj = Rowobj.FindObject(rpl.Item(i).PartName, rpl.Item(i).RowID)
    Next

' reference from another object
 Else
   Set obj = Manager.GetInstanceObject(rpl.Item(1).RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindRowObject(StrID, RowID)
 End If

  Else
' use old search style
 Set Rowobj = FindObject(StrID, RowID)
 If Rowobj Is Nothing Then
   Set obj = Manager.FindInstanceByRow(StrID, RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindObject(StrID, RowID)
 End If
  End If
  If Rowobj Is Nothing Then Exit Function
  Set FindRowObject = Rowobj
  Set Rowobj = Nothing
  Set obj = Nothing
End Function


'Поиск строки только в текщем документе
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
  If findCash Is Nothing Then
  Set findCash = New Collection
 End If
 On Error Resume Next
 Set m_FindObject = findCash.item(StrID &amp; InstID)
 if  not m_FindObject is nothing then
   if  m_FindObject.application is nothing then
     set m_FindObject = nothing
     findCash.remove StrID &amp; InstID
   end if
 end if

 if m_FindObject is nothing then
   set m_FindObject =  ITTIN_QLINE.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  ITTIN_SRV.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  ITTIN_DEF.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  ITTIN_EPL.FindObject(StrID,InstID)
 end if
 If findCash.item(StrID &amp; InstID) Is Nothing Then
   findCash.Add m_FindObject, StrID &amp; InstID
 End If
 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function


'Оптимизировать объем занятой памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()

ITTIN_QLINE.Compact
ITTIN_SRV.Compact
ITTIN_DEF.Compact
ITTIN_EPL.Compact
end sub

'Задать стиль защиты документа
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;INSTANCE&quot; ,ID,SecurityStyleID)
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Secure&quot;,err.description
end sub

'Распространить стиль защиты на все строки документа
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.Propagate &quot;INSTANCE&quot;, ID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Propagate&quot;,err.description
end sub

'Сохранить изменения (новое имя)
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save()
public sub Save()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.NewInstance ID, TypeName, Name
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Save&quot;,err.description
end sub

'Задать состояние
'Parameters:
'[IN]   StatusID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.SetStatus({параметры})
private sub SetStatus(byval StatusID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.SetStatus id,StatusID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub

'Получтиь актуальное состояние
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.GetStatus()
private sub GetStatus() 
if application.WorkOffline then exit sub
Dim rs as adodb.recordset
On Error goto bye
set rs =application.MTZSession.GetRow( &quot;INSTANCE&quot;, ID)
m_statusid=rs!status &amp; &quot;&quot; 
m_SecureStyleID = rs!SecurityStyleID &amp; &quot;&quot; 
exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
 on error resume next
  Dim anode As IXMLDOMElement
  Dim e_list As IXMLDOMNodeList
 on error resume next
  set anode = node.firstchild  
  if m_typename &lt;&gt; anode.Attributes.getNamedItem(&quot;TYPENAME&quot;).nodeValue then exit sub
  m_IsLocked=anode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  if LoadMode &lt;&gt;2 then 
    m_ID=anode.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    SetStatus anode.Attributes.getNamedItem(&quot;STATUSID&quot;).nodeValue
    Secure anode.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
    WorkOffline =anode.Attributes.getNamedItem(&quot;WorkOffline&quot;).nodevalue
    if workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  end if 
  m_Name=anode.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue
Set e_list = anode.selectNodes(&quot;ITTIN_QLINE_COL&quot;)
  ITTIN_QLINE.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;ITTIN_SRV_COL&quot;)
  ITTIN_SRV.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;ITTIN_DEF_COL&quot;)
  ITTIN_DEF.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;ITTIN_EPL_COL&quot;)
  ITTIN_EPL.XMLLoad e_list, LoadMode
end sub



'Сохранить данные в XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
  dim anode as IXMLDOMElement
  set anode = xdom.CreateElement(&quot;APPLICATION&quot;)
  anode.setAttribute &quot;ID&quot;, m_ID
  anode.setAttribute &quot;TYPENAME&quot;, m_TypeName
  anode.setAttribute &quot;NAME&quot;, m_Name
  anode.setAttribute &quot;STATUSID&quot;, m_StatusID
  anode.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  anode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  anode.setAttribute &quot;WorkOffline&quot;, WorkOffline
  node.appendChild anode
  ITTIN_QLINE.XMLSave anode,xdom
  ITTIN_SRV.XMLSave anode,xdom
  ITTIN_DEF.XMLSave anode,xdom
  ITTIN_EPL.XMLSave anode,xdom
end sub


'Краткое название
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
'  variable = me.Brief() 
public function Brief() as string
 Brief= Name 
end function

'Загрузка корня объекта в дерево
'Parameters:
'[IN][OUT]   tree , тип параметра: object, 
'[IN]   pkey , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;, 
'[IN][OUT]   optional CollectionName , тип параметра: string=&quot;&quot;   - ...
'See Also:
'Example:
'  call me.FillTree({параметры})
public sub FillTree( tree as object, byval pkey as string, byval mode as string, optional Mask as string =&quot;&quot;, optional CollectionName as string=&quot;&quot; )
 dim node as object,key as string
If CollectionName = &quot;&quot; Then
 key = createguid2() &amp; ID
 if pkey =&quot;&quot; then
   set node=tree.nodes.add(,0,key,Brief)
 else
   set node=tree.nodes.add(pkey,4,key,Brief)
 end if
 node.tag=&quot;object&quot;
else
 key=&quot;&quot; 
end if
  if mode = &quot;read&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_QLINE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_QLINE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
       end if
       node.tag=&quot;ITTIN_QLINE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
    end if
    node.tag=&quot;ITTIN_QLINE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_SRV&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_SRV&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
       end if
       node.tag=&quot;ITTIN_SRV&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
    end if
    node.tag=&quot;ITTIN_SRV&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_DEF&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_DEF&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
       end if
       node.tag=&quot;ITTIN_DEF&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
    end if
    node.tag=&quot;ITTIN_DEF&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_EPL&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_EPL&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
       end if
       node.tag=&quot;ITTIN_EPL&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
    end if
    node.tag=&quot;ITTIN_EPL&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;main&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_QLINE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_QLINE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
       end if
       node.tag=&quot;ITTIN_QLINE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
    end if
    node.tag=&quot;ITTIN_QLINE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_SRV&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_SRV&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
       end if
       node.tag=&quot;ITTIN_SRV&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
    end if
    node.tag=&quot;ITTIN_SRV&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_DEF&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_DEF&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
       end if
       node.tag=&quot;ITTIN_DEF&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
    end if
    node.tag=&quot;ITTIN_DEF&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_EPL&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_EPL&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
       end if
       node.tag=&quot;ITTIN_EPL&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
    end if
    node.tag=&quot;ITTIN_EPL&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;admi&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_QLINE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_QLINE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
       end if
       node.tag=&quot;ITTIN_QLINE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
    end if
    node.tag=&quot;ITTIN_QLINE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_SRV&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_SRV&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
       end if
       node.tag=&quot;ITTIN_SRV&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
    end if
    node.tag=&quot;ITTIN_SRV&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_DEF&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_DEF&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
       end if
       node.tag=&quot;ITTIN_DEF&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
    end if
    node.tag=&quot;ITTIN_DEF&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_EPL&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_EPL&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
       end if
       node.tag=&quot;ITTIN_EPL&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
    end if
    node.tag=&quot;ITTIN_EPL&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_QLINE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_QLINE&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
    end if
       node.tag=&quot;ITTIN_QLINE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;ITTIN_QLINE&quot;,&quot;Строки заказа&quot;)
    end if
    node.tag=&quot;ITTIN_QLINE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_SRV&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_SRV&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
    end if
       node.tag=&quot;ITTIN_SRV&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;ITTIN_SRV&quot;,&quot;Услуги к заказу&quot;)
    end if
    node.tag=&quot;ITTIN_SRV&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_DEF&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_DEF&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
    end if
       node.tag=&quot;ITTIN_DEF&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;ITTIN_DEF&quot;,&quot;Описание&quot;)
    end if
    node.tag=&quot;ITTIN_DEF&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;ITTIN_EPL&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;ITTIN_EPL&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
    end if
       node.tag=&quot;ITTIN_EPL&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;ITTIN_EPL&quot;,&quot;Поддоны к заказу&quot;)
    end if
    node.tag=&quot;ITTIN_EPL&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if

end sub


'Раскрытие объекта при выборе узла в дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string =&quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 id = mid(key,39,38)
 on error resume next
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if trim(struct)=&quot;&quot;  then 
   set item =manager.GetInstanceObject(id)
   if  item is nothing then exit sub
   If Not item Is Me Then
     item.Expand tree, Key, mode,mask
     Exit Sub
   End If
 else
    set item =FindRowObject(struct,id)
    if  item is nothing then exit sub
    call item.Expand(tree,key,mode,mask)
    exit sub
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;read&quot; then
 select case child
 case &quot;ITTIN_QLINE&quot; 
    item.ITTIN_QLINE.refresh
    for i=1 to item.ITTIN_QLINE.count
    nid =createguid2() &amp;  item.ITTIN_QLINE.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_QLINE.item(i).brief(true)).tag=&quot;Row&quot; 
if Mask&lt;&gt;&quot;&quot; then
  if application.MTZSession.IsDescendant(mask,&quot;ITTIN_PALET&quot;) then
    tree.nodes.add( nid,4,nid &amp; &quot;ITTIN_PALET&quot; ,&quot;Палеты к строке&quot;).tag=&quot;ITTIN_PALET&quot;
    tree.nodes.add( nid &amp; &quot;ITTIN_PALET&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
  end if
else
    tree.nodes.add( nid,4,nid &amp; &quot;ITTIN_PALET&quot; ,&quot;Палеты к строке&quot;).tag=&quot;ITTIN_PALET&quot;
    tree.nodes.add( nid &amp; &quot;ITTIN_PALET&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
end if
    next
 case &quot;ITTIN_SRV&quot; 
    item.ITTIN_SRV.refresh
    for i=1 to item.ITTIN_SRV.count
    nid =createguid2() &amp;  item.ITTIN_SRV.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_SRV.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;ITTIN_DEF&quot; 
    item.ITTIN_DEF.refresh
    for i=1 to item.ITTIN_DEF.count
    nid =createguid2() &amp;  item.ITTIN_DEF.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_DEF.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;ITTIN_EPL&quot; 
    item.ITTIN_EPL.refresh
    for i=1 to item.ITTIN_EPL.count
    nid =createguid2() &amp;  item.ITTIN_EPL.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_EPL.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
 case &quot;ITTIN_QLINE&quot; 
    item.ITTIN_QLINE.refresh
    for i=1 to item.ITTIN_QLINE.count
    nid =createguid2() &amp;  item.ITTIN_QLINE.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_QLINE.item(i).brief(true)).tag=&quot;Row&quot; 
if Mask&lt;&gt;&quot;&quot; then
  if application.MTZSession.IsDescendant(mask,&quot;ITTIN_PALET&quot;) then
    tree.nodes.add( nid,4,nid &amp; &quot;ITTIN_PALET&quot; ,&quot;Палеты к строке&quot;).tag=&quot;ITTIN_PALET&quot;
    tree.nodes.add( nid &amp; &quot;ITTIN_PALET&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
  end if
else
    tree.nodes.add( nid,4,nid &amp; &quot;ITTIN_PALET&quot; ,&quot;Палеты к строке&quot;).tag=&quot;ITTIN_PALET&quot;
    tree.nodes.add( nid &amp; &quot;ITTIN_PALET&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
end if
    next
 case &quot;ITTIN_SRV&quot; 
    item.ITTIN_SRV.refresh
    for i=1 to item.ITTIN_SRV.count
    nid =createguid2() &amp;  item.ITTIN_SRV.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_SRV.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;ITTIN_DEF&quot; 
    item.ITTIN_DEF.refresh
    for i=1 to item.ITTIN_DEF.count
    nid =createguid2() &amp;  item.ITTIN_DEF.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_DEF.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;ITTIN_EPL&quot; 
    item.ITTIN_EPL.refresh
    for i=1 to item.ITTIN_EPL.count
    nid =createguid2() &amp;  item.ITTIN_EPL.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_EPL.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
 case &quot;ITTIN_QLINE&quot; 
    item.ITTIN_QLINE.refresh
    for i=1 to item.ITTIN_QLINE.count
    nid =createguid2() &amp;  item.ITTIN_QLINE.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_QLINE.item(i).brief(true)).tag=&quot;Row&quot; 
if Mask&lt;&gt;&quot;&quot; then
  if application.MTZSession.IsDescendant(mask,&quot;ITTIN_PALET&quot;) then
    tree.nodes.add( nid,4,nid &amp; &quot;ITTIN_PALET&quot; ,&quot;Палеты к строке&quot;).tag=&quot;ITTIN_PALET&quot;
    tree.nodes.add( nid &amp; &quot;ITTIN_PALET&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
  end if
else
    tree.nodes.add( nid,4,nid &amp; &quot;ITTIN_PALET&quot; ,&quot;Палеты к строке&quot;).tag=&quot;ITTIN_PALET&quot;
    tree.nodes.add( nid &amp; &quot;ITTIN_PALET&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
end if
    next
 case &quot;ITTIN_SRV&quot; 
    item.ITTIN_SRV.refresh
    for i=1 to item.ITTIN_SRV.count
    nid =createguid2() &amp;  item.ITTIN_SRV.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_SRV.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;ITTIN_DEF&quot; 
    item.ITTIN_DEF.refresh
    for i=1 to item.ITTIN_DEF.count
    nid =createguid2() &amp;  item.ITTIN_DEF.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_DEF.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;ITTIN_EPL&quot; 
    item.ITTIN_EPL.refresh
    for i=1 to item.ITTIN_EPL.count
    nid =createguid2() &amp;  item.ITTIN_EPL.item(i).id
    tree.nodes.add( key,4,nid,  item.ITTIN_EPL.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 case &quot;ITTIN_QLINE&quot; 
    item.ITTIN_QLINE.refresh
    for i=1 to item.ITTIN_QLINE.count
    nid =createguid2() &amp;  item.ITTIN_QLINE.item(i).id  
    tree.nodes.add( key,4,nid,  item.ITTIN_QLINE.item(i).brief(true)).tag=&quot;Row&quot; 
if Mask&lt;&gt;&quot;&quot; then
  if application.MTZSession.IsDescendant(mask,&quot;ITTIN_PALET&quot;) then
    tree.nodes.add( nid,4,nid &amp; &quot;ITTIN_PALET&quot; ,&quot;Палеты к строке&quot;).tag=&quot;ITTIN_PALET&quot;
    tree.nodes.add( nid &amp; &quot;ITTIN_PALET&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
  end if
else
    tree.nodes.add( nid,4,nid &amp; &quot;ITTIN_PALET&quot; ,&quot;Палеты к строке&quot;).tag=&quot;ITTIN_PALET&quot;
    tree.nodes.add( nid &amp; &quot;ITTIN_PALET&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
end if
    next
 case &quot;ITTIN_SRV&quot; 
    item.ITTIN_SRV.refresh
    for i=1 to item.ITTIN_SRV.count
    nid =createguid2() &amp;  item.ITTIN_SRV.item(i).id  
    tree.nodes.add( key,4,nid,  item.ITTIN_SRV.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;ITTIN_DEF&quot; 
    item.ITTIN_DEF.refresh
    for i=1 to item.ITTIN_DEF.count
    nid =createguid2() &amp;  item.ITTIN_DEF.item(i).id  
    tree.nodes.add( key,4,nid,  item.ITTIN_DEF.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;ITTIN_EPL&quot; 
    item.ITTIN_EPL.refresh
    for i=1 to item.ITTIN_EPL.count
    nid =createguid2() &amp;  item.ITTIN_EPL.item(i).id  
    tree.nodes.add( key,4,nid,  item.ITTIN_EPL.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 end select
end if ' mode=&quot;&quot;
end sub

'Получить дочерний раздел по имени
'Parameters:
'[IN][OUT]   Item , тип параметра: object, 
'[IN]   CollectionName , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ItemCollection(...параметры...)
public property Get ItemCollection( Item as object, byval CollectionName as string) as object
  set ItemCollection = CallByName(Item,CollectionName,vbGet)
end property

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
 ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, ID)
end function

'Массовое обновление строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
public sub BatchUpdate()
If not Application.WorkOffline Then
    ITTIN_QLINE.BatchUpdate
    ITTIN_SRV.BatchUpdate
    ITTIN_DEF.BatchUpdate
    ITTIN_EPL.BatchUpdate
End If
End sub

'Загрузка всех данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
public sub LoadAll()
dim prevAutoLoad as boolean
If not Application.WorkOffline Then
prevAutoLoad= Application.autoloadpart
Application.autoloadpart = true
    ITTIN_QLINE.LoadAll
    ITTIN_SRV.LoadAll
    ITTIN_DEF.LoadAll
    ITTIN_EPL.LoadAll
Application.autoloadpart = prevAutoLoad
End If
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_QLINE" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_ITTIN_PALET as ITTIN_PALET_col
private m_sequence as long
private m_LineAtQuery as string
private m_QRY_NUM as string
private m_edizm as String
private m_CurValue as double
private m_articul as String
private m_made_country as object
Dim m_made_country_ID as string
Dim m_made_country_ID_BRIEF as string
private m_made_date_to as DATE
private m_vetsved as String
private m_Factory as object
Dim m_Factory_ID as string
Dim m_Factory_ID_BRIEF as string
private m_KILL_NUMBER as object
Dim m_KILL_NUMBER_ID as string
Dim m_KILL_NUMBER_ID_BRIEF as string
private m_VidOtruba as String
private m_PartRef as object
Dim m_PartRef_ID as string
Dim m_PartRef_ID_BRIEF as string
private m_exp_date as DATE
private m_Made_date as DATE
private m_PackageWeight as double
private m_IsCalibrated as enumBoolean
private m_CaliberWeight as double
private m_FullPackageWeight as double
private m_good_id as string
private m_KorobBrutto as double
private m_KorobNetto as double
private m_Navalom as enumBoolean
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;ITTIN_QLINE&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;ITTIN_QLINE.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 

'Данные дочернего раздела Палеты к строке
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса ITTIN_PALET_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_PALET_col
' Set variable = me. ITTIN_PALET (...параметры...)
public property Get ITTIN_PALET (optional byval Refresh as boolean = true) as ITTIN_PALET_col
 if m_ITTIN_PALET is nothing then
   set  m_ITTIN_PALET = new ITTIN_PALET_col
   set m_ITTIN_PALET.Parent = me
   set m_ITTIN_PALET.Application = me.Application
   if Refresh then m_ITTIN_PALET.Refresh
 end if
 set  ITTIN_PALET = m_ITTIN_PALET
end property
' let 
'№ П\П

'№ П\П
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let sequence(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;sequence&quot;,sequence,newvalue

   m_sequence= newValue
end if
end property

'№ П\П
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. sequence
public property Get sequence() as long
 LoadFromDatabase
 AccessTime=Now

   sequence = m_sequence
end property
' let 
'Строка в заказе

'Строка в заказе
'Parameters:
'[IN]   newValue , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property   let LineAtQuery(byval newValue as string)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;LineAtQuery&quot;,LineAtQuery,newvalue

    m_LineAtQuery= newValue
end if
end property

'Строка в заказе
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. LineAtQuery
public property Get LineAtQuery() as string
 LoadFromDatabase
 AccessTime=Now

    LineAtQuery = m_LineAtQuery
end property
' let 
'По заказу КГ.

'По заказу КГ.
'Parameters:
'[IN]   newValue , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property   let QRY_NUM(byval newValue as string)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;QRY_NUM&quot;,QRY_NUM,newvalue

    m_QRY_NUM= newValue
end if
end property

'По заказу КГ.
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. QRY_NUM
public property Get QRY_NUM() as string
 LoadFromDatabase
 AccessTime=Now

    QRY_NUM = m_QRY_NUM
end property
' let 
'Ед. изм

'Ед. изм
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let edizm(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;edizm&quot;,edizm,newvalue

   m_edizm= newValue
end if
end property

'Ед. изм
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. edizm
public property Get edizm() as String
 LoadFromDatabase
 AccessTime=Now

   edizm = m_edizm
end property
' let 
'Факт КГ.

'Факт КГ.
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CurValue(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CurValue&quot;,CurValue,newvalue

   m_CurValue= newValue
end if
end property

'Факт КГ.
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. CurValue
public property Get CurValue() as double
 LoadFromDatabase
 AccessTime=Now

   CurValue = m_CurValue
end property
' let 
'Артикул

'Артикул
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let articul(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;articul&quot;,articul,newvalue

   m_articul= newValue
end if
end property

'Артикул
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. articul
public property Get articul() as String
 LoadFromDatabase
 AccessTime=Now

   articul = m_articul
end property
' let 
'Страна производитель

'Страна производитель
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set made_country(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;made_country&quot;,made_country,newvalue
on error resume next
m_made_country_ID=&quot;&quot;
m_made_country_ID=newValue.id
'  set   m_made_country= newValue
end if
end property

'Страна производитель
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. made_country
public property Get made_country() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_made_country as object
if  m_made_country_ID&lt;&gt;&quot;&quot; then 
  set tmp_made_country=Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,m_made_country_ID)
  if tmp_made_country is nothing then
    m_made_country_ID_BRIEF = &quot;&quot; 
  else
    m_made_country_ID_BRIEF = tmp_made_country.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTD_COUNTRY&quot; &amp; m_made_country_ID, tmp_made_country
  set made_country=tmp_made_country
  exit property
end if
  '  set made_country = m_made_country
end property
' let 
'Дата производства По

'Дата производства По
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let made_date_to(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;made_date_to&quot;,made_date_to,newvalue

   m_made_date_to= newValue
end if
end property

'Дата производства По
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. made_date_to
public property Get made_date_to() as DATE
 LoadFromDatabase
 AccessTime=Now

   made_date_to = m_made_date_to
end property
' let 
'Номер сертификата

'Номер сертификата
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let vetsved(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;vetsved&quot;,vetsved,newvalue

   m_vetsved= newValue
end if
end property

'Номер сертификата
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. vetsved
public property Get vetsved() as String
 LoadFromDatabase
 AccessTime=Now

   vetsved = m_vetsved
end property
' let 
'Завод

'Завод
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Factory(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Factory&quot;,Factory,newvalue
on error resume next
m_Factory_ID=&quot;&quot;
m_Factory_ID=newValue.id
'  set   m_Factory= newValue
end if
end property

'Завод
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Factory
public property Get Factory() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Factory as object
if  m_Factory_ID&lt;&gt;&quot;&quot; then 
  set tmp_Factory=Application.FindRowObject(&quot;ITTD_FACTORY&quot;,m_Factory_ID)
  if tmp_Factory is nothing then
    m_Factory_ID_BRIEF = &quot;&quot; 
  else
    m_Factory_ID_BRIEF = tmp_Factory.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTD_FACTORY&quot; &amp; m_Factory_ID, tmp_Factory
  set Factory=tmp_Factory
  exit property
end if
  '  set Factory = m_Factory
end property
' let 
'№ бойни

'№ бойни
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set KILL_NUMBER(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;KILL_NUMBER&quot;,KILL_NUMBER,newvalue
on error resume next
m_KILL_NUMBER_ID=&quot;&quot;
m_KILL_NUMBER_ID=newValue.id
'  set   m_KILL_NUMBER= newValue
end if
end property

'№ бойни
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. KILL_NUMBER
public property Get KILL_NUMBER() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_KILL_NUMBER as object
if  m_KILL_NUMBER_ID&lt;&gt;&quot;&quot; then 
  set tmp_KILL_NUMBER=Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,m_KILL_NUMBER_ID)
  if tmp_KILL_NUMBER is nothing then
    m_KILL_NUMBER_ID_BRIEF = &quot;&quot; 
  else
    m_KILL_NUMBER_ID_BRIEF = tmp_KILL_NUMBER.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTD_KILLPLACE&quot; &amp; m_KILL_NUMBER_ID, tmp_KILL_NUMBER
  set KILL_NUMBER=tmp_KILL_NUMBER
  exit property
end if
  '  set KILL_NUMBER = m_KILL_NUMBER
end property
' let 
'Вид отруба

'Вид отруба
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let VidOtruba(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;VidOtruba&quot;,VidOtruba,newvalue

   m_VidOtruba= newValue
end if
end property

'Вид отруба
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. VidOtruba
public property Get VidOtruba() as String
 LoadFromDatabase
 AccessTime=Now

   VidOtruba = m_VidOtruba
end property
' let 
'Партия

'Партия
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set PartRef(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PartRef&quot;,PartRef,newvalue
on error resume next
m_PartRef_ID=&quot;&quot;
m_PartRef_ID=newValue.id
'  set   m_PartRef= newValue
end if
end property

'Партия
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. PartRef
public property Get PartRef() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_PartRef as object
if  m_PartRef_ID&lt;&gt;&quot;&quot; then 
  set tmp_PartRef=Application.FindRowObject(&quot;ITTD_PART&quot;,m_PartRef_ID)
  if tmp_PartRef is nothing then
    m_PartRef_ID_BRIEF = &quot;&quot; 
  else
    m_PartRef_ID_BRIEF = tmp_PartRef.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTD_PART&quot; &amp; m_PartRef_ID, tmp_PartRef
  set PartRef=tmp_PartRef
  exit property
end if
  '  set PartRef = m_PartRef
end property
' let 
'Срок годности

'Срок годности
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let exp_date(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;exp_date&quot;,exp_date,newvalue

   m_exp_date= newValue
end if
end property

'Срок годности
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. exp_date
public property Get exp_date() as DATE
 LoadFromDatabase
 AccessTime=Now

   exp_date = m_exp_date
end property
' let 
'Дата производства C

'Дата производства C
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Made_date(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Made_date&quot;,Made_date,newvalue

   m_Made_date= newValue
end if
end property

'Дата производства C
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. Made_date
public property Get Made_date() as DATE
 LoadFromDatabase
 AccessTime=Now

   Made_date = m_Made_date
end property
' let 
'Вес одной упаковки КГ.

'Вес одной упаковки КГ.
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PackageWeight(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PackageWeight&quot;,PackageWeight,newvalue

   m_PackageWeight= newValue
end if
end property

'Вес одной упаковки КГ.
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PackageWeight
public property Get PackageWeight() as double
 LoadFromDatabase
 AccessTime=Now

   PackageWeight = m_PackageWeight
end property
' let 
'Калиброванный груз

'Калиброванный груз
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsCalibrated(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsCalibrated&quot;,IsCalibrated,newvalue

   m_IsCalibrated= newValue
end if
end property

'Калиброванный груз
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsCalibrated
public property Get IsCalibrated() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsCalibrated = m_IsCalibrated
end property
' let 
'Вес калиброванной единицы НЕТТО

'Вес калиброванной единицы НЕТТО
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CaliberWeight(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CaliberWeight&quot;,CaliberWeight,newvalue

   m_CaliberWeight= newValue
end if
end property

'Вес калиброванной единицы НЕТТО
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. CaliberWeight
public property Get CaliberWeight() as double
 LoadFromDatabase
 AccessTime=Now

   CaliberWeight = m_CaliberWeight
end property
' let 
'Суммарный вес упаковки КГ.

'Суммарный вес упаковки КГ.
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FullPackageWeight(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FullPackageWeight&quot;,FullPackageWeight,newvalue

   m_FullPackageWeight= newValue
end if
end property

'Суммарный вес упаковки КГ.
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. FullPackageWeight
public property Get FullPackageWeight() as double
 LoadFromDatabase
 AccessTime=Now

   FullPackageWeight = m_FullPackageWeight
end property
' let 
'Идентификатор товара

'Идентификатор товара
'Parameters:
'[IN]   newValue , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property   let good_id(byval newValue as string)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;good_id&quot;,good_id,newvalue

    m_good_id= newValue
end if
end property

'Идентификатор товара
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. good_id
public property Get good_id() as string
 LoadFromDatabase
 AccessTime=Now

    good_id = m_good_id
end property
' let 
'Вес брутто короба

'Вес брутто короба
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let KorobBrutto(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;KorobBrutto&quot;,KorobBrutto,newvalue

   m_KorobBrutto= newValue
end if
end property

'Вес брутто короба
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. KorobBrutto
public property Get KorobBrutto() as double
 LoadFromDatabase
 AccessTime=Now

   KorobBrutto = m_KorobBrutto
end property
' let 
'Вес НЕТТО короба

'Вес НЕТТО короба
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let KorobNetto(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;KorobNetto&quot;,KorobNetto,newvalue

   m_KorobNetto= newValue
end if
end property

'Вес НЕТТО короба
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. KorobNetto
public property Get KorobNetto() as double
 LoadFromDatabase
 AccessTime=Now

   KorobNetto = m_KorobNetto
end property
' let 
'Груз навалом

'Груз навалом
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Navalom(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Navalom&quot;,Navalom,newvalue

   m_Navalom= newValue
end if
end property

'Груз навалом
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. Navalom
public property Get Navalom() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   Navalom = m_Navalom
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;sequence&quot;,m_sequence)
nvi.ValueType = adInteger 
       set nvi=nv.Add (&quot;LineAtQuery&quot;, m_LineAtQuery)
       nvi.ValueSize = Len(m_LineAtQuery)
       set nvi=nv.Add (&quot;QRY_NUM&quot;, m_QRY_NUM)
       nvi.ValueSize = Len(m_QRY_NUM)
  set nvi=nv.Add( &quot;edizm&quot;,m_edizm)
nvi.ValueSize = 30
  set nvi=nv.Add( &quot;CurValue&quot;,m_CurValue)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;articul&quot;,m_articul)
nvi.ValueSize = 30
 ' Reference to ITTD_COUNTRY
    if m_made_country_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;made_country&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;made_country&quot;,m_made_country_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;made_date_to&quot;,m_made_date_to)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;vetsved&quot;,m_vetsved)
nvi.ValueSize = 50
 ' Reference to ITTD_FACTORY
    if m_Factory_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Factory&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Factory&quot;,m_Factory_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to ITTD_KILLPLACE
    if m_KILL_NUMBER_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;KILL_NUMBER&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;KILL_NUMBER&quot;,m_KILL_NUMBER_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;VidOtruba&quot;,m_VidOtruba)
nvi.ValueSize = 64
 ' Reference to ITTD_PART
    if m_PartRef_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;PartRef&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;PartRef&quot;,m_PartRef_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;exp_date&quot;,m_exp_date)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;Made_date&quot;,m_Made_date)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;PackageWeight&quot;,m_PackageWeight)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;IsCalibrated&quot;,m_IsCalibrated)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;CaliberWeight&quot;,m_CaliberWeight)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;FullPackageWeight&quot;,m_FullPackageWeight)
nvi.ValueType =  adDouble 
       set nvi=nv.Add (&quot;good_id&quot;, m_good_id)
       nvi.ValueSize = Len(m_good_id)
  set nvi=nv.Add( &quot;KorobBrutto&quot;,m_KorobBrutto)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;KorobNetto&quot;,m_KorobNetto)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Navalom&quot;,m_Navalom)
nvi.ValueType = adInteger 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  LineAtQuery &lt;&gt; &quot;&quot; then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; GetFromXML(m_LineAtQuery, &quot;BRIEF&quot;) &amp; &quot; }; &quot;
   end if
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_sequence=nv.item( &quot;sequence&quot;).Value
  m_LineAtQuery =nv.item( &quot;LineAtQuery&quot;).Value
  m_QRY_NUM =nv.item( &quot;QRY_NUM&quot;).Value
m_edizm=nv.item( &quot;edizm&quot;).Value
m_CurValue=nv.item( &quot;CurValue&quot;).Value
m_articul=nv.item( &quot;articul&quot;).Value
  m_made_country_ID=nv.item( &quot;made_country&quot;).Value
m_made_date_to=nv.item( &quot;made_date_to&quot;).Value
m_vetsved=nv.item( &quot;vetsved&quot;).Value
  m_Factory_ID=nv.item( &quot;Factory&quot;).Value
  m_KILL_NUMBER_ID=nv.item( &quot;KILL_NUMBER&quot;).Value
m_VidOtruba=nv.item( &quot;VidOtruba&quot;).Value
  m_PartRef_ID=nv.item( &quot;PartRef&quot;).Value
m_exp_date=nv.item( &quot;exp_date&quot;).Value
m_Made_date=nv.item( &quot;Made_date&quot;).Value
m_PackageWeight=nv.item( &quot;PackageWeight&quot;).Value
m_IsCalibrated=nv.item( &quot;IsCalibrated&quot;).Value
m_CaliberWeight=nv.item( &quot;CaliberWeight&quot;).Value
m_FullPackageWeight=nv.item( &quot;FullPackageWeight&quot;).Value
  m_good_id =nv.item( &quot;good_id&quot;).Value
m_KorobBrutto=nv.item( &quot;KorobBrutto&quot;).Value
m_KorobNetto=nv.item( &quot;KorobNetto&quot;).Value
m_Navalom=nv.item( &quot;Navalom&quot;).Value
else

m_sequence=nv.fields( &quot;sequence&quot;).Value
  m_LineAtQuery =nv.fields( &quot;LineAtQuery&quot;).Value
  m_QRY_NUM =nv.fields( &quot;QRY_NUM&quot;).Value
m_edizm=nv.fields( &quot;edizm&quot;).Value
m_CurValue=nv.fields( &quot;CurValue&quot;).Value
m_articul=nv.fields( &quot;articul&quot;).Value
  m_made_country_ID=nv.fields( &quot;made_country&quot;).Value
m_made_date_to=nv.fields( &quot;made_date_to&quot;).Value
m_vetsved=nv.fields( &quot;vetsved&quot;).Value
  m_Factory_ID=nv.fields( &quot;Factory&quot;).Value
  m_KILL_NUMBER_ID=nv.fields( &quot;KILL_NUMBER&quot;).Value
m_VidOtruba=nv.fields( &quot;VidOtruba&quot;).Value
  m_PartRef_ID=nv.fields( &quot;PartRef&quot;).Value
m_exp_date=nv.fields( &quot;exp_date&quot;).Value
m_Made_date=nv.fields( &quot;Made_date&quot;).Value
m_PackageWeight=nv.fields( &quot;PackageWeight&quot;).Value
m_IsCalibrated=nv.fields( &quot;IsCalibrated&quot;).Value
m_CaliberWeight=nv.fields( &quot;CaliberWeight&quot;).Value
m_FullPackageWeight=nv.fields( &quot;FullPackageWeight&quot;).Value
  m_good_id =nv.fields( &quot;good_id&quot;).Value
m_KorobBrutto=nv.fields( &quot;KorobBrutto&quot;).Value
m_KorobNetto=nv.fields( &quot;KorobNetto&quot;).Value
m_Navalom=nv.fields( &quot;Navalom&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as ITTIN_QLINE
   set o = new ITTIN_QLINE
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;ITTIN_QLINE.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;ITTIN_QLINE.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;ITTIN_QLINE&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;ITTIN_QLINE.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;ITTIN_QLINE&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;ITTIN_QLINE.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

if not m_ITTIN_PALET is nothing then 
  m_ITTIN_PALET.CloseClass 
  set m_ITTIN_PALET = nothing 
end if
 m_LineAtQuery= &quot;&quot;
 m_QRY_NUM= &quot;&quot;
 m_made_country_ID=&quot;&quot;
 set m_made_country= nothing
 m_Factory_ID=&quot;&quot;
 set m_Factory= nothing
 m_KILL_NUMBER_ID=&quot;&quot;
 set m_KILL_NUMBER= nothing
 m_PartRef_ID=&quot;&quot;
 set m_PartRef= nothing
 m_good_id= &quot;&quot;
 if not Application is nothing then Application.Logger.Message &quot;ITTIN_QLINE.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 if m_FindObject is nothing then
   set m_FindObject =  ITTIN_PALET.FindObject(StrID,InstID)
 end if
 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

ITTIN_PALET.Compact
end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  sequence=node.Attributes.getNamedItem(&quot;SEQUENCE&quot;).nodeValue
  LineAtQuery=&quot;&quot;
  QRY_NUM=&quot;&quot;
  edizm=Replace(node.Attributes.getNamedItem(&quot;EDIZM&quot;).nodeValue,vbLf,vbcrlf)
  CurValue=val(Replace(node.Attributes.getNamedItem(&quot;CURVALUE&quot;).nodeValue,vbLf,vbcrlf))
  articul=Replace(node.Attributes.getNamedItem(&quot;ARTICUL&quot;).nodeValue,vbLf,vbcrlf)
  set made_country=nothing
  m_made_country_ID=node.Attributes.getNamedItem(&quot;MADE_COUNTRY&quot;).nodeValue
  m_made_country_ID_BRIEF=node.Attributes.getNamedItem(&quot;MADE_COUNTRY_BRIEF&quot;).nodeValue
  made_date_to=node.Attributes.getNamedItem(&quot;MADE_DATE_TO&quot;).nodeValue
  vetsved=Replace(node.Attributes.getNamedItem(&quot;VETSVED&quot;).nodeValue,vbLf,vbcrlf)
  set Factory=nothing
  m_Factory_ID=node.Attributes.getNamedItem(&quot;FACTORY&quot;).nodeValue
  m_Factory_ID_BRIEF=node.Attributes.getNamedItem(&quot;FACTORY_BRIEF&quot;).nodeValue
  set KILL_NUMBER=nothing
  m_KILL_NUMBER_ID=node.Attributes.getNamedItem(&quot;KILL_NUMBER&quot;).nodeValue
  m_KILL_NUMBER_ID_BRIEF=node.Attributes.getNamedItem(&quot;KILL_NUMBER_BRIEF&quot;).nodeValue
  VidOtruba=Replace(node.Attributes.getNamedItem(&quot;VIDOTRUBA&quot;).nodeValue,vbLf,vbcrlf)
  set PartRef=nothing
  m_PartRef_ID=node.Attributes.getNamedItem(&quot;PARTREF&quot;).nodeValue
  m_PartRef_ID_BRIEF=node.Attributes.getNamedItem(&quot;PARTREF_BRIEF&quot;).nodeValue
  exp_date=node.Attributes.getNamedItem(&quot;EXP_DATE&quot;).nodeValue
  Made_date=node.Attributes.getNamedItem(&quot;MADE_DATE&quot;).nodeValue
  PackageWeight=val(Replace(node.Attributes.getNamedItem(&quot;PACKAGEWEIGHT&quot;).nodeValue,vbLf,vbcrlf))
  IsCalibrated=node.Attributes.getNamedItem(&quot;ISCALIBRATED&quot;).nodeValue
  CaliberWeight=val(Replace(node.Attributes.getNamedItem(&quot;CALIBERWEIGHT&quot;).nodeValue,vbLf,vbcrlf))
  FullPackageWeight=val(Replace(node.Attributes.getNamedItem(&quot;FULLPACKAGEWEIGHT&quot;).nodeValue,vbLf,vbcrlf))
  good_id=&quot;&quot;
  KorobBrutto=val(Replace(node.Attributes.getNamedItem(&quot;KOROBBRUTTO&quot;).nodeValue,vbLf,vbcrlf))
  KorobNetto=val(Replace(node.Attributes.getNamedItem(&quot;KOROBNETTO&quot;).nodeValue,vbLf,vbcrlf))
  Navalom=node.Attributes.getNamedItem(&quot;NAVALOM&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  Set e_list = node.selectNodes(&quot;ITTIN_PALET_COL&quot;)
  ITTIN_PALET.XMLLoad e_list, LoadMode
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;SEQUENCE&quot;, sequence
  node.setAttribute &quot;LINEATQUERY&quot;, m_LineAtQuery
  node.setAttribute &quot;QRY_NUM&quot;, m_QRY_NUM
  node.setAttribute &quot;EDIZM&quot;, edizm
  node.setAttribute &quot;CURVALUE&quot;, replace(cstr(CurValue),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ARTICUL&quot;, articul
  node.setAttribute &quot;MADE_COUNTRY&quot;, m_made_country_ID
  if not (made_country is nothing) then 
    node.setAttribute &quot;MADE_COUNTRY_BRIEF&quot;, made_country.BRIEF
  else
    node.setAttribute &quot;MADE_COUNTRY_BRIEF&quot;, m_made_country_ID_BRIEF
  end if
  node.setAttribute &quot;MADE_DATE_TO&quot;, Cdbl(made_date_to)
  node.setAttribute &quot;VETSVED&quot;, vetsved
  node.setAttribute &quot;FACTORY&quot;, m_Factory_ID
  if not (Factory is nothing) then 
    node.setAttribute &quot;FACTORY_BRIEF&quot;, Factory.BRIEF
  else
    node.setAttribute &quot;FACTORY_BRIEF&quot;, m_Factory_ID_BRIEF
  end if
  node.setAttribute &quot;KILL_NUMBER&quot;, m_KILL_NUMBER_ID
  if not (KILL_NUMBER is nothing) then 
    node.setAttribute &quot;KILL_NUMBER_BRIEF&quot;, KILL_NUMBER.BRIEF
  else
    node.setAttribute &quot;KILL_NUMBER_BRIEF&quot;, m_KILL_NUMBER_ID_BRIEF
  end if
  node.setAttribute &quot;VIDOTRUBA&quot;, VidOtruba
  node.setAttribute &quot;PARTREF&quot;, m_PartRef_ID
  if not (PartRef is nothing) then 
    node.setAttribute &quot;PARTREF_BRIEF&quot;, PartRef.BRIEF
  else
    node.setAttribute &quot;PARTREF_BRIEF&quot;, m_PartRef_ID_BRIEF
  end if
  node.setAttribute &quot;EXP_DATE&quot;, Cdbl(exp_date)
  node.setAttribute &quot;MADE_DATE&quot;, Cdbl(Made_date)
  node.setAttribute &quot;PACKAGEWEIGHT&quot;, replace(cstr(PackageWeight),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ISCALIBRATED&quot;, IsCalibrated
  node.setAttribute &quot;CALIBERWEIGHT&quot;, replace(cstr(CaliberWeight),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;FULLPACKAGEWEIGHT&quot;, replace(cstr(FullPackageWeight),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;GOOD_ID&quot;, m_good_id
  node.setAttribute &quot;KOROBBRUTTO&quot;, replace(cstr(KorobBrutto),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;KOROBNETTO&quot;, replace(cstr(KorobNetto),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;NAVALOM&quot;, Navalom
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
  ITTIN_PALET.XMLSave node,xdom
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;ITTIN_QLINE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;ITTIN_QLINE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;ITTIN_QLINE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;ITTIN_QLINE&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
 ITTIN_PALET.BatchUpdate
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
  ITTIN_PALET.LoadAll
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;read&quot; then
 select case child
 case &quot;ITTIN_PALET&quot; 
    item.ITTIN_PALET.refresh
    for i=1 to item.ITTIN_PALET.count
      nid =createguid2() &amp;  item.ITTIN_PALET.item(i).id &amp; child 
      tree.nodes.add( key,4,nid,  item.ITTIN_PALET.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
 case &quot;ITTIN_PALET&quot; 
    item.ITTIN_PALET.refresh
    for i=1 to item.ITTIN_PALET.count
      nid =createguid2() &amp;  item.ITTIN_PALET.item(i).id &amp; child 
      tree.nodes.add( key,4,nid,  item.ITTIN_PALET.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
 case &quot;ITTIN_PALET&quot; 
    item.ITTIN_PALET.refresh
    for i=1 to item.ITTIN_PALET.count
      nid =createguid2() &amp;  item.ITTIN_PALET.item(i).id &amp; child 
      tree.nodes.add( key,4,nid,  item.ITTIN_PALET.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 case &quot;ITTIN_PALET&quot; 
    item.ITTIN_PALET.refresh
    for i=1 to item.ITTIN_PALET.count
    nid =createguid2()  &amp; item.ITTIN_PALET.item(i).id 
    tree.nodes.add( key,4,nid,  item.ITTIN_PALET.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_PALET" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_sequence as long
private m_TheNumber as object
Dim m_TheNumber_ID as string
Dim m_TheNumber_ID_BRIEF as string
private m_made_country as object
Dim m_made_country_ID as string
Dim m_made_country_ID_BRIEF as string
private m_Factory as object
Dim m_Factory_ID as string
Dim m_Factory_ID_BRIEF as string
private m_KILL_NUMBER as object
Dim m_KILL_NUMBER_ID as string
Dim m_KILL_NUMBER_ID_BRIEF as string
private m_VidOtruba as String
private m_PartRef as object
Dim m_PartRef_ID as string
Dim m_PartRef_ID_BRIEF as string
private m_Made_date as DATE
private m_made_date_to as DATE
private m_vetsved as String
private m_exp_date as DATE
private m_CaliberQuantity as long
private m_PalWeight as double
private m_GoodWithPaletWeight as double
private m_PackageWeight as double
private m_FullPackageWeight as double
private m_BufferZonePlace as String
private m_Stock_ID as long
private m_IsBrak as enumBoolean
private m_palet_id as long
private m_KorobBrutto as double
private m_KorobNetto as double
private m_IsCalibrated as enumBoolean
private m_SSCC as String
private m_BarCode1 as String
private m_BarCode2 as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;ITTIN_PALET&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;ITTIN_PALET.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'№ П\П

'№ П\П
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let sequence(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;sequence&quot;,sequence,newvalue

   m_sequence= newValue
end if
end property

'№ П\П
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. sequence
public property Get sequence() as long
 LoadFromDatabase
 AccessTime=Now

   sequence = m_sequence
end property
' let 
'Палета

'Палета
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheNumber(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheNumber&quot;,TheNumber,newvalue
on error resume next
m_TheNumber_ID=&quot;&quot;
m_TheNumber_ID=newValue.id
'  set   m_TheNumber= newValue
end if
end property

'Палета
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheNumber
public property Get TheNumber() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheNumber as object
if  m_TheNumber_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheNumber=Application.FindRowObject(&quot;ITTPL_DEF&quot;,m_TheNumber_ID)
  if tmp_TheNumber is nothing then
    m_TheNumber_ID_BRIEF = &quot;&quot; 
  else
    m_TheNumber_ID_BRIEF = tmp_TheNumber.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTPL_DEF&quot; &amp; m_TheNumber_ID, tmp_TheNumber
  set TheNumber=tmp_TheNumber
  exit property
end if
  '  set TheNumber = m_TheNumber
end property
' let 
'Страна производитель

'Страна производитель
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set made_country(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;made_country&quot;,made_country,newvalue
on error resume next
m_made_country_ID=&quot;&quot;
m_made_country_ID=newValue.id
'  set   m_made_country= newValue
end if
end property

'Страна производитель
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. made_country
public property Get made_country() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_made_country as object
if  m_made_country_ID&lt;&gt;&quot;&quot; then 
  set tmp_made_country=Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,m_made_country_ID)
  if tmp_made_country is nothing then
    m_made_country_ID_BRIEF = &quot;&quot; 
  else
    m_made_country_ID_BRIEF = tmp_made_country.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTD_COUNTRY&quot; &amp; m_made_country_ID, tmp_made_country
  set made_country=tmp_made_country
  exit property
end if
  '  set made_country = m_made_country
end property
' let 
'Завод

'Завод
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Factory(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Factory&quot;,Factory,newvalue
on error resume next
m_Factory_ID=&quot;&quot;
m_Factory_ID=newValue.id
'  set   m_Factory= newValue
end if
end property

'Завод
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Factory
public property Get Factory() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Factory as object
if  m_Factory_ID&lt;&gt;&quot;&quot; then 
  set tmp_Factory=Application.FindRowObject(&quot;ITTD_FACTORY&quot;,m_Factory_ID)
  if tmp_Factory is nothing then
    m_Factory_ID_BRIEF = &quot;&quot; 
  else
    m_Factory_ID_BRIEF = tmp_Factory.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTD_FACTORY&quot; &amp; m_Factory_ID, tmp_Factory
  set Factory=tmp_Factory
  exit property
end if
  '  set Factory = m_Factory
end property
' let 
'№ бойни

'№ бойни
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set KILL_NUMBER(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;KILL_NUMBER&quot;,KILL_NUMBER,newvalue
on error resume next
m_KILL_NUMBER_ID=&quot;&quot;
m_KILL_NUMBER_ID=newValue.id
'  set   m_KILL_NUMBER= newValue
end if
end property

'№ бойни
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. KILL_NUMBER
public property Get KILL_NUMBER() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_KILL_NUMBER as object
if  m_KILL_NUMBER_ID&lt;&gt;&quot;&quot; then 
  set tmp_KILL_NUMBER=Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,m_KILL_NUMBER_ID)
  if tmp_KILL_NUMBER is nothing then
    m_KILL_NUMBER_ID_BRIEF = &quot;&quot; 
  else
    m_KILL_NUMBER_ID_BRIEF = tmp_KILL_NUMBER.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTD_KILLPLACE&quot; &amp; m_KILL_NUMBER_ID, tmp_KILL_NUMBER
  set KILL_NUMBER=tmp_KILL_NUMBER
  exit property
end if
  '  set KILL_NUMBER = m_KILL_NUMBER
end property
' let 
'Вид отруба

'Вид отруба
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let VidOtruba(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;VidOtruba&quot;,VidOtruba,newvalue

   m_VidOtruba= newValue
end if
end property

'Вид отруба
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. VidOtruba
public property Get VidOtruba() as String
 LoadFromDatabase
 AccessTime=Now

   VidOtruba = m_VidOtruba
end property
' let 
'Партия

'Партия
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set PartRef(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PartRef&quot;,PartRef,newvalue
on error resume next
m_PartRef_ID=&quot;&quot;
m_PartRef_ID=newValue.id
'  set   m_PartRef= newValue
end if
end property

'Партия
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. PartRef
public property Get PartRef() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_PartRef as object
if  m_PartRef_ID&lt;&gt;&quot;&quot; then 
  set tmp_PartRef=Application.FindRowObject(&quot;ITTD_PART&quot;,m_PartRef_ID)
  if tmp_PartRef is nothing then
    m_PartRef_ID_BRIEF = &quot;&quot; 
  else
    m_PartRef_ID_BRIEF = tmp_PartRef.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTD_PART&quot; &amp; m_PartRef_ID, tmp_PartRef
  set PartRef=tmp_PartRef
  exit property
end if
  '  set PartRef = m_PartRef
end property
' let 
'Дата производства С

'Дата производства С
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Made_date(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Made_date&quot;,Made_date,newvalue

   m_Made_date= newValue
end if
end property

'Дата производства С
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. Made_date
public property Get Made_date() as DATE
 LoadFromDatabase
 AccessTime=Now

   Made_date = m_Made_date
end property
' let 
'Датиа производства По

'Датиа производства По
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let made_date_to(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;made_date_to&quot;,made_date_to,newvalue

   m_made_date_to= newValue
end if
end property

'Датиа производства По
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. made_date_to
public property Get made_date_to() as DATE
 LoadFromDatabase
 AccessTime=Now

   made_date_to = m_made_date_to
end property
' let 
'Номер сертификата

'Номер сертификата
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let vetsved(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;vetsved&quot;,vetsved,newvalue

   m_vetsved= newValue
end if
end property

'Номер сертификата
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. vetsved
public property Get vetsved() as String
 LoadFromDatabase
 AccessTime=Now

   vetsved = m_vetsved
end property
' let 
'Срок годности

'Срок годности
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let exp_date(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;exp_date&quot;,exp_date,newvalue

   m_exp_date= newValue
end if
end property

'Срок годности
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. exp_date
public property Get exp_date() as DATE
 LoadFromDatabase
 AccessTime=Now

   exp_date = m_exp_date
end property
' let 
'Количство коробов

'Количство коробов
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CaliberQuantity(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CaliberQuantity&quot;,CaliberQuantity,newvalue

   m_CaliberQuantity= newValue
end if
end property

'Количство коробов
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. CaliberQuantity
public property Get CaliberQuantity() as long
 LoadFromDatabase
 AccessTime=Now

   CaliberQuantity = m_CaliberQuantity
end property
' let 
'Вес поддона КГ.

'Вес поддона КГ.
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PalWeight(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PalWeight&quot;,PalWeight,newvalue

   m_PalWeight= newValue
end if
end property

'Вес поддона КГ.
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PalWeight
public property Get PalWeight() as double
 LoadFromDatabase
 AccessTime=Now

   PalWeight = m_PalWeight
end property
' let 
'Вес поддона с грузом КГ.

'Вес поддона с грузом КГ.
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let GoodWithPaletWeight(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;GoodWithPaletWeight&quot;,GoodWithPaletWeight,newvalue

   m_GoodWithPaletWeight= newValue
end if
end property

'Вес поддона с грузом КГ.
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. GoodWithPaletWeight
public property Get GoodWithPaletWeight() as double
 LoadFromDatabase
 AccessTime=Now

   GoodWithPaletWeight = m_GoodWithPaletWeight
end property
' let 
'Вес упаковки КГ.

'Вес упаковки КГ.
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PackageWeight(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PackageWeight&quot;,PackageWeight,newvalue

   m_PackageWeight= newValue
end if
end property

'Вес упаковки КГ.
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PackageWeight
public property Get PackageWeight() as double
 LoadFromDatabase
 AccessTime=Now

   PackageWeight = m_PackageWeight
end property
' let 
'Суммарный вес упаковки КГ.

'Суммарный вес упаковки КГ.
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FullPackageWeight(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FullPackageWeight&quot;,FullPackageWeight,newvalue

   m_FullPackageWeight= newValue
end if
end property

'Суммарный вес упаковки КГ.
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. FullPackageWeight
public property Get FullPackageWeight() as double
 LoadFromDatabase
 AccessTime=Now

   FullPackageWeight = m_FullPackageWeight
end property
' let 
'Номер ячейки в буферной зоне

'Номер ячейки в буферной зоне
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let BufferZonePlace(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;BufferZonePlace&quot;,BufferZonePlace,newvalue

   m_BufferZonePlace= newValue
end if
end property

'Номер ячейки в буферной зоне
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. BufferZonePlace
public property Get BufferZonePlace() as String
 LoadFromDatabase
 AccessTime=Now

   BufferZonePlace = m_BufferZonePlace
end property
' let 
'Идентификатор на  складе

'Идентификатор на  складе
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Stock_ID(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Stock_ID&quot;,Stock_ID,newvalue

   m_Stock_ID= newValue
end if
end property

'Идентификатор на  складе
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. Stock_ID
public property Get Stock_ID() as long
 LoadFromDatabase
 AccessTime=Now

   Stock_ID = m_Stock_ID
end property
' let 
'Брак

'Брак
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsBrak(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsBrak&quot;,IsBrak,newvalue

   m_IsBrak= newValue
end if
end property

'Брак
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsBrak
public property Get IsBrak() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsBrak = m_IsBrak
end property
' let 
'Идентификатор палеты

'Идентификатор палеты
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let palet_id(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;palet_id&quot;,palet_id,newvalue

   m_palet_id= newValue
end if
end property

'Идентификатор палеты
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. palet_id
public property Get palet_id() as long
 LoadFromDatabase
 AccessTime=Now

   palet_id = m_palet_id
end property
' let 
'Вес брутто короба

'Вес брутто короба
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let KorobBrutto(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;KorobBrutto&quot;,KorobBrutto,newvalue

   m_KorobBrutto= newValue
end if
end property

'Вес брутто короба
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. KorobBrutto
public property Get KorobBrutto() as double
 LoadFromDatabase
 AccessTime=Now

   KorobBrutto = m_KorobBrutto
end property
' let 
'Вес НЕТТО короба

'Вес НЕТТО короба
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let KorobNetto(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;KorobNetto&quot;,KorobNetto,newvalue

   m_KorobNetto= newValue
end if
end property

'Вес НЕТТО короба
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. KorobNetto
public property Get KorobNetto() as double
 LoadFromDatabase
 AccessTime=Now

   KorobNetto = m_KorobNetto
end property
' let 
'Калиброванный груз

'Калиброванный груз
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsCalibrated(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsCalibrated&quot;,IsCalibrated,newvalue

   m_IsCalibrated= newValue
end if
end property

'Калиброванный груз
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsCalibrated
public property Get IsCalibrated() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsCalibrated = m_IsCalibrated
end property
' let 
'SSCC код

'SSCC код
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SSCC(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SSCC&quot;,SSCC,newvalue

   m_SSCC= newValue
end if
end property

'SSCC код
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. SSCC
public property Get SSCC() as String
 LoadFromDatabase
 AccessTime=Now

   SSCC = m_SSCC
end property
' let 
'Bar Code 1

'Bar Code 1
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let BarCode1(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;BarCode1&quot;,BarCode1,newvalue

   m_BarCode1= newValue
end if
end property

'Bar Code 1
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. BarCode1
public property Get BarCode1() as String
 LoadFromDatabase
 AccessTime=Now

   BarCode1 = m_BarCode1
end property
' let 
'Bar Code 2

'Bar Code 2
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let BarCode2(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;BarCode2&quot;,BarCode2,newvalue

   m_BarCode2= newValue
end if
end property

'Bar Code 2
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. BarCode2
public property Get BarCode2() as String
 LoadFromDatabase
 AccessTime=Now

   BarCode2 = m_BarCode2
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;sequence&quot;,m_sequence)
nvi.ValueType = adInteger 
 ' Reference to ITTPL_DEF
    if m_TheNumber_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheNumber&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheNumber&quot;,m_TheNumber_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to ITTD_COUNTRY
    if m_made_country_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;made_country&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;made_country&quot;,m_made_country_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to ITTD_FACTORY
    if m_Factory_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Factory&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Factory&quot;,m_Factory_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to ITTD_KILLPLACE
    if m_KILL_NUMBER_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;KILL_NUMBER&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;KILL_NUMBER&quot;,m_KILL_NUMBER_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;VidOtruba&quot;,m_VidOtruba)
nvi.ValueSize = 64
 ' Reference to ITTD_PART
    if m_PartRef_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;PartRef&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;PartRef&quot;,m_PartRef_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;Made_date&quot;,m_Made_date)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;made_date_to&quot;,m_made_date_to)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;vetsved&quot;,m_vetsved)
nvi.ValueSize = 50
  set nvi=nv.Add( &quot;exp_date&quot;,m_exp_date)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;CaliberQuantity&quot;,m_CaliberQuantity)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;PalWeight&quot;,m_PalWeight)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;GoodWithPaletWeight&quot;,m_GoodWithPaletWeight)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PackageWeight&quot;,m_PackageWeight)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;FullPackageWeight&quot;,m_FullPackageWeight)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;BufferZonePlace&quot;,m_BufferZonePlace)
nvi.ValueSize = 20
  set nvi=nv.Add( &quot;Stock_ID&quot;,m_Stock_ID)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;IsBrak&quot;,m_IsBrak)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;palet_id&quot;,m_palet_id)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;KorobBrutto&quot;,m_KorobBrutto)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;KorobNetto&quot;,m_KorobNetto)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;IsCalibrated&quot;,m_IsCalibrated)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;SSCC&quot;,m_SSCC)
nvi.ValueSize = 18
  set nvi=nv.Add( &quot;BarCode1&quot;,m_BarCode1)
nvi.ValueSize = 40
  set nvi=nv.Add( &quot;BarCode2&quot;,m_BarCode2)
nvi.ValueSize = 40
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  TheNumber is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_TheNumber_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; TheNumber.Brief  &amp; &quot;}; &quot;
   end if
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_sequence=nv.item( &quot;sequence&quot;).Value
  m_TheNumber_ID=nv.item( &quot;TheNumber&quot;).Value
  m_made_country_ID=nv.item( &quot;made_country&quot;).Value
  m_Factory_ID=nv.item( &quot;Factory&quot;).Value
  m_KILL_NUMBER_ID=nv.item( &quot;KILL_NUMBER&quot;).Value
m_VidOtruba=nv.item( &quot;VidOtruba&quot;).Value
  m_PartRef_ID=nv.item( &quot;PartRef&quot;).Value
m_Made_date=nv.item( &quot;Made_date&quot;).Value
m_made_date_to=nv.item( &quot;made_date_to&quot;).Value
m_vetsved=nv.item( &quot;vetsved&quot;).Value
m_exp_date=nv.item( &quot;exp_date&quot;).Value
m_CaliberQuantity=nv.item( &quot;CaliberQuantity&quot;).Value
m_PalWeight=nv.item( &quot;PalWeight&quot;).Value
m_GoodWithPaletWeight=nv.item( &quot;GoodWithPaletWeight&quot;).Value
m_PackageWeight=nv.item( &quot;PackageWeight&quot;).Value
m_FullPackageWeight=nv.item( &quot;FullPackageWeight&quot;).Value
m_BufferZonePlace=nv.item( &quot;BufferZonePlace&quot;).Value
m_Stock_ID=nv.item( &quot;Stock_ID&quot;).Value
m_IsBrak=nv.item( &quot;IsBrak&quot;).Value
m_palet_id=nv.item( &quot;palet_id&quot;).Value
m_KorobBrutto=nv.item( &quot;KorobBrutto&quot;).Value
m_KorobNetto=nv.item( &quot;KorobNetto&quot;).Value
m_IsCalibrated=nv.item( &quot;IsCalibrated&quot;).Value
m_SSCC=nv.item( &quot;SSCC&quot;).Value
m_BarCode1=nv.item( &quot;BarCode1&quot;).Value
m_BarCode2=nv.item( &quot;BarCode2&quot;).Value
else

m_sequence=nv.fields( &quot;sequence&quot;).Value
  m_TheNumber_ID=nv.fields( &quot;TheNumber&quot;).Value
  m_made_country_ID=nv.fields( &quot;made_country&quot;).Value
  m_Factory_ID=nv.fields( &quot;Factory&quot;).Value
  m_KILL_NUMBER_ID=nv.fields( &quot;KILL_NUMBER&quot;).Value
m_VidOtruba=nv.fields( &quot;VidOtruba&quot;).Value
  m_PartRef_ID=nv.fields( &quot;PartRef&quot;).Value
m_Made_date=nv.fields( &quot;Made_date&quot;).Value
m_made_date_to=nv.fields( &quot;made_date_to&quot;).Value
m_vetsved=nv.fields( &quot;vetsved&quot;).Value
m_exp_date=nv.fields( &quot;exp_date&quot;).Value
m_CaliberQuantity=nv.fields( &quot;CaliberQuantity&quot;).Value
m_PalWeight=nv.fields( &quot;PalWeight&quot;).Value
m_GoodWithPaletWeight=nv.fields( &quot;GoodWithPaletWeight&quot;).Value
m_PackageWeight=nv.fields( &quot;PackageWeight&quot;).Value
m_FullPackageWeight=nv.fields( &quot;FullPackageWeight&quot;).Value
m_BufferZonePlace=nv.fields( &quot;BufferZonePlace&quot;).Value
m_Stock_ID=nv.fields( &quot;Stock_ID&quot;).Value
m_IsBrak=nv.fields( &quot;IsBrak&quot;).Value
m_palet_id=nv.fields( &quot;palet_id&quot;).Value
m_KorobBrutto=nv.fields( &quot;KorobBrutto&quot;).Value
m_KorobNetto=nv.fields( &quot;KorobNetto&quot;).Value
m_IsCalibrated=nv.fields( &quot;IsCalibrated&quot;).Value
m_SSCC=nv.fields( &quot;SSCC&quot;).Value
m_BarCode1=nv.fields( &quot;BarCode1&quot;).Value
m_BarCode2=nv.fields( &quot;BarCode2&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as ITTIN_PALET
   set o = new ITTIN_PALET
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;ITTIN_PALET.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;ITTIN_PALET.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;ITTIN_PALET&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;ITTIN_PALET.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;ITTIN_PALET&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;ITTIN_PALET.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_TheNumber_ID=&quot;&quot;
 set m_TheNumber= nothing
 m_made_country_ID=&quot;&quot;
 set m_made_country= nothing
 m_Factory_ID=&quot;&quot;
 set m_Factory= nothing
 m_KILL_NUMBER_ID=&quot;&quot;
 set m_KILL_NUMBER= nothing
 m_PartRef_ID=&quot;&quot;
 set m_PartRef= nothing
 if not Application is nothing then Application.Logger.Message &quot;ITTIN_PALET.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  sequence=node.Attributes.getNamedItem(&quot;SEQUENCE&quot;).nodeValue
  set TheNumber=nothing
  m_TheNumber_ID=node.Attributes.getNamedItem(&quot;THENUMBER&quot;).nodeValue
  m_TheNumber_ID_BRIEF=node.Attributes.getNamedItem(&quot;THENUMBER_BRIEF&quot;).nodeValue
  set made_country=nothing
  m_made_country_ID=node.Attributes.getNamedItem(&quot;MADE_COUNTRY&quot;).nodeValue
  m_made_country_ID_BRIEF=node.Attributes.getNamedItem(&quot;MADE_COUNTRY_BRIEF&quot;).nodeValue
  set Factory=nothing
  m_Factory_ID=node.Attributes.getNamedItem(&quot;FACTORY&quot;).nodeValue
  m_Factory_ID_BRIEF=node.Attributes.getNamedItem(&quot;FACTORY_BRIEF&quot;).nodeValue
  set KILL_NUMBER=nothing
  m_KILL_NUMBER_ID=node.Attributes.getNamedItem(&quot;KILL_NUMBER&quot;).nodeValue
  m_KILL_NUMBER_ID_BRIEF=node.Attributes.getNamedItem(&quot;KILL_NUMBER_BRIEF&quot;).nodeValue
  VidOtruba=Replace(node.Attributes.getNamedItem(&quot;VIDOTRUBA&quot;).nodeValue,vbLf,vbcrlf)
  set PartRef=nothing
  m_PartRef_ID=node.Attributes.getNamedItem(&quot;PARTREF&quot;).nodeValue
  m_PartRef_ID_BRIEF=node.Attributes.getNamedItem(&quot;PARTREF_BRIEF&quot;).nodeValue
  Made_date=node.Attributes.getNamedItem(&quot;MADE_DATE&quot;).nodeValue
  made_date_to=node.Attributes.getNamedItem(&quot;MADE_DATE_TO&quot;).nodeValue
  vetsved=Replace(node.Attributes.getNamedItem(&quot;VETSVED&quot;).nodeValue,vbLf,vbcrlf)
  exp_date=node.Attributes.getNamedItem(&quot;EXP_DATE&quot;).nodeValue
  CaliberQuantity=node.Attributes.getNamedItem(&quot;CALIBERQUANTITY&quot;).nodeValue
  PalWeight=val(Replace(node.Attributes.getNamedItem(&quot;PALWEIGHT&quot;).nodeValue,vbLf,vbcrlf))
  GoodWithPaletWeight=val(Replace(node.Attributes.getNamedItem(&quot;GOODWITHPALETWEIGHT&quot;).nodeValue,vbLf,vbcrlf))
  PackageWeight=val(Replace(node.Attributes.getNamedItem(&quot;PACKAGEWEIGHT&quot;).nodeValue,vbLf,vbcrlf))
  FullPackageWeight=val(Replace(node.Attributes.getNamedItem(&quot;FULLPACKAGEWEIGHT&quot;).nodeValue,vbLf,vbcrlf))
  BufferZonePlace=Replace(node.Attributes.getNamedItem(&quot;BUFFERZONEPLACE&quot;).nodeValue,vbLf,vbcrlf)
  Stock_ID=node.Attributes.getNamedItem(&quot;STOCK_ID&quot;).nodeValue
  IsBrak=node.Attributes.getNamedItem(&quot;ISBRAK&quot;).nodeValue
  palet_id=node.Attributes.getNamedItem(&quot;PALET_ID&quot;).nodeValue
  KorobBrutto=val(Replace(node.Attributes.getNamedItem(&quot;KOROBBRUTTO&quot;).nodeValue,vbLf,vbcrlf))
  KorobNetto=val(Replace(node.Attributes.getNamedItem(&quot;KOROBNETTO&quot;).nodeValue,vbLf,vbcrlf))
  IsCalibrated=node.Attributes.getNamedItem(&quot;ISCALIBRATED&quot;).nodeValue
  SSCC=Replace(node.Attributes.getNamedItem(&quot;SSCC&quot;).nodeValue,vbLf,vbcrlf)
  BarCode1=Replace(node.Attributes.getNamedItem(&quot;BARCODE1&quot;).nodeValue,vbLf,vbcrlf)
  BarCode2=Replace(node.Attributes.getNamedItem(&quot;BARCODE2&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;SEQUENCE&quot;, sequence
  node.setAttribute &quot;THENUMBER&quot;, m_TheNumber_ID
  if not (TheNumber is nothing) then 
    node.setAttribute &quot;THENUMBER_BRIEF&quot;, TheNumber.BRIEF
  else
    node.setAttribute &quot;THENUMBER_BRIEF&quot;, m_TheNumber_ID_BRIEF
  end if
  node.setAttribute &quot;MADE_COUNTRY&quot;, m_made_country_ID
  if not (made_country is nothing) then 
    node.setAttribute &quot;MADE_COUNTRY_BRIEF&quot;, made_country.BRIEF
  else
    node.setAttribute &quot;MADE_COUNTRY_BRIEF&quot;, m_made_country_ID_BRIEF
  end if
  node.setAttribute &quot;FACTORY&quot;, m_Factory_ID
  if not (Factory is nothing) then 
    node.setAttribute &quot;FACTORY_BRIEF&quot;, Factory.BRIEF
  else
    node.setAttribute &quot;FACTORY_BRIEF&quot;, m_Factory_ID_BRIEF
  end if
  node.setAttribute &quot;KILL_NUMBER&quot;, m_KILL_NUMBER_ID
  if not (KILL_NUMBER is nothing) then 
    node.setAttribute &quot;KILL_NUMBER_BRIEF&quot;, KILL_NUMBER.BRIEF
  else
    node.setAttribute &quot;KILL_NUMBER_BRIEF&quot;, m_KILL_NUMBER_ID_BRIEF
  end if
  node.setAttribute &quot;VIDOTRUBA&quot;, VidOtruba
  node.setAttribute &quot;PARTREF&quot;, m_PartRef_ID
  if not (PartRef is nothing) then 
    node.setAttribute &quot;PARTREF_BRIEF&quot;, PartRef.BRIEF
  else
    node.setAttribute &quot;PARTREF_BRIEF&quot;, m_PartRef_ID_BRIEF
  end if
  node.setAttribute &quot;MADE_DATE&quot;, Cdbl(Made_date)
  node.setAttribute &quot;MADE_DATE_TO&quot;, Cdbl(made_date_to)
  node.setAttribute &quot;VETSVED&quot;, vetsved
  node.setAttribute &quot;EXP_DATE&quot;, Cdbl(exp_date)
  node.setAttribute &quot;CALIBERQUANTITY&quot;, CaliberQuantity
  node.setAttribute &quot;PALWEIGHT&quot;, replace(cstr(PalWeight),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;GOODWITHPALETWEIGHT&quot;, replace(cstr(GoodWithPaletWeight),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PACKAGEWEIGHT&quot;, replace(cstr(PackageWeight),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;FULLPACKAGEWEIGHT&quot;, replace(cstr(FullPackageWeight),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;BUFFERZONEPLACE&quot;, BufferZonePlace
  node.setAttribute &quot;STOCK_ID&quot;, Stock_ID
  node.setAttribute &quot;ISBRAK&quot;, IsBrak
  node.setAttribute &quot;PALET_ID&quot;, palet_id
  node.setAttribute &quot;KOROBBRUTTO&quot;, replace(cstr(KorobBrutto),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;KOROBNETTO&quot;, replace(cstr(KorobNetto),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ISCALIBRATED&quot;, IsCalibrated
  node.setAttribute &quot;SSCC&quot;, SSCC
  node.setAttribute &quot;BARCODE1&quot;, BarCode1
  node.setAttribute &quot;BARCODE2&quot;, BarCode2
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;ITTIN_PALET&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;ITTIN_PALET&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;ITTIN_PALET&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;ITTIN_PALET&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_QLINE_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;ITTIN_QLINE&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;ITTIN_QLINE.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  ITTIN_QLINE
'  ,или Nothing
'See Also:
'Example:
' dim variable as  ITTIN_QLINE
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  ITTIN_QLINE
 dim LID as  string
 dim o as  ITTIN_QLINE
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  ITTIN_QLINE
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_QLINE
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_QLINE
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as ITTIN_QLINE
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as ITTIN_QLINE
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_QLINE
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_QLINE
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as ITTIN_QLINE
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_QLINE
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_QLINE
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as ITTIN_QLINE
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_QLINE
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_QLINE
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as ITTIN_QLINE
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_QLINE
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_QLINE
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as ITTIN_QLINE
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_QLINE
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_QLINE
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as ITTIN_QLINE
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  ITTIN_QLINE
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;ITTIN_QLINE.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As ITTIN_QLINE
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As ITTIN_QLINE
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!ITTIN_QLINEID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as ITTIN_QLINE
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;ITTIN_QLINE_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;ITTIN_QLINE&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as ITTIN_QLINE
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;ITTIN_QLINE&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;№ П\П&quot;, 0, 0, &quot;sequence&quot;).SortType =2
  YGrid.Columns.Add(&quot;Строка в заказе&quot;, 0, 0, &quot;LineAtQuery&quot;).SortType =1
  YGrid.Columns.Add(&quot;По заказу КГ.&quot;, 0, 0, &quot;QRY_NUM&quot;).SortType =1
  YGrid.Columns.Add(&quot;Ед. изм&quot;, 0, 0, &quot;edizm&quot;).SortType =1
  YGrid.Columns.Add(&quot;Факт КГ.&quot;, 0, 0, &quot;CurValue&quot;).SortType =2
  YGrid.Columns.Add(&quot;Артикул&quot;, 0, 0, &quot;articul&quot;).SortType =1
  YGrid.Columns.Add(&quot;Страна производитель&quot;, 0, 0, &quot;made_country&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата производства По&quot;, 0, 0, &quot;made_date_to&quot;).SortType =4
  YGrid.Columns.Add(&quot;Номер сертификата&quot;, 0, 0, &quot;vetsved&quot;).SortType =1
  YGrid.Columns.Add(&quot;Завод&quot;, 0, 0, &quot;Factory&quot;).SortType =1
  YGrid.Columns.Add(&quot;№ бойни&quot;, 0, 0, &quot;KILL_NUMBER&quot;).SortType =1
  YGrid.Columns.Add(&quot;Вид отруба&quot;, 0, 0, &quot;VidOtruba&quot;).SortType =1
  YGrid.Columns.Add(&quot;Партия&quot;, 0, 0, &quot;PartRef&quot;).SortType =1
  YGrid.Columns.Add(&quot;Срок годности&quot;, 0, 0, &quot;exp_date&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата производства C&quot;, 0, 0, &quot;Made_date&quot;).SortType =4
  YGrid.Columns.Add(&quot;Вес одной упаковки КГ.&quot;, 0, 0, &quot;PackageWeight&quot;).SortType =2
  YGrid.Columns.Add(&quot;Калиброванный груз&quot;, 0, 0, &quot;IsCalibrated&quot;).SortType =1
  YGrid.Columns.Add(&quot;Вес калиброванной единицы НЕТТО&quot;, 0, 0, &quot;CaliberWeight&quot;).SortType =2
  YGrid.Columns.Add(&quot;Суммарный вес упаковки КГ.&quot;, 0, 0, &quot;FullPackageWeight&quot;).SortType =2
  YGrid.Columns.Add(&quot;Идентификатор товара&quot;, 0, 0, &quot;good_id&quot;).SortType =1
  YGrid.Columns.Add(&quot;Вес брутто короба&quot;, 0, 0, &quot;KorobBrutto&quot;).SortType =2
  YGrid.Columns.Add(&quot;Вес НЕТТО короба&quot;, 0, 0, &quot;KorobNetto&quot;).SortType =2
  YGrid.Columns.Add(&quot;Груз навалом&quot;, 0, 0, &quot;Navalom&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as ITTIN_QLINE
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.sequence, vbCrLf, &quot; &quot;), 255)
   if obj.LineAtQuery = &quot;&quot; then
    Values.Value(2) = &quot;Не задано&quot;
   else 
     Dim XMLDocLineAtQuery As New DOMDocument
     On Error Resume Next
     Call XMLDocLineAtQuery.loadXML(obj.LineAtQuery)
     If (Err.Number = 0 And XMLDocLineAtQuery.parseError.errorCode = 0) Then
           Dim nodeLineAtQuery As MSXML2.IXMLDOMNode
           For Each nodeLineAtQuery In XMLDocLineAtQuery.childNodes.item(0).childNodes
             If (nodeLineAtQuery.baseName = &quot;Brief&quot;) Then
              Values.Value(2) = nodeLineAtQuery.Text
              Exit For
             End If
           Next
      End if
   end if 
   if obj.QRY_NUM = &quot;&quot; then
    Values.Value(3) = &quot;Не задано&quot;
   else 
     Dim XMLDocQRY_NUM As New DOMDocument
     On Error Resume Next
     Call XMLDocQRY_NUM.loadXML(obj.QRY_NUM)
     If (Err.Number = 0 And XMLDocQRY_NUM.parseError.errorCode = 0) Then
           Dim nodeQRY_NUM As MSXML2.IXMLDOMNode
           For Each nodeQRY_NUM In XMLDocQRY_NUM.childNodes.item(0).childNodes
             If (nodeQRY_NUM.baseName = &quot;Brief&quot;) Then
              Values.Value(3) = nodeQRY_NUM.Text
              Exit For
             End If
           Next
      End if
   end if 
    Values.Value(4) = Left(Replace(obj.edizm, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.CurValue, vbCrLf, &quot; &quot;), 255)
    Values.Value(6) = Left(Replace(obj.articul, vbCrLf, &quot; &quot;), 255)
   if obj.made_country is nothing then
    Values.Value(7) = &quot;Не задано&quot;
   else 
    Values.Value(7) = Left(Replace(obj.made_country.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(8) = Left(Replace(obj.made_date_to, vbCrLf, &quot; &quot;), 255)
    Values.Value(9) = Left(Replace(obj.vetsved, vbCrLf, &quot; &quot;), 255)
   if obj.Factory is nothing then
    Values.Value(10) = &quot;Не задано&quot;
   else 
    Values.Value(10) = Left(Replace(obj.Factory.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.KILL_NUMBER is nothing then
    Values.Value(11) = &quot;Не задано&quot;
   else 
    Values.Value(11) = Left(Replace(obj.KILL_NUMBER.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(12) = Left(Replace(obj.VidOtruba, vbCrLf, &quot; &quot;), 255)
   if obj.PartRef is nothing then
    Values.Value(13) = &quot;Не задано&quot;
   else 
    Values.Value(13) = Left(Replace(obj.PartRef.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(14) = Left(Replace(obj.exp_date, vbCrLf, &quot; &quot;), 255)
    Values.Value(15) = Left(Replace(obj.Made_date, vbCrLf, &quot; &quot;), 255)
    Values.Value(16) = Left(Replace(obj.PackageWeight, vbCrLf, &quot; &quot;), 255)
   if obj.IsCalibrated =-1 then
     Values.Value(17) = &quot;Да&quot;
   end if
   if obj.IsCalibrated =0 then
     Values.Value(17) = &quot;Нет&quot;
   end if
    Values.Value(18) = Left(Replace(obj.CaliberWeight, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.FullPackageWeight, vbCrLf, &quot; &quot;), 255)
   if obj.good_id = &quot;&quot; then
    Values.Value(20) = &quot;Не задано&quot;
   else 
     Dim XMLDocgood_id As New DOMDocument
     On Error Resume Next
     Call XMLDocgood_id.loadXML(obj.good_id)
     If (Err.Number = 0 And XMLDocgood_id.parseError.errorCode = 0) Then
           Dim nodegood_id As MSXML2.IXMLDOMNode
           For Each nodegood_id In XMLDocgood_id.childNodes.item(0).childNodes
             If (nodegood_id.baseName = &quot;Brief&quot;) Then
              Values.Value(20) = nodegood_id.Text
              Exit For
             End If
           Next
      End if
   end if 
    Values.Value(21) = Left(Replace(obj.KorobBrutto, vbCrLf, &quot; &quot;), 255)
    Values.Value(22) = Left(Replace(obj.KorobNetto, vbCrLf, &quot; &quot;), 255)
   if obj.Navalom =-1 then
     Values.Value(23) = &quot;Да&quot;
   end if
   if obj.Navalom =0 then
     Values.Value(23) = &quot;Нет&quot;
   end if
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;ITTIN_QLINE&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_PALET_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;ITTIN_PALET&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;ITTIN_PALET.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  ITTIN_PALET
'  ,или Nothing
'See Also:
'Example:
' dim variable as  ITTIN_PALET
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  ITTIN_PALET
 dim LID as  string
 dim o as  ITTIN_PALET
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  ITTIN_PALET
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_PALET
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_PALET
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as ITTIN_PALET
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as ITTIN_PALET
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_PALET
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_PALET
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as ITTIN_PALET
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_PALET
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_PALET
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as ITTIN_PALET
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_PALET
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_PALET
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as ITTIN_PALET
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_PALET
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_PALET
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as ITTIN_PALET
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_PALET
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_PALET
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as ITTIN_PALET
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  ITTIN_PALET
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;ITTIN_PALET.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As ITTIN_PALET
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As ITTIN_PALET
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!ITTIN_PALETID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as ITTIN_PALET
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;ITTIN_PALET_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;ITTIN_PALET&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as ITTIN_PALET
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;ITTIN_PALET&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;ITTIN_QLINE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;ITTIN_QLINE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;ITTIN_QLINE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;ITTIN_QLINE&quot;,parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;№ П\П&quot;, 0, 0, &quot;sequence&quot;).SortType =2
  YGrid.Columns.Add(&quot;Палета&quot;, 0, 0, &quot;TheNumber&quot;).SortType =1
  YGrid.Columns.Add(&quot;Страна производитель&quot;, 0, 0, &quot;made_country&quot;).SortType =1
  YGrid.Columns.Add(&quot;Завод&quot;, 0, 0, &quot;Factory&quot;).SortType =1
  YGrid.Columns.Add(&quot;№ бойни&quot;, 0, 0, &quot;KILL_NUMBER&quot;).SortType =1
  YGrid.Columns.Add(&quot;Вид отруба&quot;, 0, 0, &quot;VidOtruba&quot;).SortType =1
  YGrid.Columns.Add(&quot;Партия&quot;, 0, 0, &quot;PartRef&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата производства С&quot;, 0, 0, &quot;Made_date&quot;).SortType =4
  YGrid.Columns.Add(&quot;Датиа производства По&quot;, 0, 0, &quot;made_date_to&quot;).SortType =4
  YGrid.Columns.Add(&quot;Номер сертификата&quot;, 0, 0, &quot;vetsved&quot;).SortType =1
  YGrid.Columns.Add(&quot;Срок годности&quot;, 0, 0, &quot;exp_date&quot;).SortType =4
  YGrid.Columns.Add(&quot;Количство коробов&quot;, 0, 0, &quot;CaliberQuantity&quot;).SortType =2
  YGrid.Columns.Add(&quot;Вес поддона КГ.&quot;, 0, 0, &quot;PalWeight&quot;).SortType =2
  YGrid.Columns.Add(&quot;Вес поддона с грузом КГ.&quot;, 0, 0, &quot;GoodWithPaletWeight&quot;).SortType =2
  YGrid.Columns.Add(&quot;Вес упаковки КГ.&quot;, 0, 0, &quot;PackageWeight&quot;).SortType =2
  YGrid.Columns.Add(&quot;Суммарный вес упаковки КГ.&quot;, 0, 0, &quot;FullPackageWeight&quot;).SortType =2
  YGrid.Columns.Add(&quot;Номер ячейки в буферной зоне&quot;, 0, 0, &quot;BufferZonePlace&quot;).SortType =1
  YGrid.Columns.Add(&quot;Идентификатор на складе&quot;, 0, 0, &quot;Stock_ID&quot;).SortType =2
  YGrid.Columns.Add(&quot;Брак&quot;, 0, 0, &quot;IsBrak&quot;).SortType =1
  YGrid.Columns.Add(&quot;Идентификатор палеты&quot;, 0, 0, &quot;palet_id&quot;).SortType =2
  YGrid.Columns.Add(&quot;Вес брутто короба&quot;, 0, 0, &quot;KorobBrutto&quot;).SortType =2
  YGrid.Columns.Add(&quot;Вес НЕТТО короба&quot;, 0, 0, &quot;KorobNetto&quot;).SortType =2
  YGrid.Columns.Add(&quot;Калиброванный груз&quot;, 0, 0, &quot;IsCalibrated&quot;).SortType =1
  YGrid.Columns.Add(&quot;SSCC код&quot;, 0, 0, &quot;SSCC&quot;).SortType =1
  YGrid.Columns.Add(&quot;Bar Code 1&quot;, 0, 0, &quot;BarCode1&quot;).SortType =1
  YGrid.Columns.Add(&quot;Bar Code 2&quot;, 0, 0, &quot;BarCode2&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as ITTIN_PALET
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.sequence, vbCrLf, &quot; &quot;), 255)
   if obj.TheNumber is nothing then
    Values.Value(2) = &quot;Не задано&quot;
   else 
    Values.Value(2) = Left(Replace(obj.TheNumber.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.made_country is nothing then
    Values.Value(3) = &quot;Не задано&quot;
   else 
    Values.Value(3) = Left(Replace(obj.made_country.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.Factory is nothing then
    Values.Value(4) = &quot;Не задано&quot;
   else 
    Values.Value(4) = Left(Replace(obj.Factory.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.KILL_NUMBER is nothing then
    Values.Value(5) = &quot;Не задано&quot;
   else 
    Values.Value(5) = Left(Replace(obj.KILL_NUMBER.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(6) = Left(Replace(obj.VidOtruba, vbCrLf, &quot; &quot;), 255)
   if obj.PartRef is nothing then
    Values.Value(7) = &quot;Не задано&quot;
   else 
    Values.Value(7) = Left(Replace(obj.PartRef.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(8) = Left(Replace(obj.Made_date, vbCrLf, &quot; &quot;), 255)
    Values.Value(9) = Left(Replace(obj.made_date_to, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.vetsved, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.exp_date, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.CaliberQuantity, vbCrLf, &quot; &quot;), 255)
    Values.Value(13) = Left(Replace(obj.PalWeight, vbCrLf, &quot; &quot;), 255)
    Values.Value(14) = Left(Replace(obj.GoodWithPaletWeight, vbCrLf, &quot; &quot;), 255)
    Values.Value(15) = Left(Replace(obj.PackageWeight, vbCrLf, &quot; &quot;), 255)
    Values.Value(16) = Left(Replace(obj.FullPackageWeight, vbCrLf, &quot; &quot;), 255)
    Values.Value(17) = Left(Replace(obj.BufferZonePlace, vbCrLf, &quot; &quot;), 255)
    Values.Value(18) = Left(Replace(obj.Stock_ID, vbCrLf, &quot; &quot;), 255)
   if obj.IsBrak =-1 then
     Values.Value(19) = &quot;Да&quot;
   end if
   if obj.IsBrak =0 then
     Values.Value(19) = &quot;Нет&quot;
   end if
    Values.Value(20) = Left(Replace(obj.palet_id, vbCrLf, &quot; &quot;), 255)
    Values.Value(21) = Left(Replace(obj.KorobBrutto, vbCrLf, &quot; &quot;), 255)
    Values.Value(22) = Left(Replace(obj.KorobNetto, vbCrLf, &quot; &quot;), 255)
   if obj.IsCalibrated =-1 then
     Values.Value(23) = &quot;Да&quot;
   end if
   if obj.IsCalibrated =0 then
     Values.Value(23) = &quot;Нет&quot;
   end if
    Values.Value(24) = Left(Replace(obj.SSCC, vbCrLf, &quot; &quot;), 255)
    Values.Value(25) = Left(Replace(obj.BarCode1, vbCrLf, &quot; &quot;), 255)
    Values.Value(26) = Left(Replace(obj.BarCode2, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;ITTIN_PALET&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_SRV" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_SRV as object
Dim m_SRV_ID as string
Dim m_SRV_ID_BRIEF as string
private m_Quantity as double
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;ITTIN_SRV&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;ITTIN_SRV.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Услуга

'Услуга
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set SRV(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SRV&quot;,SRV,newvalue
on error resume next
m_SRV_ID=&quot;&quot;
m_SRV_ID=newValue.id
'  set   m_SRV= newValue
end if
end property

'Услуга
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. SRV
public property Get SRV() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_SRV as object
if  m_SRV_ID&lt;&gt;&quot;&quot; then 
  set tmp_SRV=Application.FindRowObject(&quot;ITTD_SRV&quot;,m_SRV_ID)
  if tmp_SRV is nothing then
    m_SRV_ID_BRIEF = &quot;&quot; 
  else
    m_SRV_ID_BRIEF = tmp_SRV.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTD_SRV&quot; &amp; m_SRV_ID, tmp_SRV
  set SRV=tmp_SRV
  exit property
end if
  '  set SRV = m_SRV
end property
' let 
'Кличество

'Кличество
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Quantity(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Quantity&quot;,Quantity,newvalue

   m_Quantity= newValue
end if
end property

'Кличество
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Quantity
public property Get Quantity() as double
 LoadFromDatabase
 AccessTime=Now

   Quantity = m_Quantity
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to ITTD_SRV
    if m_SRV_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;SRV&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;SRV&quot;,m_SRV_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;Quantity&quot;,m_Quantity)
nvi.ValueType =  adDouble 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  SRV is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_SRV_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; SRV.Brief  &amp; &quot;}; &quot;
   end if
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_SRV_ID=nv.item( &quot;SRV&quot;).Value
m_Quantity=nv.item( &quot;Quantity&quot;).Value
else

  m_SRV_ID=nv.fields( &quot;SRV&quot;).Value
m_Quantity=nv.fields( &quot;Quantity&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as ITTIN_SRV
   set o = new ITTIN_SRV
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;ITTIN_SRV.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;ITTIN_SRV.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;ITTIN_SRV&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;ITTIN_SRV.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;ITTIN_SRV&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;ITTIN_SRV.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_SRV_ID=&quot;&quot;
 set m_SRV= nothing
 if not Application is nothing then Application.Logger.Message &quot;ITTIN_SRV.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set SRV=nothing
  m_SRV_ID=node.Attributes.getNamedItem(&quot;SRV&quot;).nodeValue
  m_SRV_ID_BRIEF=node.Attributes.getNamedItem(&quot;SRV_BRIEF&quot;).nodeValue
  Quantity=val(Replace(node.Attributes.getNamedItem(&quot;QUANTITY&quot;).nodeValue,vbLf,vbcrlf))
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;SRV&quot;, m_SRV_ID
  if not (SRV is nothing) then 
    node.setAttribute &quot;SRV_BRIEF&quot;, SRV.BRIEF
  else
    node.setAttribute &quot;SRV_BRIEF&quot;, m_SRV_ID_BRIEF
  end if
  node.setAttribute &quot;QUANTITY&quot;, replace(cstr(Quantity),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;ITTIN_SRV&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;ITTIN_SRV&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;ITTIN_SRV&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;ITTIN_SRV&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_SRV_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;ITTIN_SRV&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;ITTIN_SRV.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  ITTIN_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as  ITTIN_SRV
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  ITTIN_SRV
 dim LID as  string
 dim o as  ITTIN_SRV
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  ITTIN_SRV
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_SRV
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as ITTIN_SRV
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as ITTIN_SRV
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_SRV
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as ITTIN_SRV
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_SRV
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as ITTIN_SRV
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_SRV
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as ITTIN_SRV
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_SRV
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as ITTIN_SRV
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_SRV
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as ITTIN_SRV
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  ITTIN_SRV
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;ITTIN_SRV.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As ITTIN_SRV
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As ITTIN_SRV
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!ITTIN_SRVID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as ITTIN_SRV
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;ITTIN_SRV_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;ITTIN_SRV&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as ITTIN_SRV
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;ITTIN_SRV&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Услуга&quot;, 0, 0, &quot;SRV&quot;).SortType =1
  YGrid.Columns.Add(&quot;Кличество&quot;, 0, 0, &quot;Quantity&quot;).SortType =2
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as ITTIN_SRV
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.SRV is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.SRV.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(2) = Left(Replace(obj.Quantity, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;ITTIN_SRV&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_DEF" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_QryCode as string
private m_TheClient as string
private m_ProcessDate as DATE
private m_Supplier as String
private m_TTN as String
private m_TTNDate as DATE
private m_TranspNumber as String
private m_Container as String
private m_StampNumber as String
private m_StampStatus as String
private m_Track_time_in as DATE
private m_track_time_out as DATE
private m_temp_in_track as double
private m_ThePartyRule as object
Dim m_ThePartyRule_ID as string
Dim m_ThePartyRule_ID_BRIEF as string
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;ITTIN_DEF&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;ITTIN_DEF.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Код заказа

'Код заказа
'Parameters:
'[IN]   newValue , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property   let QryCode(byval newValue as string)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;QryCode&quot;,QryCode,newvalue

    m_QryCode= newValue
end if
end property

'Код заказа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. QryCode
public property Get QryCode() as string
 LoadFromDatabase
 AccessTime=Now

    QryCode = m_QryCode
end property
' let 
'Клиент

'Клиент
'Parameters:
'[IN]   newValue , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property   let TheClient(byval newValue as string)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheClient&quot;,TheClient,newvalue

    m_TheClient= newValue
end if
end property

'Клиент
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. TheClient
public property Get TheClient() as string
 LoadFromDatabase
 AccessTime=Now

    TheClient = m_TheClient
end property
' let 
'Дата обработки заказа

'Дата обработки заказа
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ProcessDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ProcessDate&quot;,ProcessDate,newvalue

   m_ProcessDate= newValue
end if
end property

'Дата обработки заказа
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. ProcessDate
public property Get ProcessDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   ProcessDate = m_ProcessDate
end property
' let 
'Поставщик

'Поставщик
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Supplier(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Supplier&quot;,Supplier,newvalue

   m_Supplier= newValue
end if
end property

'Поставщик
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Supplier
public property Get Supplier() as String
 LoadFromDatabase
 AccessTime=Now

   Supplier = m_Supplier
end property
' let 
'Номер ТТН

'Номер ТТН
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TTN(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TTN&quot;,TTN,newvalue

   m_TTN= newValue
end if
end property

'Номер ТТН
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. TTN
public property Get TTN() as String
 LoadFromDatabase
 AccessTime=Now

   TTN = m_TTN
end property
' let 
'Дата ТТН

'Дата ТТН
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TTNDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TTNDate&quot;,TTNDate,newvalue

   m_TTNDate= newValue
end if
end property

'Дата ТТН
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. TTNDate
public property Get TTNDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   TTNDate = m_TTNDate
end property
' let 
'№ ТС

'№ ТС
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TranspNumber(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TranspNumber&quot;,TranspNumber,newvalue

   m_TranspNumber= newValue
end if
end property

'№ ТС
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. TranspNumber
public property Get TranspNumber() as String
 LoadFromDatabase
 AccessTime=Now

   TranspNumber = m_TranspNumber
end property
' let 
'№ прицепа \ контейнера

'№ прицепа \ контейнера
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Container(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Container&quot;,Container,newvalue

   m_Container= newValue
end if
end property

'№ прицепа \ контейнера
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Container
public property Get Container() as String
 LoadFromDatabase
 AccessTime=Now

   Container = m_Container
end property
' let 
'Номер пломбы

'Номер пломбы
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let StampNumber(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;StampNumber&quot;,StampNumber,newvalue

   m_StampNumber= newValue
end if
end property

'Номер пломбы
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. StampNumber
public property Get StampNumber() as String
 LoadFromDatabase
 AccessTime=Now

   StampNumber = m_StampNumber
end property
' let 
'Состояние пломбы

'Состояние пломбы
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let StampStatus(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;StampStatus&quot;,StampStatus,newvalue

   m_StampStatus= newValue
end if
end property

'Состояние пломбы
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. StampStatus
public property Get StampStatus() as String
 LoadFromDatabase
 AccessTime=Now

   StampStatus = m_StampStatus
end property
' let 
'Время прибытия машины

'Время прибытия машины
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Track_time_in(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Track_time_in&quot;,Track_time_in,newvalue

   m_Track_time_in= newValue
end if
end property

'Время прибытия машины
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. Track_time_in
public property Get Track_time_in() as DATE
 LoadFromDatabase
 AccessTime=Now

   Track_time_in = m_Track_time_in
end property
' let 
'Время убытия машины

'Время убытия машины
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let track_time_out(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;track_time_out&quot;,track_time_out,newvalue

   m_track_time_out= newValue
end if
end property

'Время убытия машины
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. track_time_out
public property Get track_time_out() as DATE
 LoadFromDatabase
 AccessTime=Now

   track_time_out = m_track_time_out
end property
' let 
'Температура

'Температура
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let temp_in_track(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;temp_in_track&quot;,temp_in_track,newvalue

   m_temp_in_track= newValue
end if
end property

'Температура
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. temp_in_track
public property Get temp_in_track() as double
 LoadFromDatabase
 AccessTime=Now

   temp_in_track = m_temp_in_track
end property
' let 
'Правиило формирования партии

'Правиило формирования партии
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ThePartyRule(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ThePartyRule&quot;,ThePartyRule,newvalue
on error resume next
m_ThePartyRule_ID=&quot;&quot;
m_ThePartyRule_ID=newValue.id
'  set   m_ThePartyRule= newValue
end if
end property

'Правиило формирования партии
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ThePartyRule
public property Get ThePartyRule() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ThePartyRule as object
if  m_ThePartyRule_ID&lt;&gt;&quot;&quot; then 
  set tmp_ThePartyRule=Application.FindRowObject(&quot;ITTD_RULE&quot;,m_ThePartyRule_ID)
  if tmp_ThePartyRule is nothing then
    m_ThePartyRule_ID_BRIEF = &quot;&quot; 
  else
    m_ThePartyRule_ID_BRIEF = tmp_ThePartyRule.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTD_RULE&quot; &amp; m_ThePartyRule_ID, tmp_ThePartyRule
  set ThePartyRule=tmp_ThePartyRule
  exit property
end if
  '  set ThePartyRule = m_ThePartyRule
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

       set nvi=nv.Add (&quot;QryCode&quot;, m_QryCode)
       nvi.ValueSize = Len(m_QryCode)
       set nvi=nv.Add (&quot;TheClient&quot;, m_TheClient)
       nvi.ValueSize = Len(m_TheClient)
  set nvi=nv.Add( &quot;ProcessDate&quot;,m_ProcessDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;Supplier&quot;,m_Supplier)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;TTN&quot;,m_TTN)
nvi.ValueSize = 30
  set nvi=nv.Add( &quot;TTNDate&quot;,m_TTNDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;TranspNumber&quot;,m_TranspNumber)
nvi.ValueSize = 30
  set nvi=nv.Add( &quot;Container&quot;,m_Container)
nvi.ValueSize = 30
  set nvi=nv.Add( &quot;StampNumber&quot;,m_StampNumber)
nvi.ValueSize = 20
  set nvi=nv.Add( &quot;StampStatus&quot;,m_StampStatus)
nvi.ValueSize = 30
  set nvi=nv.Add( &quot;Track_time_in&quot;,m_Track_time_in)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;track_time_out&quot;,m_track_time_out)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;temp_in_track&quot;,m_temp_in_track)
nvi.ValueType =  adDouble 
 ' Reference to ITTD_RULE
    if m_ThePartyRule_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ThePartyRule&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ThePartyRule&quot;,m_ThePartyRule_ID)
    end if 
    nvi.ORACLE_GUID 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  QryCode &lt;&gt; &quot;&quot; then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; GetFromXML(m_QryCode, &quot;BRIEF&quot;) &amp; &quot; }; &quot;
   end if
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_QryCode =nv.item( &quot;QryCode&quot;).Value
  m_TheClient =nv.item( &quot;TheClient&quot;).Value
m_ProcessDate=nv.item( &quot;ProcessDate&quot;).Value
m_Supplier=nv.item( &quot;Supplier&quot;).Value
m_TTN=nv.item( &quot;TTN&quot;).Value
m_TTNDate=nv.item( &quot;TTNDate&quot;).Value
m_TranspNumber=nv.item( &quot;TranspNumber&quot;).Value
m_Container=nv.item( &quot;Container&quot;).Value
m_StampNumber=nv.item( &quot;StampNumber&quot;).Value
m_StampStatus=nv.item( &quot;StampStatus&quot;).Value
m_Track_time_in=nv.item( &quot;Track_time_in&quot;).Value
m_track_time_out=nv.item( &quot;track_time_out&quot;).Value
m_temp_in_track=nv.item( &quot;temp_in_track&quot;).Value
  m_ThePartyRule_ID=nv.item( &quot;ThePartyRule&quot;).Value
else

  m_QryCode =nv.fields( &quot;QryCode&quot;).Value
  m_TheClient =nv.fields( &quot;TheClient&quot;).Value
m_ProcessDate=nv.fields( &quot;ProcessDate&quot;).Value
m_Supplier=nv.fields( &quot;Supplier&quot;).Value
m_TTN=nv.fields( &quot;TTN&quot;).Value
m_TTNDate=nv.fields( &quot;TTNDate&quot;).Value
m_TranspNumber=nv.fields( &quot;TranspNumber&quot;).Value
m_Container=nv.fields( &quot;Container&quot;).Value
m_StampNumber=nv.fields( &quot;StampNumber&quot;).Value
m_StampStatus=nv.fields( &quot;StampStatus&quot;).Value
m_Track_time_in=nv.fields( &quot;Track_time_in&quot;).Value
m_track_time_out=nv.fields( &quot;track_time_out&quot;).Value
m_temp_in_track=nv.fields( &quot;temp_in_track&quot;).Value
  m_ThePartyRule_ID=nv.fields( &quot;ThePartyRule&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as ITTIN_DEF
   set o = new ITTIN_DEF
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;ITTIN_DEF.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;ITTIN_DEF.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;ITTIN_DEF&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;ITTIN_DEF.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;ITTIN_DEF&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;ITTIN_DEF.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_QryCode= &quot;&quot;
 m_TheClient= &quot;&quot;
 m_ThePartyRule_ID=&quot;&quot;
 set m_ThePartyRule= nothing
 if not Application is nothing then Application.Logger.Message &quot;ITTIN_DEF.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  QryCode=&quot;&quot;
  TheClient=&quot;&quot;
  ProcessDate=node.Attributes.getNamedItem(&quot;PROCESSDATE&quot;).nodeValue
  Supplier=Replace(node.Attributes.getNamedItem(&quot;SUPPLIER&quot;).nodeValue,vbLf,vbcrlf)
  TTN=Replace(node.Attributes.getNamedItem(&quot;TTN&quot;).nodeValue,vbLf,vbcrlf)
  TTNDate=node.Attributes.getNamedItem(&quot;TTNDATE&quot;).nodeValue
  TranspNumber=Replace(node.Attributes.getNamedItem(&quot;TRANSPNUMBER&quot;).nodeValue,vbLf,vbcrlf)
  Container=Replace(node.Attributes.getNamedItem(&quot;CONTAINER&quot;).nodeValue,vbLf,vbcrlf)
  StampNumber=Replace(node.Attributes.getNamedItem(&quot;STAMPNUMBER&quot;).nodeValue,vbLf,vbcrlf)
  StampStatus=Replace(node.Attributes.getNamedItem(&quot;STAMPSTATUS&quot;).nodeValue,vbLf,vbcrlf)
  Track_time_in=node.Attributes.getNamedItem(&quot;TRACK_TIME_IN&quot;).nodeValue
  track_time_out=node.Attributes.getNamedItem(&quot;TRACK_TIME_OUT&quot;).nodeValue
  temp_in_track=val(Replace(node.Attributes.getNamedItem(&quot;TEMP_IN_TRACK&quot;).nodeValue,vbLf,vbcrlf))
  set ThePartyRule=nothing
  m_ThePartyRule_ID=node.Attributes.getNamedItem(&quot;THEPARTYRULE&quot;).nodeValue
  m_ThePartyRule_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEPARTYRULE_BRIEF&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;QRYCODE&quot;, m_QryCode
  node.setAttribute &quot;THECLIENT&quot;, m_TheClient
  node.setAttribute &quot;PROCESSDATE&quot;, Cdbl(ProcessDate)
  node.setAttribute &quot;SUPPLIER&quot;, Supplier
  node.setAttribute &quot;TTN&quot;, TTN
  node.setAttribute &quot;TTNDATE&quot;, Cdbl(TTNDate)
  node.setAttribute &quot;TRANSPNUMBER&quot;, TranspNumber
  node.setAttribute &quot;CONTAINER&quot;, Container
  node.setAttribute &quot;STAMPNUMBER&quot;, StampNumber
  node.setAttribute &quot;STAMPSTATUS&quot;, StampStatus
  node.setAttribute &quot;TRACK_TIME_IN&quot;, Cdbl(Track_time_in)
  node.setAttribute &quot;TRACK_TIME_OUT&quot;, Cdbl(track_time_out)
  node.setAttribute &quot;TEMP_IN_TRACK&quot;, replace(cstr(temp_in_track),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;THEPARTYRULE&quot;, m_ThePartyRule_ID
  if not (ThePartyRule is nothing) then 
    node.setAttribute &quot;THEPARTYRULE_BRIEF&quot;, ThePartyRule.BRIEF
  else
    node.setAttribute &quot;THEPARTYRULE_BRIEF&quot;, m_ThePartyRule_ID_BRIEF
  end if
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;ITTIN_DEF&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;ITTIN_DEF&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;ITTIN_DEF&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;ITTIN_DEF&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_DEF_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;ITTIN_DEF&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;ITTIN_DEF.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  ITTIN_DEF
'  ,или Nothing
'See Also:
'Example:
' dim variable as  ITTIN_DEF
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  ITTIN_DEF
   if mcol.count&gt;0 then exit function
 dim LID as  string
 dim o as  ITTIN_DEF
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  ITTIN_DEF
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_DEF
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_DEF
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as ITTIN_DEF
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as ITTIN_DEF
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_DEF
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_DEF
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as ITTIN_DEF
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_DEF
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_DEF
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as ITTIN_DEF
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_DEF
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_DEF
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as ITTIN_DEF
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_DEF
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_DEF
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as ITTIN_DEF
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_DEF
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_DEF
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as ITTIN_DEF
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  ITTIN_DEF
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;ITTIN_DEF.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As ITTIN_DEF
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As ITTIN_DEF
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!ITTIN_DEFID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as ITTIN_DEF
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;ITTIN_DEF_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;ITTIN_DEF&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as ITTIN_DEF
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;ITTIN_DEF&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Код заказа&quot;, 0, 0, &quot;QryCode&quot;).SortType =1
  YGrid.Columns.Add(&quot;Клиент&quot;, 0, 0, &quot;TheClient&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата обработки заказа&quot;, 0, 0, &quot;ProcessDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Поставщик&quot;, 0, 0, &quot;Supplier&quot;).SortType =1
  YGrid.Columns.Add(&quot;Номер ТТН&quot;, 0, 0, &quot;TTN&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата ТТН&quot;, 0, 0, &quot;TTNDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;№ ТС&quot;, 0, 0, &quot;TranspNumber&quot;).SortType =1
  YGrid.Columns.Add(&quot;№ прицепа \ контейнера&quot;, 0, 0, &quot;Container&quot;).SortType =1
  YGrid.Columns.Add(&quot;Номер пломбы&quot;, 0, 0, &quot;StampNumber&quot;).SortType =1
  YGrid.Columns.Add(&quot;Состояние пломбы&quot;, 0, 0, &quot;StampStatus&quot;).SortType =1
  YGrid.Columns.Add(&quot;Время прибытия машины&quot;, 0, 0, &quot;Track_time_in&quot;).SortType =4
  YGrid.Columns.Add(&quot;Время убытия машины&quot;, 0, 0, &quot;track_time_out&quot;).SortType =4
  YGrid.Columns.Add(&quot;Температура&quot;, 0, 0, &quot;temp_in_track&quot;).SortType =2
  YGrid.Columns.Add(&quot;Правиило формирования партии&quot;, 0, 0, &quot;ThePartyRule&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as ITTIN_DEF
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.QryCode = &quot;&quot; then
    Values.Value(1) = &quot;Не задано&quot;
   else 
     Dim XMLDocQryCode As New DOMDocument
     On Error Resume Next
     Call XMLDocQryCode.loadXML(obj.QryCode)
     If (Err.Number = 0 And XMLDocQryCode.parseError.errorCode = 0) Then
           Dim nodeQryCode As MSXML2.IXMLDOMNode
           For Each nodeQryCode In XMLDocQryCode.childNodes.item(0).childNodes
             If (nodeQryCode.baseName = &quot;Brief&quot;) Then
              Values.Value(1) = nodeQryCode.Text
              Exit For
             End If
           Next
      End if
   end if 
   if obj.TheClient = &quot;&quot; then
    Values.Value(2) = &quot;Не задано&quot;
   else 
     Dim XMLDocTheClient As New DOMDocument
     On Error Resume Next
     Call XMLDocTheClient.loadXML(obj.TheClient)
     If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
           Dim nodeTheClient As MSXML2.IXMLDOMNode
           For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
             If (nodeTheClient.baseName = &quot;Brief&quot;) Then
              Values.Value(2) = nodeTheClient.Text
              Exit For
             End If
           Next
      End if
   end if 
    Values.Value(3) = Left(Replace(obj.ProcessDate, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.Supplier, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.TTN, vbCrLf, &quot; &quot;), 255)
    Values.Value(6) = Left(Replace(obj.TTNDate, vbCrLf, &quot; &quot;), 255)
    Values.Value(7) = Left(Replace(obj.TranspNumber, vbCrLf, &quot; &quot;), 255)
    Values.Value(8) = Left(Replace(obj.Container, vbCrLf, &quot; &quot;), 255)
    Values.Value(9) = Left(Replace(obj.StampNumber, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.StampStatus, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.Track_time_in, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.track_time_out, vbCrLf, &quot; &quot;), 255)
    Values.Value(13) = Left(Replace(obj.temp_in_track, vbCrLf, &quot; &quot;), 255)
   if obj.ThePartyRule is nothing then
    Values.Value(14) = &quot;Не задано&quot;
   else 
    Values.Value(14) = Left(Replace(obj.ThePartyRule.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;ITTIN_DEF&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_EPL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Пустые поддоны к заказу
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_TheNumber as object
Dim m_TheNumber_ID as string
Dim m_TheNumber_ID_BRIEF as string
private m_PalWeight as double
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;ITTIN_EPL&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;ITTIN_EPL.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Палета

'Палета
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheNumber(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheNumber&quot;,TheNumber,newvalue
on error resume next
m_TheNumber_ID=&quot;&quot;
m_TheNumber_ID=newValue.id
'  set   m_TheNumber= newValue
end if
end property

'Палета
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheNumber
public property Get TheNumber() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheNumber as object
if  m_TheNumber_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheNumber=Application.FindRowObject(&quot;ITTPL_DEF&quot;,m_TheNumber_ID)
  if tmp_TheNumber is nothing then
    m_TheNumber_ID_BRIEF = &quot;&quot; 
  else
    m_TheNumber_ID_BRIEF = tmp_TheNumber.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ITTPL_DEF&quot; &amp; m_TheNumber_ID, tmp_TheNumber
  set TheNumber=tmp_TheNumber
  exit property
end if
  '  set TheNumber = m_TheNumber
end property
' let 
'Вес палеты

'Вес палеты
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PalWeight(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PalWeight&quot;,PalWeight,newvalue

   m_PalWeight= newValue
end if
end property

'Вес палеты
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PalWeight
public property Get PalWeight() as double
 LoadFromDatabase
 AccessTime=Now

   PalWeight = m_PalWeight
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to ITTPL_DEF
    if m_TheNumber_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheNumber&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheNumber&quot;,m_TheNumber_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;PalWeight&quot;,m_PalWeight)
nvi.ValueType =  adDouble 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  TheNumber is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_TheNumber_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; TheNumber.Brief  &amp; &quot;}; &quot;
   end if
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_TheNumber_ID=nv.item( &quot;TheNumber&quot;).Value
m_PalWeight=nv.item( &quot;PalWeight&quot;).Value
else

  m_TheNumber_ID=nv.fields( &quot;TheNumber&quot;).Value
m_PalWeight=nv.fields( &quot;PalWeight&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as ITTIN_EPL
   set o = new ITTIN_EPL
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;ITTIN_EPL.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;ITTIN_EPL.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;ITTIN_EPL&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;ITTIN_EPL.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;ITTIN_EPL&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;ITTIN_EPL.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_TheNumber_ID=&quot;&quot;
 set m_TheNumber= nothing
 if not Application is nothing then Application.Logger.Message &quot;ITTIN_EPL.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set TheNumber=nothing
  m_TheNumber_ID=node.Attributes.getNamedItem(&quot;THENUMBER&quot;).nodeValue
  m_TheNumber_ID_BRIEF=node.Attributes.getNamedItem(&quot;THENUMBER_BRIEF&quot;).nodeValue
  PalWeight=val(Replace(node.Attributes.getNamedItem(&quot;PALWEIGHT&quot;).nodeValue,vbLf,vbcrlf))
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;THENUMBER&quot;, m_TheNumber_ID
  if not (TheNumber is nothing) then 
    node.setAttribute &quot;THENUMBER_BRIEF&quot;, TheNumber.BRIEF
  else
    node.setAttribute &quot;THENUMBER_BRIEF&quot;, m_TheNumber_ID_BRIEF
  end if
  node.setAttribute &quot;PALWEIGHT&quot;, replace(cstr(PalWeight),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;ITTIN_EPL&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;ITTIN_EPL&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;ITTIN_EPL&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;ITTIN_EPL&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_EPL_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Пустые поддоны к заказу
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;ITTIN_EPL&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;ITTIN_EPL.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  ITTIN_EPL
'  ,или Nothing
'See Also:
'Example:
' dim variable as  ITTIN_EPL
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  ITTIN_EPL
 dim LID as  string
 dim o as  ITTIN_EPL
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  ITTIN_EPL
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_EPL
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_EPL
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as ITTIN_EPL
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as ITTIN_EPL
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_EPL
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_EPL
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as ITTIN_EPL
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_EPL
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_EPL
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as ITTIN_EPL
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_EPL
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_EPL
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as ITTIN_EPL
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_EPL
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_EPL
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as ITTIN_EPL
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса ITTIN_EPL
'  ,или Nothing
'See Also:
'Example:
' dim variable as ITTIN_EPL
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as ITTIN_EPL
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  ITTIN_EPL
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;ITTIN_EPL.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As ITTIN_EPL
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As ITTIN_EPL
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!ITTIN_EPLID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as ITTIN_EPL
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;ITTIN_EPL_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;ITTIN_EPL&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as ITTIN_EPL
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;ITTIN_EPL&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Палета&quot;, 0, 0, &quot;TheNumber&quot;).SortType =1
  YGrid.Columns.Add(&quot;Вес палеты&quot;, 0, 0, &quot;PalWeight&quot;).SortType =2
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as ITTIN_EPL
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.TheNumber is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.TheNumber.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(2) = Left(Replace(obj.PalWeight, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;ITTIN_EPL&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
