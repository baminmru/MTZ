<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Приемка груза"/><AttributeHolder Name="Name" Value="ITTINGUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="' основной интерфейс компонента ITTINGUI
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Конструктор класса ITTIN
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Приемка груза&quot;
End Sub


'Деструктор класса
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Terminate()
Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub

'Очистка обратных ссылок
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub

'Поиск формы редактирования
'Parameters:
'[IN]   InstanceID , тип параметра: String, 
'[IN]   mode , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindForm(...параметры...)
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function

'Путь к текущей библиотеке
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
'  variable = me.GUIPath() 
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function

'Количество открытых форм
'Parameters:
'[IN]   InstanceID , тип параметра: String  - ...
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me.FormCount(...параметры...) 
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function

'Очистить форму
'Parameters:
'[IN]   InstanceID , тип параметра: String, 
'[IN]   mode , тип параметра: String, 
'[IN]   ModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.EraseForm({параметры})
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub

'Указатель модального режима работы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. IsModal
public property get IsModal() as boolean
 IsModal = mOpenModal
end property

'Показать форму редактирования документа
'Parameters:
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   optional OpenModal , тип параметра: boolean = false  - ...
'See Also:
'Example:
'  call me.Show({параметры})
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Приемка груза)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
if mode=&quot;read&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTIN:read&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmread_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTIN:main&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTIN:admi&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTIN:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Приемка груза&quot; 
  end if
end if
if OpenModal then
if mode=&quot;read&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTIN:read&quot;)) then
     set f = new frmread_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTIN:main&quot;)) then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTIN:admi&quot;)) then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTIN:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Приемка груза&quot; 
  end if
end if
end sub

'Покзать форму редактирования строки раздела. RowItem -  объект строка, уже должен быть создан
'Parameters:
'[IN]   Mode , тип параметра: String, 
'[IN][OUT]   RowItem , тип параметра: Object  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.ShowAddForm(...параметры...) 
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;read&quot; Then
  If UCase(PartName) = &quot;ITTIN_QLINE&quot; Then
    Set f = New frmITTIN_QLINE_read
  End If

 If Mode = &quot;read&quot; Then
  If UCase(PartName) = &quot;ITTIN_PALET&quot; Then
    Set f = New frmITTIN_PALET_read
  End If

 If Mode = &quot;read&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;ITTIN_SRV&quot; Then
    Set f = New frmITTIN_SRV_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTIN_DEF&quot; Then
    Set f = New frmITTIN_DEF_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTIN_EPL&quot; Then
    Set f = New frmITTIN_EPL_read
  End If

 If Mode = &quot;read&quot; Then
 End If
 End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;ITTIN_QLINE&quot; Then
    Set f = New frmITTIN_QLINE_main
  End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;ITTIN_PALET&quot; Then
    Set f = New frmITTIN_PALET_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;ITTIN_SRV&quot; Then
    Set f = New frmITTIN_SRV_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTIN_DEF&quot; Then
    Set f = New frmITTIN_DEF_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTIN_EPL&quot; Then
    Set f = New frmITTIN_EPL_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;ITTIN_QLINE&quot; Then
    Set f = New frmITTIN_QLINE_admi
  End If

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;ITTIN_PALET&quot; Then
    Set f = New frmITTIN_PALET_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;ITTIN_SRV&quot; Then
    Set f = New frmITTIN_SRV_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTIN_DEF&quot; Then
    Set f = New frmITTIN_DEF_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTIN_EPL&quot; Then
    Set f = New frmITTIN_EPL_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;ITTIN_QLINE&quot; Then
    Set f = New frmITTIN_QLINE_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;ITTIN_PALET&quot; Then
    Set f = New frmITTIN_PALET_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;ITTIN_SRV&quot; Then
    Set f = New frmITTIN_SRV_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTIN_DEF&quot; Then
    Set f = New frmITTIN_DEF_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTIN_EPL&quot; Then
    Set f = New frmITTIN_EPL_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_QLINE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№ П\П:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№ П\П"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLineAtQuery"/><Properties Name="Caption" PropValue="Строка в заказе:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLineAtQuery"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdLineAtQuery"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQRY_NUM"/><Properties Name="Caption" PropValue="По заказу КГ.:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQRY_NUM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdQRY_NUM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbledizm"/><Properties Name="Caption" PropValue="Ед. изм:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtedizm"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Ед. изм"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCurValue"/><Properties Name="Caption" PropValue="Факт КГ.:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCurValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Факт КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblarticul"/><Properties Name="Caption" PropValue="Артикул:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtarticul"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Артикул"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Дата производства По:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="Mask" PropValue="9999/999999"/><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства C:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства C"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес одной упаковки КГ.:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес одной упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCalibrated"/><Properties Name="Caption" PropValue="Калиброванный груз:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCalibrated"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Калиброванный груз"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCaliberWeight"/><Properties Name="Caption" PropValue="Вес калиброванной единицы НЕТТО:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCaliberWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес калиброванной единицы НЕТТО"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblgood_id"/><Properties Name="Caption" PropValue="Идентификатор товара:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtgood_id"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdgood_id"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="9150"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobBrutto"/><Properties Name="Caption" PropValue="Вес брутто короба:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobBrutto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес брутто короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobNetto"/><Properties Name="Caption" PropValue="Вес НЕТТО короба:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobNetto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес НЕТТО короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNavalom"/><Properties Name="Caption" PropValue="Груз навалом:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbNavalom"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Груз навалом"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDLineAtQuery as string 
  private mIDQRY_NUM as string 
  private mIDgood_id as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Validate(cancel as boolean)
if txtsequence.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtsequence.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  elseif Val(txtsequence.text) &lt;&gt;clng(Val(txtsequence.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  end if
end if
end sub
Private Sub txtsequence_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtsequence_Change()
  Changing

end sub
private sub txtLineAtQuery_Change()
  if  not (OnInit) then 
If (txtLineAtQuery.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtLineAtQuery.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtLineAtQuery.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtLineAtQuery.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_id_Click()
    end if
  Changing

  end if 
end sub
private sub cmdLineAtQuery_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDLineAtQuery = Mid(txtLineAtQuery.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;LineAtQuery;&quot; &amp; mIDLineAtQuery, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtLineAtQuery.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (&quot; WHERE A.ORDER_ID=&quot; &amp; item.application.Manager.GetIDFromXMLField( item.application.ittin_def.item(1).QryCode )))
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_id&quot;, txtgood_id.Tag)
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtLineAtQuery.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtLineAtQuery.Tag = res.item(&quot;xml&quot;).value
      If (txtLineAtQuery.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtLineAtQuery.Text = res.item(&quot;brief&quot;).value
        mIDLineAtQuery = res.item(&quot;ID&quot;).value
        Call txtLineAtQuery_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtQRY_NUM_Change()
  if  not (OnInit) then 
If (txtQRY_NUM.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtQRY_NUM.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtQRY_NUM.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtQRY_NUM.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%QRY_NUMID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_id_Click()
    end if
  Changing

  end if 
end sub
private sub cmdQRY_NUM_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDQRY_NUM = Mid(txtQRY_NUM.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;QRY_NUM;&quot; &amp; mIDQRY_NUM, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtQRY_NUM.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_id&quot;, txtgood_id.Tag)
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtQRY_NUM.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtQRY_NUM.Tag = res.item(&quot;xml&quot;).value
      If (txtQRY_NUM.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtQRY_NUM.Text = res.item(&quot;brief&quot;).value
        mIDQRY_NUM = res.item(&quot;ID&quot;).value
        Call txtQRY_NUM_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtedizm_Change()
  Changing

end sub
private sub txtCurValue_Validate(cancel as boolean)
if txtCurValue.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCurValue.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCurValue.SetFocus 
  elseif Val(txtCurValue.text) &lt; -922337203685477.5808 or Val(txtCurValue.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCurValue.SetFocus 
  end if
end if
end sub
Private Sub txtCurValue_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCurValue_Change()
  Changing

end sub
private sub txtarticul_Change()
  Changing

end sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief,,,&quot;ITTD_COUNTRY_TheSupplier like '%&quot; &amp; Item.Application.ITTIN_DEF.Item(1).Supplier &amp; &quot;%'&quot;) Then
          txtmade_country.Tag = Left(id, 38)
          txtmade_country = brief
        End If
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
          txtmade_country.Tag = &quot;&quot;
          txtmade_country = &quot;&quot;
End sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief,,,&quot;ITTD_FACTORY_Country_ID='&quot; &amp; txtmade_country.tag &amp; &quot;'&quot;) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_KILLPLACE&quot;, id, brief,,,&quot;ITTD_KILLPLACE_Factory_ID='&quot; &amp; txtFactory.tag &amp; &quot;'&quot;) Then
          txtKILL_NUMBER.Tag = Left(id, 38)
          txtKILL_NUMBER = brief
        End If
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
          txtKILL_NUMBER.Tag = &quot;&quot;
          txtKILL_NUMBER = &quot;&quot;
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_PART&quot;, id, brief,,,&quot;ITTD_PART_TheGood ='&quot; &amp; txtLineAtQuery.text &amp; &quot;'&quot;) Then
          txtPartRef.Tag = Left(id, 38)
          txtPartRef = brief
        End If
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
          txtPartRef.Tag = &quot;&quot;
          txtPartRef = &quot;&quot;
End sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub txtPackageWeight_Validate(cancel as boolean)
if txtPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  elseif Val(txtPackageWeight.text) &lt; -922337203685477.5808 or Val(txtPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub cmbIsCalibrated_Click()
  on error resume next
  Changing
if cmbIsCalibrated.text =&quot;Да&quot; then 
   txtKorobBrutto.enabled = true
   txtKorobNetto.enabled = true
   txtPackageWeight.enabled = false
else
   txtKorobBrutto =0
   txtKorobBrutto.enabled = false
   txtKorobNetto = 0
   txtKorobNetto.enabled = false
   txtPackageWeight.enabled = true
end if

end sub
private sub txtCaliberWeight_Validate(cancel as boolean)
if txtCaliberWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCaliberWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberWeight.SetFocus 
  elseif Val(txtCaliberWeight.text) &lt; -922337203685477.5808 or Val(txtCaliberWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberWeight.SetFocus 
  end if
end if
end sub
Private Sub txtCaliberWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCaliberWeight_Change()
  Changing

end sub
private sub txtFullPackageWeight_Validate(cancel as boolean)
if txtFullPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFullPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  elseif Val(txtFullPackageWeight.text) &lt; -922337203685477.5808 or Val(txtFullPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtFullPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub txtgood_id_Change()
  if  not (OnInit) then 
If (txtgood_id.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtgood_id.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtgood_id.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtgood_id.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%good_idID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
  Changing

  end if 
end sub
private sub cmdgood_id_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtgood_id.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtgood_id.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDgood_id = Mid(txtgood_id.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;good_id;&quot; &amp; mIDgood_id, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtgood_id.Tag = Replace(txtgood_id.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtgood_id.Tag = Replace(txtgood_id.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtgood_id.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtgood_id.Tag = Replace(txtgood_id.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtgood_id.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtgood_id.Tag = res.item(&quot;xml&quot;).value
      If (txtgood_id.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtgood_id.Text = res.item(&quot;brief&quot;).value
        mIDgood_id = res.item(&quot;ID&quot;).value
        Call txtgood_id_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtKorobBrutto_Validate(cancel as boolean)
if txtKorobBrutto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobBrutto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  elseif Val(txtKorobBrutto.text) &lt; -922337203685477.5808 or Val(txtKorobBrutto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobBrutto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobBrutto_Change()
  Changing

end sub
private sub txtKorobNetto_Validate(cancel as boolean)
if txtKorobNetto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobNetto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  elseif Val(txtKorobNetto.text) &lt; -922337203685477.5808 or Val(txtKorobNetto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobNetto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobNetto_Change()
  Changing

end sub
private sub cmbNavalom_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(txtsequence.text)
if mIsOK then mIsOK = txtLineAtQuery.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtQRY_NUM.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtCurValue.text)
if mIsOK then mIsOK = IsSet(dtpmade_date_to.value)
if mIsOK then mIsOK =IsSet(txtvetsved.text)
if mIsOK then mIsOK = IsSet(dtpMade_date.value)
if mIsOK then mIsOK = IsSet(txtPackageWeight.text)
if mIsOK then mIsOK =(cmbIsCalibrated.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
txtLineAtQuery.Text =&quot;&quot;
txtLineAtQuery.Tag =&quot;&quot;
mIDLineAtQuery =&quot;&quot;
' Разобрать XML
Dim XMLDocLineAtQuery As New DOMDocument
On Error Resume Next
If (item.LineAtQuery &lt;&gt; &quot;&quot;) Then
  Call XMLDocLineAtQuery.loadXML(item.LineAtQuery)
  If (Err.Number = 0 And XMLDocLineAtQuery.parseError.errorCode = 0) Then
    Dim nodeLineAtQuery As MSXML2.IXMLDOMNode
    txtLineAtQuery.Tag = item.LineAtQuery
    For Each nodeLineAtQuery In XMLDocLineAtQuery.childNodes.item(0).childNodes
      If (nodeLineAtQuery.baseName = &quot;Brief&quot;) Then
       txtLineAtQuery.Text = nodeLineAtQuery.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDLineAtQuery As String
    newIDLineAtQuery = item.LineAtQuery
    Dim XMLLineAtQueryID As String
    XMLLineAtQueryID = &quot;&lt;SQLData&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код Заказа], A.QTY_ORD [Количество], B.DESCRIPTION [Наименование]  from receiving_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDLineAtQuery &amp; &quot;&lt;/ID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;BriefFields&gt;Наименование&lt;/BriefFields&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsLineAtQuery As New NamedValues
    Dim resLineAtQuery As NamedValues
    Call parsLineAtQuery.Add(&quot;xml&quot;, XMLLineAtQueryID)
    Set resLineAtQuery = item.Application.Manager.GetSQLDataDialog(parsLineAtQuery)
    If (Not resLineAtQuery Is Nothing) Then
      Dim resStrLineAtQuery As String
      resStrLineAtQuery = resLineAtQuery.item(&quot;RESULT&quot;).value
      If (resStrLineAtQuery = &quot;OK&quot;) Then
        txtLineAtQuery.Tag = Replace(resLineAtQuery.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtLineAtQuery.Text &lt;&gt; resLineAtQuery.item(&quot;brief&quot;).value) Then
          mIDLineAtQuery = newIDLineAtQuery
          txtLineAtQuery.Text = resLineAtQuery.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.LineAtQuery = vbNullString
    End If
  End If
Else
  Dim XMLLineAtQuery As String
  XMLLineAtQuery = &quot;&lt;SQLData&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код Заказа], A.QTY_ORD [Количество], B.DESCRIPTION [Наименование]  from receiving_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;BriefFields&gt;Наименование&lt;/BriefFields&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;/SQLData&gt;&quot;
  txtLineAtQuery.Tag = XMLLineAtQuery
End if 
On Error GoTo 0
 LoadBtnPictures cmdLineAtQuery,cmdLineAtQuery.tag
  cmdLineAtQuery.RemoveAllMenu
txtQRY_NUM.Text =&quot;&quot;
txtQRY_NUM.Tag =&quot;&quot;
mIDQRY_NUM =&quot;&quot;
' Разобрать XML
Dim XMLDocQRY_NUM As New DOMDocument
On Error Resume Next
If (item.QRY_NUM &lt;&gt; &quot;&quot;) Then
  Call XMLDocQRY_NUM.loadXML(item.QRY_NUM)
  If (Err.Number = 0 And XMLDocQRY_NUM.parseError.errorCode = 0) Then
    Dim nodeQRY_NUM As MSXML2.IXMLDOMNode
    txtQRY_NUM.Tag = item.QRY_NUM
    For Each nodeQRY_NUM In XMLDocQRY_NUM.childNodes.item(0).childNodes
      If (nodeQRY_NUM.baseName = &quot;Brief&quot;) Then
       txtQRY_NUM.Text = nodeQRY_NUM.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDQRY_NUM As String
    newIDQRY_NUM = item.QRY_NUM
    Dim XMLQRY_NUMID As String
    XMLQRY_NUMID = &quot;&lt;SQLData&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;query&gt;select  QTY_ORD from receiving_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDQRY_NUM &amp; &quot;&lt;/ID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsQRY_NUM As New NamedValues
    Dim resQRY_NUM As NamedValues
    Call parsQRY_NUM.Add(&quot;xml&quot;, XMLQRY_NUMID)
    Set resQRY_NUM = item.Application.Manager.GetSQLDataDialog(parsQRY_NUM)
    If (Not resQRY_NUM Is Nothing) Then
      Dim resStrQRY_NUM As String
      resStrQRY_NUM = resQRY_NUM.item(&quot;RESULT&quot;).value
      If (resStrQRY_NUM = &quot;OK&quot;) Then
        txtQRY_NUM.Tag = Replace(resQRY_NUM.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtQRY_NUM.Text &lt;&gt; resQRY_NUM.item(&quot;brief&quot;).value) Then
          mIDQRY_NUM = newIDQRY_NUM
          txtQRY_NUM.Text = resQRY_NUM.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.QRY_NUM = vbNullString
    End If
  End If
Else
  Dim XMLQRY_NUM As String
  XMLQRY_NUM = &quot;&lt;SQLData&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;query&gt;select  QTY_ORD from receiving_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;/SQLData&gt;&quot;
  txtQRY_NUM.Tag = XMLQRY_NUM
  Call cmdQRY_NUM_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdQRY_NUM,cmdQRY_NUM.tag
  cmdQRY_NUM.RemoveAllMenu
  cmdQRY_NUM.Visible = false 
  on error resume next
txtedizm = item.edizm
txtCurValue = item.CurValue
  on error resume next
txtarticul = item.articul
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
end if
  on error resume next
txtvetsved = item.vetsved
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
else
 dtpexp_date.value = null
end if
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
end if
txtPackageWeight = item.PackageWeight
cmbIsCalibrated.Clear
cmbIsCalibrated.additem &quot;Да&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= -1
cmbIsCalibrated.additem &quot;Нет&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= 0
 For iii = 0 To cmbIsCalibrated.ListCount-1
  If Item.IsCalibrated = cmbIsCalibrated.ItemData(iii) Then
   cmbIsCalibrated.ListIndex = iii
   Exit For
  End If
 Next
txtCaliberWeight = item.CaliberWeight
txtFullPackageWeight = item.FullPackageWeight
txtgood_id.Text =&quot;&quot;
txtgood_id.Tag =&quot;&quot;
mIDgood_id =&quot;&quot;
' Разобрать XML
Dim XMLDocgood_id As New DOMDocument
On Error Resume Next
If (item.good_id &lt;&gt; &quot;&quot;) Then
  Call XMLDocgood_id.loadXML(item.good_id)
  If (Err.Number = 0 And XMLDocgood_id.parseError.errorCode = 0) Then
    Dim nodegood_id As MSXML2.IXMLDOMNode
    txtgood_id.Tag = item.good_id
    For Each nodegood_id In XMLDocgood_id.childNodes.item(0).childNodes
      If (nodegood_id.baseName = &quot;Brief&quot;) Then
       txtgood_id.Text = nodegood_id.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDgood_id As String
    newIDgood_id = item.good_id
    Dim XMLgood_idID As String
    XMLgood_idID = &quot;&lt;SQLData&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;query&gt;select  item_id from RECEIVING_LINE where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDgood_id &amp; &quot;&lt;/ID&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsgood_id As New NamedValues
    Dim resgood_id As NamedValues
    Call parsgood_id.Add(&quot;xml&quot;, XMLgood_idID)
    Set resgood_id = item.Application.Manager.GetSQLDataDialog(parsgood_id)
    If (Not resgood_id Is Nothing) Then
      Dim resStrgood_id As String
      resStrgood_id = resgood_id.item(&quot;RESULT&quot;).value
      If (resStrgood_id = &quot;OK&quot;) Then
        txtgood_id.Tag = Replace(resgood_id.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtgood_id.Text &lt;&gt; resgood_id.item(&quot;brief&quot;).value) Then
          mIDgood_id = newIDgood_id
          txtgood_id.Text = resgood_id.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.good_id = vbNullString
    End If
  End If
Else
  Dim XMLgood_id As String
  XMLgood_id = &quot;&lt;SQLData&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;query&gt;select  item_id from RECEIVING_LINE where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_id = XMLgood_id &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_id = XMLgood_id &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;/SQLData&gt;&quot;
  txtgood_id.Tag = XMLgood_id
  Call cmdgood_id_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdgood_id,cmdgood_id.tag
  cmdgood_id.RemoveAllMenu
  cmdgood_id.Visible = false 
txtKorobBrutto = item.KorobBrutto
txtKorobNetto = item.KorobNetto
cmbNavalom.Clear
cmbNavalom.additem &quot;Да&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= -1
cmbNavalom.additem &quot;Нет&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= 0
 For iii = 0 To cmbNavalom.ListCount-1
  If Item.Navalom = cmbNavalom.ItemData(iii) Then
   cmbNavalom.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_id&quot;, txtgood_id.Tag)
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_id&quot;, txtgood_id.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.sequence = cdbl(txtsequence)
item.LineAtQuery = txtLineAtQuery.Tag
item.QRY_NUM = txtQRY_NUM.Tag
item.edizm = txtedizm
item.CurValue = cdbl(txtCurValue)
item.articul = txtarticul
If txtmade_country.Tag &lt;&gt; &quot;&quot; Then
  Set item.made_country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtmade_country.Tag)
Else
  Set item.made_country = Nothing
End If
  if  isnull(dtpmade_date_to) then
    item.made_date_to = 0
  else
    item.made_date_to = dtpmade_date_to.value
  end if
item.vetsved = txtvetsved
If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
If txtKILL_NUMBER.Tag &lt;&gt; &quot;&quot; Then
  Set item.KILL_NUMBER = Item.Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,txtKILL_NUMBER.Tag)
Else
  Set item.KILL_NUMBER = Nothing
End If
item.VidOtruba = txtVidOtruba
If txtPartRef.Tag &lt;&gt; &quot;&quot; Then
  Set item.PartRef = Item.Application.FindRowObject(&quot;ITTD_PART&quot;,txtPartRef.Tag)
Else
  Set item.PartRef = Nothing
End If
  if  isnull(dtpexp_date) then
    item.exp_date = 0
  else
    item.exp_date = dtpexp_date.value
  end if
  if  isnull(dtpMade_date) then
    item.Made_date = 0
  else
    item.Made_date = dtpMade_date.value
  end if
item.PackageWeight = cdbl(txtPackageWeight)
 if cmbIsCalibrated.listindex&gt;=0 then
   item.IsCalibrated = cmbIsCalibrated.itemdata(cmbIsCalibrated.listindex)
 end if
item.CaliberWeight = cdbl(txtCaliberWeight)
item.FullPackageWeight = cdbl(txtFullPackageWeight)
item.good_id = txtgood_id.Tag
item.KorobBrutto = cdbl(txtKorobBrutto)
item.KorobNetto = cdbl(txtKorobNetto)
 if cmbNavalom.listindex&gt;=0 then
   item.Navalom = cmbNavalom.itemdata(cmbNavalom.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_PALET" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№ П\П:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№ П\П"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства С:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства С"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Датиа производства По:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Датиа производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="Mask" PropValue="9999/999999"/><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCaliberQuantity"/><Properties Name="Caption" PropValue="Количство коробов:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCaliberQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количство коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalWeight"/><Properties Name="Caption" PropValue="Вес поддона КГ.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPalWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес поддона КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGoodWithPaletWeight"/><Properties Name="Caption" PropValue="Вес поддона с грузом КГ.:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtGoodWithPaletWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес поддона с грузом КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес упаковки КГ.:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBufferZonePlace"/><Properties Name="Caption" PropValue="Номер ячейки в буферной зоне:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBufferZonePlace"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер ячейки в буферной зоне"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStock_ID"/><Properties Name="Caption" PropValue="Идентификатор на складе:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStock_ID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Идентификатор на складе"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsBrak"/><Properties Name="Caption" PropValue="Брак:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsBrak"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Брак"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblpalet_id"/><Properties Name="Caption" PropValue="Идентификатор палеты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtpalet_id"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Идентификатор палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobBrutto"/><Properties Name="Caption" PropValue="Вес брутто короба:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobBrutto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес брутто короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobNetto"/><Properties Name="Caption" PropValue="Вес НЕТТО короба:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobNetto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес НЕТТО короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCalibrated"/><Properties Name="Caption" PropValue="Калиброванный груз:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCalibrated"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Калиброванный груз"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSSCC"/><Properties Name="Caption" PropValue="SSCC код:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSSCC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="18"/><Properties Name="ToolTipText" PropValue="SSCC код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBarCode1"/><Properties Name="Caption" PropValue="Bar Code 1:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBarCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Bar Code 1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBarCode2"/><Properties Name="Caption" PropValue="Bar Code 2:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBarCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Bar Code 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Validate(cancel as boolean)
if txtsequence.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtsequence.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  elseif Val(txtsequence.text) &lt;&gt;clng(Val(txtsequence.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  end if
end if
end sub
Private Sub txtsequence_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtsequence_Change()
  Changing

end sub
private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTPL_DEF&quot;, id, brief) Then
          txtTheNumber.Tag = Left(id, 38)
          txtTheNumber = brief
        End If
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
          txtTheNumber.Tag = &quot;&quot;
          txtTheNumber = &quot;&quot;
End sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief,,,&quot;ITTD_COUNTRY_TheSupplier like '%&quot; &amp; Item.Application.ITTIN_DEF.Item(1).Supplier &amp; &quot;%'&quot;) Then
          txtmade_country.Tag = Left(id, 38)
          txtmade_country = brief
        End If
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
          txtmade_country.Tag = &quot;&quot;
          txtmade_country = &quot;&quot;
End sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_KILLPLACE&quot;, id, brief) Then
          txtKILL_NUMBER.Tag = Left(id, 38)
          txtKILL_NUMBER = brief
        End If
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
          txtKILL_NUMBER.Tag = &quot;&quot;
          txtKILL_NUMBER = &quot;&quot;
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_PART&quot;, id, brief) Then
          txtPartRef.Tag = Left(id, 38)
          txtPartRef = brief
        End If
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
          txtPartRef.Tag = &quot;&quot;
          txtPartRef = &quot;&quot;
End sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub txtCaliberQuantity_Validate(cancel as boolean)
if txtCaliberQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCaliberQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberQuantity.SetFocus 
  elseif Val(txtCaliberQuantity.text) &lt;&gt;clng(Val(txtCaliberQuantity.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtCaliberQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCaliberQuantity_Change()
  Changing

end sub
private sub txtPalWeight_Validate(cancel as boolean)
if txtPalWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPalWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  elseif Val(txtPalWeight.text) &lt; -922337203685477.5808 or Val(txtPalWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPalWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPalWeight_Change()
  Changing

end sub
private sub txtGoodWithPaletWeight_Validate(cancel as boolean)
if txtGoodWithPaletWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtGoodWithPaletWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtGoodWithPaletWeight.SetFocus 
  elseif Val(txtGoodWithPaletWeight.text) &lt; -922337203685477.5808 or Val(txtGoodWithPaletWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtGoodWithPaletWeight.SetFocus 
  end if
end if
end sub
Private Sub txtGoodWithPaletWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtGoodWithPaletWeight_Change()
  Changing

end sub
private sub txtPackageWeight_Validate(cancel as boolean)
if txtPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  elseif Val(txtPackageWeight.text) &lt; -922337203685477.5808 or Val(txtPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub txtFullPackageWeight_Validate(cancel as boolean)
if txtFullPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFullPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  elseif Val(txtFullPackageWeight.text) &lt; -922337203685477.5808 or Val(txtFullPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtFullPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub txtBufferZonePlace_Change()
  Changing

end sub
private sub txtStock_ID_Validate(cancel as boolean)
if txtStock_ID.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtStock_ID.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtStock_ID.SetFocus 
  elseif Val(txtStock_ID.text) &lt;&gt;clng(Val(txtStock_ID.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtStock_ID.SetFocus 
  end if
end if
end sub
Private Sub txtStock_ID_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtStock_ID_Change()
  Changing

end sub
private sub cmbIsBrak_Click()
  on error resume next
  Changing

end sub
private sub txtpalet_id_Validate(cancel as boolean)
if txtpalet_id.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtpalet_id.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtpalet_id.SetFocus 
  elseif Val(txtpalet_id.text) &lt;&gt;clng(Val(txtpalet_id.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtpalet_id.SetFocus 
  end if
end if
end sub
Private Sub txtpalet_id_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtpalet_id_Change()
  Changing

end sub
private sub txtKorobBrutto_Validate(cancel as boolean)
if txtKorobBrutto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobBrutto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  elseif Val(txtKorobBrutto.text) &lt; -922337203685477.5808 or Val(txtKorobBrutto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobBrutto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobBrutto_Change()
  Changing

end sub
private sub txtKorobNetto_Validate(cancel as boolean)
if txtKorobNetto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobNetto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  elseif Val(txtKorobNetto.text) &lt; -922337203685477.5808 or Val(txtKorobNetto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobNetto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobNetto_Change()
  Changing

end sub
private sub cmbIsCalibrated_Click()
  on error resume next
  Changing
if cmbIsCalibrated.text =&quot;Да&quot; then 
   txtKorobBrutto.enabled = true
   txtKorobNetto.enabled = true
   txtPackageWeight.enabled = false
else
   txtKorobBrutto =0
   txtKorobBrutto.enabled = false
   txtKorobNetto = 0
   txtKorobNetto.enabled = false
   txtPackageWeight.enabled = true
end if

end sub
private sub txtSSCC_Change()
  Changing

end sub
private sub txtBarCode1_Change()
  Changing

end sub
private sub txtBarCode2_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(txtsequence.text)
if mIsOK then mIsOK = txtTheNumber.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(dtpMade_date.value)
if mIsOK then mIsOK = IsSet(dtpmade_date_to.value)
if mIsOK then mIsOK =IsSet(txtvetsved.text)
if mIsOK then mIsOK = IsSet(dtpexp_date.value)
if mIsOK then mIsOK = IsSet(txtCaliberQuantity.text)
if mIsOK then mIsOK = IsSet(txtPackageWeight.text)
if mIsOK then mIsOK =(cmbIsCalibrated.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
end if
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
end if
  on error resume next
txtvetsved = item.vetsved
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
end if
txtCaliberQuantity = item.CaliberQuantity
txtPalWeight = item.PalWeight
txtGoodWithPaletWeight = item.GoodWithPaletWeight
txtPackageWeight = item.PackageWeight
txtFullPackageWeight = item.FullPackageWeight
  on error resume next
txtBufferZonePlace = item.BufferZonePlace
txtStock_ID = item.Stock_ID
cmbIsBrak.Clear
cmbIsBrak.additem &quot;Да&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= -1
cmbIsBrak.additem &quot;Нет&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= 0
 For iii = 0 To cmbIsBrak.ListCount-1
  If Item.IsBrak = cmbIsBrak.ItemData(iii) Then
   cmbIsBrak.ListIndex = iii
   Exit For
  End If
 Next
txtpalet_id = item.palet_id
txtKorobBrutto = item.KorobBrutto
txtKorobNetto = item.KorobNetto
cmbIsCalibrated.Clear
cmbIsCalibrated.additem &quot;Да&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= -1
cmbIsCalibrated.additem &quot;Нет&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= 0
 For iii = 0 To cmbIsCalibrated.ListCount-1
  If Item.IsCalibrated = cmbIsCalibrated.ItemData(iii) Then
   cmbIsCalibrated.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtSSCC = item.SSCC
  on error resume next
txtBarCode1 = item.BarCode1
  on error resume next
txtBarCode2 = item.BarCode2
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.sequence = cdbl(txtsequence)
If txtTheNumber.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheNumber = Item.Application.FindRowObject(&quot;ITTPL_DEF&quot;,txtTheNumber.Tag)
Else
  Set item.TheNumber = Nothing
End If
If txtmade_country.Tag &lt;&gt; &quot;&quot; Then
  Set item.made_country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtmade_country.Tag)
Else
  Set item.made_country = Nothing
End If
If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
If txtKILL_NUMBER.Tag &lt;&gt; &quot;&quot; Then
  Set item.KILL_NUMBER = Item.Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,txtKILL_NUMBER.Tag)
Else
  Set item.KILL_NUMBER = Nothing
End If
item.VidOtruba = txtVidOtruba
If txtPartRef.Tag &lt;&gt; &quot;&quot; Then
  Set item.PartRef = Item.Application.FindRowObject(&quot;ITTD_PART&quot;,txtPartRef.Tag)
Else
  Set item.PartRef = Nothing
End If
  if  isnull(dtpMade_date) then
    item.Made_date = 0
  else
    item.Made_date = dtpMade_date.value
  end if
  if  isnull(dtpmade_date_to) then
    item.made_date_to = 0
  else
    item.made_date_to = dtpmade_date_to.value
  end if
item.vetsved = txtvetsved
  if  isnull(dtpexp_date) then
    item.exp_date = 0
  else
    item.exp_date = dtpexp_date.value
  end if
item.CaliberQuantity = cdbl(txtCaliberQuantity)
item.PalWeight = cdbl(txtPalWeight)
item.GoodWithPaletWeight = cdbl(txtGoodWithPaletWeight)
item.PackageWeight = cdbl(txtPackageWeight)
item.FullPackageWeight = cdbl(txtFullPackageWeight)
item.BufferZonePlace = txtBufferZonePlace
item.Stock_ID = cdbl(txtStock_ID)
 if cmbIsBrak.listindex&gt;=0 then
   item.IsBrak = cmbIsBrak.itemdata(cmbIsBrak.listindex)
 end if
item.palet_id = cdbl(txtpalet_id)
item.KorobBrutto = cdbl(txtKorobBrutto)
item.KorobNetto = cdbl(txtKorobNetto)
 if cmbIsCalibrated.listindex&gt;=0 then
   item.IsCalibrated = cmbIsCalibrated.itemdata(cmbIsCalibrated.listindex)
 end if
item.SSCC = txtSSCC
item.BarCode1 = txtBarCode1
item.BarCode2 = txtBarCode2
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_SRV" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSRV"/><Properties Name="Caption" PropValue="Услуга:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSRV"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSRV"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuantity"/><Properties Name="Caption" PropValue="Кличество:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Кличество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSRV_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSRV_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_SRV&quot;, id, brief) Then
          txtSRV.Tag = Left(id, 38)
          txtSRV = brief
        End If
end sub
private sub cmdSRV_MenuClick(ByVal sCaption As String)
          txtSRV.Tag = &quot;&quot;
          txtSRV = &quot;&quot;
End sub
private sub txtQuantity_Validate(cancel as boolean)
if txtQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  elseif Val(txtQuantity.text) &lt; -922337203685477.5808 or Val(txtQuantity.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuantity_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSRV.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtQuantity.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.SRV Is Nothing Then
  txtSRV.Tag = item.SRV.id
  txtSRV = item.SRV.brief
else
  txtSRV.Tag = &quot;&quot; 
  txtSRV = &quot;&quot; 
End If
 LoadBtnPictures cmdSRV,cmdSRV.tag
  cmdSRV.RemoveAllMenu
  cmdSRV.AddMenu &quot;Очистить&quot; 
txtQuantity = item.Quantity
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtSRV.Tag &lt;&gt; &quot;&quot; Then
  Set item.SRV = Item.Application.FindRowObject(&quot;ITTD_SRV&quot;,txtSRV.Tag)
Else
  Set item.SRV = Nothing
End If
item.Quantity = cdbl(txtQuantity)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_DEF" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQryCode"/><Properties Name="Caption" PropValue="Код заказа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQryCode"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Код заказа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdQryCode"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Код заказа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessDate"/><Properties Name="Caption" PropValue="Дата обработки заказа:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpProcessDate"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата обработки заказа"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Поставщик"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTN"/><Properties Name="Caption" PropValue="Номер ТТН:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTTN"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Номер ТТН"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTNDate"/><Properties Name="Caption" PropValue="Дата ТТН:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTTNDate"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата ТТН"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTranspNumber"/><Properties Name="Caption" PropValue="№ ТС:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTranspNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ ТС"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContainer"/><Properties Name="Caption" PropValue="№ прицепа \ контейнера:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContainer"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ прицепа \ контейнера"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampNumber"/><Properties Name="Caption" PropValue="Номер пломбы:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер пломбы"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampStatus"/><Properties Name="Caption" PropValue="Состояние пломбы:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampStatus"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Состояние пломбы"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrack_time_in"/><Properties Name="Caption" PropValue="Время прибытия машины:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTrack_time_in"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время прибытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltrack_time_out"/><Properties Name="Caption" PropValue="Время убытия машины:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtptrack_time_out"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время убытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltemp_in_track"/><Properties Name="Caption" PropValue="Температура:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txttemp_in_track"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Температура"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblThePartyRule"/><Properties Name="Caption" PropValue="Правиило формирования партии:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtThePartyRule"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdThePartyRule"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDQryCode as string 
  private mIDTheClient as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtQryCode_Change()
  if  not (OnInit) then 
If (txtQryCode.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtQryCode.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtQryCode.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtQryCode.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdTheClient_Click()
    end if
  Changing

  end if 
end sub
private sub cmdQryCode_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtQryCode.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtQryCode.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDQryCode = Mid(txtQryCode.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;QryCode;&quot; &amp; mIDQryCode, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtQryCode.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (item.application.manager.GetCustomObjects(&quot;cliFilter&quot;).name))
    txtQryCode.Tag = AddSQLRefIds(txtQryCode.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtQryCode.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtQryCode.Tag = res.item(&quot;xml&quot;).value
      If (txtQryCode.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtQryCode.Text = res.item(&quot;brief&quot;).value
        mIDQryCode = res.item(&quot;ID&quot;).value
        Call txtQryCode_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtTheClient_Change()
  if  not (OnInit) then 
If (txtTheClient.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheClient.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheClient.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheClient.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtQryCode.Tag, &quot;%TheClientID%&quot;) &gt; 0) then
    'Call cmdQryCode_Click()
    end if
    end if
  Changing

  end if 
end sub
private sub cmdTheClient_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheClient.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheClient = Mid(txtTheClient.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheClient;&quot; &amp; mIDTheClient, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheClient.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;QryCode&quot;, txtQryCode.Tag)
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheClient.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheClient.Tag = res.item(&quot;xml&quot;).value
      If (txtTheClient.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheClient.Text = res.item(&quot;brief&quot;).value
        mIDTheClient = res.item(&quot;ID&quot;).value
        Call txtTheClient_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub dtpProcessDate_Change()
  Changing

end sub
private sub txtSupplier_Change()
  Changing

end sub
private sub txtTTN_Change()
  Changing

end sub
private sub dtpTTNDate_Change()
  Changing

end sub
private sub txtTranspNumber_Change()
  Changing

end sub
private sub txtContainer_Change()
  Changing

end sub
private sub txtStampNumber_Change()
  Changing

end sub
private sub txtStampStatus_Change()
  Changing

end sub
private sub dtpTrack_time_in_Change()
  Changing

end sub
private sub dtptrack_time_out_Change()
  Changing

end sub
private sub txttemp_in_track_Validate(cancel as boolean)
if txttemp_in_track.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txttemp_in_track.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txttemp_in_track.SetFocus 
  elseif Val(txttemp_in_track.text) &lt; -922337203685477.5808 or Val(txttemp_in_track.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txttemp_in_track.SetFocus 
  end if
end if
end sub
Private Sub txttemp_in_track_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txttemp_in_track_Change()
  Changing

end sub
private sub txtThePartyRule_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdThePartyRule_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_RULE&quot;, id, brief) Then
          txtThePartyRule.Tag = Left(id, 38)
          txtThePartyRule = brief
        End If
end sub
private sub cmdThePartyRule_MenuClick(ByVal sCaption As String)
          txtThePartyRule.Tag = &quot;&quot;
          txtThePartyRule = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtQryCode.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(dtpProcessDate.value)
if mIsOK then mIsOK =IsSet(txtTTN.text)
if mIsOK then mIsOK = txtThePartyRule.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtQryCode.Text =&quot;&quot;
txtQryCode.Tag =&quot;&quot;
mIDQryCode =&quot;&quot;
' Разобрать XML
Dim XMLDocQryCode As New DOMDocument
On Error Resume Next
If (item.QryCode &lt;&gt; &quot;&quot;) Then
  Call XMLDocQryCode.loadXML(item.QryCode)
  If (Err.Number = 0 And XMLDocQryCode.parseError.errorCode = 0) Then
    Dim nodeQryCode As MSXML2.IXMLDOMNode
    txtQryCode.Tag = item.QryCode
    For Each nodeQryCode In XMLDocQryCode.childNodes.item(0).childNodes
      If (nodeQryCode.baseName = &quot;Brief&quot;) Then
       txtQryCode.Text = nodeQryCode.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDQryCode As String
    newIDQryCode = item.QryCode
    Dim XMLQryCodeID As String
    XMLQryCodeID = &quot;&lt;SQLData&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from RECEIVING_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDQryCode &amp; &quot;&lt;/ID&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsQryCode As New NamedValues
    Dim resQryCode As NamedValues
    Call parsQryCode.Add(&quot;xml&quot;, XMLQryCodeID)
    Set resQryCode = item.Application.Manager.GetSQLDataDialog(parsQryCode)
    If (Not resQryCode Is Nothing) Then
      Dim resStrQryCode As String
      resStrQryCode = resQryCode.item(&quot;RESULT&quot;).value
      If (resStrQryCode = &quot;OK&quot;) Then
        txtQryCode.Tag = Replace(resQryCode.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtQryCode.Text &lt;&gt; resQryCode.item(&quot;brief&quot;).value) Then
          mIDQryCode = newIDQryCode
          txtQryCode.Text = resQryCode.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.QryCode = vbNullString
    End If
  End If
Else
  Dim XMLQryCode As String
  XMLQryCode = &quot;&lt;SQLData&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from RECEIVING_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLQryCode = XMLQryCode &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;/SQLData&gt;&quot;
  txtQryCode.Tag = XMLQryCode
End if 
On Error GoTo 0
 LoadBtnPictures cmdQryCode,cmdQryCode.tag
  cmdQryCode.RemoveAllMenu
txtTheClient.Text =&quot;&quot;
txtTheClient.Tag =&quot;&quot;
mIDTheClient =&quot;&quot;
' Разобрать XML
Dim XMLDocTheClient As New DOMDocument
On Error Resume Next
If (item.TheClient &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheClient.loadXML(item.TheClient)
  If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
    Dim nodeTheClient As MSXML2.IXMLDOMNode
    txtTheClient.Tag = item.TheClient
    For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
      If (nodeTheClient.baseName = &quot;Brief&quot;) Then
       txtTheClient.Text = nodeTheClient.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheClient As String
    newIDTheClient = item.TheClient
    Dim XMLTheClientID As String
    XMLTheClientID = &quot;&lt;SQLData&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheClient &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;QryCodeID&gt;&quot; &amp; mIDQryCode &amp; &quot;&lt;/QryCodeID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheClient As New NamedValues
    Dim resTheClient As NamedValues
    Call parsTheClient.Add(&quot;xml&quot;, XMLTheClientID)
    Set resTheClient = item.Application.Manager.GetSQLDataDialog(parsTheClient)
    If (Not resTheClient Is Nothing) Then
      Dim resStrTheClient As String
      resStrTheClient = resTheClient.item(&quot;RESULT&quot;).value
      If (resStrTheClient = &quot;OK&quot;) Then
        txtTheClient.Tag = Replace(resTheClient.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheClient.Text &lt;&gt; resTheClient.item(&quot;brief&quot;).value) Then
          mIDTheClient = newIDTheClient
          txtTheClient.Text = resTheClient.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheClient = vbNullString
    End If
  End If
Else
  Dim XMLTheClient As String
  XMLTheClient = &quot;&lt;SQLData&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClient = XMLTheClient &amp; &quot;&lt;QryCodeID&gt;&quot; &amp; mIDQryCode &amp; &quot;&lt;/QryCodeID&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheClient.Tag = XMLTheClient
  Call cmdTheClient_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheClient,cmdTheClient.tag
  cmdTheClient.RemoveAllMenu
  cmdTheClient.Visible = false 
dtpProcessDate = date
if item.ProcessDate &lt;&gt; 0 then
 dtpProcessDate = item.ProcessDate
end if
  on error resume next
txtSupplier = item.Supplier
  on error resume next
txtTTN = item.TTN
dtpTTNDate = date
if item.TTNDate &lt;&gt; 0 then
 dtpTTNDate = item.TTNDate
else
 dtpTTNDate.value = null
end if
  on error resume next
txtTranspNumber = item.TranspNumber
  on error resume next
txtContainer = item.Container
  on error resume next
txtStampNumber = item.StampNumber
  on error resume next
txtStampStatus = item.StampStatus
dtpTrack_time_in = now
if item.Track_time_in &lt;&gt; 0 then
 dtpTrack_time_in = item.Track_time_in
else
 dtpTrack_time_in.value = null
end if
dtptrack_time_out = now
if item.track_time_out &lt;&gt; 0 then
 dtptrack_time_out = item.track_time_out
else
 dtptrack_time_out.value = null
end if
txttemp_in_track = item.temp_in_track
If Not item.ThePartyRule Is Nothing Then
  txtThePartyRule.Tag = item.ThePartyRule.id
  txtThePartyRule = item.ThePartyRule.brief
else
  txtThePartyRule.Tag = &quot;&quot; 
  txtThePartyRule = &quot;&quot; 
End If
 LoadBtnPictures cmdThePartyRule,cmdThePartyRule.tag
  cmdThePartyRule.RemoveAllMenu
  cmdThePartyRule.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;QryCode&quot;, txtQryCode.Tag)
txtQryCode.Tag = AddSQLRefIds(txtQryCode.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.QryCode = txtQryCode.Tag
item.TheClient = txtTheClient.Tag
  if  isnull(dtpProcessDate) then
    item.ProcessDate = 0
  else
    item.ProcessDate = dtpProcessDate.value
  end if
item.Supplier = txtSupplier
item.TTN = txtTTN
  if  isnull(dtpTTNDate) then
    item.TTNDate = 0
  else
    item.TTNDate = dtpTTNDate.value
  end if
item.TranspNumber = txtTranspNumber
item.Container = txtContainer
item.StampNumber = txtStampNumber
item.StampStatus = txtStampStatus
  if  isnull(dtpTrack_time_in) then
    item.Track_time_in = 0
  else
    item.Track_time_in = dtpTrack_time_in.value
  end if
  if  isnull(dtptrack_time_out) then
    item.track_time_out = 0
  else
    item.track_time_out = dtptrack_time_out.value
  end if
item.temp_in_track = cdbl(txttemp_in_track)
If txtThePartyRule.Tag &lt;&gt; &quot;&quot; Then
  Set item.ThePartyRule = Item.Application.FindRowObject(&quot;ITTD_RULE&quot;,txtThePartyRule.Tag)
Else
  Set item.ThePartyRule = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_EPL" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalWeight"/><Properties Name="Caption" PropValue="Вес палеты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPalWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Пустые поддоны к заказу
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTPL_DEF&quot;, id, brief) Then
          txtTheNumber.Tag = Left(id, 38)
          txtTheNumber = brief
        End If
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
          txtTheNumber.Tag = &quot;&quot;
          txtTheNumber = &quot;&quot;
End sub
private sub txtPalWeight_Validate(cancel as boolean)
if txtPalWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPalWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  elseif Val(txtPalWeight.text) &lt; -922337203685477.5808 or Val(txtPalWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPalWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPalWeight_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTheNumber.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtPalWeight.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
txtPalWeight = item.PalWeight
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtTheNumber.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheNumber = Item.Application.FindRowObject(&quot;ITTPL_DEF&quot;,txtTheNumber.Tag)
Else
  Set item.TheNumber = Nothing
End If
item.PalWeight = cdbl(txtPalWeight)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_QLINEread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№ П\П:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№ П\П"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLineAtQuery"/><Properties Name="Caption" PropValue="Строка в заказе:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLineAtQuery"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdLineAtQuery"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQRY_NUM"/><Properties Name="Caption" PropValue="По заказу КГ.:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQRY_NUM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdQRY_NUM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbledizm"/><Properties Name="Caption" PropValue="Ед. изм:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtedizm"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Ед. изм"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCurValue"/><Properties Name="Caption" PropValue="Факт КГ.:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCurValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Факт КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblarticul"/><Properties Name="Caption" PropValue="Артикул:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtarticul"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Артикул"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Дата производства По:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="Mask" PropValue="9999/999999"/><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства C:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата производства C"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес одной упаковки КГ.:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес одной упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCalibrated"/><Properties Name="Caption" PropValue="Калиброванный груз:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCalibrated"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Калиброванный груз"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCaliberWeight"/><Properties Name="Caption" PropValue="Вес калиброванной единицы НЕТТО:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCaliberWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес калиброванной единицы НЕТТО"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblgood_id"/><Properties Name="Caption" PropValue="Идентификатор товара:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtgood_id"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdgood_id"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="9150"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobBrutto"/><Properties Name="Caption" PropValue="Вес брутто короба:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobBrutto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес брутто короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobNetto"/><Properties Name="Caption" PropValue="Вес НЕТТО короба:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobNetto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес НЕТТО короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNavalom"/><Properties Name="Caption" PropValue="Груз навалом:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbNavalom"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Груз навалом"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDLineAtQuery as string 
  private mIDQRY_NUM as string 
  private mIDgood_id as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Change()
  Changing

end sub
private sub txtLineAtQuery_Change()
  if  not (OnInit) then 
If (txtLineAtQuery.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtLineAtQuery.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtLineAtQuery.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtLineAtQuery.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_id_Click()
    end if
  Changing

  end if 
end sub
private sub cmdLineAtQuery_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDLineAtQuery = Mid(txtLineAtQuery.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;LineAtQuery;&quot; &amp; mIDLineAtQuery, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtLineAtQuery.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (&quot; WHERE A.ORDER_ID=&quot; &amp; item.application.Manager.GetIDFromXMLField( item.application.ittin_def.item(1).QryCode )))
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_id&quot;, txtgood_id.Tag)
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtLineAtQuery.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtLineAtQuery.Tag = res.item(&quot;xml&quot;).value
      If (txtLineAtQuery.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtLineAtQuery.Text = res.item(&quot;brief&quot;).value
        mIDLineAtQuery = res.item(&quot;ID&quot;).value
        Call txtLineAtQuery_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtQRY_NUM_Change()
  if  not (OnInit) then 
If (txtQRY_NUM.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtQRY_NUM.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtQRY_NUM.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtQRY_NUM.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%QRY_NUMID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_id_Click()
    end if
  Changing

  end if 
end sub
private sub cmdQRY_NUM_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDQRY_NUM = Mid(txtQRY_NUM.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;QRY_NUM;&quot; &amp; mIDQRY_NUM, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtQRY_NUM.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_id&quot;, txtgood_id.Tag)
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtQRY_NUM.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtQRY_NUM.Tag = res.item(&quot;xml&quot;).value
      If (txtQRY_NUM.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtQRY_NUM.Text = res.item(&quot;brief&quot;).value
        mIDQRY_NUM = res.item(&quot;ID&quot;).value
        Call txtQRY_NUM_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtedizm_Change()
  Changing

end sub
private sub txtCurValue_Change()
  Changing

end sub
private sub txtarticul_Change()
  Changing

end sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub cmbIsCalibrated_Click()
  on error resume next
  Changing
if cmbIsCalibrated.text =&quot;Да&quot; then 
   txtKorobBrutto.enabled = true
   txtKorobNetto.enabled = true
   txtPackageWeight.enabled = false
else
   txtKorobBrutto =0
   txtKorobBrutto.enabled = false
   txtKorobNetto = 0
   txtKorobNetto.enabled = false
   txtPackageWeight.enabled = true
end if

end sub
private sub txtCaliberWeight_Change()
  Changing

end sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub txtgood_id_Change()
  if  not (OnInit) then 
If (txtgood_id.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtgood_id.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtgood_id.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtgood_id.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%good_idID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
  Changing

  end if 
end sub
private sub cmdgood_id_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtgood_id.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtgood_id.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDgood_id = Mid(txtgood_id.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;good_id;&quot; &amp; mIDgood_id, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtgood_id.Tag = Replace(txtgood_id.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtgood_id.Tag = Replace(txtgood_id.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtgood_id.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtgood_id.Tag = Replace(txtgood_id.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtgood_id.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtgood_id.Tag = res.item(&quot;xml&quot;).value
      If (txtgood_id.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtgood_id.Text = res.item(&quot;brief&quot;).value
        mIDgood_id = res.item(&quot;ID&quot;).value
        Call txtgood_id_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtKorobBrutto_Change()
  Changing

end sub
private sub txtKorobNetto_Change()
  Changing

end sub
private sub cmbNavalom_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
txtLineAtQuery.Text =&quot;&quot;
txtLineAtQuery.Tag =&quot;&quot;
mIDLineAtQuery =&quot;&quot;
' Разобрать XML
Dim XMLDocLineAtQuery As New DOMDocument
On Error Resume Next
If (item.LineAtQuery &lt;&gt; &quot;&quot;) Then
  Call XMLDocLineAtQuery.loadXML(item.LineAtQuery)
  If (Err.Number = 0 And XMLDocLineAtQuery.parseError.errorCode = 0) Then
    Dim nodeLineAtQuery As MSXML2.IXMLDOMNode
    txtLineAtQuery.Tag = item.LineAtQuery
    For Each nodeLineAtQuery In XMLDocLineAtQuery.childNodes.item(0).childNodes
      If (nodeLineAtQuery.baseName = &quot;Brief&quot;) Then
       txtLineAtQuery.Text = nodeLineAtQuery.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDLineAtQuery As String
    newIDLineAtQuery = item.LineAtQuery
    Dim XMLLineAtQueryID As String
    XMLLineAtQueryID = &quot;&lt;SQLData&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код Заказа], A.QTY_ORD [Количество], B.DESCRIPTION [Наименование]  from receiving_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDLineAtQuery &amp; &quot;&lt;/ID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;BriefFields&gt;Наименование&lt;/BriefFields&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsLineAtQuery As New NamedValues
    Dim resLineAtQuery As NamedValues
    Call parsLineAtQuery.Add(&quot;xml&quot;, XMLLineAtQueryID)
    Set resLineAtQuery = item.Application.Manager.GetSQLDataDialog(parsLineAtQuery)
    If (Not resLineAtQuery Is Nothing) Then
      Dim resStrLineAtQuery As String
      resStrLineAtQuery = resLineAtQuery.item(&quot;RESULT&quot;).value
      If (resStrLineAtQuery = &quot;OK&quot;) Then
        txtLineAtQuery.Tag = Replace(resLineAtQuery.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtLineAtQuery.Text &lt;&gt; resLineAtQuery.item(&quot;brief&quot;).value) Then
          mIDLineAtQuery = newIDLineAtQuery
          txtLineAtQuery.Text = resLineAtQuery.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.LineAtQuery = vbNullString
    End If
  End If
Else
  Dim XMLLineAtQuery As String
  XMLLineAtQuery = &quot;&lt;SQLData&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код Заказа], A.QTY_ORD [Количество], B.DESCRIPTION [Наименование]  from receiving_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;BriefFields&gt;Наименование&lt;/BriefFields&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;/SQLData&gt;&quot;
  txtLineAtQuery.Tag = XMLLineAtQuery
End if 
On Error GoTo 0
 LoadBtnPictures cmdLineAtQuery,cmdLineAtQuery.tag
  cmdLineAtQuery.RemoveAllMenu
  cmdLineAtQuery.AddMenu &quot;Очистить&quot; 
txtQRY_NUM.Text =&quot;&quot;
txtQRY_NUM.Tag =&quot;&quot;
mIDQRY_NUM =&quot;&quot;
' Разобрать XML
Dim XMLDocQRY_NUM As New DOMDocument
On Error Resume Next
If (item.QRY_NUM &lt;&gt; &quot;&quot;) Then
  Call XMLDocQRY_NUM.loadXML(item.QRY_NUM)
  If (Err.Number = 0 And XMLDocQRY_NUM.parseError.errorCode = 0) Then
    Dim nodeQRY_NUM As MSXML2.IXMLDOMNode
    txtQRY_NUM.Tag = item.QRY_NUM
    For Each nodeQRY_NUM In XMLDocQRY_NUM.childNodes.item(0).childNodes
      If (nodeQRY_NUM.baseName = &quot;Brief&quot;) Then
       txtQRY_NUM.Text = nodeQRY_NUM.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDQRY_NUM As String
    newIDQRY_NUM = item.QRY_NUM
    Dim XMLQRY_NUMID As String
    XMLQRY_NUMID = &quot;&lt;SQLData&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;query&gt;select  QTY_ORD from receiving_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDQRY_NUM &amp; &quot;&lt;/ID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsQRY_NUM As New NamedValues
    Dim resQRY_NUM As NamedValues
    Call parsQRY_NUM.Add(&quot;xml&quot;, XMLQRY_NUMID)
    Set resQRY_NUM = item.Application.Manager.GetSQLDataDialog(parsQRY_NUM)
    If (Not resQRY_NUM Is Nothing) Then
      Dim resStrQRY_NUM As String
      resStrQRY_NUM = resQRY_NUM.item(&quot;RESULT&quot;).value
      If (resStrQRY_NUM = &quot;OK&quot;) Then
        txtQRY_NUM.Tag = Replace(resQRY_NUM.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtQRY_NUM.Text &lt;&gt; resQRY_NUM.item(&quot;brief&quot;).value) Then
          mIDQRY_NUM = newIDQRY_NUM
          txtQRY_NUM.Text = resQRY_NUM.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.QRY_NUM = vbNullString
    End If
  End If
Else
  Dim XMLQRY_NUM As String
  XMLQRY_NUM = &quot;&lt;SQLData&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;query&gt;select  QTY_ORD from receiving_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;/SQLData&gt;&quot;
  txtQRY_NUM.Tag = XMLQRY_NUM
  Call cmdQRY_NUM_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdQRY_NUM,cmdQRY_NUM.tag
  cmdQRY_NUM.RemoveAllMenu
  cmdQRY_NUM.Visible = false 
  on error resume next
txtedizm = item.edizm
txtCurValue = item.CurValue
  on error resume next
txtarticul = item.articul
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
else
 dtpexp_date.value = null
end if
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
else
 dtpMade_date.value = null
end if
txtPackageWeight = item.PackageWeight
cmbIsCalibrated.Clear
cmbIsCalibrated.additem &quot;Да&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= -1
cmbIsCalibrated.additem &quot;Нет&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= 0
 For iii = 0 To cmbIsCalibrated.ListCount-1
  If Item.IsCalibrated = cmbIsCalibrated.ItemData(iii) Then
   cmbIsCalibrated.ListIndex = iii
   Exit For
  End If
 Next
txtCaliberWeight = item.CaliberWeight
txtFullPackageWeight = item.FullPackageWeight
txtgood_id.Text =&quot;&quot;
txtgood_id.Tag =&quot;&quot;
mIDgood_id =&quot;&quot;
' Разобрать XML
Dim XMLDocgood_id As New DOMDocument
On Error Resume Next
If (item.good_id &lt;&gt; &quot;&quot;) Then
  Call XMLDocgood_id.loadXML(item.good_id)
  If (Err.Number = 0 And XMLDocgood_id.parseError.errorCode = 0) Then
    Dim nodegood_id As MSXML2.IXMLDOMNode
    txtgood_id.Tag = item.good_id
    For Each nodegood_id In XMLDocgood_id.childNodes.item(0).childNodes
      If (nodegood_id.baseName = &quot;Brief&quot;) Then
       txtgood_id.Text = nodegood_id.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDgood_id As String
    newIDgood_id = item.good_id
    Dim XMLgood_idID As String
    XMLgood_idID = &quot;&lt;SQLData&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;query&gt;select  item_id from RECEIVING_LINE where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDgood_id &amp; &quot;&lt;/ID&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsgood_id As New NamedValues
    Dim resgood_id As NamedValues
    Call parsgood_id.Add(&quot;xml&quot;, XMLgood_idID)
    Set resgood_id = item.Application.Manager.GetSQLDataDialog(parsgood_id)
    If (Not resgood_id Is Nothing) Then
      Dim resStrgood_id As String
      resStrgood_id = resgood_id.item(&quot;RESULT&quot;).value
      If (resStrgood_id = &quot;OK&quot;) Then
        txtgood_id.Tag = Replace(resgood_id.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtgood_id.Text &lt;&gt; resgood_id.item(&quot;brief&quot;).value) Then
          mIDgood_id = newIDgood_id
          txtgood_id.Text = resgood_id.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.good_id = vbNullString
    End If
  End If
Else
  Dim XMLgood_id As String
  XMLgood_id = &quot;&lt;SQLData&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;query&gt;select  item_id from RECEIVING_LINE where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_id = XMLgood_id &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_id = XMLgood_id &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;/SQLData&gt;&quot;
  txtgood_id.Tag = XMLgood_id
  Call cmdgood_id_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdgood_id,cmdgood_id.tag
  cmdgood_id.RemoveAllMenu
  cmdgood_id.Visible = false 
txtKorobBrutto = item.KorobBrutto
txtKorobNetto = item.KorobNetto
cmbNavalom.Clear
cmbNavalom.additem &quot;Да&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= -1
cmbNavalom.additem &quot;Нет&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= 0
 For iii = 0 To cmbNavalom.ListCount-1
  If Item.Navalom = cmbNavalom.ItemData(iii) Then
   cmbNavalom.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_id&quot;, txtgood_id.Tag)
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_id&quot;, txtgood_id.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.LineAtQuery = txtLineAtQuery.Tag
item.QRY_NUM = txtQRY_NUM.Tag
item.good_id = txtgood_id.Tag
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_PALETread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№ П\П:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№ П\П"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства С:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата производства С"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Датиа производства По:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Датиа производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="Mask" PropValue="9999/999999"/><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCaliberQuantity"/><Properties Name="Caption" PropValue="Количство коробов:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCaliberQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количство коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalWeight"/><Properties Name="Caption" PropValue="Вес поддона КГ.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPalWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес поддона КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGoodWithPaletWeight"/><Properties Name="Caption" PropValue="Вес поддона с грузом КГ.:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtGoodWithPaletWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес поддона с грузом КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес упаковки КГ.:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBufferZonePlace"/><Properties Name="Caption" PropValue="Номер ячейки в буферной зоне:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBufferZonePlace"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер ячейки в буферной зоне"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStock_ID"/><Properties Name="Caption" PropValue="Идентификатор на складе:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStock_ID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Идентификатор на складе"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsBrak"/><Properties Name="Caption" PropValue="Брак:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsBrak"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Брак"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblpalet_id"/><Properties Name="Caption" PropValue="Идентификатор палеты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtpalet_id"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Идентификатор палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobBrutto"/><Properties Name="Caption" PropValue="Вес брутто короба:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobBrutto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес брутто короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobNetto"/><Properties Name="Caption" PropValue="Вес НЕТТО короба:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobNetto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес НЕТТО короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCalibrated"/><Properties Name="Caption" PropValue="Калиброванный груз:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCalibrated"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Калиброванный груз"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Change()
  Changing

end sub
private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub txtCaliberQuantity_Change()
  Changing

end sub
private sub txtPalWeight_Change()
  Changing

end sub
private sub txtGoodWithPaletWeight_Change()
  Changing

end sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub txtBufferZonePlace_Change()
  Changing

end sub
private sub txtStock_ID_Change()
  Changing

end sub
private sub cmbIsBrak_Click()
  on error resume next
  Changing

end sub
private sub txtpalet_id_Change()
  Changing

end sub
private sub txtKorobBrutto_Change()
  Changing

end sub
private sub txtKorobNetto_Change()
  Changing

end sub
private sub cmbIsCalibrated_Click()
  on error resume next
  Changing
if cmbIsCalibrated.text =&quot;Да&quot; then 
   txtKorobBrutto.enabled = true
   txtKorobNetto.enabled = true
   txtPackageWeight.enabled = false
else
   txtKorobBrutto =0
   txtKorobBrutto.enabled = false
   txtKorobNetto = 0
   txtKorobNetto.enabled = false
   txtPackageWeight.enabled = true
end if

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
else
 dtpMade_date.value = null
end if
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
else
 dtpexp_date.value = null
end if
txtCaliberQuantity = item.CaliberQuantity
txtPalWeight = item.PalWeight
txtGoodWithPaletWeight = item.GoodWithPaletWeight
txtPackageWeight = item.PackageWeight
txtFullPackageWeight = item.FullPackageWeight
  on error resume next
txtBufferZonePlace = item.BufferZonePlace
txtStock_ID = item.Stock_ID
cmbIsBrak.Clear
cmbIsBrak.additem &quot;Да&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= -1
cmbIsBrak.additem &quot;Нет&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= 0
 For iii = 0 To cmbIsBrak.ListCount-1
  If Item.IsBrak = cmbIsBrak.ItemData(iii) Then
   cmbIsBrak.ListIndex = iii
   Exit For
  End If
 Next
txtpalet_id = item.palet_id
txtKorobBrutto = item.KorobBrutto
txtKorobNetto = item.KorobNetto
cmbIsCalibrated.Clear
cmbIsCalibrated.additem &quot;Да&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= -1
cmbIsCalibrated.additem &quot;Нет&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= 0
 For iii = 0 To cmbIsCalibrated.ListCount-1
  If Item.IsCalibrated = cmbIsCalibrated.ItemData(iii) Then
   cmbIsCalibrated.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_SRVread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSRV"/><Properties Name="Caption" PropValue="Услуга:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSRV"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSRV"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuantity"/><Properties Name="Caption" PropValue="Кличество:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Кличество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSRV_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSRV_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdSRV_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtQuantity_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.SRV Is Nothing Then
  txtSRV.Tag = item.SRV.id
  txtSRV = item.SRV.brief
else
  txtSRV.Tag = &quot;&quot; 
  txtSRV = &quot;&quot; 
End If
 LoadBtnPictures cmdSRV,cmdSRV.tag
  cmdSRV.RemoveAllMenu
  cmdSRV.AddMenu &quot;Очистить&quot; 
txtQuantity = item.Quantity
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_DEFread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQryCode"/><Properties Name="Caption" PropValue="Код заказа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQryCode"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Код заказа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdQryCode"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Код заказа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessDate"/><Properties Name="Caption" PropValue="Дата обработки заказа:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpProcessDate"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата обработки заказа"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Поставщик"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTN"/><Properties Name="Caption" PropValue="Номер ТТН:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTTN"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Номер ТТН"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTNDate"/><Properties Name="Caption" PropValue="Дата ТТН:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTTNDate"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата ТТН"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTranspNumber"/><Properties Name="Caption" PropValue="№ ТС:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTranspNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ ТС"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContainer"/><Properties Name="Caption" PropValue="№ прицепа \ контейнера:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContainer"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ прицепа \ контейнера"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampNumber"/><Properties Name="Caption" PropValue="Номер пломбы:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер пломбы"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampStatus"/><Properties Name="Caption" PropValue="Состояние пломбы:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampStatus"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Состояние пломбы"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrack_time_in"/><Properties Name="Caption" PropValue="Время прибытия машины:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTrack_time_in"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Время прибытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltrack_time_out"/><Properties Name="Caption" PropValue="Время убытия машины:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtptrack_time_out"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Время убытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltemp_in_track"/><Properties Name="Caption" PropValue="Температура:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txttemp_in_track"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Температура"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblThePartyRule"/><Properties Name="Caption" PropValue="Правиило формирования партии:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtThePartyRule"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdThePartyRule"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDQryCode as string 
  private mIDTheClient as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtQryCode_Change()
  if  not (OnInit) then 
If (txtQryCode.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtQryCode.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtQryCode.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtQryCode.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdTheClient_Click()
    end if
  Changing

  end if 
end sub
private sub cmdQryCode_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtQryCode.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtQryCode.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDQryCode = Mid(txtQryCode.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;QryCode;&quot; &amp; mIDQryCode, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtQryCode.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (item.application.manager.GetCustomObjects(&quot;cliFilter&quot;).name))
    txtQryCode.Tag = AddSQLRefIds(txtQryCode.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtQryCode.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtQryCode.Tag = res.item(&quot;xml&quot;).value
      If (txtQryCode.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtQryCode.Text = res.item(&quot;brief&quot;).value
        mIDQryCode = res.item(&quot;ID&quot;).value
        Call txtQryCode_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtTheClient_Change()
  if  not (OnInit) then 
If (txtTheClient.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheClient.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheClient.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheClient.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtQryCode.Tag, &quot;%TheClientID%&quot;) &gt; 0) then
    'Call cmdQryCode_Click()
    end if
    end if
  Changing

  end if 
end sub
private sub cmdTheClient_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheClient.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheClient = Mid(txtTheClient.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheClient;&quot; &amp; mIDTheClient, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheClient.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;QryCode&quot;, txtQryCode.Tag)
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheClient.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheClient.Tag = res.item(&quot;xml&quot;).value
      If (txtTheClient.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheClient.Text = res.item(&quot;brief&quot;).value
        mIDTheClient = res.item(&quot;ID&quot;).value
        Call txtTheClient_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub dtpProcessDate_Change()
  Changing

end sub
private sub txtSupplier_Change()
  Changing

end sub
private sub txtTTN_Change()
  Changing

end sub
private sub dtpTTNDate_Change()
  Changing

end sub
private sub txtTranspNumber_Change()
  Changing

end sub
private sub txtContainer_Change()
  Changing

end sub
private sub txtStampNumber_Change()
  Changing

end sub
private sub txtStampStatus_Change()
  Changing

end sub
private sub dtpTrack_time_in_Change()
  Changing

end sub
private sub dtptrack_time_out_Change()
  Changing

end sub
private sub txttemp_in_track_Change()
  Changing

end sub
private sub txtThePartyRule_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdThePartyRule_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdThePartyRule_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtQryCode.Text =&quot;&quot;
txtQryCode.Tag =&quot;&quot;
mIDQryCode =&quot;&quot;
' Разобрать XML
Dim XMLDocQryCode As New DOMDocument
On Error Resume Next
If (item.QryCode &lt;&gt; &quot;&quot;) Then
  Call XMLDocQryCode.loadXML(item.QryCode)
  If (Err.Number = 0 And XMLDocQryCode.parseError.errorCode = 0) Then
    Dim nodeQryCode As MSXML2.IXMLDOMNode
    txtQryCode.Tag = item.QryCode
    For Each nodeQryCode In XMLDocQryCode.childNodes.item(0).childNodes
      If (nodeQryCode.baseName = &quot;Brief&quot;) Then
       txtQryCode.Text = nodeQryCode.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDQryCode As String
    newIDQryCode = item.QryCode
    Dim XMLQryCodeID As String
    XMLQryCodeID = &quot;&lt;SQLData&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from RECEIVING_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDQryCode &amp; &quot;&lt;/ID&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsQryCode As New NamedValues
    Dim resQryCode As NamedValues
    Call parsQryCode.Add(&quot;xml&quot;, XMLQryCodeID)
    Set resQryCode = item.Application.Manager.GetSQLDataDialog(parsQryCode)
    If (Not resQryCode Is Nothing) Then
      Dim resStrQryCode As String
      resStrQryCode = resQryCode.item(&quot;RESULT&quot;).value
      If (resStrQryCode = &quot;OK&quot;) Then
        txtQryCode.Tag = Replace(resQryCode.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtQryCode.Text &lt;&gt; resQryCode.item(&quot;brief&quot;).value) Then
          mIDQryCode = newIDQryCode
          txtQryCode.Text = resQryCode.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.QryCode = vbNullString
    End If
  End If
Else
  Dim XMLQryCode As String
  XMLQryCode = &quot;&lt;SQLData&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from RECEIVING_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLQryCode = XMLQryCode &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;/SQLData&gt;&quot;
  txtQryCode.Tag = XMLQryCode
End if 
On Error GoTo 0
 LoadBtnPictures cmdQryCode,cmdQryCode.tag
  cmdQryCode.RemoveAllMenu
  cmdQryCode.AddMenu &quot;Очистить&quot; 
txtTheClient.Text =&quot;&quot;
txtTheClient.Tag =&quot;&quot;
mIDTheClient =&quot;&quot;
' Разобрать XML
Dim XMLDocTheClient As New DOMDocument
On Error Resume Next
If (item.TheClient &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheClient.loadXML(item.TheClient)
  If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
    Dim nodeTheClient As MSXML2.IXMLDOMNode
    txtTheClient.Tag = item.TheClient
    For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
      If (nodeTheClient.baseName = &quot;Brief&quot;) Then
       txtTheClient.Text = nodeTheClient.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheClient As String
    newIDTheClient = item.TheClient
    Dim XMLTheClientID As String
    XMLTheClientID = &quot;&lt;SQLData&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheClient &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;QryCodeID&gt;&quot; &amp; mIDQryCode &amp; &quot;&lt;/QryCodeID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheClient As New NamedValues
    Dim resTheClient As NamedValues
    Call parsTheClient.Add(&quot;xml&quot;, XMLTheClientID)
    Set resTheClient = item.Application.Manager.GetSQLDataDialog(parsTheClient)
    If (Not resTheClient Is Nothing) Then
      Dim resStrTheClient As String
      resStrTheClient = resTheClient.item(&quot;RESULT&quot;).value
      If (resStrTheClient = &quot;OK&quot;) Then
        txtTheClient.Tag = Replace(resTheClient.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheClient.Text &lt;&gt; resTheClient.item(&quot;brief&quot;).value) Then
          mIDTheClient = newIDTheClient
          txtTheClient.Text = resTheClient.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheClient = vbNullString
    End If
  End If
Else
  Dim XMLTheClient As String
  XMLTheClient = &quot;&lt;SQLData&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClient = XMLTheClient &amp; &quot;&lt;QryCodeID&gt;&quot; &amp; mIDQryCode &amp; &quot;&lt;/QryCodeID&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheClient.Tag = XMLTheClient
  Call cmdTheClient_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheClient,cmdTheClient.tag
  cmdTheClient.RemoveAllMenu
  cmdTheClient.Visible = false 
dtpProcessDate = date
if item.ProcessDate &lt;&gt; 0 then
 dtpProcessDate = item.ProcessDate
else
 dtpProcessDate.value = null
end if
  on error resume next
txtSupplier = item.Supplier
  on error resume next
txtTTN = item.TTN
dtpTTNDate = date
if item.TTNDate &lt;&gt; 0 then
 dtpTTNDate = item.TTNDate
else
 dtpTTNDate.value = null
end if
  on error resume next
txtTranspNumber = item.TranspNumber
  on error resume next
txtContainer = item.Container
  on error resume next
txtStampNumber = item.StampNumber
  on error resume next
txtStampStatus = item.StampStatus
dtpTrack_time_in = now
if item.Track_time_in &lt;&gt; 0 then
 dtpTrack_time_in = item.Track_time_in
else
 dtpTrack_time_in.value = null
end if
dtptrack_time_out = now
if item.track_time_out &lt;&gt; 0 then
 dtptrack_time_out = item.track_time_out
else
 dtptrack_time_out.value = null
end if
txttemp_in_track = item.temp_in_track
If Not item.ThePartyRule Is Nothing Then
  txtThePartyRule.Tag = item.ThePartyRule.id
  txtThePartyRule = item.ThePartyRule.brief
else
  txtThePartyRule.Tag = &quot;&quot; 
  txtThePartyRule = &quot;&quot; 
End If
 LoadBtnPictures cmdThePartyRule,cmdThePartyRule.tag
  cmdThePartyRule.RemoveAllMenu
  cmdThePartyRule.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;QryCode&quot;, txtQryCode.Tag)
txtQryCode.Tag = AddSQLRefIds(txtQryCode.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.QryCode = txtQryCode.Tag
item.TheClient = txtTheClient.Tag
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_EPLread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalWeight"/><Properties Name="Caption" PropValue="Вес палеты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPalWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Пустые поддоны к заказу
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtPalWeight_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
txtPalWeight = item.PalWeight
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_QLINEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№ П\П:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№ П\П"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLineAtQuery"/><Properties Name="Caption" PropValue="Строка в заказе:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLineAtQuery"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdLineAtQuery"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQRY_NUM"/><Properties Name="Caption" PropValue="По заказу КГ.:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQRY_NUM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdQRY_NUM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbledizm"/><Properties Name="Caption" PropValue="Ед. изм:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtedizm"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Ед. изм"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCurValue"/><Properties Name="Caption" PropValue="Факт КГ.:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCurValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Факт КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblarticul"/><Properties Name="Caption" PropValue="Артикул:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtarticul"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Артикул"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Дата производства По:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="Mask" PropValue="9999/999999"/><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства C:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства C"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес одной упаковки КГ.:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес одной упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCalibrated"/><Properties Name="Caption" PropValue="Калиброванный груз:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCalibrated"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Калиброванный груз"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCaliberWeight"/><Properties Name="Caption" PropValue="Вес калиброванной единицы НЕТТО:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCaliberWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес калиброванной единицы НЕТТО"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobBrutto"/><Properties Name="Caption" PropValue="Вес брутто короба:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobBrutto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес брутто короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobNetto"/><Properties Name="Caption" PropValue="Вес НЕТТО короба:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobNetto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес НЕТТО короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNavalom"/><Properties Name="Caption" PropValue="Груз навалом:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbNavalom"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Груз навалом"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDLineAtQuery as string 
  private mIDQRY_NUM as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Change()
  Changing

end sub
private sub txtLineAtQuery_Change()
  if  not (OnInit) then 
If (txtLineAtQuery.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtLineAtQuery.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtLineAtQuery.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtLineAtQuery.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
  Changing

  end if 
end sub
private sub cmdLineAtQuery_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDLineAtQuery = Mid(txtLineAtQuery.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;LineAtQuery;&quot; &amp; mIDLineAtQuery, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtLineAtQuery.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (&quot; WHERE A.ORDER_ID=&quot; &amp; item.application.Manager.GetIDFromXMLField( item.application.ittin_def.item(1).QryCode )))
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtLineAtQuery.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtLineAtQuery.Tag = res.item(&quot;xml&quot;).value
      If (txtLineAtQuery.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtLineAtQuery.Text = res.item(&quot;brief&quot;).value
        mIDLineAtQuery = res.item(&quot;ID&quot;).value
        Call txtLineAtQuery_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtQRY_NUM_Change()
  if  not (OnInit) then 
If (txtQRY_NUM.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtQRY_NUM.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtQRY_NUM.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtQRY_NUM.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%QRY_NUMID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
  Changing

  end if 
end sub
private sub cmdQRY_NUM_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDQRY_NUM = Mid(txtQRY_NUM.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;QRY_NUM;&quot; &amp; mIDQRY_NUM, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtQRY_NUM.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtQRY_NUM.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtQRY_NUM.Tag = res.item(&quot;xml&quot;).value
      If (txtQRY_NUM.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtQRY_NUM.Text = res.item(&quot;brief&quot;).value
        mIDQRY_NUM = res.item(&quot;ID&quot;).value
        Call txtQRY_NUM_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtedizm_Change()
  Changing

end sub
private sub txtCurValue_Change()
  Changing

end sub
private sub txtarticul_Change()
  Changing

end sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief,,,&quot;ITTD_COUNTRY_TheSupplier like '%&quot; &amp; Item.Application.ITTIN_DEF.Item(1).Supplier &amp; &quot;%'&quot;) Then
          txtmade_country.Tag = Left(id, 38)
          txtmade_country = brief
        End If
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
          txtmade_country.Tag = &quot;&quot;
          txtmade_country = &quot;&quot;
End sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief,,,&quot;ITTD_FACTORY_Country_ID='&quot; &amp; txtmade_country.tag &amp; &quot;'&quot;) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_KILLPLACE&quot;, id, brief,,,&quot;ITTD_KILLPLACE_Factory_ID='&quot; &amp; txtFactory.tag &amp; &quot;'&quot;) Then
          txtKILL_NUMBER.Tag = Left(id, 38)
          txtKILL_NUMBER = brief
        End If
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
          txtKILL_NUMBER.Tag = &quot;&quot;
          txtKILL_NUMBER = &quot;&quot;
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_PART&quot;, id, brief,,,&quot;ITTD_PART_TheGood ='&quot; &amp; txtLineAtQuery.text &amp; &quot;'&quot;) Then
          txtPartRef.Tag = Left(id, 38)
          txtPartRef = brief
        End If
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
          txtPartRef.Tag = &quot;&quot;
          txtPartRef = &quot;&quot;
End sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub txtPackageWeight_Validate(cancel as boolean)
if txtPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  elseif Val(txtPackageWeight.text) &lt; -922337203685477.5808 or Val(txtPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub cmbIsCalibrated_Click()
  on error resume next
  Changing
if cmbIsCalibrated.text =&quot;Да&quot; then 
   txtKorobBrutto.enabled = true
   txtKorobNetto.enabled = true
   txtPackageWeight.enabled = false
else
   txtKorobBrutto =0
   txtKorobBrutto.enabled = false
   txtKorobNetto = 0
   txtKorobNetto.enabled = false
   txtPackageWeight.enabled = true
end if

end sub
private sub txtCaliberWeight_Validate(cancel as boolean)
if txtCaliberWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCaliberWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberWeight.SetFocus 
  elseif Val(txtCaliberWeight.text) &lt; -922337203685477.5808 or Val(txtCaliberWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberWeight.SetFocus 
  end if
end if
end sub
Private Sub txtCaliberWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCaliberWeight_Change()
  Changing

end sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub txtKorobBrutto_Validate(cancel as boolean)
if txtKorobBrutto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobBrutto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  elseif Val(txtKorobBrutto.text) &lt; -922337203685477.5808 or Val(txtKorobBrutto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobBrutto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobBrutto_Change()
  Changing

end sub
private sub txtKorobNetto_Validate(cancel as boolean)
if txtKorobNetto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobNetto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  elseif Val(txtKorobNetto.text) &lt; -922337203685477.5808 or Val(txtKorobNetto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobNetto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobNetto_Change()
  Changing

end sub
private sub cmbNavalom_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
txtLineAtQuery.Text =&quot;&quot;
txtLineAtQuery.Tag =&quot;&quot;
mIDLineAtQuery =&quot;&quot;
' Разобрать XML
Dim XMLDocLineAtQuery As New DOMDocument
On Error Resume Next
If (item.LineAtQuery &lt;&gt; &quot;&quot;) Then
  Call XMLDocLineAtQuery.loadXML(item.LineAtQuery)
  If (Err.Number = 0 And XMLDocLineAtQuery.parseError.errorCode = 0) Then
    Dim nodeLineAtQuery As MSXML2.IXMLDOMNode
    txtLineAtQuery.Tag = item.LineAtQuery
    For Each nodeLineAtQuery In XMLDocLineAtQuery.childNodes.item(0).childNodes
      If (nodeLineAtQuery.baseName = &quot;Brief&quot;) Then
       txtLineAtQuery.Text = nodeLineAtQuery.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDLineAtQuery As String
    newIDLineAtQuery = item.LineAtQuery
    Dim XMLLineAtQueryID As String
    XMLLineAtQueryID = &quot;&lt;SQLData&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код Заказа], A.QTY_ORD [Количество], B.DESCRIPTION [Наименование]  from receiving_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDLineAtQuery &amp; &quot;&lt;/ID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;BriefFields&gt;Наименование&lt;/BriefFields&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsLineAtQuery As New NamedValues
    Dim resLineAtQuery As NamedValues
    Call parsLineAtQuery.Add(&quot;xml&quot;, XMLLineAtQueryID)
    Set resLineAtQuery = item.Application.Manager.GetSQLDataDialog(parsLineAtQuery)
    If (Not resLineAtQuery Is Nothing) Then
      Dim resStrLineAtQuery As String
      resStrLineAtQuery = resLineAtQuery.item(&quot;RESULT&quot;).value
      If (resStrLineAtQuery = &quot;OK&quot;) Then
        txtLineAtQuery.Tag = Replace(resLineAtQuery.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtLineAtQuery.Text &lt;&gt; resLineAtQuery.item(&quot;brief&quot;).value) Then
          mIDLineAtQuery = newIDLineAtQuery
          txtLineAtQuery.Text = resLineAtQuery.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.LineAtQuery = vbNullString
    End If
  End If
Else
  Dim XMLLineAtQuery As String
  XMLLineAtQuery = &quot;&lt;SQLData&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код Заказа], A.QTY_ORD [Количество], B.DESCRIPTION [Наименование]  from receiving_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;BriefFields&gt;Наименование&lt;/BriefFields&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;/SQLData&gt;&quot;
  txtLineAtQuery.Tag = XMLLineAtQuery
End if 
On Error GoTo 0
 LoadBtnPictures cmdLineAtQuery,cmdLineAtQuery.tag
  cmdLineAtQuery.RemoveAllMenu
  cmdLineAtQuery.AddMenu &quot;Очистить&quot; 
txtQRY_NUM.Text =&quot;&quot;
txtQRY_NUM.Tag =&quot;&quot;
mIDQRY_NUM =&quot;&quot;
' Разобрать XML
Dim XMLDocQRY_NUM As New DOMDocument
On Error Resume Next
If (item.QRY_NUM &lt;&gt; &quot;&quot;) Then
  Call XMLDocQRY_NUM.loadXML(item.QRY_NUM)
  If (Err.Number = 0 And XMLDocQRY_NUM.parseError.errorCode = 0) Then
    Dim nodeQRY_NUM As MSXML2.IXMLDOMNode
    txtQRY_NUM.Tag = item.QRY_NUM
    For Each nodeQRY_NUM In XMLDocQRY_NUM.childNodes.item(0).childNodes
      If (nodeQRY_NUM.baseName = &quot;Brief&quot;) Then
       txtQRY_NUM.Text = nodeQRY_NUM.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDQRY_NUM As String
    newIDQRY_NUM = item.QRY_NUM
    Dim XMLQRY_NUMID As String
    XMLQRY_NUMID = &quot;&lt;SQLData&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;query&gt;select  QTY_ORD from receiving_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDQRY_NUM &amp; &quot;&lt;/ID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsQRY_NUM As New NamedValues
    Dim resQRY_NUM As NamedValues
    Call parsQRY_NUM.Add(&quot;xml&quot;, XMLQRY_NUMID)
    Set resQRY_NUM = item.Application.Manager.GetSQLDataDialog(parsQRY_NUM)
    If (Not resQRY_NUM Is Nothing) Then
      Dim resStrQRY_NUM As String
      resStrQRY_NUM = resQRY_NUM.item(&quot;RESULT&quot;).value
      If (resStrQRY_NUM = &quot;OK&quot;) Then
        txtQRY_NUM.Tag = Replace(resQRY_NUM.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtQRY_NUM.Text &lt;&gt; resQRY_NUM.item(&quot;brief&quot;).value) Then
          mIDQRY_NUM = newIDQRY_NUM
          txtQRY_NUM.Text = resQRY_NUM.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.QRY_NUM = vbNullString
    End If
  End If
Else
  Dim XMLQRY_NUM As String
  XMLQRY_NUM = &quot;&lt;SQLData&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;query&gt;select  QTY_ORD from receiving_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;/SQLData&gt;&quot;
  txtQRY_NUM.Tag = XMLQRY_NUM
  Call cmdQRY_NUM_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdQRY_NUM,cmdQRY_NUM.tag
  cmdQRY_NUM.RemoveAllMenu
  cmdQRY_NUM.Visible = false 
  on error resume next
txtedizm = item.edizm
txtCurValue = item.CurValue
  on error resume next
txtarticul = item.articul
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
else
 dtpexp_date.value = null
end if
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
else
 dtpMade_date.value = null
end if
txtPackageWeight = item.PackageWeight
cmbIsCalibrated.Clear
cmbIsCalibrated.additem &quot;Да&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= -1
cmbIsCalibrated.additem &quot;Нет&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= 0
 For iii = 0 To cmbIsCalibrated.ListCount-1
  If Item.IsCalibrated = cmbIsCalibrated.ItemData(iii) Then
   cmbIsCalibrated.ListIndex = iii
   Exit For
  End If
 Next
txtCaliberWeight = item.CaliberWeight
txtFullPackageWeight = item.FullPackageWeight
txtKorobBrutto = item.KorobBrutto
txtKorobNetto = item.KorobNetto
cmbNavalom.Clear
cmbNavalom.additem &quot;Да&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= -1
cmbNavalom.additem &quot;Нет&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= 0
 For iii = 0 To cmbNavalom.ListCount-1
  If Item.Navalom = cmbNavalom.ItemData(iii) Then
   cmbNavalom.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.LineAtQuery = txtLineAtQuery.Tag
item.QRY_NUM = txtQRY_NUM.Tag
If txtmade_country.Tag &lt;&gt; &quot;&quot; Then
  Set item.made_country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtmade_country.Tag)
Else
  Set item.made_country = Nothing
End If
  if  isnull(dtpmade_date_to) then
    item.made_date_to = 0
  else
    item.made_date_to = dtpmade_date_to.value
  end if
item.vetsved = txtvetsved
If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
If txtKILL_NUMBER.Tag &lt;&gt; &quot;&quot; Then
  Set item.KILL_NUMBER = Item.Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,txtKILL_NUMBER.Tag)
Else
  Set item.KILL_NUMBER = Nothing
End If
item.VidOtruba = txtVidOtruba
If txtPartRef.Tag &lt;&gt; &quot;&quot; Then
  Set item.PartRef = Item.Application.FindRowObject(&quot;ITTD_PART&quot;,txtPartRef.Tag)
Else
  Set item.PartRef = Nothing
End If
  if  isnull(dtpexp_date) then
    item.exp_date = 0
  else
    item.exp_date = dtpexp_date.value
  end if
  if  isnull(dtpMade_date) then
    item.Made_date = 0
  else
    item.Made_date = dtpMade_date.value
  end if
item.PackageWeight = cdbl(txtPackageWeight)
 if cmbIsCalibrated.listindex&gt;=0 then
   item.IsCalibrated = cmbIsCalibrated.itemdata(cmbIsCalibrated.listindex)
 end if
item.CaliberWeight = cdbl(txtCaliberWeight)
item.KorobBrutto = cdbl(txtKorobBrutto)
item.KorobNetto = cdbl(txtKorobNetto)
 if cmbNavalom.listindex&gt;=0 then
   item.Navalom = cmbNavalom.itemdata(cmbNavalom.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_PALETmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№ П\П:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№ П\П"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства С:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства С"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Датиа производства По:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Датиа производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="Mask" PropValue="9999/999999"/><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCaliberQuantity"/><Properties Name="Caption" PropValue="Количство коробов:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCaliberQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количство коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalWeight"/><Properties Name="Caption" PropValue="Вес поддона КГ.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPalWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес поддона КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGoodWithPaletWeight"/><Properties Name="Caption" PropValue="Вес поддона с грузом КГ.:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtGoodWithPaletWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес поддона с грузом КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес упаковки КГ.:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBufferZonePlace"/><Properties Name="Caption" PropValue="Номер ячейки в буферной зоне:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBufferZonePlace"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер ячейки в буферной зоне"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsBrak"/><Properties Name="Caption" PropValue="Брак:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsBrak"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Брак"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobBrutto"/><Properties Name="Caption" PropValue="Вес брутто короба:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobBrutto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес брутто короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobNetto"/><Properties Name="Caption" PropValue="Вес НЕТТО короба:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobNetto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес НЕТТО короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCalibrated"/><Properties Name="Caption" PropValue="Калиброванный груз:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCalibrated"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Калиброванный груз"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Change()
  Changing

end sub
private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief,,,&quot;ITTD_COUNTRY_TheSupplier like '%&quot; &amp; Item.Application.ITTIN_DEF.Item(1).Supplier &amp; &quot;%'&quot;) Then
          txtmade_country.Tag = Left(id, 38)
          txtmade_country = brief
        End If
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
          txtmade_country.Tag = &quot;&quot;
          txtmade_country = &quot;&quot;
End sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_KILLPLACE&quot;, id, brief) Then
          txtKILL_NUMBER.Tag = Left(id, 38)
          txtKILL_NUMBER = brief
        End If
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
          txtKILL_NUMBER.Tag = &quot;&quot;
          txtKILL_NUMBER = &quot;&quot;
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_PART&quot;, id, brief) Then
          txtPartRef.Tag = Left(id, 38)
          txtPartRef = brief
        End If
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
          txtPartRef.Tag = &quot;&quot;
          txtPartRef = &quot;&quot;
End sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub txtCaliberQuantity_Validate(cancel as boolean)
if txtCaliberQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCaliberQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberQuantity.SetFocus 
  elseif Val(txtCaliberQuantity.text) &lt;&gt;clng(Val(txtCaliberQuantity.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtCaliberQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCaliberQuantity_Change()
  Changing

end sub
private sub txtPalWeight_Change()
  Changing

end sub
private sub txtGoodWithPaletWeight_Change()
  Changing

end sub
private sub txtPackageWeight_Validate(cancel as boolean)
if txtPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  elseif Val(txtPackageWeight.text) &lt; -922337203685477.5808 or Val(txtPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub txtBufferZonePlace_Change()
  Changing

end sub
private sub cmbIsBrak_Click()
  on error resume next
  Changing

end sub
private sub txtKorobBrutto_Validate(cancel as boolean)
if txtKorobBrutto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobBrutto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  elseif Val(txtKorobBrutto.text) &lt; -922337203685477.5808 or Val(txtKorobBrutto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobBrutto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobBrutto_Change()
  Changing

end sub
private sub txtKorobNetto_Validate(cancel as boolean)
if txtKorobNetto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobNetto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  elseif Val(txtKorobNetto.text) &lt; -922337203685477.5808 or Val(txtKorobNetto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobNetto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobNetto_Change()
  Changing

end sub
private sub cmbIsCalibrated_Click()
  on error resume next
  Changing
if cmbIsCalibrated.text =&quot;Да&quot; then 
   txtKorobBrutto.enabled = true
   txtKorobNetto.enabled = true
   txtPackageWeight.enabled = false
else
   txtKorobBrutto =0
   txtKorobBrutto.enabled = false
   txtKorobNetto = 0
   txtKorobNetto.enabled = false
   txtPackageWeight.enabled = true
end if

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
else
 dtpMade_date.value = null
end if
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
else
 dtpexp_date.value = null
end if
txtCaliberQuantity = item.CaliberQuantity
txtPalWeight = item.PalWeight
txtGoodWithPaletWeight = item.GoodWithPaletWeight
txtPackageWeight = item.PackageWeight
txtFullPackageWeight = item.FullPackageWeight
  on error resume next
txtBufferZonePlace = item.BufferZonePlace
cmbIsBrak.Clear
cmbIsBrak.additem &quot;Да&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= -1
cmbIsBrak.additem &quot;Нет&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= 0
 For iii = 0 To cmbIsBrak.ListCount-1
  If Item.IsBrak = cmbIsBrak.ItemData(iii) Then
   cmbIsBrak.ListIndex = iii
   Exit For
  End If
 Next
txtKorobBrutto = item.KorobBrutto
txtKorobNetto = item.KorobNetto
cmbIsCalibrated.Clear
cmbIsCalibrated.additem &quot;Да&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= -1
cmbIsCalibrated.additem &quot;Нет&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= 0
 For iii = 0 To cmbIsCalibrated.ListCount-1
  If Item.IsCalibrated = cmbIsCalibrated.ItemData(iii) Then
   cmbIsCalibrated.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtmade_country.Tag &lt;&gt; &quot;&quot; Then
  Set item.made_country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtmade_country.Tag)
Else
  Set item.made_country = Nothing
End If
If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
If txtKILL_NUMBER.Tag &lt;&gt; &quot;&quot; Then
  Set item.KILL_NUMBER = Item.Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,txtKILL_NUMBER.Tag)
Else
  Set item.KILL_NUMBER = Nothing
End If
item.VidOtruba = txtVidOtruba
If txtPartRef.Tag &lt;&gt; &quot;&quot; Then
  Set item.PartRef = Item.Application.FindRowObject(&quot;ITTD_PART&quot;,txtPartRef.Tag)
Else
  Set item.PartRef = Nothing
End If
  if  isnull(dtpMade_date) then
    item.Made_date = 0
  else
    item.Made_date = dtpMade_date.value
  end if
  if  isnull(dtpmade_date_to) then
    item.made_date_to = 0
  else
    item.made_date_to = dtpmade_date_to.value
  end if
item.vetsved = txtvetsved
  if  isnull(dtpexp_date) then
    item.exp_date = 0
  else
    item.exp_date = dtpexp_date.value
  end if
item.CaliberQuantity = cdbl(txtCaliberQuantity)
item.PackageWeight = cdbl(txtPackageWeight)
 if cmbIsBrak.listindex&gt;=0 then
   item.IsBrak = cmbIsBrak.itemdata(cmbIsBrak.listindex)
 end if
item.KorobBrutto = cdbl(txtKorobBrutto)
item.KorobNetto = cdbl(txtKorobNetto)
 if cmbIsCalibrated.listindex&gt;=0 then
   item.IsCalibrated = cmbIsCalibrated.itemdata(cmbIsCalibrated.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_SRVmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSRV"/><Properties Name="Caption" PropValue="Услуга:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSRV"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSRV"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuantity"/><Properties Name="Caption" PropValue="Кличество:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Кличество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSRV_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSRV_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_SRV&quot;, id, brief) Then
          txtSRV.Tag = Left(id, 38)
          txtSRV = brief
        End If
end sub
private sub cmdSRV_MenuClick(ByVal sCaption As String)
          txtSRV.Tag = &quot;&quot;
          txtSRV = &quot;&quot;
End sub
private sub txtQuantity_Validate(cancel as boolean)
if txtQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  elseif Val(txtQuantity.text) &lt; -922337203685477.5808 or Val(txtQuantity.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuantity_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.SRV Is Nothing Then
  txtSRV.Tag = item.SRV.id
  txtSRV = item.SRV.brief
else
  txtSRV.Tag = &quot;&quot; 
  txtSRV = &quot;&quot; 
End If
 LoadBtnPictures cmdSRV,cmdSRV.tag
  cmdSRV.RemoveAllMenu
  cmdSRV.AddMenu &quot;Очистить&quot; 
txtQuantity = item.Quantity
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtSRV.Tag &lt;&gt; &quot;&quot; Then
  Set item.SRV = Item.Application.FindRowObject(&quot;ITTD_SRV&quot;,txtSRV.Tag)
Else
  Set item.SRV = Nothing
End If
item.Quantity = cdbl(txtQuantity)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_DEFmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQryCode"/><Properties Name="Caption" PropValue="Код заказа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQryCode"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Код заказа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdQryCode"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Код заказа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessDate"/><Properties Name="Caption" PropValue="Дата обработки заказа:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpProcessDate"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Дата обработки заказа"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Поставщик"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTN"/><Properties Name="Caption" PropValue="Номер ТТН:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTTN"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Номер ТТН"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTNDate"/><Properties Name="Caption" PropValue="Дата ТТН:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTTNDate"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата ТТН"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTranspNumber"/><Properties Name="Caption" PropValue="№ ТС:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTranspNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ ТС"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContainer"/><Properties Name="Caption" PropValue="№ прицепа \ контейнера:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContainer"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ прицепа \ контейнера"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampNumber"/><Properties Name="Caption" PropValue="Номер пломбы:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер пломбы"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampStatus"/><Properties Name="Caption" PropValue="Состояние пломбы:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampStatus"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Состояние пломбы"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrack_time_in"/><Properties Name="Caption" PropValue="Время прибытия машины:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTrack_time_in"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время прибытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltrack_time_out"/><Properties Name="Caption" PropValue="Время убытия машины:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtptrack_time_out"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время убытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltemp_in_track"/><Properties Name="Caption" PropValue="Температура:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txttemp_in_track"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Температура"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblThePartyRule"/><Properties Name="Caption" PropValue="Правиило формирования партии:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtThePartyRule"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdThePartyRule"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDQryCode as string 
  private mIDTheClient as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtQryCode_Change()
  if  not (OnInit) then 
If (txtQryCode.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtQryCode.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtQryCode.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtQryCode.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdTheClient_Click()
    end if
  Changing

  end if 
end sub
private sub cmdQryCode_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtQryCode.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtQryCode.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDQryCode = Mid(txtQryCode.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;QryCode;&quot; &amp; mIDQryCode, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtQryCode.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (item.application.manager.GetCustomObjects(&quot;cliFilter&quot;).name))
    txtQryCode.Tag = AddSQLRefIds(txtQryCode.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtQryCode.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtQryCode.Tag = res.item(&quot;xml&quot;).value
      If (txtQryCode.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtQryCode.Text = res.item(&quot;brief&quot;).value
        mIDQryCode = res.item(&quot;ID&quot;).value
        Call txtQryCode_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtTheClient_Change()
  if  not (OnInit) then 
If (txtTheClient.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheClient.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheClient.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheClient.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtQryCode.Tag, &quot;%TheClientID%&quot;) &gt; 0) then
    'Call cmdQryCode_Click()
    end if
    end if
  Changing

  end if 
end sub
private sub cmdTheClient_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheClient.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheClient = Mid(txtTheClient.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheClient;&quot; &amp; mIDTheClient, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheClient.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;QryCode&quot;, txtQryCode.Tag)
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheClient.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheClient.Tag = res.item(&quot;xml&quot;).value
      If (txtTheClient.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheClient.Text = res.item(&quot;brief&quot;).value
        mIDTheClient = res.item(&quot;ID&quot;).value
        Call txtTheClient_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub dtpProcessDate_Change()
  Changing

end sub
private sub txtSupplier_Change()
  Changing

end sub
private sub txtTTN_Change()
  Changing

end sub
private sub dtpTTNDate_Change()
  Changing

end sub
private sub txtTranspNumber_Change()
  Changing

end sub
private sub txtContainer_Change()
  Changing

end sub
private sub txtStampNumber_Change()
  Changing

end sub
private sub txtStampStatus_Change()
  Changing

end sub
private sub dtpTrack_time_in_Change()
  Changing

end sub
private sub dtptrack_time_out_Change()
  Changing

end sub
private sub txttemp_in_track_Validate(cancel as boolean)
if txttemp_in_track.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txttemp_in_track.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txttemp_in_track.SetFocus 
  elseif Val(txttemp_in_track.text) &lt; -922337203685477.5808 or Val(txttemp_in_track.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txttemp_in_track.SetFocus 
  end if
end if
end sub
Private Sub txttemp_in_track_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txttemp_in_track_Change()
  Changing

end sub
private sub txtThePartyRule_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdThePartyRule_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_RULE&quot;, id, brief) Then
          txtThePartyRule.Tag = Left(id, 38)
          txtThePartyRule = brief
        End If
end sub
private sub cmdThePartyRule_MenuClick(ByVal sCaption As String)
          txtThePartyRule.Tag = &quot;&quot;
          txtThePartyRule = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtQryCode.Text =&quot;&quot;
txtQryCode.Tag =&quot;&quot;
mIDQryCode =&quot;&quot;
' Разобрать XML
Dim XMLDocQryCode As New DOMDocument
On Error Resume Next
If (item.QryCode &lt;&gt; &quot;&quot;) Then
  Call XMLDocQryCode.loadXML(item.QryCode)
  If (Err.Number = 0 And XMLDocQryCode.parseError.errorCode = 0) Then
    Dim nodeQryCode As MSXML2.IXMLDOMNode
    txtQryCode.Tag = item.QryCode
    For Each nodeQryCode In XMLDocQryCode.childNodes.item(0).childNodes
      If (nodeQryCode.baseName = &quot;Brief&quot;) Then
       txtQryCode.Text = nodeQryCode.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDQryCode As String
    newIDQryCode = item.QryCode
    Dim XMLQryCodeID As String
    XMLQryCodeID = &quot;&lt;SQLData&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from RECEIVING_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDQryCode &amp; &quot;&lt;/ID&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsQryCode As New NamedValues
    Dim resQryCode As NamedValues
    Call parsQryCode.Add(&quot;xml&quot;, XMLQryCodeID)
    Set resQryCode = item.Application.Manager.GetSQLDataDialog(parsQryCode)
    If (Not resQryCode Is Nothing) Then
      Dim resStrQryCode As String
      resStrQryCode = resQryCode.item(&quot;RESULT&quot;).value
      If (resStrQryCode = &quot;OK&quot;) Then
        txtQryCode.Tag = Replace(resQryCode.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtQryCode.Text &lt;&gt; resQryCode.item(&quot;brief&quot;).value) Then
          mIDQryCode = newIDQryCode
          txtQryCode.Text = resQryCode.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.QryCode = vbNullString
    End If
  End If
Else
  Dim XMLQryCode As String
  XMLQryCode = &quot;&lt;SQLData&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from RECEIVING_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLQryCode = XMLQryCode &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;/SQLData&gt;&quot;
  txtQryCode.Tag = XMLQryCode
End if 
On Error GoTo 0
 LoadBtnPictures cmdQryCode,cmdQryCode.tag
  cmdQryCode.RemoveAllMenu
  cmdQryCode.AddMenu &quot;Очистить&quot; 
txtTheClient.Text =&quot;&quot;
txtTheClient.Tag =&quot;&quot;
mIDTheClient =&quot;&quot;
' Разобрать XML
Dim XMLDocTheClient As New DOMDocument
On Error Resume Next
If (item.TheClient &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheClient.loadXML(item.TheClient)
  If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
    Dim nodeTheClient As MSXML2.IXMLDOMNode
    txtTheClient.Tag = item.TheClient
    For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
      If (nodeTheClient.baseName = &quot;Brief&quot;) Then
       txtTheClient.Text = nodeTheClient.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheClient As String
    newIDTheClient = item.TheClient
    Dim XMLTheClientID As String
    XMLTheClientID = &quot;&lt;SQLData&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheClient &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;QryCodeID&gt;&quot; &amp; mIDQryCode &amp; &quot;&lt;/QryCodeID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheClient As New NamedValues
    Dim resTheClient As NamedValues
    Call parsTheClient.Add(&quot;xml&quot;, XMLTheClientID)
    Set resTheClient = item.Application.Manager.GetSQLDataDialog(parsTheClient)
    If (Not resTheClient Is Nothing) Then
      Dim resStrTheClient As String
      resStrTheClient = resTheClient.item(&quot;RESULT&quot;).value
      If (resStrTheClient = &quot;OK&quot;) Then
        txtTheClient.Tag = Replace(resTheClient.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheClient.Text &lt;&gt; resTheClient.item(&quot;brief&quot;).value) Then
          mIDTheClient = newIDTheClient
          txtTheClient.Text = resTheClient.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheClient = vbNullString
    End If
  End If
Else
  Dim XMLTheClient As String
  XMLTheClient = &quot;&lt;SQLData&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClient = XMLTheClient &amp; &quot;&lt;QryCodeID&gt;&quot; &amp; mIDQryCode &amp; &quot;&lt;/QryCodeID&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheClient.Tag = XMLTheClient
  Call cmdTheClient_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheClient,cmdTheClient.tag
  cmdTheClient.RemoveAllMenu
  cmdTheClient.Visible = false 
dtpProcessDate = date
if item.ProcessDate &lt;&gt; 0 then
 dtpProcessDate = item.ProcessDate
else
 dtpProcessDate.value = null
end if
  on error resume next
txtSupplier = item.Supplier
  on error resume next
txtTTN = item.TTN
dtpTTNDate = date
if item.TTNDate &lt;&gt; 0 then
 dtpTTNDate = item.TTNDate
else
 dtpTTNDate.value = null
end if
  on error resume next
txtTranspNumber = item.TranspNumber
  on error resume next
txtContainer = item.Container
  on error resume next
txtStampNumber = item.StampNumber
  on error resume next
txtStampStatus = item.StampStatus
dtpTrack_time_in = now
if item.Track_time_in &lt;&gt; 0 then
 dtpTrack_time_in = item.Track_time_in
else
 dtpTrack_time_in.value = null
end if
dtptrack_time_out = now
if item.track_time_out &lt;&gt; 0 then
 dtptrack_time_out = item.track_time_out
else
 dtptrack_time_out.value = null
end if
txttemp_in_track = item.temp_in_track
If Not item.ThePartyRule Is Nothing Then
  txtThePartyRule.Tag = item.ThePartyRule.id
  txtThePartyRule = item.ThePartyRule.brief
else
  txtThePartyRule.Tag = &quot;&quot; 
  txtThePartyRule = &quot;&quot; 
End If
 LoadBtnPictures cmdThePartyRule,cmdThePartyRule.tag
  cmdThePartyRule.RemoveAllMenu
  cmdThePartyRule.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;QryCode&quot;, txtQryCode.Tag)
txtQryCode.Tag = AddSQLRefIds(txtQryCode.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.QryCode = txtQryCode.Tag
item.TheClient = txtTheClient.Tag
item.TTN = txtTTN
  if  isnull(dtpTTNDate) then
    item.TTNDate = 0
  else
    item.TTNDate = dtpTTNDate.value
  end if
item.TranspNumber = txtTranspNumber
item.Container = txtContainer
item.StampNumber = txtStampNumber
item.StampStatus = txtStampStatus
  if  isnull(dtpTrack_time_in) then
    item.Track_time_in = 0
  else
    item.Track_time_in = dtpTrack_time_in.value
  end if
  if  isnull(dtptrack_time_out) then
    item.track_time_out = 0
  else
    item.track_time_out = dtptrack_time_out.value
  end if
item.temp_in_track = cdbl(txttemp_in_track)
If txtThePartyRule.Tag &lt;&gt; &quot;&quot; Then
  Set item.ThePartyRule = Item.Application.FindRowObject(&quot;ITTD_RULE&quot;,txtThePartyRule.Tag)
Else
  Set item.ThePartyRule = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_EPLmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalWeight"/><Properties Name="Caption" PropValue="Вес палеты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPalWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Пустые поддоны к заказу
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtPalWeight_Validate(cancel as boolean)
if txtPalWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPalWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  elseif Val(txtPalWeight.text) &lt; -922337203685477.5808 or Val(txtPalWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPalWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPalWeight_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
txtPalWeight = item.PalWeight
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.PalWeight = cdbl(txtPalWeight)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_QLINEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№ П\П:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№ П\П"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLineAtQuery"/><Properties Name="Caption" PropValue="Строка в заказе:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLineAtQuery"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdLineAtQuery"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Строка в заказе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQRY_NUM"/><Properties Name="Caption" PropValue="По заказу КГ.:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQRY_NUM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdQRY_NUM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="По заказу КГ."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbledizm"/><Properties Name="Caption" PropValue="Ед. изм:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtedizm"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Ед. изм"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCurValue"/><Properties Name="Caption" PropValue="Факт КГ.:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCurValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Факт КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblarticul"/><Properties Name="Caption" PropValue="Артикул:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtarticul"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Артикул"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Дата производства По:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="Mask" PropValue="9999/999999"/><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства C:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства C"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес одной упаковки КГ.:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес одной упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCalibrated"/><Properties Name="Caption" PropValue="Калиброванный груз:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCalibrated"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Калиброванный груз"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCaliberWeight"/><Properties Name="Caption" PropValue="Вес калиброванной единицы НЕТТО:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtCaliberWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес калиброванной единицы НЕТТО"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblgood_id"/><Properties Name="Caption" PropValue="Идентификатор товара:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtgood_id"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdgood_id"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="9150"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Идентификатор товара"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobBrutto"/><Properties Name="Caption" PropValue="Вес брутто короба:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobBrutto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес брутто короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobNetto"/><Properties Name="Caption" PropValue="Вес НЕТТО короба:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobNetto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес НЕТТО короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNavalom"/><Properties Name="Caption" PropValue="Груз навалом:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbNavalom"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Груз навалом"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDLineAtQuery as string 
  private mIDQRY_NUM as string 
  private mIDgood_id as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Validate(cancel as boolean)
if txtsequence.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtsequence.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  elseif Val(txtsequence.text) &lt;&gt;clng(Val(txtsequence.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  end if
end if
end sub
Private Sub txtsequence_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtsequence_Change()
  Changing

end sub
private sub txtLineAtQuery_Change()
  if  not (OnInit) then 
If (txtLineAtQuery.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtLineAtQuery.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtLineAtQuery.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtLineAtQuery.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_id_Click()
    end if
  Changing

  end if 
end sub
private sub cmdLineAtQuery_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDLineAtQuery = Mid(txtLineAtQuery.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;LineAtQuery;&quot; &amp; mIDLineAtQuery, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtLineAtQuery.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (&quot; WHERE A.ORDER_ID=&quot; &amp; item.application.Manager.GetIDFromXMLField( item.application.ittin_def.item(1).QryCode )))
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_id&quot;, txtgood_id.Tag)
    txtLineAtQuery.Tag = Replace(txtLineAtQuery.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtLineAtQuery.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtLineAtQuery.Tag = res.item(&quot;xml&quot;).value
      If (txtLineAtQuery.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtLineAtQuery.Text = res.item(&quot;brief&quot;).value
        mIDLineAtQuery = res.item(&quot;ID&quot;).value
        Call txtLineAtQuery_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtQRY_NUM_Change()
  if  not (OnInit) then 
If (txtQRY_NUM.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtQRY_NUM.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtQRY_NUM.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtQRY_NUM.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%QRY_NUMID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdgood_id_Click()
    end if
  Changing

  end if 
end sub
private sub cmdQRY_NUM_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDQRY_NUM = Mid(txtQRY_NUM.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;QRY_NUM;&quot; &amp; mIDQRY_NUM, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtQRY_NUM.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_id&quot;, txtgood_id.Tag)
    txtQRY_NUM.Tag = Replace(txtQRY_NUM.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtQRY_NUM.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtQRY_NUM.Tag = res.item(&quot;xml&quot;).value
      If (txtQRY_NUM.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtQRY_NUM.Text = res.item(&quot;brief&quot;).value
        mIDQRY_NUM = res.item(&quot;ID&quot;).value
        Call txtQRY_NUM_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtedizm_Change()
  Changing

end sub
private sub txtCurValue_Validate(cancel as boolean)
if txtCurValue.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCurValue.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCurValue.SetFocus 
  elseif Val(txtCurValue.text) &lt; -922337203685477.5808 or Val(txtCurValue.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCurValue.SetFocus 
  end if
end if
end sub
Private Sub txtCurValue_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCurValue_Change()
  Changing

end sub
private sub txtarticul_Change()
  Changing

end sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief,,,&quot;ITTD_COUNTRY_TheSupplier like '%&quot; &amp; Item.Application.ITTIN_DEF.Item(1).Supplier &amp; &quot;%'&quot;) Then
          txtmade_country.Tag = Left(id, 38)
          txtmade_country = brief
        End If
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
          txtmade_country.Tag = &quot;&quot;
          txtmade_country = &quot;&quot;
End sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief,,,&quot;ITTD_FACTORY_Country_ID='&quot; &amp; txtmade_country.tag &amp; &quot;'&quot;) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_KILLPLACE&quot;, id, brief,,,&quot;ITTD_KILLPLACE_Factory_ID='&quot; &amp; txtFactory.tag &amp; &quot;'&quot;) Then
          txtKILL_NUMBER.Tag = Left(id, 38)
          txtKILL_NUMBER = brief
        End If
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
          txtKILL_NUMBER.Tag = &quot;&quot;
          txtKILL_NUMBER = &quot;&quot;
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_PART&quot;, id, brief,,,&quot;ITTD_PART_TheGood ='&quot; &amp; txtLineAtQuery.text &amp; &quot;'&quot;) Then
          txtPartRef.Tag = Left(id, 38)
          txtPartRef = brief
        End If
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
          txtPartRef.Tag = &quot;&quot;
          txtPartRef = &quot;&quot;
End sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub txtPackageWeight_Validate(cancel as boolean)
if txtPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  elseif Val(txtPackageWeight.text) &lt; -922337203685477.5808 or Val(txtPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub cmbIsCalibrated_Click()
  on error resume next
  Changing
if cmbIsCalibrated.text =&quot;Да&quot; then 
   txtKorobBrutto.enabled = true
   txtKorobNetto.enabled = true
   txtPackageWeight.enabled = false
else
   txtKorobBrutto =0
   txtKorobBrutto.enabled = false
   txtKorobNetto = 0
   txtKorobNetto.enabled = false
   txtPackageWeight.enabled = true
end if

end sub
private sub txtCaliberWeight_Validate(cancel as boolean)
if txtCaliberWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCaliberWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberWeight.SetFocus 
  elseif Val(txtCaliberWeight.text) &lt; -922337203685477.5808 or Val(txtCaliberWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberWeight.SetFocus 
  end if
end if
end sub
Private Sub txtCaliberWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCaliberWeight_Change()
  Changing

end sub
private sub txtFullPackageWeight_Validate(cancel as boolean)
if txtFullPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFullPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  elseif Val(txtFullPackageWeight.text) &lt; -922337203685477.5808 or Val(txtFullPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtFullPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub txtgood_id_Change()
  if  not (OnInit) then 
If (txtgood_id.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtgood_id.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtgood_id.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtgood_id.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtLineAtQuery.Tag, &quot;%good_idID%&quot;) &gt; 0) then
    'Call cmdLineAtQuery_Click()
    end if
    end if
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdQRY_NUM_Click()
    end if
  Changing

  end if 
end sub
private sub cmdgood_id_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtgood_id.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtgood_id.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDgood_id = Mid(txtgood_id.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;good_id;&quot; &amp; mIDgood_id, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtgood_id.Tag = Replace(txtgood_id.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtgood_id.Tag = Replace(txtgood_id.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtgood_id.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
    txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
    txtgood_id.Tag = Replace(txtgood_id.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtgood_id.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtgood_id.Tag = res.item(&quot;xml&quot;).value
      If (txtgood_id.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtgood_id.Text = res.item(&quot;brief&quot;).value
        mIDgood_id = res.item(&quot;ID&quot;).value
        Call txtgood_id_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtKorobBrutto_Validate(cancel as boolean)
if txtKorobBrutto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobBrutto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  elseif Val(txtKorobBrutto.text) &lt; -922337203685477.5808 or Val(txtKorobBrutto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobBrutto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobBrutto_Change()
  Changing

end sub
private sub txtKorobNetto_Validate(cancel as boolean)
if txtKorobNetto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobNetto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  elseif Val(txtKorobNetto.text) &lt; -922337203685477.5808 or Val(txtKorobNetto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobNetto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobNetto_Change()
  Changing

end sub
private sub cmbNavalom_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
txtLineAtQuery.Text =&quot;&quot;
txtLineAtQuery.Tag =&quot;&quot;
mIDLineAtQuery =&quot;&quot;
' Разобрать XML
Dim XMLDocLineAtQuery As New DOMDocument
On Error Resume Next
If (item.LineAtQuery &lt;&gt; &quot;&quot;) Then
  Call XMLDocLineAtQuery.loadXML(item.LineAtQuery)
  If (Err.Number = 0 And XMLDocLineAtQuery.parseError.errorCode = 0) Then
    Dim nodeLineAtQuery As MSXML2.IXMLDOMNode
    txtLineAtQuery.Tag = item.LineAtQuery
    For Each nodeLineAtQuery In XMLDocLineAtQuery.childNodes.item(0).childNodes
      If (nodeLineAtQuery.baseName = &quot;Brief&quot;) Then
       txtLineAtQuery.Text = nodeLineAtQuery.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDLineAtQuery As String
    newIDLineAtQuery = item.LineAtQuery
    Dim XMLLineAtQueryID As String
    XMLLineAtQueryID = &quot;&lt;SQLData&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код Заказа], A.QTY_ORD [Количество], B.DESCRIPTION [Наименование]  from receiving_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDLineAtQuery &amp; &quot;&lt;/ID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;BriefFields&gt;Наименование&lt;/BriefFields&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
    XMLLineAtQueryID = XMLLineAtQueryID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsLineAtQuery As New NamedValues
    Dim resLineAtQuery As NamedValues
    Call parsLineAtQuery.Add(&quot;xml&quot;, XMLLineAtQueryID)
    Set resLineAtQuery = item.Application.Manager.GetSQLDataDialog(parsLineAtQuery)
    If (Not resLineAtQuery Is Nothing) Then
      Dim resStrLineAtQuery As String
      resStrLineAtQuery = resLineAtQuery.item(&quot;RESULT&quot;).value
      If (resStrLineAtQuery = &quot;OK&quot;) Then
        txtLineAtQuery.Tag = Replace(resLineAtQuery.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtLineAtQuery.Text &lt;&gt; resLineAtQuery.item(&quot;brief&quot;).value) Then
          mIDLineAtQuery = newIDLineAtQuery
          txtLineAtQuery.Text = resLineAtQuery.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.LineAtQuery = vbNullString
    End If
  End If
Else
  Dim XMLLineAtQuery As String
  XMLLineAtQuery = &quot;&lt;SQLData&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;query&gt;select A.ID [Код], A.ORDER_ID [Код Заказа], A.QTY_ORD [Количество], B.DESCRIPTION [Наименование]  from receiving_line A join item B on A.item_id =B.id &lt;/query&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;BriefFields&gt;Наименование&lt;/BriefFields&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
  XMLLineAtQuery = XMLLineAtQuery &amp; &quot;&lt;/SQLData&gt;&quot;
  txtLineAtQuery.Tag = XMLLineAtQuery
End if 
On Error GoTo 0
 LoadBtnPictures cmdLineAtQuery,cmdLineAtQuery.tag
  cmdLineAtQuery.RemoveAllMenu
  cmdLineAtQuery.AddMenu &quot;Очистить&quot; 
txtQRY_NUM.Text =&quot;&quot;
txtQRY_NUM.Tag =&quot;&quot;
mIDQRY_NUM =&quot;&quot;
' Разобрать XML
Dim XMLDocQRY_NUM As New DOMDocument
On Error Resume Next
If (item.QRY_NUM &lt;&gt; &quot;&quot;) Then
  Call XMLDocQRY_NUM.loadXML(item.QRY_NUM)
  If (Err.Number = 0 And XMLDocQRY_NUM.parseError.errorCode = 0) Then
    Dim nodeQRY_NUM As MSXML2.IXMLDOMNode
    txtQRY_NUM.Tag = item.QRY_NUM
    For Each nodeQRY_NUM In XMLDocQRY_NUM.childNodes.item(0).childNodes
      If (nodeQRY_NUM.baseName = &quot;Brief&quot;) Then
       txtQRY_NUM.Text = nodeQRY_NUM.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDQRY_NUM As String
    newIDQRY_NUM = item.QRY_NUM
    Dim XMLQRY_NUMID As String
    XMLQRY_NUMID = &quot;&lt;SQLData&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;query&gt;select  QTY_ORD from receiving_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDQRY_NUM &amp; &quot;&lt;/ID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
    XMLQRY_NUMID = XMLQRY_NUMID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsQRY_NUM As New NamedValues
    Dim resQRY_NUM As NamedValues
    Call parsQRY_NUM.Add(&quot;xml&quot;, XMLQRY_NUMID)
    Set resQRY_NUM = item.Application.Manager.GetSQLDataDialog(parsQRY_NUM)
    If (Not resQRY_NUM Is Nothing) Then
      Dim resStrQRY_NUM As String
      resStrQRY_NUM = resQRY_NUM.item(&quot;RESULT&quot;).value
      If (resStrQRY_NUM = &quot;OK&quot;) Then
        txtQRY_NUM.Tag = Replace(resQRY_NUM.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtQRY_NUM.Text &lt;&gt; resQRY_NUM.item(&quot;brief&quot;).value) Then
          mIDQRY_NUM = newIDQRY_NUM
          txtQRY_NUM.Text = resQRY_NUM.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.QRY_NUM = vbNullString
    End If
  End If
Else
  Dim XMLQRY_NUM As String
  XMLQRY_NUM = &quot;&lt;SQLData&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;query&gt;select  QTY_ORD from receiving_line where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;IDFieldName&gt;QTY_ORD&lt;/IDFieldName&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;BriefFields&gt;QTY_ORD&lt;/BriefFields&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;good_idID&gt;&quot; &amp; mIDgood_id &amp; &quot;&lt;/good_idID&gt;&quot;
  XMLQRY_NUM = XMLQRY_NUM &amp; &quot;&lt;/SQLData&gt;&quot;
  txtQRY_NUM.Tag = XMLQRY_NUM
  Call cmdQRY_NUM_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdQRY_NUM,cmdQRY_NUM.tag
  cmdQRY_NUM.RemoveAllMenu
  cmdQRY_NUM.Visible = false 
  on error resume next
txtedizm = item.edizm
txtCurValue = item.CurValue
  on error resume next
txtarticul = item.articul
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
else
 dtpexp_date.value = null
end if
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
else
 dtpMade_date.value = null
end if
txtPackageWeight = item.PackageWeight
cmbIsCalibrated.Clear
cmbIsCalibrated.additem &quot;Да&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= -1
cmbIsCalibrated.additem &quot;Нет&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= 0
 For iii = 0 To cmbIsCalibrated.ListCount-1
  If Item.IsCalibrated = cmbIsCalibrated.ItemData(iii) Then
   cmbIsCalibrated.ListIndex = iii
   Exit For
  End If
 Next
txtCaliberWeight = item.CaliberWeight
txtFullPackageWeight = item.FullPackageWeight
txtgood_id.Text =&quot;&quot;
txtgood_id.Tag =&quot;&quot;
mIDgood_id =&quot;&quot;
' Разобрать XML
Dim XMLDocgood_id As New DOMDocument
On Error Resume Next
If (item.good_id &lt;&gt; &quot;&quot;) Then
  Call XMLDocgood_id.loadXML(item.good_id)
  If (Err.Number = 0 And XMLDocgood_id.parseError.errorCode = 0) Then
    Dim nodegood_id As MSXML2.IXMLDOMNode
    txtgood_id.Tag = item.good_id
    For Each nodegood_id In XMLDocgood_id.childNodes.item(0).childNodes
      If (nodegood_id.baseName = &quot;Brief&quot;) Then
       txtgood_id.Text = nodegood_id.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDgood_id As String
    newIDgood_id = item.good_id
    Dim XMLgood_idID As String
    XMLgood_idID = &quot;&lt;SQLData&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;query&gt;select  item_id from RECEIVING_LINE where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDgood_id &amp; &quot;&lt;/ID&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
    XMLgood_idID = XMLgood_idID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsgood_id As New NamedValues
    Dim resgood_id As NamedValues
    Call parsgood_id.Add(&quot;xml&quot;, XMLgood_idID)
    Set resgood_id = item.Application.Manager.GetSQLDataDialog(parsgood_id)
    If (Not resgood_id Is Nothing) Then
      Dim resStrgood_id As String
      resStrgood_id = resgood_id.item(&quot;RESULT&quot;).value
      If (resStrgood_id = &quot;OK&quot;) Then
        txtgood_id.Tag = Replace(resgood_id.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtgood_id.Text &lt;&gt; resgood_id.item(&quot;brief&quot;).value) Then
          mIDgood_id = newIDgood_id
          txtgood_id.Text = resgood_id.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.good_id = vbNullString
    End If
  End If
Else
  Dim XMLgood_id As String
  XMLgood_id = &quot;&lt;SQLData&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;query&gt;select  item_id from RECEIVING_LINE where ID='%LineAtQueryID%'&lt;/query&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;IDFieldName&gt;item_id&lt;/IDFieldName&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;BriefFields&gt;item_id&lt;/BriefFields&gt;&quot;
    XMLgood_id = XMLgood_id &amp; &quot;&lt;LineAtQueryID&gt;&quot; &amp; mIDLineAtQuery &amp; &quot;&lt;/LineAtQueryID&gt;&quot;
    XMLgood_id = XMLgood_id &amp; &quot;&lt;QRY_NUMID&gt;&quot; &amp; mIDQRY_NUM &amp; &quot;&lt;/QRY_NUMID&gt;&quot;
  XMLgood_id = XMLgood_id &amp; &quot;&lt;/SQLData&gt;&quot;
  txtgood_id.Tag = XMLgood_id
  Call cmdgood_id_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdgood_id,cmdgood_id.tag
  cmdgood_id.RemoveAllMenu
  cmdgood_id.Visible = false 
txtKorobBrutto = item.KorobBrutto
txtKorobNetto = item.KorobNetto
cmbNavalom.Clear
cmbNavalom.additem &quot;Да&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= -1
cmbNavalom.additem &quot;Нет&quot;
cmbNavalom.itemdata(cmbNavalom.newindex)= 0
 For iii = 0 To cmbNavalom.ListCount-1
  If Item.Navalom = cmbNavalom.ItemData(iii) Then
   cmbNavalom.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;LineAtQuery&quot;, txtLineAtQuery.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtgood_id.Tag = AddSQLRefIds(txtgood_id.Tag, &quot;QRY_NUM&quot;, txtQRY_NUM.Tag)
txtLineAtQuery.Tag = AddSQLRefIds(txtLineAtQuery.Tag, &quot;good_id&quot;, txtgood_id.Tag)
txtQRY_NUM.Tag = AddSQLRefIds(txtQRY_NUM.Tag, &quot;good_id&quot;, txtgood_id.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.sequence = cdbl(txtsequence)
item.LineAtQuery = txtLineAtQuery.Tag
item.QRY_NUM = txtQRY_NUM.Tag
item.edizm = txtedizm
item.CurValue = cdbl(txtCurValue)
item.articul = txtarticul
If txtmade_country.Tag &lt;&gt; &quot;&quot; Then
  Set item.made_country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtmade_country.Tag)
Else
  Set item.made_country = Nothing
End If
  if  isnull(dtpmade_date_to) then
    item.made_date_to = 0
  else
    item.made_date_to = dtpmade_date_to.value
  end if
item.vetsved = txtvetsved
If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
If txtKILL_NUMBER.Tag &lt;&gt; &quot;&quot; Then
  Set item.KILL_NUMBER = Item.Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,txtKILL_NUMBER.Tag)
Else
  Set item.KILL_NUMBER = Nothing
End If
item.VidOtruba = txtVidOtruba
If txtPartRef.Tag &lt;&gt; &quot;&quot; Then
  Set item.PartRef = Item.Application.FindRowObject(&quot;ITTD_PART&quot;,txtPartRef.Tag)
Else
  Set item.PartRef = Nothing
End If
  if  isnull(dtpexp_date) then
    item.exp_date = 0
  else
    item.exp_date = dtpexp_date.value
  end if
  if  isnull(dtpMade_date) then
    item.Made_date = 0
  else
    item.Made_date = dtpMade_date.value
  end if
item.PackageWeight = cdbl(txtPackageWeight)
 if cmbIsCalibrated.listindex&gt;=0 then
   item.IsCalibrated = cmbIsCalibrated.itemdata(cmbIsCalibrated.listindex)
 end if
item.CaliberWeight = cdbl(txtCaliberWeight)
item.FullPackageWeight = cdbl(txtFullPackageWeight)
item.good_id = txtgood_id.Tag
item.KorobBrutto = cdbl(txtKorobBrutto)
item.KorobNetto = cdbl(txtKorobNetto)
 if cmbNavalom.listindex&gt;=0 then
   item.Navalom = cmbNavalom.itemdata(cmbNavalom.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_PALETadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblsequence"/><Properties Name="Caption" PropValue="№ П\П:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtsequence"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="№ П\П"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_country"/><Properties Name="Caption" PropValue="Страна производитель:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtmade_country"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdmade_country"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Завод"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKILL_NUMBER"/><Properties Name="Caption" PropValue="№ бойни:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKILL_NUMBER"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdKILL_NUMBER"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="№ бойни"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVidOtruba"/><Properties Name="Caption" PropValue="Вид отруба:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtVidOtruba"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="64"/><Properties Name="ToolTipText" PropValue="Вид отруба"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartRef"/><Properties Name="Caption" PropValue="Партия:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Партия"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMade_date"/><Properties Name="Caption" PropValue="Дата производства С:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpMade_date"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата производства С"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblmade_date_to"/><Properties Name="Caption" PropValue="Датиа производства По:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpmade_date_to"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Датиа производства По"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblvetsved"/><Properties Name="Caption" PropValue="Номер сертификата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="Mask" PropValue="9999/999999"/><Properties Name="NAME" PropValue="txtvetsved"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="Номер сертификата"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblexp_date"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpexp_date"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCaliberQuantity"/><Properties Name="Caption" PropValue="Количство коробов:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCaliberQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количство коробов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalWeight"/><Properties Name="Caption" PropValue="Вес поддона КГ.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPalWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес поддона КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGoodWithPaletWeight"/><Properties Name="Caption" PropValue="Вес поддона с грузом КГ.:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtGoodWithPaletWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес поддона с грузом КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPackageWeight"/><Properties Name="Caption" PropValue="Вес упаковки КГ.:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFullPackageWeight"/><Properties Name="Caption" PropValue="Суммарный вес упаковки КГ.:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFullPackageWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес упаковки КГ."/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBufferZonePlace"/><Properties Name="Caption" PropValue="Номер ячейки в буферной зоне:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBufferZonePlace"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер ячейки в буферной зоне"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStock_ID"/><Properties Name="Caption" PropValue="Идентификатор на складе:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStock_ID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Идентификатор на складе"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsBrak"/><Properties Name="Caption" PropValue="Брак:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsBrak"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Брак"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblpalet_id"/><Properties Name="Caption" PropValue="Идентификатор палеты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtpalet_id"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Идентификатор палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobBrutto"/><Properties Name="Caption" PropValue="Вес брутто короба:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobBrutto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес брутто короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKorobNetto"/><Properties Name="Caption" PropValue="Вес НЕТТО короба:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtKorobNetto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес НЕТТО короба"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCalibrated"/><Properties Name="Caption" PropValue="Калиброванный груз:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCalibrated"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="6600"/><Properties Name="ToolTipText" PropValue="Калиброванный груз"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtsequence_Validate(cancel as boolean)
if txtsequence.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtsequence.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  elseif Val(txtsequence.text) &lt;&gt;clng(Val(txtsequence.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtsequence.SetFocus 
  end if
end if
end sub
Private Sub txtsequence_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtsequence_Change()
  Changing

end sub
private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTPL_DEF&quot;, id, brief) Then
          txtTheNumber.Tag = Left(id, 38)
          txtTheNumber = brief
        End If
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
          txtTheNumber.Tag = &quot;&quot;
          txtTheNumber = &quot;&quot;
End sub
private sub txtmade_country_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdmade_country_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief,,,&quot;ITTD_COUNTRY_TheSupplier like '%&quot; &amp; Item.Application.ITTIN_DEF.Item(1).Supplier &amp; &quot;%'&quot;) Then
          txtmade_country.Tag = Left(id, 38)
          txtmade_country = brief
        End If
end sub
private sub cmdmade_country_MenuClick(ByVal sCaption As String)
          txtmade_country.Tag = &quot;&quot;
          txtmade_country = &quot;&quot;
End sub
private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtKILL_NUMBER_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdKILL_NUMBER_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_KILLPLACE&quot;, id, brief) Then
          txtKILL_NUMBER.Tag = Left(id, 38)
          txtKILL_NUMBER = brief
        End If
end sub
private sub cmdKILL_NUMBER_MenuClick(ByVal sCaption As String)
          txtKILL_NUMBER.Tag = &quot;&quot;
          txtKILL_NUMBER = &quot;&quot;
End sub
private sub txtVidOtruba_Change()
  Changing

end sub
private sub txtPartRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPartRef_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_PART&quot;, id, brief) Then
          txtPartRef.Tag = Left(id, 38)
          txtPartRef = brief
        End If
end sub
private sub cmdPartRef_MenuClick(ByVal sCaption As String)
          txtPartRef.Tag = &quot;&quot;
          txtPartRef = &quot;&quot;
End sub
private sub dtpMade_date_Change()
  Changing

end sub
private sub dtpmade_date_to_Change()
  Changing

end sub
private sub txtvetsved_Change()
  Changing

end sub
private sub dtpexp_date_Change()
  Changing

end sub
private sub txtCaliberQuantity_Validate(cancel as boolean)
if txtCaliberQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtCaliberQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberQuantity.SetFocus 
  elseif Val(txtCaliberQuantity.text) &lt;&gt;clng(Val(txtCaliberQuantity.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtCaliberQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtCaliberQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtCaliberQuantity_Change()
  Changing

end sub
private sub txtPalWeight_Validate(cancel as boolean)
if txtPalWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPalWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  elseif Val(txtPalWeight.text) &lt; -922337203685477.5808 or Val(txtPalWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPalWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPalWeight_Change()
  Changing

end sub
private sub txtGoodWithPaletWeight_Validate(cancel as boolean)
if txtGoodWithPaletWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtGoodWithPaletWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtGoodWithPaletWeight.SetFocus 
  elseif Val(txtGoodWithPaletWeight.text) &lt; -922337203685477.5808 or Val(txtGoodWithPaletWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtGoodWithPaletWeight.SetFocus 
  end if
end if
end sub
Private Sub txtGoodWithPaletWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtGoodWithPaletWeight_Change()
  Changing

end sub
private sub txtPackageWeight_Validate(cancel as boolean)
if txtPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  elseif Val(txtPackageWeight.text) &lt; -922337203685477.5808 or Val(txtPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPackageWeight_Change()
  Changing

end sub
private sub txtFullPackageWeight_Validate(cancel as boolean)
if txtFullPackageWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFullPackageWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  elseif Val(txtFullPackageWeight.text) &lt; -922337203685477.5808 or Val(txtFullPackageWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFullPackageWeight.SetFocus 
  end if
end if
end sub
Private Sub txtFullPackageWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFullPackageWeight_Change()
  Changing

end sub
private sub txtBufferZonePlace_Change()
  Changing

end sub
private sub txtStock_ID_Validate(cancel as boolean)
if txtStock_ID.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtStock_ID.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtStock_ID.SetFocus 
  elseif Val(txtStock_ID.text) &lt;&gt;clng(Val(txtStock_ID.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtStock_ID.SetFocus 
  end if
end if
end sub
Private Sub txtStock_ID_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtStock_ID_Change()
  Changing

end sub
private sub cmbIsBrak_Click()
  on error resume next
  Changing

end sub
private sub txtpalet_id_Validate(cancel as boolean)
if txtpalet_id.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtpalet_id.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtpalet_id.SetFocus 
  elseif Val(txtpalet_id.text) &lt;&gt;clng(Val(txtpalet_id.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtpalet_id.SetFocus 
  end if
end if
end sub
Private Sub txtpalet_id_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtpalet_id_Change()
  Changing

end sub
private sub txtKorobBrutto_Validate(cancel as boolean)
if txtKorobBrutto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobBrutto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  elseif Val(txtKorobBrutto.text) &lt; -922337203685477.5808 or Val(txtKorobBrutto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobBrutto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobBrutto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobBrutto_Change()
  Changing

end sub
private sub txtKorobNetto_Validate(cancel as boolean)
if txtKorobNetto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtKorobNetto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  elseif Val(txtKorobNetto.text) &lt; -922337203685477.5808 or Val(txtKorobNetto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtKorobNetto.SetFocus 
  end if
end if
end sub
Private Sub txtKorobNetto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtKorobNetto_Change()
  Changing

end sub
private sub cmbIsCalibrated_Click()
  on error resume next
  Changing
if cmbIsCalibrated.text =&quot;Да&quot; then 
   txtKorobBrutto.enabled = true
   txtKorobNetto.enabled = true
   txtPackageWeight.enabled = false
else
   txtKorobBrutto =0
   txtKorobBrutto.enabled = false
   txtKorobNetto = 0
   txtKorobNetto.enabled = false
   txtPackageWeight.enabled = true
end if

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtsequence = item.sequence
If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
If Not item.made_country Is Nothing Then
  txtmade_country.Tag = item.made_country.id
  txtmade_country = item.made_country.brief
else
  txtmade_country.Tag = &quot;&quot; 
  txtmade_country = &quot;&quot; 
End If
 LoadBtnPictures cmdmade_country,cmdmade_country.tag
  cmdmade_country.RemoveAllMenu
  cmdmade_country.AddMenu &quot;Очистить&quot; 
If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
If Not item.KILL_NUMBER Is Nothing Then
  txtKILL_NUMBER.Tag = item.KILL_NUMBER.id
  txtKILL_NUMBER = item.KILL_NUMBER.brief
else
  txtKILL_NUMBER.Tag = &quot;&quot; 
  txtKILL_NUMBER = &quot;&quot; 
End If
 LoadBtnPictures cmdKILL_NUMBER,cmdKILL_NUMBER.tag
  cmdKILL_NUMBER.RemoveAllMenu
  cmdKILL_NUMBER.AddMenu &quot;Очистить&quot; 
  on error resume next
txtVidOtruba = item.VidOtruba
If Not item.PartRef Is Nothing Then
  txtPartRef.Tag = item.PartRef.id
  txtPartRef = item.PartRef.brief
else
  txtPartRef.Tag = &quot;&quot; 
  txtPartRef = &quot;&quot; 
End If
 LoadBtnPictures cmdPartRef,cmdPartRef.tag
  cmdPartRef.RemoveAllMenu
  cmdPartRef.AddMenu &quot;Очистить&quot; 
dtpMade_date = date
if item.Made_date &lt;&gt; 0 then
 dtpMade_date = item.Made_date
else
 dtpMade_date.value = null
end if
dtpmade_date_to = date
if item.made_date_to &lt;&gt; 0 then
 dtpmade_date_to = item.made_date_to
else
 dtpmade_date_to.value = null
end if
  on error resume next
txtvetsved = item.vetsved
dtpexp_date = date
if item.exp_date &lt;&gt; 0 then
 dtpexp_date = item.exp_date
else
 dtpexp_date.value = null
end if
txtCaliberQuantity = item.CaliberQuantity
txtPalWeight = item.PalWeight
txtGoodWithPaletWeight = item.GoodWithPaletWeight
txtPackageWeight = item.PackageWeight
txtFullPackageWeight = item.FullPackageWeight
  on error resume next
txtBufferZonePlace = item.BufferZonePlace
txtStock_ID = item.Stock_ID
cmbIsBrak.Clear
cmbIsBrak.additem &quot;Да&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= -1
cmbIsBrak.additem &quot;Нет&quot;
cmbIsBrak.itemdata(cmbIsBrak.newindex)= 0
 For iii = 0 To cmbIsBrak.ListCount-1
  If Item.IsBrak = cmbIsBrak.ItemData(iii) Then
   cmbIsBrak.ListIndex = iii
   Exit For
  End If
 Next
txtpalet_id = item.palet_id
txtKorobBrutto = item.KorobBrutto
txtKorobNetto = item.KorobNetto
cmbIsCalibrated.Clear
cmbIsCalibrated.additem &quot;Да&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= -1
cmbIsCalibrated.additem &quot;Нет&quot;
cmbIsCalibrated.itemdata(cmbIsCalibrated.newindex)= 0
 For iii = 0 To cmbIsCalibrated.ListCount-1
  If Item.IsCalibrated = cmbIsCalibrated.ItemData(iii) Then
   cmbIsCalibrated.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.sequence = cdbl(txtsequence)
If txtTheNumber.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheNumber = Item.Application.FindRowObject(&quot;ITTPL_DEF&quot;,txtTheNumber.Tag)
Else
  Set item.TheNumber = Nothing
End If
If txtmade_country.Tag &lt;&gt; &quot;&quot; Then
  Set item.made_country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtmade_country.Tag)
Else
  Set item.made_country = Nothing
End If
If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
If txtKILL_NUMBER.Tag &lt;&gt; &quot;&quot; Then
  Set item.KILL_NUMBER = Item.Application.FindRowObject(&quot;ITTD_KILLPLACE&quot;,txtKILL_NUMBER.Tag)
Else
  Set item.KILL_NUMBER = Nothing
End If
item.VidOtruba = txtVidOtruba
If txtPartRef.Tag &lt;&gt; &quot;&quot; Then
  Set item.PartRef = Item.Application.FindRowObject(&quot;ITTD_PART&quot;,txtPartRef.Tag)
Else
  Set item.PartRef = Nothing
End If
  if  isnull(dtpMade_date) then
    item.Made_date = 0
  else
    item.Made_date = dtpMade_date.value
  end if
  if  isnull(dtpmade_date_to) then
    item.made_date_to = 0
  else
    item.made_date_to = dtpmade_date_to.value
  end if
item.vetsved = txtvetsved
  if  isnull(dtpexp_date) then
    item.exp_date = 0
  else
    item.exp_date = dtpexp_date.value
  end if
item.CaliberQuantity = cdbl(txtCaliberQuantity)
item.PalWeight = cdbl(txtPalWeight)
item.GoodWithPaletWeight = cdbl(txtGoodWithPaletWeight)
item.PackageWeight = cdbl(txtPackageWeight)
item.FullPackageWeight = cdbl(txtFullPackageWeight)
item.BufferZonePlace = txtBufferZonePlace
item.Stock_ID = cdbl(txtStock_ID)
 if cmbIsBrak.listindex&gt;=0 then
   item.IsBrak = cmbIsBrak.itemdata(cmbIsBrak.listindex)
 end if
item.palet_id = cdbl(txtpalet_id)
item.KorobBrutto = cdbl(txtKorobBrutto)
item.KorobNetto = cdbl(txtKorobNetto)
 if cmbIsCalibrated.listindex&gt;=0 then
   item.IsCalibrated = cmbIsCalibrated.itemdata(cmbIsCalibrated.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_SRVadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSRV"/><Properties Name="Caption" PropValue="Услуга:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSRV"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSRV"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuantity"/><Properties Name="Caption" PropValue="Кличество:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Кличество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSRV_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSRV_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_SRV&quot;, id, brief) Then
          txtSRV.Tag = Left(id, 38)
          txtSRV = brief
        End If
end sub
private sub cmdSRV_MenuClick(ByVal sCaption As String)
          txtSRV.Tag = &quot;&quot;
          txtSRV = &quot;&quot;
End sub
private sub txtQuantity_Validate(cancel as boolean)
if txtQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  elseif Val(txtQuantity.text) &lt; -922337203685477.5808 or Val(txtQuantity.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuantity_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.SRV Is Nothing Then
  txtSRV.Tag = item.SRV.id
  txtSRV = item.SRV.brief
else
  txtSRV.Tag = &quot;&quot; 
  txtSRV = &quot;&quot; 
End If
 LoadBtnPictures cmdSRV,cmdSRV.tag
  cmdSRV.RemoveAllMenu
  cmdSRV.AddMenu &quot;Очистить&quot; 
txtQuantity = item.Quantity
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtSRV.Tag &lt;&gt; &quot;&quot; Then
  Set item.SRV = Item.Application.FindRowObject(&quot;ITTD_SRV&quot;,txtSRV.Tag)
Else
  Set item.SRV = Nothing
End If
item.Quantity = cdbl(txtQuantity)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_DEFadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQryCode"/><Properties Name="Caption" PropValue="Код заказа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtQryCode"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Код заказа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdQryCode"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Код заказа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessDate"/><Properties Name="Caption" PropValue="Дата обработки заказа:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpProcessDate"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата обработки заказа"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Поставщик"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTN"/><Properties Name="Caption" PropValue="Номер ТТН:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTTN"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Номер ТТН"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTTNDate"/><Properties Name="Caption" PropValue="Дата ТТН:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTTNDate"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата ТТН"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTranspNumber"/><Properties Name="Caption" PropValue="№ ТС:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTranspNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ ТС"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblContainer"/><Properties Name="Caption" PropValue="№ прицепа \ контейнера:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtContainer"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="№ прицепа \ контейнера"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampNumber"/><Properties Name="Caption" PropValue="Номер пломбы:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Номер пломбы"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStampStatus"/><Properties Name="Caption" PropValue="Состояние пломбы:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStampStatus"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Состояние пломбы"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrack_time_in"/><Properties Name="Caption" PropValue="Время прибытия машины:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpTrack_time_in"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время прибытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltrack_time_out"/><Properties Name="Caption" PropValue="Время убытия машины:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtptrack_time_out"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Время убытия машины"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltemp_in_track"/><Properties Name="Caption" PropValue="Температура:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txttemp_in_track"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Температура"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblThePartyRule"/><Properties Name="Caption" PropValue="Правиило формирования партии:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtThePartyRule"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdThePartyRule"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Правиило формирования партии"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDQryCode as string 
  private mIDTheClient as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtQryCode_Change()
  if  not (OnInit) then 
If (txtQryCode.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtQryCode.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtQryCode.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtQryCode.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    Call cmdTheClient_Click()
    end if
  Changing

  end if 
end sub
private sub cmdQryCode_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtQryCode.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtQryCode.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDQryCode = Mid(txtQryCode.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;QryCode;&quot; &amp; mIDQryCode, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtQryCode.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;filter&quot;, (item.application.manager.GetCustomObjects(&quot;cliFilter&quot;).name))
    txtQryCode.Tag = AddSQLRefIds(txtQryCode.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
    txtQryCode.Tag = Replace(txtQryCode.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtQryCode.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtQryCode.Tag = res.item(&quot;xml&quot;).value
      If (txtQryCode.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtQryCode.Text = res.item(&quot;brief&quot;).value
        mIDQryCode = res.item(&quot;ID&quot;).value
        Call txtQryCode_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtTheClient_Change()
  if  not (OnInit) then 
If (txtTheClient.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheClient.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheClient.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheClient.Tag = XMLDoc.xml
  End If
End If
If (Not OnInit OR True) Then ' Пока не понял - надо ли всегда или нет
    if (Instr(txtQryCode.Tag, &quot;%TheClientID%&quot;) &gt; 0) then
    'Call cmdQryCode_Click()
    end if
    end if
  Changing

  end if 
end sub
private sub cmdTheClient_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheClient.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheClient = Mid(txtTheClient.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheClient;&quot; &amp; mIDTheClient, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheClient.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    Call pars.Add(&quot;permanent&quot;, &quot;true&quot;)
    txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;QryCode&quot;, txtQryCode.Tag)
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheClient.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheClient.Tag = res.item(&quot;xml&quot;).value
      If (txtTheClient.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheClient.Text = res.item(&quot;brief&quot;).value
        mIDTheClient = res.item(&quot;ID&quot;).value
        Call txtTheClient_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub dtpProcessDate_Change()
  Changing

end sub
private sub txtSupplier_Change()
  Changing

end sub
private sub txtTTN_Change()
  Changing

end sub
private sub dtpTTNDate_Change()
  Changing

end sub
private sub txtTranspNumber_Change()
  Changing

end sub
private sub txtContainer_Change()
  Changing

end sub
private sub txtStampNumber_Change()
  Changing

end sub
private sub txtStampStatus_Change()
  Changing

end sub
private sub dtpTrack_time_in_Change()
  Changing

end sub
private sub dtptrack_time_out_Change()
  Changing

end sub
private sub txttemp_in_track_Validate(cancel as boolean)
if txttemp_in_track.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txttemp_in_track.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txttemp_in_track.SetFocus 
  elseif Val(txttemp_in_track.text) &lt; -922337203685477.5808 or Val(txttemp_in_track.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txttemp_in_track.SetFocus 
  end if
end if
end sub
Private Sub txttemp_in_track_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txttemp_in_track_Change()
  Changing

end sub
private sub txtThePartyRule_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdThePartyRule_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_RULE&quot;, id, brief) Then
          txtThePartyRule.Tag = Left(id, 38)
          txtThePartyRule = brief
        End If
end sub
private sub cmdThePartyRule_MenuClick(ByVal sCaption As String)
          txtThePartyRule.Tag = &quot;&quot;
          txtThePartyRule = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtQryCode.Text =&quot;&quot;
txtQryCode.Tag =&quot;&quot;
mIDQryCode =&quot;&quot;
' Разобрать XML
Dim XMLDocQryCode As New DOMDocument
On Error Resume Next
If (item.QryCode &lt;&gt; &quot;&quot;) Then
  Call XMLDocQryCode.loadXML(item.QryCode)
  If (Err.Number = 0 And XMLDocQryCode.parseError.errorCode = 0) Then
    Dim nodeQryCode As MSXML2.IXMLDOMNode
    txtQryCode.Tag = item.QryCode
    For Each nodeQryCode In XMLDocQryCode.childNodes.item(0).childNodes
      If (nodeQryCode.baseName = &quot;Brief&quot;) Then
       txtQryCode.Text = nodeQryCode.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDQryCode As String
    newIDQryCode = item.QryCode
    Dim XMLQryCodeID As String
    XMLQryCodeID = &quot;&lt;SQLData&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from RECEIVING_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDQryCode &amp; &quot;&lt;/ID&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
    XMLQryCodeID = XMLQryCodeID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsQryCode As New NamedValues
    Dim resQryCode As NamedValues
    Call parsQryCode.Add(&quot;xml&quot;, XMLQryCodeID)
    Set resQryCode = item.Application.Manager.GetSQLDataDialog(parsQryCode)
    If (Not resQryCode Is Nothing) Then
      Dim resStrQryCode As String
      resStrQryCode = resQryCode.item(&quot;RESULT&quot;).value
      If (resStrQryCode = &quot;OK&quot;) Then
        txtQryCode.Tag = Replace(resQryCode.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtQryCode.Text &lt;&gt; resQryCode.item(&quot;brief&quot;).value) Then
          mIDQryCode = newIDQryCode
          txtQryCode.Text = resQryCode.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.QryCode = vbNullString
    End If
  End If
Else
  Dim XMLQryCode As String
  XMLQryCode = &quot;&lt;SQLData&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;query&gt;select A.ID [КОД] , convert(varchar(30),A.NUMBER) +'  от ' + convert(varchar(30),A.ORD_DATE,111)  [Название], B.Name [Клиент]  from RECEIVING_ORDER A left join PARTNER B on A.PARTNER_ID=B.ID &lt;/query&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;IDFieldName&gt;КОД&lt;/IDFieldName&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLQryCode = XMLQryCode &amp; &quot;&lt;TheClientID&gt;&quot; &amp; mIDTheClient &amp; &quot;&lt;/TheClientID&gt;&quot;
  XMLQryCode = XMLQryCode &amp; &quot;&lt;/SQLData&gt;&quot;
  txtQryCode.Tag = XMLQryCode
End if 
On Error GoTo 0
 LoadBtnPictures cmdQryCode,cmdQryCode.tag
  cmdQryCode.RemoveAllMenu
  cmdQryCode.AddMenu &quot;Очистить&quot; 
txtTheClient.Text =&quot;&quot;
txtTheClient.Tag =&quot;&quot;
mIDTheClient =&quot;&quot;
' Разобрать XML
Dim XMLDocTheClient As New DOMDocument
On Error Resume Next
If (item.TheClient &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheClient.loadXML(item.TheClient)
  If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
    Dim nodeTheClient As MSXML2.IXMLDOMNode
    txtTheClient.Tag = item.TheClient
    For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
      If (nodeTheClient.baseName = &quot;Brief&quot;) Then
       txtTheClient.Text = nodeTheClient.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheClient As String
    newIDTheClient = item.TheClient
    Dim XMLTheClientID As String
    XMLTheClientID = &quot;&lt;SQLData&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheClient &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;QryCodeID&gt;&quot; &amp; mIDQryCode &amp; &quot;&lt;/QryCodeID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheClient As New NamedValues
    Dim resTheClient As NamedValues
    Call parsTheClient.Add(&quot;xml&quot;, XMLTheClientID)
    Set resTheClient = item.Application.Manager.GetSQLDataDialog(parsTheClient)
    If (Not resTheClient Is Nothing) Then
      Dim resStrTheClient As String
      resStrTheClient = resTheClient.item(&quot;RESULT&quot;).value
      If (resStrTheClient = &quot;OK&quot;) Then
        txtTheClient.Tag = Replace(resTheClient.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheClient.Text &lt;&gt; resTheClient.item(&quot;brief&quot;).value) Then
          mIDTheClient = newIDTheClient
          txtTheClient.Text = resTheClient.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheClient = vbNullString
    End If
  End If
Else
  Dim XMLTheClient As String
  XMLTheClient = &quot;&lt;SQLData&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClient = XMLTheClient &amp; &quot;&lt;QryCodeID&gt;&quot; &amp; mIDQryCode &amp; &quot;&lt;/QryCodeID&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheClient.Tag = XMLTheClient
  Call cmdTheClient_Click()
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheClient,cmdTheClient.tag
  cmdTheClient.RemoveAllMenu
  cmdTheClient.Visible = false 
dtpProcessDate = date
if item.ProcessDate &lt;&gt; 0 then
 dtpProcessDate = item.ProcessDate
else
 dtpProcessDate.value = null
end if
  on error resume next
txtSupplier = item.Supplier
  on error resume next
txtTTN = item.TTN
dtpTTNDate = date
if item.TTNDate &lt;&gt; 0 then
 dtpTTNDate = item.TTNDate
else
 dtpTTNDate.value = null
end if
  on error resume next
txtTranspNumber = item.TranspNumber
  on error resume next
txtContainer = item.Container
  on error resume next
txtStampNumber = item.StampNumber
  on error resume next
txtStampStatus = item.StampStatus
dtpTrack_time_in = now
if item.Track_time_in &lt;&gt; 0 then
 dtpTrack_time_in = item.Track_time_in
else
 dtpTrack_time_in.value = null
end if
dtptrack_time_out = now
if item.track_time_out &lt;&gt; 0 then
 dtptrack_time_out = item.track_time_out
else
 dtptrack_time_out.value = null
end if
txttemp_in_track = item.temp_in_track
If Not item.ThePartyRule Is Nothing Then
  txtThePartyRule.Tag = item.ThePartyRule.id
  txtThePartyRule = item.ThePartyRule.brief
else
  txtThePartyRule.Tag = &quot;&quot; 
  txtThePartyRule = &quot;&quot; 
End If
 LoadBtnPictures cmdThePartyRule,cmdThePartyRule.tag
  cmdThePartyRule.RemoveAllMenu
  cmdThePartyRule.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
txtTheClient.Tag = AddSQLRefIds(txtTheClient.Tag, &quot;QryCode&quot;, txtQryCode.Tag)
txtQryCode.Tag = AddSQLRefIds(txtQryCode.Tag, &quot;TheClient&quot;, txtTheClient.Tag)
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.QryCode = txtQryCode.Tag
item.TheClient = txtTheClient.Tag
  if  isnull(dtpProcessDate) then
    item.ProcessDate = 0
  else
    item.ProcessDate = dtpProcessDate.value
  end if
item.Supplier = txtSupplier
item.TTN = txtTTN
  if  isnull(dtpTTNDate) then
    item.TTNDate = 0
  else
    item.TTNDate = dtpTTNDate.value
  end if
item.TranspNumber = txtTranspNumber
item.Container = txtContainer
item.StampNumber = txtStampNumber
item.StampStatus = txtStampStatus
  if  isnull(dtpTrack_time_in) then
    item.Track_time_in = 0
  else
    item.Track_time_in = dtpTrack_time_in.value
  end if
  if  isnull(dtptrack_time_out) then
    item.track_time_out = 0
  else
    item.track_time_out = dtptrack_time_out.value
  end if
item.temp_in_track = cdbl(txttemp_in_track)
If txtThePartyRule.Tag &lt;&gt; &quot;&quot; Then
  Set item.ThePartyRule = Item.Application.FindRowObject(&quot;ITTD_RULE&quot;,txtThePartyRule.Tag)
Else
  Set item.ThePartyRule = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTIN_EPLadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNumber"/><Properties Name="Caption" PropValue="Палета:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNumber"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Палета"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPalWeight"/><Properties Name="Caption" PropValue="Вес палеты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPalWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Вес палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Пустые поддоны к заказу
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheNumber_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNumber_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTPL_DEF&quot;, id, brief) Then
          txtTheNumber.Tag = Left(id, 38)
          txtTheNumber = brief
        End If
end sub
private sub cmdTheNumber_MenuClick(ByVal sCaption As String)
          txtTheNumber.Tag = &quot;&quot;
          txtTheNumber = &quot;&quot;
End sub
private sub txtPalWeight_Validate(cancel as boolean)
if txtPalWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPalWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  elseif Val(txtPalWeight.text) &lt; -922337203685477.5808 or Val(txtPalWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPalWeight.SetFocus 
  end if
end if
end sub
Private Sub txtPalWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPalWeight_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheNumber Is Nothing Then
  txtTheNumber.Tag = item.TheNumber.id
  txtTheNumber = item.TheNumber.brief
else
  txtTheNumber.Tag = &quot;&quot; 
  txtTheNumber = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNumber,cmdTheNumber.tag
  cmdTheNumber.RemoveAllMenu
  cmdTheNumber.AddMenu &quot;Очистить&quot; 
txtPalWeight = item.PalWeight
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtTheNumber.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheNumber = Item.Application.FindRowObject(&quot;ITTPL_DEF&quot;,txtTheNumber.Tag)
Else
  Set item.TheNumber = Nothing
End If
item.PalWeight = cdbl(txtPalWeight)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_QLINE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_QLINE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Строки заказа"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_QLINE режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot;
  Open s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_PALET_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_PALET"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Палеты к строке"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_PALET режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot;
  Open s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_SRV_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_SRV"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Услуги к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_SRV режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot;
  Open s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_DEF_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_DEF"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Описание"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_DEF режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot;
  Open s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_EPL_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_EPL"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Пустые поддоны к заказу"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Поддоны к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_EPL режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot;
  Open s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_QLINE_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_QLINEread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Строки заказа"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_QLINE режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot;
  Open s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_PALET_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_PALETread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Палеты к строке"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_PALET режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot;
  Open s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_SRV_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_SRVread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Услуги к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_SRV режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot;
  Open s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_DEF_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_DEFread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Описание"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_DEF режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot;
  Open s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_EPL_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_EPLread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Пустые поддоны к заказу"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Поддоны к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_EPL режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot;
  Open s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_DEF_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_DEF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_DEF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editITTIN_DEF" ControlIndex="0" PROGID="ITTINGUI.ITTIN_DEFread"><Properties Name="Name" PropValue="editITTIN_DEF"/></ControlData><ControlData Name="cmdITTIN_DEFSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_DEFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_DEFCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_DEFRef_Click()
  on error resume next
  Item.ITTIN_DEF.Refresh
  cmdITTIN_DEFAdd_Click
End Sub
Private Sub cmdITTIN_DEFCfg_Click()
    on error resume next 
    editITTIN_DEF.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;ITTIN_editITTIN_DEF_read&quot; For Output As #ff
    print #ff, editITTIN_DEF.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdITTIN_DEFAdd_Click()
  on error resume next
 Set editITTIN_DEF.Item = Item.ITTIN_DEF.Item(1)
 editITTIN_DEF.InitPanel
 cmdITTIN_DEFSave.Enabled = False
End Sub
Private Sub cmdITTIN_DEFDel_Click()
  on error resume next
End Sub
Private Sub editITTIN_DEF_Changed()
 cmdITTIN_DEFSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editITTIN_DEF.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdITTIN_DEFSave_Click()
  on error resume next
End Sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_DEFSave,cmdITTIN_DEFSave.tag
  LoadBtnPictures cmdITTIN_DEFRef,cmdITTIN_DEFRef.tag
  LoadBtnPictures cmdITTIN_DEFCfg,cmdITTIN_DEFCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;ITTIN_editITTIN_DEF_read&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editITTIN_DEF.PanelCustomisationString = buf
  cmdITTIN_DEFAdd_click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      editITTIN_DEF.Top = 40 * Screen.TwipsPerPixelX
      editITTIN_DEF.Left = 5 * Screen.TwipsPerPixelX
      editITTIN_DEF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editITTIN_DEF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
  editITTIN_DEF.Save
if editITTIN_DEF.item.Changed then
  editITTIN_DEF.item.Save
end if
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editITTIN_DEF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_DEF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_QLINE_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_QLINE" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlITTIN_QLINE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridITTIN_QLINE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_QLINE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_QLINEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_QLINEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_QLINEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_QLINERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_QLINEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_QLINECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_QLINEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_QLINERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_QLINERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_QLINEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridITTIN_PALET" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_PALET"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_PALETAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_PALETEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_PALETDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_PALETRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_PALETPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_PALETCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_PALETFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_PALETRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_PALETRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_PALETAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_QLINE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Строки заказа"/><Properties Name="Name" PropValue="mnuPopupITTIN_QLINE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_QLINEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_QLINEAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_QLINEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_QLINEEdit"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_QLINEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_QLINEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_QLINEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_QLINEOpen"/></ControlData><ControlData Name="mnuITTIN_QLINERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_QLINERef"/></ControlData><ControlData Name="mnuITTIN_QLINES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_QLINES1"/></ControlData><ControlData Name="mnuITTIN_QLINEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_QLINEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><ControlData Name="mnuITTIN_QLINECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_QLINECOPY"/></ControlData><ControlData Name="mnuITTIN_QLINECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_QLINECUT"/></ControlData><ControlData Name="mnuITTIN_QLINEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_QLINEPASTE"/></ControlData><ControlData Name="mnuITTIN_QLINECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECHANGE"/></ControlData><ControlData Name="mnuITTIN_QLINECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_QLINEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_QLINEPrn"/></ControlData><ControlData Name="mnuITTIN_QLINECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECfg"/></ControlData><ControlData Name="mnuITTIN_QLINEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_QLINEFind"/></ControlData><ControlData Name="mnuITTIN_QLINEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_QLINEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_QLINE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_QLINE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupITTIN_PALET" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Палеты к строке"/><Properties Name="Name" PropValue="mnuPopupITTIN_PALET"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_PALETAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_PALETAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_PALETEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_PALETEdit"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_PALETDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_PALETDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_PALETOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_PALETOpen"/></ControlData><ControlData Name="mnuITTIN_PALETRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_PALETRef"/></ControlData><ControlData Name="mnuITTIN_PALETS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_PALETS1"/></ControlData><ControlData Name="mnuITTIN_PALETBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_PALETBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><ControlData Name="mnuITTIN_PALETCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_PALETCOPY"/></ControlData><ControlData Name="mnuITTIN_PALETCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_PALETCUT"/></ControlData><ControlData Name="mnuITTIN_PALETPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_PALETPASTE"/></ControlData><ControlData Name="mnuITTIN_PALETCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCHANGE"/></ControlData><ControlData Name="mnuITTIN_PALETCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_PALETPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_PALETPrn"/></ControlData><ControlData Name="mnuITTIN_PALETCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCfg"/></ControlData><ControlData Name="mnuITTIN_PALETFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_PALETFind"/></ControlData><ControlData Name="mnuITTIN_PALETAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_PALETAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_PALET" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_PALET"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_QLINE as object
private menuActionITTIN_QLINE as string
private fndITTIN_PALET as object
private menuActionITTIN_PALET as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlITTIN_QLINE_PositionChanged()
  pnlITTIN_QLINE.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridITTIN_QLINE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_QLINECfg_Click
        End If
    End If
end sub

private sub gridITTIN_QLINE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_QLINE
End If
end sub
private sub mnuITTIN_QLINEAdd_click()
   menuActionITTIN_QLINE =&quot;ADD&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEEdit_click()
   menuActionITTIN_QLINE =&quot;EDIT&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEDelete_click()
   menuActionITTIN_QLINE =&quot;DEL&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEOpen_click()
   menuActionITTIN_QLINE =&quot;RUN&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINERef_click()
   menuActionITTIN_QLINE =&quot;REF&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
  Private Sub mnuITTIN_QLINECOPY_Click()
    On Error Resume Next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_QLINE.Row &gt; 0 Then
     If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_QLINECUT_Click()
    On Error Resume Next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_QLINE.Row &gt; 0 Then
     If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_QLINE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_QLINECHANGE_Click()
  On Error Resume Next
  If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
  If gridITTIN_QLINE.Row &gt; 0 Then
   If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_QLINE.ItemCount = u.parent.Count
      gridITTIN_QLINE.RefreshRowIndex gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_QLINECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_QLINEPrn_click()
   menuActionITTIN_QLINE =&quot;PRN&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINECfg_click()
   menuActionITTIN_QLINE =&quot;CFG&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEFind_click()
   menuActionITTIN_QLINE =&quot;FND&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEAcc_click()
   menuActionITTIN_QLINE =&quot;ACC&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub menuTimerITTIN_QLINE_timer()
   menuTimerITTIN_QLINE.enabled = false
   if menuActionITTIN_QLINE =&quot;ADD&quot; then cmdITTIN_QLINEADD_CLick
   if menuActionITTIN_QLINE =&quot;EDIT&quot; then cmdITTIN_QLINEEDIT_CLick
   if menuActionITTIN_QLINE =&quot;DEL&quot; then cmdITTIN_QLINEDEL_CLick
   if menuActionITTIN_QLINE =&quot;RUN&quot; then cmdITTIN_QLINERUN_CLick
   if menuActionITTIN_QLINE =&quot;REF&quot; then cmdITTIN_QLINEREF_CLick
   if menuActionITTIN_QLINE =&quot;PRN&quot; then cmdITTIN_QLINEPRN_CLick
   if menuActionITTIN_QLINE =&quot;CFG&quot; then cmdITTIN_QLINECFG_CLick
   if menuActionITTIN_QLINE =&quot;FND&quot; then cmdITTIN_QLINEFND_CLick
   if menuActionITTIN_QLINE =&quot;ACC&quot; then cmdITTIN_QLINEACC_CLick
   menuActionITTIN_QLINE =&quot;&quot;
end sub
Private Sub cmdITTIN_QLINECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_QLINE,&quot;gridITTIN_QLINE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_QLINEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_QLINE,&quot;Строки заказа&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_QLINERef_Click()
  on error resume next
  item.ITTIN_QLINE.Refresh
  gridITTIN_QLINE.itemCount = item.ITTIN_QLINE.count
  gridITTIN_QLINE.Refetch
  gridITTIN_QLINE.Refresh
End Sub
Private Sub cmdITTIN_QLINEAcc_Click()
On Error Resume Next
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
If gridITTIN_QLINE.Row &gt; 0 Then
 If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_QLINEEdit_Click()
  on error resume next
End Sub
Private Sub cmdITTIN_QLINEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTIN_QLINEAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_QLINEFnd_Click()
  on error resume next
  fndITTIN_QLINE.ShowForm
End Sub
Private Sub cmdITTIN_QLINERun_Click()
  on error resume next
  gridITTIN_QLINE_DblClick
End Sub
Private Sub gridITTIN_QLINE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_QLINE.LoadRow gridITTIN_QLINE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_QLINE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_QLINE_DblClick()
  cmdITTIN_QLINEEdit_Click
End Sub
Private Sub gridITTIN_QLINE_KeyPress(KeyAscii As Integer)
  If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_QLINE.FindOnPress KeyAscii
End Sub

Private Sub pnlITTIN_QLINE_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridITTIN_QLINE.Left = Left
  gridITTIN_QLINE.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTIN_QLINE.Width = Width
  gridITTIN_QLINE.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTIN_QLINEAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINERef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINECfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINERun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdITTIN_QLINEEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdITTIN_QLINEDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTIN_QLINERef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTIN_QLINEPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTIN_QLINECfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTIN_QLINEFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTIN_QLINERun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTIN_QLINEAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuITTIN_QLINEPASTE_Click()
On Error Resume Next
End Sub
Private Sub cmdITTIN_PALETCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_PALET,&quot;gridITTIN_PALET&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_PALETPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_PALET,&quot;Палеты к строке&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_PALETAcc_Click()
On Error Resume Next
If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
If gridITTIN_PALET.Row &gt; 0 Then
 If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_PALETFnd_Click()
  on error resume next
  fndITTIN_PALET.ShowForm
End Sub
Private Sub cmdITTIN_PALETRun_Click()
  on error resume next
  gridITTIN_PALET_DblClick
End Sub
Private Sub pnlITTIN_QLINE_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridITTIN_PALET.Left = Left
  gridITTIN_PALET.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTIN_PALET.Width = Width
  gridITTIN_PALET.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTIN_PALETAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdITTIN_PALETEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdITTIN_PALETDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTIN_PALETRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTIN_PALETPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTIN_PALETCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTIN_PALETFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTIN_PALETRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTIN_PALETAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdITTIN_PALETRef_Click()
  on error resume next
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
If gridITTIN_QLINE.Row &gt; 0 Then
 If gridITTIN_QLINE.RowIndex ( gridITTIN_QLINE.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTIN_PALET.refresh
   gridITTIN_PALET.itemcount=gu.ITTIN_PALET.count
   gridITTIN_PALET.refetch
   gridITTIN_PALET.refresh
 else
  gridITTIN_PALET.columns.clear
  gridITTIN_PALET.itemcount=0
 End If
else
 gridITTIN_PALET.columns.clear
 gridITTIN_PALET.itemcount=0
End If
End Sub
Private Sub cmdITTIN_PALETEdit_Click()
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdITTIN_PALETDel_Click()
  on error resume next
End Sub
Private Sub cmdITTIN_PALETAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridITTIN_QLINE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridITTIN_QLINE.ItemCount = 0 Then 
  gridITTIN_PALET.ItemCount=0
  Exit Sub
End If
If gridITTIN_QLINE.Row &gt; 0 Then
  If LastRow &lt;&gt; gridITTIN_QLINE.Row And LastRow &gt; 0 Then
    gridITTIN_QLINE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridITTIN_QLINE.GetRowData(gridITTIN_QLINE.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridITTIN_QLINE.RowIndex ( gridITTIN_QLINE.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridITTIN_QLINE.Row or gridITTIN_PALET.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTIN_PALET.Preparegrid gridITTIN_PALET
  gridITTIN_PALET.ItemCount=0
    LoadGridLayout gridITTIN_PALET
    Set fndITTIN_PALET = Nothing
    Set fndITTIN_PALET = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndITTIN_PALET.Init gridITTIN_PALET
  gridITTIN_PALET.ItemCount=gu.ITTIN_PALET.Count
  End If
 End If
End If
End Sub
Private Sub gridITTIN_PALET_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ITTIN_PALET.LoadRow gridITTIN_PALET, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridITTIN_PALET_KeyPress(KeyAscii As Integer)
  If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_PALET.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_PALET_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Private Sub gridITTIN_PALET_DblClick()
    cmdITTIN_PALETEdit_click
End Sub
Private Sub gridITTIN_PALET_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
 If gridITTIN_PALET.Row &gt; 0 Then
   If LastRow &lt;&gt; gridITTIN_PALET.Row And LastRow &gt; 0 Then
     gridITTIN_PALET.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridITTIN_PALET.GetRowData(gridITTIN_PALET.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuITTIN_PALETPASTE_Click()
On Error Resume Next
End Sub
'Hidden GRID Setup...
private sub gridITTIN_PALET_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_PALETCfg_Click
        End If
    End If
end sub

private sub gridITTIN_PALET_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_PALET
End If
end sub
private sub mnuITTIN_PALETAdd_click()
   menuActionITTIN_PALET =&quot;ADD&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETEdit_click()
   menuActionITTIN_PALET =&quot;EDIT&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETDelete_click()
   menuActionITTIN_PALET =&quot;DEL&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETOpen_click()
   menuActionITTIN_PALET =&quot;RUN&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETRef_click()
   menuActionITTIN_PALET =&quot;REF&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
  Private Sub mnuITTIN_PALETCOPY_Click()
    On Error Resume Next
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.Row &gt; 0 Then
     If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_PALETCUT_Click()
    On Error Resume Next
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.Row &gt; 0 Then
     If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_PALET.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_PALETCHANGE_Click()
  On Error Resume Next
  If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
  If gridITTIN_PALET.Row &gt; 0 Then
   If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_PALET.ItemCount = u.parent.Count
      gridITTIN_PALET.RefreshRowIndex gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_PALETCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_PALETPrn_click()
   menuActionITTIN_PALET =&quot;PRN&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETCfg_click()
   menuActionITTIN_PALET =&quot;CFG&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETFind_click()
   menuActionITTIN_PALET =&quot;FND&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETAcc_click()
   menuActionITTIN_PALET =&quot;ACC&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub menuTimerITTIN_PALET_timer()
   menuTimerITTIN_PALET.enabled = false
   if menuActionITTIN_PALET =&quot;ADD&quot; then cmdITTIN_PALETADD_CLick
   if menuActionITTIN_PALET =&quot;EDIT&quot; then cmdITTIN_PALETEDIT_CLick
   if menuActionITTIN_PALET =&quot;DEL&quot; then cmdITTIN_PALETDEL_CLick
   if menuActionITTIN_PALET =&quot;RUN&quot; then cmdITTIN_PALETRUN_CLick
   if menuActionITTIN_PALET =&quot;REF&quot; then cmdITTIN_PALETREF_CLick
   if menuActionITTIN_PALET =&quot;PRN&quot; then cmdITTIN_PALETPRN_CLick
   if menuActionITTIN_PALET =&quot;CFG&quot; then cmdITTIN_PALETCFG_CLick
   if menuActionITTIN_PALET =&quot;FND&quot; then cmdITTIN_PALETFND_CLick
   if menuActionITTIN_PALET =&quot;ACC&quot; then cmdITTIN_PALETACC_CLick
   menuActionITTIN_PALET =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_QLINEAdd,cmdITTIN_QLINEAdd.tag
  LoadBtnPictures cmdITTIN_QLINEEdit,cmdITTIN_QLINEEdit.tag
  LoadBtnPictures cmdITTIN_QLINEDel,cmdITTIN_QLINEDel.tag
  LoadBtnPictures cmdITTIN_QLINERef,cmdITTIN_QLINERef.tag
  LoadBtnPictures cmdITTIN_QLINEPrn,cmdITTIN_QLINEPrn.tag
  LoadBtnPictures cmdITTIN_QLINEFnd,cmdITTIN_QLINEFnd.tag
  LoadBtnPictures cmdITTIN_QLINERun,cmdITTIN_QLINERun.tag
  LoadBtnPictures cmdITTIN_QLINEAcc,cmdITTIN_QLINEAcc.tag
  LoadBtnPictures cmdITTIN_QLINECfg,cmdITTIN_QLINECfg.tag
  item.ITTIN_QLINE.PrepareGrid gridITTIN_QLINE
  LoadGridLayout gridITTIN_QLINE
  Set fndITTIN_QLINE = Nothing
  On Error Resume Next
  Set fndITTIN_QLINE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_QLINE.Init gridITTIN_QLINE
  LoadBtnPictures cmdITTIN_PALETAdd,cmdITTIN_PALETAdd.tag
  LoadBtnPictures cmdITTIN_PALETEdit,cmdITTIN_PALETEdit.tag
  LoadBtnPictures cmdITTIN_PALETDel,cmdITTIN_PALETDel.tag
  LoadBtnPictures cmdITTIN_PALETRef,cmdITTIN_PALETRef.tag
  LoadBtnPictures cmdITTIN_PALETPrn,cmdITTIN_PALETPrn.tag
  LoadBtnPictures cmdITTIN_PALETFnd,cmdITTIN_PALETFnd.Tag
  LoadBtnPictures cmdITTIN_PALETCfg,cmdITTIN_PALETCfg.tag
  LoadBtnPictures cmdITTIN_PALETRun,cmdITTIN_PALETRun.Tag
  LoadBtnPictures cmdITTIN_PALETAcc,cmdITTIN_PALETAcc.Tag
  gridITTIN_PALET.Columns.Clear
  gridITTIN_PALET.ItemCount=0
  cmdITTIN_PALETRef_Click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

pnlITTIN_QLINE.RestorePosition
  gridITTIN_QLINE_RowColChange gridITTIN_QLINE.Row,-1
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_QLINE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_QLINE = nothing
  set fndITTIN_PALET = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_SRV_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTIN_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Услуги к заказу"/><Properties Name="Name" PropValue="mnuPopupITTIN_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_SRVAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_SRVEdit"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_SRVDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_SRVOpen"/></ControlData><ControlData Name="mnuITTIN_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_SRVRef"/></ControlData><ControlData Name="mnuITTIN_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_SRVS1"/></ControlData><ControlData Name="mnuITTIN_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_SRVBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><ControlData Name="mnuITTIN_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_SRVCOPY"/></ControlData><ControlData Name="mnuITTIN_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_SRVCUT"/></ControlData><ControlData Name="mnuITTIN_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_SRVPASTE"/></ControlData><ControlData Name="mnuITTIN_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCHANGE"/></ControlData><ControlData Name="mnuITTIN_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_SRVPrn"/></ControlData><ControlData Name="mnuITTIN_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCfg"/></ControlData><ControlData Name="mnuITTIN_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_SRVFind"/></ControlData><ControlData Name="mnuITTIN_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_SRV as object
private menuActionITTIN_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_SRV,&quot;gridITTIN_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_SRV,&quot;Услуги к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_SRVRef_Click()
  on error resume next
  item.ITTIN_SRV.Refresh
  gridITTIN_SRV.itemCount = item.ITTIN_SRV.count
  gridITTIN_SRV.Refetch
  gridITTIN_SRV.Refresh
End Sub
Private Sub cmdITTIN_SRVAcc_Click()
On Error Resume Next
If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
If gridITTIN_SRV.Row &gt; 0 Then
 If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_SRVEdit_Click()
  on error resume next
End Sub
Private Sub cmdITTIN_SRVDel_Click()
  on error resume next
End Sub
Private Sub cmdITTIN_SRVAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_SRVFnd_Click()
  on error resume next
  fndITTIN_SRV.ShowForm
End Sub
Private Sub cmdITTIN_SRVRun_Click()
  on error resume next
  gridITTIN_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_SRV.LoadRow gridITTIN_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTIN_SRV_DblClick()
  cmdITTIN_SRVEdit_Click
End Sub
Private Sub gridITTIN_SRV_KeyPress(KeyAscii As Integer)
  If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTIN_SRV.Row And LastRow &gt; 0 Then
  gridITTIN_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTIN_SRV.GetRowData(gridITTIN_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTIN_SRVPASTE_Click()
On Error Resume Next
End Sub
'Hidden GRID Setup...
private sub gridITTIN_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_SRVCfg_Click
        End If
    End If
end sub

private sub gridITTIN_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_SRV
End If
end sub
private sub mnuITTIN_SRVAdd_click()
   menuActionITTIN_SRV =&quot;ADD&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVEdit_click()
   menuActionITTIN_SRV =&quot;EDIT&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVDelete_click()
   menuActionITTIN_SRV =&quot;DEL&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVOpen_click()
   menuActionITTIN_SRV =&quot;RUN&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVRef_click()
   menuActionITTIN_SRV =&quot;REF&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
  Private Sub mnuITTIN_SRVCOPY_Click()
    On Error Resume Next
    If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
    If gridITTIN_SRV.Row &gt; 0 Then
     If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_SRVCUT_Click()
    On Error Resume Next
    If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
    If gridITTIN_SRV.Row &gt; 0 Then
     If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_SRVCHANGE_Click()
  On Error Resume Next
  If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
  If gridITTIN_SRV.Row &gt; 0 Then
   If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_SRV.ItemCount = u.parent.Count
      gridITTIN_SRV.RefreshRowIndex gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_SRVPrn_click()
   menuActionITTIN_SRV =&quot;PRN&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVCfg_click()
   menuActionITTIN_SRV =&quot;CFG&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVFind_click()
   menuActionITTIN_SRV =&quot;FND&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVAcc_click()
   menuActionITTIN_SRV =&quot;ACC&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub menuTimerITTIN_SRV_timer()
   menuTimerITTIN_SRV.enabled = false
   if menuActionITTIN_SRV =&quot;ADD&quot; then cmdITTIN_SRVADD_CLick
   if menuActionITTIN_SRV =&quot;EDIT&quot; then cmdITTIN_SRVEDIT_CLick
   if menuActionITTIN_SRV =&quot;DEL&quot; then cmdITTIN_SRVDEL_CLick
   if menuActionITTIN_SRV =&quot;RUN&quot; then cmdITTIN_SRVRUN_CLick
   if menuActionITTIN_SRV =&quot;REF&quot; then cmdITTIN_SRVREF_CLick
   if menuActionITTIN_SRV =&quot;PRN&quot; then cmdITTIN_SRVPRN_CLick
   if menuActionITTIN_SRV =&quot;CFG&quot; then cmdITTIN_SRVCFG_CLick
   if menuActionITTIN_SRV =&quot;FND&quot; then cmdITTIN_SRVFND_CLick
   if menuActionITTIN_SRV =&quot;ACC&quot; then cmdITTIN_SRVACC_CLick
   menuActionITTIN_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_SRVAdd,cmdITTIN_SRVAdd.tag
  LoadBtnPictures cmdITTIN_SRVEdit,cmdITTIN_SRVEdit.tag
  LoadBtnPictures cmdITTIN_SRVDel,cmdITTIN_SRVDel.tag
  LoadBtnPictures cmdITTIN_SRVRef,cmdITTIN_SRVRef.tag
  LoadBtnPictures cmdITTIN_SRVPrn,cmdITTIN_SRVPrn.tag
  LoadBtnPictures cmdITTIN_SRVFnd,cmdITTIN_SRVFnd.tag
  LoadBtnPictures cmdITTIN_SRVRun,cmdITTIN_SRVRun.tag
  LoadBtnPictures cmdITTIN_SRVAcc,cmdITTIN_SRVAcc.tag
  LoadBtnPictures cmdITTIN_SRVCfg,cmdITTIN_SRVCfg.tag
  item.ITTIN_SRV.PrepareGrid gridITTIN_SRV
  LoadGridLayout gridITTIN_SRV
  Set fndITTIN_SRV = Nothing
  On Error Resume Next
  Set fndITTIN_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_SRV.Init gridITTIN_SRV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTIN_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTIN_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_EPL_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_EPL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_EPL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTIN_EPL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_EPL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_EPLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_EPLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_EPLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_EPLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_EPLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_EPLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_EPLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_EPLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_EPLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_EPLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_EPL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Поддоны к заказу"/><Properties Name="Name" PropValue="mnuPopupITTIN_EPL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_EPLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_EPLAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_EPLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_EPLEdit"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_EPLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_EPLDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_EPLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_EPLOpen"/></ControlData><ControlData Name="mnuITTIN_EPLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_EPLRef"/></ControlData><ControlData Name="mnuITTIN_EPLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_EPLS1"/></ControlData><ControlData Name="mnuITTIN_EPLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_EPLBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><ControlData Name="mnuITTIN_EPLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_EPLCOPY"/></ControlData><ControlData Name="mnuITTIN_EPLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_EPLCUT"/></ControlData><ControlData Name="mnuITTIN_EPLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_EPLPASTE"/></ControlData><ControlData Name="mnuITTIN_EPLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCHANGE"/></ControlData><ControlData Name="mnuITTIN_EPLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_EPLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_EPLPrn"/></ControlData><ControlData Name="mnuITTIN_EPLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCfg"/></ControlData><ControlData Name="mnuITTIN_EPLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_EPLFind"/></ControlData><ControlData Name="mnuITTIN_EPLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_EPLAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_EPL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_EPL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Пустые поддоны к заказу
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_EPL as object
private menuActionITTIN_EPL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_EPLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_EPL,&quot;gridITTIN_EPL&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_EPLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_EPL,&quot;Поддоны к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_EPLRef_Click()
  on error resume next
  item.ITTIN_EPL.Refresh
  gridITTIN_EPL.itemCount = item.ITTIN_EPL.count
  gridITTIN_EPL.Refetch
  gridITTIN_EPL.Refresh
End Sub
Private Sub cmdITTIN_EPLAcc_Click()
On Error Resume Next
If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
If gridITTIN_EPL.Row &gt; 0 Then
 If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_EPLEdit_Click()
  on error resume next
End Sub
Private Sub cmdITTIN_EPLDel_Click()
  on error resume next
End Sub
Private Sub cmdITTIN_EPLAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_EPLFnd_Click()
  on error resume next
  fndITTIN_EPL.ShowForm
End Sub
Private Sub cmdITTIN_EPLRun_Click()
  on error resume next
  gridITTIN_EPL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_EPL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_EPL.LoadRow gridITTIN_EPL, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_EPL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTIN_EPL_DblClick()
  cmdITTIN_EPLEdit_Click
End Sub
Private Sub gridITTIN_EPL_KeyPress(KeyAscii As Integer)
  If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_EPL.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_EPL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTIN_EPL.Row And LastRow &gt; 0 Then
  gridITTIN_EPL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTIN_EPL.GetRowData(gridITTIN_EPL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTIN_EPLPASTE_Click()
On Error Resume Next
End Sub
'Hidden GRID Setup...
private sub gridITTIN_EPL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_EPLCfg_Click
        End If
    End If
end sub

private sub gridITTIN_EPL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_EPL
End If
end sub
private sub mnuITTIN_EPLAdd_click()
   menuActionITTIN_EPL =&quot;ADD&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLEdit_click()
   menuActionITTIN_EPL =&quot;EDIT&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLDelete_click()
   menuActionITTIN_EPL =&quot;DEL&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLOpen_click()
   menuActionITTIN_EPL =&quot;RUN&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLRef_click()
   menuActionITTIN_EPL =&quot;REF&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
  Private Sub mnuITTIN_EPLCOPY_Click()
    On Error Resume Next
    If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
    If gridITTIN_EPL.Row &gt; 0 Then
     If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_EPLCUT_Click()
    On Error Resume Next
    If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
    If gridITTIN_EPL.Row &gt; 0 Then
     If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_EPL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_EPLCHANGE_Click()
  On Error Resume Next
  If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
  If gridITTIN_EPL.Row &gt; 0 Then
   If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_EPL.ItemCount = u.parent.Count
      gridITTIN_EPL.RefreshRowIndex gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_EPLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_EPLPrn_click()
   menuActionITTIN_EPL =&quot;PRN&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLCfg_click()
   menuActionITTIN_EPL =&quot;CFG&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLFind_click()
   menuActionITTIN_EPL =&quot;FND&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLAcc_click()
   menuActionITTIN_EPL =&quot;ACC&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub menuTimerITTIN_EPL_timer()
   menuTimerITTIN_EPL.enabled = false
   if menuActionITTIN_EPL =&quot;ADD&quot; then cmdITTIN_EPLADD_CLick
   if menuActionITTIN_EPL =&quot;EDIT&quot; then cmdITTIN_EPLEDIT_CLick
   if menuActionITTIN_EPL =&quot;DEL&quot; then cmdITTIN_EPLDEL_CLick
   if menuActionITTIN_EPL =&quot;RUN&quot; then cmdITTIN_EPLRUN_CLick
   if menuActionITTIN_EPL =&quot;REF&quot; then cmdITTIN_EPLREF_CLick
   if menuActionITTIN_EPL =&quot;PRN&quot; then cmdITTIN_EPLPRN_CLick
   if menuActionITTIN_EPL =&quot;CFG&quot; then cmdITTIN_EPLCFG_CLick
   if menuActionITTIN_EPL =&quot;FND&quot; then cmdITTIN_EPLFND_CLick
   if menuActionITTIN_EPL =&quot;ACC&quot; then cmdITTIN_EPLACC_CLick
   menuActionITTIN_EPL =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_EPLAdd,cmdITTIN_EPLAdd.tag
  LoadBtnPictures cmdITTIN_EPLEdit,cmdITTIN_EPLEdit.tag
  LoadBtnPictures cmdITTIN_EPLDel,cmdITTIN_EPLDel.tag
  LoadBtnPictures cmdITTIN_EPLRef,cmdITTIN_EPLRef.tag
  LoadBtnPictures cmdITTIN_EPLPrn,cmdITTIN_EPLPrn.tag
  LoadBtnPictures cmdITTIN_EPLFnd,cmdITTIN_EPLFnd.tag
  LoadBtnPictures cmdITTIN_EPLRun,cmdITTIN_EPLRun.tag
  LoadBtnPictures cmdITTIN_EPLAcc,cmdITTIN_EPLAcc.tag
  LoadBtnPictures cmdITTIN_EPLCfg,cmdITTIN_EPLCfg.tag
  item.ITTIN_EPL.PrepareGrid gridITTIN_EPL
  LoadGridLayout gridITTIN_EPL
  Set fndITTIN_EPL = Nothing
  On Error Resume Next
  Set fndITTIN_EPL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_EPL.Init gridITTIN_EPL
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTIN_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTIN_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_EPL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_EPL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlread_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_DEF" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_DEF_read"><Properties Name="Name" PropValue="pnlITTIN_DEF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_QLINE" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_QLINE_read"><Properties Name="Name" PropValue="pnlITTIN_QLINE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_SRV" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_SRV_read"><Properties Name="Name" PropValue="pnlITTIN_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_EPL" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_EPL_read"><Properties Name="Name" PropValue="pnlITTIN_EPL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Приемка груза"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим read
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlITTIN_DEF.IsOK
if IsItOk then IsItOk = pnlITTIN_QLINE.IsOK
if IsItOk then IsItOk = pnlITTIN_SRV.IsOK
if IsItOk then IsItOk = pnlITTIN_EPL.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlITTIN_EPL.Visible = False
  pnlITTIN_SRV.Visible = False
  pnlITTIN_QLINE.Visible = False
  pnlITTIN_DEF.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ITTIN_DEF&quot;
     With pnlITTIN_DEF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_DEF.OnClick item,parentform
     End With
   Case &quot;ITTIN_QLINE&quot;
     With pnlITTIN_QLINE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_QLINE.OnClick item,parentform
     End With
   Case &quot;ITTIN_SRV&quot;
     With pnlITTIN_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_SRV.OnClick item,parentform
     End With
   Case &quot;ITTIN_EPL&quot;
     With pnlITTIN_EPL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_EPL.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Описание&quot;
ts.Tabs.Item(1).key = &quot;ITTIN_DEF&quot;
pnlITTIN_DEF.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_QLINE&quot;, &quot;Строки заказа&quot;)
pnlITTIN_QLINE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_SRV&quot;, &quot;Услуги к заказу&quot;)
pnlITTIN_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_EPL&quot;, &quot;Поддоны к заказу&quot;)
pnlITTIN_EPL.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ITTIN&quot;, &quot;ctlread_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlITTIN_DEF.CloseClass
 pnlITTIN_QLINE.CloseClass
 pnlITTIN_SRV.CloseClass
 pnlITTIN_EPL.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlITTIN_DEF.OnSave
 pnlITTIN_QLINE.OnSave
 pnlITTIN_SRV.OnSave
 pnlITTIN_EPL.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlITTIN_DEF.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_QLINE.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_EPL.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 4
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{49A919F7-94A6-49DE-9280-1EEAC973647B}&quot;
    i = i + 1
    m(i).Caption = &quot;Приемка завершена&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot;
    i = i + 1
    m(i).Caption = &quot;Идет приемка&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot;
    i = i + 1
    m(i).Caption = &quot;Приемка обработана&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot;
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{49A919F7-94A6-49DE-9280-1EEAC973647B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmread_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ITTINGUI.ctlread_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Приемка груза"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим read
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;read&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;read&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;read&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;read&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_DEF_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_DEFmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Описание"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_DEF режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot;
  Open s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_QLINE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_QLINEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Строки заказа"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_QLINE режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot;
  Open s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_PALET_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_PALETmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Палеты к строке"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_PALET режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot;
  Open s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_SRV_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_SRVmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Услуги к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_SRV режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot;
  Open s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_EPL_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_EPLmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Пустые поддоны к заказу"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Поддоны к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_EPL режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot;
  Open s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_DEF_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_DEF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_DEF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editITTIN_DEF" ControlIndex="0" PROGID="ITTINGUI.ITTIN_DEFmain"><Properties Name="Name" PropValue="editITTIN_DEF"/></ControlData><ControlData Name="cmdITTIN_DEFSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_DEFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_DEFCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_DEFRef_Click()
  on error resume next
  Item.ITTIN_DEF.Refresh
  cmdITTIN_DEFAdd_Click
End Sub
Private Sub cmdITTIN_DEFCfg_Click()
    on error resume next 
    editITTIN_DEF.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;ITTIN_editITTIN_DEF_main&quot; For Output As #ff
    print #ff, editITTIN_DEF.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdITTIN_DEFAdd_Click()
  on error resume next
 dim u as object
 If Item.ITTIN_DEF.Count = 0 Then
   set u=Item.ITTIN_DEF.Add
u.ProcessDate = date

 End If
 Set editITTIN_DEF.Item = Item.ITTIN_DEF.Item(1)
 editITTIN_DEF.InitPanel
 cmdITTIN_DEFSave.Enabled = True
End Sub
Private Sub cmdITTIN_DEFDel_Click()
  on error resume next
End Sub
Private Sub editITTIN_DEF_Changed()
 cmdITTIN_DEFSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editITTIN_DEF.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdITTIN_DEFSave_Click()
  on error resume next
    if editITTIN_DEF.IsOK then
    MousePointer = vbHourglass
    editITTIN_DEF.Save
  on error goto bye
    editITTIN_DEF.item.Save
    MousePointer = vbNormal
    cmdITTIN_DEFSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  editITTIN_DEF.item.REFRESH
  editITTIN_DEF.InitPanel
End Sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_DEFSave,cmdITTIN_DEFSave.tag
  LoadBtnPictures cmdITTIN_DEFRef,cmdITTIN_DEFRef.tag
  LoadBtnPictures cmdITTIN_DEFCfg,cmdITTIN_DEFCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;ITTIN_editITTIN_DEF_main&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editITTIN_DEF.PanelCustomisationString = buf
  cmdITTIN_DEFAdd_click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      editITTIN_DEF.Top = 40 * Screen.TwipsPerPixelX
      editITTIN_DEF.Left = 5 * Screen.TwipsPerPixelX
      editITTIN_DEF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editITTIN_DEF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
  editITTIN_DEF.Save
if editITTIN_DEF.item.Changed then
  editITTIN_DEF.item.Save
end if
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editITTIN_DEF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_DEF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_QLINE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_QLINE" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlITTIN_QLINE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridITTIN_QLINE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_QLINE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_QLINEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_QLINEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_QLINEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_QLINERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_QLINEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_QLINECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_QLINEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_QLINERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_QLINERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_QLINEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridITTIN_PALET" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_PALET"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_PALETAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_PALETEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_PALETDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_PALETRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_PALETPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_PALETCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_PALETFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_PALETRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_PALETRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_PALETAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_QLINE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Строки заказа"/><Properties Name="Name" PropValue="mnuPopupITTIN_QLINE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_QLINEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_QLINEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_QLINEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_QLINEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_QLINEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_QLINEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_QLINEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_QLINEOpen"/></ControlData><ControlData Name="mnuITTIN_QLINERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_QLINERef"/></ControlData><ControlData Name="mnuITTIN_QLINES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_QLINES1"/></ControlData><ControlData Name="mnuITTIN_QLINEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_QLINEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_QLINECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_QLINECOPY"/></ControlData><ControlData Name="mnuITTIN_QLINECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_QLINECUT"/></ControlData><ControlData Name="mnuITTIN_QLINEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_QLINEPASTE"/></ControlData><ControlData Name="mnuITTIN_QLINECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECHANGE"/></ControlData><ControlData Name="mnuITTIN_QLINECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_QLINEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_QLINEPrn"/></ControlData><ControlData Name="mnuITTIN_QLINECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECfg"/></ControlData><ControlData Name="mnuITTIN_QLINEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_QLINEFind"/></ControlData><ControlData Name="mnuITTIN_QLINEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_QLINEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_QLINE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_QLINE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupITTIN_PALET" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Палеты к строке"/><Properties Name="Name" PropValue="mnuPopupITTIN_PALET"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_PALETAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_PALETAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_PALETEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_PALETEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_PALETDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_PALETDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_PALETOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_PALETOpen"/></ControlData><ControlData Name="mnuITTIN_PALETRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_PALETRef"/></ControlData><ControlData Name="mnuITTIN_PALETS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_PALETS1"/></ControlData><ControlData Name="mnuITTIN_PALETBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_PALETBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_PALETCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_PALETCOPY"/></ControlData><ControlData Name="mnuITTIN_PALETCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_PALETCUT"/></ControlData><ControlData Name="mnuITTIN_PALETPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_PALETPASTE"/></ControlData><ControlData Name="mnuITTIN_PALETCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCHANGE"/></ControlData><ControlData Name="mnuITTIN_PALETCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_PALETPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_PALETPrn"/></ControlData><ControlData Name="mnuITTIN_PALETCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCfg"/></ControlData><ControlData Name="mnuITTIN_PALETFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_PALETFind"/></ControlData><ControlData Name="mnuITTIN_PALETAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_PALETAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_PALET" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_PALET"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_QLINE as object
private menuActionITTIN_QLINE as string
private fndITTIN_PALET as object
private menuActionITTIN_PALET as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlITTIN_QLINE_PositionChanged()
  pnlITTIN_QLINE.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridITTIN_QLINE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_QLINECfg_Click
        End If
    End If
end sub

private sub gridITTIN_QLINE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_QLINE
End If
end sub
private sub mnuITTIN_QLINEAdd_click()
   menuActionITTIN_QLINE =&quot;ADD&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEEdit_click()
   menuActionITTIN_QLINE =&quot;EDIT&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEDelete_click()
   menuActionITTIN_QLINE =&quot;DEL&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEOpen_click()
   menuActionITTIN_QLINE =&quot;RUN&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINERef_click()
   menuActionITTIN_QLINE =&quot;REF&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
  Private Sub mnuITTIN_QLINECOPY_Click()
    On Error Resume Next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_QLINE.Row &gt; 0 Then
     If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_QLINECUT_Click()
    On Error Resume Next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_QLINE.Row &gt; 0 Then
     If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_QLINE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_QLINECHANGE_Click()
  On Error Resume Next
  If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
  If gridITTIN_QLINE.Row &gt; 0 Then
   If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_QLINE.ItemCount = u.parent.Count
      gridITTIN_QLINE.RefreshRowIndex gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_QLINECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_QLINEPrn_click()
   menuActionITTIN_QLINE =&quot;PRN&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINECfg_click()
   menuActionITTIN_QLINE =&quot;CFG&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEFind_click()
   menuActionITTIN_QLINE =&quot;FND&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEAcc_click()
   menuActionITTIN_QLINE =&quot;ACC&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub menuTimerITTIN_QLINE_timer()
   menuTimerITTIN_QLINE.enabled = false
   if menuActionITTIN_QLINE =&quot;ADD&quot; then cmdITTIN_QLINEADD_CLick
   if menuActionITTIN_QLINE =&quot;EDIT&quot; then cmdITTIN_QLINEEDIT_CLick
   if menuActionITTIN_QLINE =&quot;DEL&quot; then cmdITTIN_QLINEDEL_CLick
   if menuActionITTIN_QLINE =&quot;RUN&quot; then cmdITTIN_QLINERUN_CLick
   if menuActionITTIN_QLINE =&quot;REF&quot; then cmdITTIN_QLINEREF_CLick
   if menuActionITTIN_QLINE =&quot;PRN&quot; then cmdITTIN_QLINEPRN_CLick
   if menuActionITTIN_QLINE =&quot;CFG&quot; then cmdITTIN_QLINECFG_CLick
   if menuActionITTIN_QLINE =&quot;FND&quot; then cmdITTIN_QLINEFND_CLick
   if menuActionITTIN_QLINE =&quot;ACC&quot; then cmdITTIN_QLINEACC_CLick
   menuActionITTIN_QLINE =&quot;&quot;
end sub
Private Sub cmdITTIN_QLINECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_QLINE,&quot;gridITTIN_QLINE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_QLINEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_QLINE,&quot;Строки заказа&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_QLINERef_Click()
  on error resume next
  item.ITTIN_QLINE.Refresh
  gridITTIN_QLINE.itemCount = item.ITTIN_QLINE.count
  gridITTIN_QLINE.Refetch
  gridITTIN_QLINE.Refresh
End Sub
Private Sub cmdITTIN_QLINEAcc_Click()
On Error Resume Next
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
If gridITTIN_QLINE.Row &gt; 0 Then
 If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_QLINEEdit_Click()
  on error resume next
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
If gridITTIN_QLINE.Row &gt; 0 then
 If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTIN_QLINE_main.Item = u
    again: frmITTIN_QLINE_main.NotFirstTime = False
    frmITTIN_QLINE_main.OnInit
    frmITTIN_QLINE_main.Show vbModal
    If frmITTIN_QLINE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_QLINE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTIN_QLINEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTIN_QLINEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTIN_QLINE.Add()
u.exp_date = DateSerial(1911, 11, 11)
   call GetNumValue(u, &quot;sequence&quot;, &quot;{E7F3EE01-4EC4-41D2-8657-BA22089DE0E5}&quot;,Now,&quot;IN%P&quot;, &quot;&quot;) 

      Set frmITTIN_QLINE_main.Item = u
      again: frmITTIN_QLINE_main.NotFirstTime = False
      frmITTIN_QLINE_main.OnInit
      frmITTIN_QLINE_main.Show vbModal
      If frmITTIN_QLINE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_QLINE.ItemCount = Item.ITTIN_QLINE.Count
        gridITTIN_QLINE.Refresh
        gridITTIN_QLINE.RefreshGroups
        gridITTIN_QLINE.Refreshsort
        gridITTIN_QLINE.MoveToBookmark u.ID &amp; &quot;ITTIN_QLINE&quot;
      Else
        Item.ITTIN_QLINE.Delete u.ID
        Item.ITTIN_QLINE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_QLINEFnd_Click()
  on error resume next
  fndITTIN_QLINE.ShowForm
End Sub
Private Sub cmdITTIN_QLINERun_Click()
  on error resume next
  gridITTIN_QLINE_DblClick
End Sub
Private Sub gridITTIN_QLINE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_QLINE.LoadRow gridITTIN_QLINE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_QLINE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_QLINE_DblClick()
  cmdITTIN_QLINEEdit_Click
End Sub
Private Sub gridITTIN_QLINE_KeyPress(KeyAscii As Integer)
  If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_QLINE.FindOnPress KeyAscii
End Sub

Private Sub pnlITTIN_QLINE_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridITTIN_QLINE.Left = Left
  gridITTIN_QLINE.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTIN_QLINE.Width = Width
  gridITTIN_QLINE.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTIN_QLINEAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINERef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINECfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINERun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdITTIN_QLINEEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdITTIN_QLINEDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTIN_QLINERef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTIN_QLINEPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTIN_QLINECfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTIN_QLINEFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTIN_QLINERun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTIN_QLINEAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuITTIN_QLINEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTIN_QLINE.Add()
    If GetFromBuffer(u) Then
      gridITTIN_QLINE.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdITTIN_PALETCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_PALET,&quot;gridITTIN_PALET&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_PALETPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_PALET,&quot;Палеты к строке&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_PALETAcc_Click()
On Error Resume Next
If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
If gridITTIN_PALET.Row &gt; 0 Then
 If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_PALETFnd_Click()
  on error resume next
  fndITTIN_PALET.ShowForm
End Sub
Private Sub cmdITTIN_PALETRun_Click()
  on error resume next
  gridITTIN_PALET_DblClick
End Sub
Private Sub pnlITTIN_QLINE_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridITTIN_PALET.Left = Left
  gridITTIN_PALET.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTIN_PALET.Width = Width
  gridITTIN_PALET.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTIN_PALETAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdITTIN_PALETEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdITTIN_PALETDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTIN_PALETRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTIN_PALETPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTIN_PALETCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTIN_PALETFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTIN_PALETRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTIN_PALETAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdITTIN_PALETRef_Click()
  on error resume next
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
If gridITTIN_QLINE.Row &gt; 0 Then
 If gridITTIN_QLINE.RowIndex ( gridITTIN_QLINE.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTIN_PALET.refresh
   gridITTIN_PALET.itemcount=gu.ITTIN_PALET.count
   gridITTIN_PALET.refetch
   gridITTIN_PALET.refresh
 else
  gridITTIN_PALET.columns.clear
  gridITTIN_PALET.itemcount=0
 End If
else
 gridITTIN_PALET.columns.clear
 gridITTIN_PALET.itemcount=0
End If
End Sub
Private Sub cmdITTIN_PALETEdit_Click()
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmITTIN_PALET_main.Item = u
    again: frmITTIN_PALET_main.NotFirstTime = False
    frmITTIN_PALET_main.OnInit
    frmITTIN_PALET_main.Show vbModal
    If frmITTIN_PALET_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_PALET.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdITTIN_PALETDel_Click()
  on error resume next
End Sub
Private Sub cmdITTIN_PALETAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.ITTIN_PALET.Add()
   call GetNumValue(u, &quot;sequence&quot;, &quot;{E7F3EE01-4EC4-41D2-8657-BA22089DE0E5}&quot;,Now,&quot;INPAL%P&quot;, &quot;&quot;) 

      Set frmITTIN_PALET_main.Item = u
      again: frmITTIN_PALET_main.NotFirstTime = False
      frmITTIN_PALET_main.OnInit
      frmITTIN_PALET_main.Show vbModal
      If frmITTIN_PALET_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_PALET.ItemCount = gu.ITTIN_PALET.Count
        gridITTIN_PALET.Refresh
        gridITTIN_PALET.RefreshGroups
        gridITTIN_PALET.Refreshsort
        gridITTIN_PALET.MoveToBookmark u.ID &amp; &quot;ITTIN_PALET&quot;
      Else
        gu.ITTIN_PALET.Delete u.ID
        gu.ITTIN_PALET.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridITTIN_QLINE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridITTIN_QLINE.ItemCount = 0 Then 
  gridITTIN_PALET.ItemCount=0
  Exit Sub
End If
If gridITTIN_QLINE.Row &gt; 0 Then
  If LastRow &lt;&gt; gridITTIN_QLINE.Row And LastRow &gt; 0 Then
    gridITTIN_QLINE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridITTIN_QLINE.GetRowData(gridITTIN_QLINE.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridITTIN_QLINE.RowIndex ( gridITTIN_QLINE.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridITTIN_QLINE.Row or gridITTIN_PALET.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTIN_PALET.Preparegrid gridITTIN_PALET
  gridITTIN_PALET.ItemCount=0
    LoadGridLayout gridITTIN_PALET
    Set fndITTIN_PALET = Nothing
    Set fndITTIN_PALET = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndITTIN_PALET.Init gridITTIN_PALET
  gridITTIN_PALET.ItemCount=gu.ITTIN_PALET.Count
  End If
 End If
End If
End Sub
Private Sub gridITTIN_PALET_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ITTIN_PALET.LoadRow gridITTIN_PALET, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridITTIN_PALET_KeyPress(KeyAscii As Integer)
  If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_PALET.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_PALET_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Private Sub gridITTIN_PALET_DblClick()
    cmdITTIN_PALETEdit_click
End Sub
Private Sub gridITTIN_PALET_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
 If gridITTIN_PALET.Row &gt; 0 Then
   If LastRow &lt;&gt; gridITTIN_PALET.Row And LastRow &gt; 0 Then
     gridITTIN_PALET.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridITTIN_PALET.GetRowData(gridITTIN_PALET.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuITTIN_PALETPASTE_Click()
On Error Resume Next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ITTIN_PALET.Add()
    If GetFromBuffer(u) Then
      gridITTIN_PALET.ItemCount = u.parent.Count
    ELSE
      GU.ITTIN_PALET.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridITTIN_PALET_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_PALETCfg_Click
        End If
    End If
end sub

private sub gridITTIN_PALET_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_PALET
End If
end sub
private sub mnuITTIN_PALETAdd_click()
   menuActionITTIN_PALET =&quot;ADD&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETEdit_click()
   menuActionITTIN_PALET =&quot;EDIT&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETDelete_click()
   menuActionITTIN_PALET =&quot;DEL&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETOpen_click()
   menuActionITTIN_PALET =&quot;RUN&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETRef_click()
   menuActionITTIN_PALET =&quot;REF&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
  Private Sub mnuITTIN_PALETCOPY_Click()
    On Error Resume Next
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.Row &gt; 0 Then
     If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_PALETCUT_Click()
    On Error Resume Next
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.Row &gt; 0 Then
     If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_PALET.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_PALETCHANGE_Click()
  On Error Resume Next
  If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
  If gridITTIN_PALET.Row &gt; 0 Then
   If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_PALET.ItemCount = u.parent.Count
      gridITTIN_PALET.RefreshRowIndex gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_PALETCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_PALETPrn_click()
   menuActionITTIN_PALET =&quot;PRN&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETCfg_click()
   menuActionITTIN_PALET =&quot;CFG&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETFind_click()
   menuActionITTIN_PALET =&quot;FND&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETAcc_click()
   menuActionITTIN_PALET =&quot;ACC&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub menuTimerITTIN_PALET_timer()
   menuTimerITTIN_PALET.enabled = false
   if menuActionITTIN_PALET =&quot;ADD&quot; then cmdITTIN_PALETADD_CLick
   if menuActionITTIN_PALET =&quot;EDIT&quot; then cmdITTIN_PALETEDIT_CLick
   if menuActionITTIN_PALET =&quot;DEL&quot; then cmdITTIN_PALETDEL_CLick
   if menuActionITTIN_PALET =&quot;RUN&quot; then cmdITTIN_PALETRUN_CLick
   if menuActionITTIN_PALET =&quot;REF&quot; then cmdITTIN_PALETREF_CLick
   if menuActionITTIN_PALET =&quot;PRN&quot; then cmdITTIN_PALETPRN_CLick
   if menuActionITTIN_PALET =&quot;CFG&quot; then cmdITTIN_PALETCFG_CLick
   if menuActionITTIN_PALET =&quot;FND&quot; then cmdITTIN_PALETFND_CLick
   if menuActionITTIN_PALET =&quot;ACC&quot; then cmdITTIN_PALETACC_CLick
   menuActionITTIN_PALET =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_QLINEAdd,cmdITTIN_QLINEAdd.tag
  LoadBtnPictures cmdITTIN_QLINEEdit,cmdITTIN_QLINEEdit.tag
  LoadBtnPictures cmdITTIN_QLINEDel,cmdITTIN_QLINEDel.tag
  LoadBtnPictures cmdITTIN_QLINERef,cmdITTIN_QLINERef.tag
  LoadBtnPictures cmdITTIN_QLINEPrn,cmdITTIN_QLINEPrn.tag
  LoadBtnPictures cmdITTIN_QLINEFnd,cmdITTIN_QLINEFnd.tag
  LoadBtnPictures cmdITTIN_QLINERun,cmdITTIN_QLINERun.tag
  LoadBtnPictures cmdITTIN_QLINEAcc,cmdITTIN_QLINEAcc.tag
  LoadBtnPictures cmdITTIN_QLINECfg,cmdITTIN_QLINECfg.tag
  item.ITTIN_QLINE.PrepareGrid gridITTIN_QLINE
  LoadGridLayout gridITTIN_QLINE
  Set fndITTIN_QLINE = Nothing
  On Error Resume Next
  Set fndITTIN_QLINE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_QLINE.Init gridITTIN_QLINE
  LoadBtnPictures cmdITTIN_PALETAdd,cmdITTIN_PALETAdd.tag
  LoadBtnPictures cmdITTIN_PALETEdit,cmdITTIN_PALETEdit.tag
  LoadBtnPictures cmdITTIN_PALETDel,cmdITTIN_PALETDel.tag
  LoadBtnPictures cmdITTIN_PALETRef,cmdITTIN_PALETRef.tag
  LoadBtnPictures cmdITTIN_PALETPrn,cmdITTIN_PALETPrn.tag
  LoadBtnPictures cmdITTIN_PALETFnd,cmdITTIN_PALETFnd.Tag
  LoadBtnPictures cmdITTIN_PALETCfg,cmdITTIN_PALETCfg.tag
  LoadBtnPictures cmdITTIN_PALETRun,cmdITTIN_PALETRun.Tag
  LoadBtnPictures cmdITTIN_PALETAcc,cmdITTIN_PALETAcc.Tag
  gridITTIN_PALET.Columns.Clear
  gridITTIN_PALET.ItemCount=0
  cmdITTIN_PALETRef_Click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

pnlITTIN_QLINE.RestorePosition
  gridITTIN_QLINE_RowColChange gridITTIN_QLINE.Row,-1
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_QLINE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_QLINE = nothing
  set fndITTIN_PALET = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_SRV_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTIN_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Услуги к заказу"/><Properties Name="Name" PropValue="mnuPopupITTIN_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_SRVDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_SRVOpen"/></ControlData><ControlData Name="mnuITTIN_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_SRVRef"/></ControlData><ControlData Name="mnuITTIN_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_SRVS1"/></ControlData><ControlData Name="mnuITTIN_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_SRVBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_SRVCOPY"/></ControlData><ControlData Name="mnuITTIN_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_SRVCUT"/></ControlData><ControlData Name="mnuITTIN_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_SRVPASTE"/></ControlData><ControlData Name="mnuITTIN_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCHANGE"/></ControlData><ControlData Name="mnuITTIN_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_SRVPrn"/></ControlData><ControlData Name="mnuITTIN_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCfg"/></ControlData><ControlData Name="mnuITTIN_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_SRVFind"/></ControlData><ControlData Name="mnuITTIN_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_SRV as object
private menuActionITTIN_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_SRV,&quot;gridITTIN_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_SRV,&quot;Услуги к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_SRVRef_Click()
  on error resume next
  item.ITTIN_SRV.Refresh
  gridITTIN_SRV.itemCount = item.ITTIN_SRV.count
  gridITTIN_SRV.Refetch
  gridITTIN_SRV.Refresh
End Sub
Private Sub cmdITTIN_SRVAcc_Click()
On Error Resume Next
If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
If gridITTIN_SRV.Row &gt; 0 Then
 If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_SRVEdit_Click()
  on error resume next
If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
If gridITTIN_SRV.Row &gt; 0 then
 If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTIN_SRV_main.Item = u
    again: frmITTIN_SRV_main.NotFirstTime = False
    frmITTIN_SRV_main.OnInit
    frmITTIN_SRV_main.Show vbModal
    If frmITTIN_SRV_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTIN_SRVDel_Click()
  on error resume next
End Sub
Private Sub cmdITTIN_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTIN_SRV.Add()

      Set frmITTIN_SRV_main.Item = u
      again: frmITTIN_SRV_main.NotFirstTime = False
      frmITTIN_SRV_main.OnInit
      frmITTIN_SRV_main.Show vbModal
      If frmITTIN_SRV_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_SRV.ItemCount = Item.ITTIN_SRV.Count
        gridITTIN_SRV.Refresh
        gridITTIN_SRV.RefreshGroups
        gridITTIN_SRV.Refreshsort
        gridITTIN_SRV.MoveToBookmark u.ID &amp; &quot;ITTIN_SRV&quot;
      Else
        Item.ITTIN_SRV.Delete u.ID
        Item.ITTIN_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_SRVFnd_Click()
  on error resume next
  fndITTIN_SRV.ShowForm
End Sub
Private Sub cmdITTIN_SRVRun_Click()
  on error resume next
  gridITTIN_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_SRV.LoadRow gridITTIN_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTIN_SRV_DblClick()
  cmdITTIN_SRVEdit_Click
End Sub
Private Sub gridITTIN_SRV_KeyPress(KeyAscii As Integer)
  If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTIN_SRV.Row And LastRow &gt; 0 Then
  gridITTIN_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTIN_SRV.GetRowData(gridITTIN_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTIN_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTIN_SRV.Add()
    If GetFromBuffer(u) Then
      gridITTIN_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTIN_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_SRVCfg_Click
        End If
    End If
end sub

private sub gridITTIN_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_SRV
End If
end sub
private sub mnuITTIN_SRVAdd_click()
   menuActionITTIN_SRV =&quot;ADD&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVEdit_click()
   menuActionITTIN_SRV =&quot;EDIT&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVDelete_click()
   menuActionITTIN_SRV =&quot;DEL&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVOpen_click()
   menuActionITTIN_SRV =&quot;RUN&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVRef_click()
   menuActionITTIN_SRV =&quot;REF&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
  Private Sub mnuITTIN_SRVCOPY_Click()
    On Error Resume Next
    If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
    If gridITTIN_SRV.Row &gt; 0 Then
     If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_SRVCUT_Click()
    On Error Resume Next
    If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
    If gridITTIN_SRV.Row &gt; 0 Then
     If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_SRVCHANGE_Click()
  On Error Resume Next
  If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
  If gridITTIN_SRV.Row &gt; 0 Then
   If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_SRV.ItemCount = u.parent.Count
      gridITTIN_SRV.RefreshRowIndex gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_SRVPrn_click()
   menuActionITTIN_SRV =&quot;PRN&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVCfg_click()
   menuActionITTIN_SRV =&quot;CFG&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVFind_click()
   menuActionITTIN_SRV =&quot;FND&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVAcc_click()
   menuActionITTIN_SRV =&quot;ACC&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub menuTimerITTIN_SRV_timer()
   menuTimerITTIN_SRV.enabled = false
   if menuActionITTIN_SRV =&quot;ADD&quot; then cmdITTIN_SRVADD_CLick
   if menuActionITTIN_SRV =&quot;EDIT&quot; then cmdITTIN_SRVEDIT_CLick
   if menuActionITTIN_SRV =&quot;DEL&quot; then cmdITTIN_SRVDEL_CLick
   if menuActionITTIN_SRV =&quot;RUN&quot; then cmdITTIN_SRVRUN_CLick
   if menuActionITTIN_SRV =&quot;REF&quot; then cmdITTIN_SRVREF_CLick
   if menuActionITTIN_SRV =&quot;PRN&quot; then cmdITTIN_SRVPRN_CLick
   if menuActionITTIN_SRV =&quot;CFG&quot; then cmdITTIN_SRVCFG_CLick
   if menuActionITTIN_SRV =&quot;FND&quot; then cmdITTIN_SRVFND_CLick
   if menuActionITTIN_SRV =&quot;ACC&quot; then cmdITTIN_SRVACC_CLick
   menuActionITTIN_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_SRVAdd,cmdITTIN_SRVAdd.tag
  LoadBtnPictures cmdITTIN_SRVEdit,cmdITTIN_SRVEdit.tag
  LoadBtnPictures cmdITTIN_SRVDel,cmdITTIN_SRVDel.tag
  LoadBtnPictures cmdITTIN_SRVRef,cmdITTIN_SRVRef.tag
  LoadBtnPictures cmdITTIN_SRVPrn,cmdITTIN_SRVPrn.tag
  LoadBtnPictures cmdITTIN_SRVFnd,cmdITTIN_SRVFnd.tag
  LoadBtnPictures cmdITTIN_SRVRun,cmdITTIN_SRVRun.tag
  LoadBtnPictures cmdITTIN_SRVAcc,cmdITTIN_SRVAcc.tag
  LoadBtnPictures cmdITTIN_SRVCfg,cmdITTIN_SRVCfg.tag
  item.ITTIN_SRV.PrepareGrid gridITTIN_SRV
  LoadGridLayout gridITTIN_SRV
  Set fndITTIN_SRV = Nothing
  On Error Resume Next
  Set fndITTIN_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_SRV.Init gridITTIN_SRV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTIN_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTIN_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_EPL_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_EPL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_EPL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTIN_EPL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_EPL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_EPLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_EPLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_EPLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTIN_EPLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_EPLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_EPLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_EPLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_EPLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_EPLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_EPLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_EPL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Поддоны к заказу"/><Properties Name="Name" PropValue="mnuPopupITTIN_EPL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_EPLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_EPLAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_EPLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_EPLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_EPLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_EPLDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTIN_EPLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_EPLOpen"/></ControlData><ControlData Name="mnuITTIN_EPLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_EPLRef"/></ControlData><ControlData Name="mnuITTIN_EPLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_EPLS1"/></ControlData><ControlData Name="mnuITTIN_EPLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_EPLBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_EPLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_EPLCOPY"/></ControlData><ControlData Name="mnuITTIN_EPLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_EPLCUT"/></ControlData><ControlData Name="mnuITTIN_EPLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_EPLPASTE"/></ControlData><ControlData Name="mnuITTIN_EPLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCHANGE"/></ControlData><ControlData Name="mnuITTIN_EPLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_EPLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_EPLPrn"/></ControlData><ControlData Name="mnuITTIN_EPLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCfg"/></ControlData><ControlData Name="mnuITTIN_EPLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_EPLFind"/></ControlData><ControlData Name="mnuITTIN_EPLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_EPLAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_EPL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_EPL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Пустые поддоны к заказу
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_EPL as object
private menuActionITTIN_EPL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_EPLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_EPL,&quot;gridITTIN_EPL&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_EPLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_EPL,&quot;Поддоны к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_EPLRef_Click()
  on error resume next
  item.ITTIN_EPL.Refresh
  gridITTIN_EPL.itemCount = item.ITTIN_EPL.count
  gridITTIN_EPL.Refetch
  gridITTIN_EPL.Refresh
End Sub
Private Sub cmdITTIN_EPLAcc_Click()
On Error Resume Next
If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
If gridITTIN_EPL.Row &gt; 0 Then
 If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_EPLEdit_Click()
  on error resume next
If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
If gridITTIN_EPL.Row &gt; 0 then
 If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTIN_EPL_main.Item = u
    again: frmITTIN_EPL_main.NotFirstTime = False
    frmITTIN_EPL_main.OnInit
    frmITTIN_EPL_main.Show vbModal
    If frmITTIN_EPL_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_EPL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTIN_EPLDel_Click()
  on error resume next
End Sub
Private Sub cmdITTIN_EPLAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTIN_EPL.Add()

      Set frmITTIN_EPL_main.Item = u
      again: frmITTIN_EPL_main.NotFirstTime = False
      frmITTIN_EPL_main.OnInit
      frmITTIN_EPL_main.Show vbModal
      If frmITTIN_EPL_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_EPL.ItemCount = Item.ITTIN_EPL.Count
        gridITTIN_EPL.Refresh
        gridITTIN_EPL.RefreshGroups
        gridITTIN_EPL.Refreshsort
        gridITTIN_EPL.MoveToBookmark u.ID &amp; &quot;ITTIN_EPL&quot;
      Else
        Item.ITTIN_EPL.Delete u.ID
        Item.ITTIN_EPL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_EPLFnd_Click()
  on error resume next
  fndITTIN_EPL.ShowForm
End Sub
Private Sub cmdITTIN_EPLRun_Click()
  on error resume next
  gridITTIN_EPL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_EPL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_EPL.LoadRow gridITTIN_EPL, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_EPL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTIN_EPL_DblClick()
  cmdITTIN_EPLEdit_Click
End Sub
Private Sub gridITTIN_EPL_KeyPress(KeyAscii As Integer)
  If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_EPL.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_EPL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTIN_EPL.Row And LastRow &gt; 0 Then
  gridITTIN_EPL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTIN_EPL.GetRowData(gridITTIN_EPL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTIN_EPLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTIN_EPL.Add()
    If GetFromBuffer(u) Then
      gridITTIN_EPL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTIN_EPL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_EPLCfg_Click
        End If
    End If
end sub

private sub gridITTIN_EPL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_EPL
End If
end sub
private sub mnuITTIN_EPLAdd_click()
   menuActionITTIN_EPL =&quot;ADD&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLEdit_click()
   menuActionITTIN_EPL =&quot;EDIT&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLDelete_click()
   menuActionITTIN_EPL =&quot;DEL&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLOpen_click()
   menuActionITTIN_EPL =&quot;RUN&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLRef_click()
   menuActionITTIN_EPL =&quot;REF&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
  Private Sub mnuITTIN_EPLCOPY_Click()
    On Error Resume Next
    If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
    If gridITTIN_EPL.Row &gt; 0 Then
     If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_EPLCUT_Click()
    On Error Resume Next
    If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
    If gridITTIN_EPL.Row &gt; 0 Then
     If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_EPL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_EPLCHANGE_Click()
  On Error Resume Next
  If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
  If gridITTIN_EPL.Row &gt; 0 Then
   If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_EPL.ItemCount = u.parent.Count
      gridITTIN_EPL.RefreshRowIndex gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_EPLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_EPLPrn_click()
   menuActionITTIN_EPL =&quot;PRN&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLCfg_click()
   menuActionITTIN_EPL =&quot;CFG&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLFind_click()
   menuActionITTIN_EPL =&quot;FND&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLAcc_click()
   menuActionITTIN_EPL =&quot;ACC&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub menuTimerITTIN_EPL_timer()
   menuTimerITTIN_EPL.enabled = false
   if menuActionITTIN_EPL =&quot;ADD&quot; then cmdITTIN_EPLADD_CLick
   if menuActionITTIN_EPL =&quot;EDIT&quot; then cmdITTIN_EPLEDIT_CLick
   if menuActionITTIN_EPL =&quot;DEL&quot; then cmdITTIN_EPLDEL_CLick
   if menuActionITTIN_EPL =&quot;RUN&quot; then cmdITTIN_EPLRUN_CLick
   if menuActionITTIN_EPL =&quot;REF&quot; then cmdITTIN_EPLREF_CLick
   if menuActionITTIN_EPL =&quot;PRN&quot; then cmdITTIN_EPLPRN_CLick
   if menuActionITTIN_EPL =&quot;CFG&quot; then cmdITTIN_EPLCFG_CLick
   if menuActionITTIN_EPL =&quot;FND&quot; then cmdITTIN_EPLFND_CLick
   if menuActionITTIN_EPL =&quot;ACC&quot; then cmdITTIN_EPLACC_CLick
   menuActionITTIN_EPL =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_EPLAdd,cmdITTIN_EPLAdd.tag
  LoadBtnPictures cmdITTIN_EPLEdit,cmdITTIN_EPLEdit.tag
  LoadBtnPictures cmdITTIN_EPLDel,cmdITTIN_EPLDel.tag
  LoadBtnPictures cmdITTIN_EPLRef,cmdITTIN_EPLRef.tag
  LoadBtnPictures cmdITTIN_EPLPrn,cmdITTIN_EPLPrn.tag
  LoadBtnPictures cmdITTIN_EPLFnd,cmdITTIN_EPLFnd.tag
  LoadBtnPictures cmdITTIN_EPLRun,cmdITTIN_EPLRun.tag
  LoadBtnPictures cmdITTIN_EPLAcc,cmdITTIN_EPLAcc.tag
  LoadBtnPictures cmdITTIN_EPLCfg,cmdITTIN_EPLCfg.tag
  item.ITTIN_EPL.PrepareGrid gridITTIN_EPL
  LoadGridLayout gridITTIN_EPL
  Set fndITTIN_EPL = Nothing
  On Error Resume Next
  Set fndITTIN_EPL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_EPL.Init gridITTIN_EPL
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTIN_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTIN_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_EPL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_EPL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlmain_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_DEF" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_DEF_main"><Properties Name="Name" PropValue="pnlITTIN_DEF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_QLINE" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_QLINE_main"><Properties Name="Name" PropValue="pnlITTIN_QLINE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_SRV" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_SRV_main"><Properties Name="Name" PropValue="pnlITTIN_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_EPL" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_EPL_main"><Properties Name="Name" PropValue="pnlITTIN_EPL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Приемка груза"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим main
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlITTIN_DEF.IsOK
if IsItOk then IsItOk = pnlITTIN_QLINE.IsOK
if IsItOk then IsItOk = pnlITTIN_SRV.IsOK
if IsItOk then IsItOk = pnlITTIN_EPL.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlITTIN_EPL.Visible = False
  pnlITTIN_SRV.Visible = False
  pnlITTIN_QLINE.Visible = False
  pnlITTIN_DEF.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ITTIN_DEF&quot;
     With pnlITTIN_DEF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_DEF.OnClick item,parentform
     End With
   Case &quot;ITTIN_QLINE&quot;
     With pnlITTIN_QLINE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_QLINE.OnClick item,parentform
     End With
   Case &quot;ITTIN_SRV&quot;
     With pnlITTIN_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_SRV.OnClick item,parentform
     End With
   Case &quot;ITTIN_EPL&quot;
     With pnlITTIN_EPL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_EPL.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Описание&quot;
ts.Tabs.Item(1).key = &quot;ITTIN_DEF&quot;
pnlITTIN_DEF.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_QLINE&quot;, &quot;Строки заказа&quot;)
pnlITTIN_QLINE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_SRV&quot;, &quot;Услуги к заказу&quot;)
pnlITTIN_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_EPL&quot;, &quot;Поддоны к заказу&quot;)
pnlITTIN_EPL.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ITTIN&quot;, &quot;ctlmain_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlITTIN_DEF.CloseClass
 pnlITTIN_QLINE.CloseClass
 pnlITTIN_SRV.CloseClass
 pnlITTIN_EPL.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlITTIN_DEF.OnSave
 pnlITTIN_QLINE.OnSave
 pnlITTIN_SRV.OnSave
 pnlITTIN_EPL.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlITTIN_DEF.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_QLINE.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_EPL.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 4
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{49A919F7-94A6-49DE-9280-1EEAC973647B}&quot;
    i = i + 1
    m(i).Caption = &quot;Приемка завершена&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot;
    i = i + 1
    m(i).Caption = &quot;Идет приемка&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot;
    i = i + 1
    m(i).Caption = &quot;Приемка обработана&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot;
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{49A919F7-94A6-49DE-9280-1EEAC973647B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmmain_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ITTINGUI.ctlmain_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Приемка груза"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим main
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_DEF_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_DEFadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Описание"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_DEF режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot;
  Open s &amp; Me.name &amp; &quot;{7D6C4F1B-02CC-40CA-A3F5-77A32CB0FFD6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_QLINE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_QLINEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Строки заказа"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_QLINE режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot;
  Open s &amp; Me.name &amp; &quot;{61FB842C-B67D-4A09-A0CB-25799F74FC37}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_PALET_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_PALETadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Палеты к строке"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_PALET режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot;
  Open s &amp; Me.name &amp; &quot;{60428B27-1326-461B-A2FD-43B439E5FC20}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_SRV_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_SRVadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Услуги к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_SRV режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot;
  Open s &amp; Me.name &amp; &quot;{FF7AA383-D4E4-4546-9147-6C7B0CC780A5}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTIN_EPL_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTINGUI.ITTIN_EPLadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Пустые поддоны к заказу"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Поддоны к заказу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTIN_EPL режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot;
  Open s &amp; Me.name &amp; &quot;{7390A5A7-B16D-4716-A308-9766B5A57684}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_DEF_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_DEF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_DEF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editITTIN_DEF" ControlIndex="0" PROGID="ITTINGUI.ITTIN_DEFadmi"><Properties Name="Name" PropValue="editITTIN_DEF"/></ControlData><ControlData Name="cmdITTIN_DEFSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_DEFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_DEFCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_DEFRef_Click()
  on error resume next
  Item.ITTIN_DEF.Refresh
  cmdITTIN_DEFAdd_Click
End Sub
Private Sub cmdITTIN_DEFCfg_Click()
    on error resume next 
    editITTIN_DEF.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;ITTIN_editITTIN_DEF_admi&quot; For Output As #ff
    print #ff, editITTIN_DEF.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdITTIN_DEFAdd_Click()
  on error resume next
 dim u as object
 If Item.ITTIN_DEF.Count = 0 Then
   set u=Item.ITTIN_DEF.Add
u.ProcessDate = date

 End If
 Set editITTIN_DEF.Item = Item.ITTIN_DEF.Item(1)
 editITTIN_DEF.InitPanel
 cmdITTIN_DEFSave.Enabled = True
End Sub
Private Sub cmdITTIN_DEFDel_Click()
  on error resume next
  if  editITTIN_DEF.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editITTIN_DEF.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editITTIN_DEF.item.parent.Delete editITTIN_DEF.item.id
    cmdITTIN_DEFSave.Enabled = false
    editITTIN_DEF.Enabled = false
    set editITTIN_DEF.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editITTIN_DEF_Changed()
 cmdITTIN_DEFSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editITTIN_DEF.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdITTIN_DEFSave_Click()
  on error resume next
    if editITTIN_DEF.IsOK then
    MousePointer = vbHourglass
    editITTIN_DEF.Save
  on error goto bye
    editITTIN_DEF.item.Save
    MousePointer = vbNormal
    cmdITTIN_DEFSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  editITTIN_DEF.item.REFRESH
  editITTIN_DEF.InitPanel
End Sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_DEFSave,cmdITTIN_DEFSave.tag
  LoadBtnPictures cmdITTIN_DEFRef,cmdITTIN_DEFRef.tag
  LoadBtnPictures cmdITTIN_DEFCfg,cmdITTIN_DEFCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;ITTIN_editITTIN_DEF_admi&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editITTIN_DEF.PanelCustomisationString = buf
  cmdITTIN_DEFAdd_click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      editITTIN_DEF.Top = 40 * Screen.TwipsPerPixelX
      editITTIN_DEF.Left = 5 * Screen.TwipsPerPixelX
      editITTIN_DEF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editITTIN_DEF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
  editITTIN_DEF.Save
if editITTIN_DEF.item.Changed then
  editITTIN_DEF.item.Save
end if
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editITTIN_DEF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_DEF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_QLINE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_QLINE" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlITTIN_QLINE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridITTIN_QLINE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_QLINE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_QLINEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_QLINEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_QLINEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_QLINERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_QLINEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_QLINECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_QLINEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_QLINERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_QLINERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_QLINEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridITTIN_PALET" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_PALET"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_PALETAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_PALETEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_PALETDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_PALETRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_PALETPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_PALETCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_PALETFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_PALETRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_PALETRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_PALETAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_QLINE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Строки заказа"/><Properties Name="Name" PropValue="mnuPopupITTIN_QLINE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_QLINEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_QLINEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_QLINEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_QLINEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_QLINEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_QLINEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_QLINEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_QLINEOpen"/></ControlData><ControlData Name="mnuITTIN_QLINERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_QLINERef"/></ControlData><ControlData Name="mnuITTIN_QLINES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_QLINES1"/></ControlData><ControlData Name="mnuITTIN_QLINEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_QLINEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_QLINECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_QLINECOPY"/></ControlData><ControlData Name="mnuITTIN_QLINECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_QLINECUT"/></ControlData><ControlData Name="mnuITTIN_QLINEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_QLINEPASTE"/></ControlData><ControlData Name="mnuITTIN_QLINECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECHANGE"/></ControlData><ControlData Name="mnuITTIN_QLINECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_QLINEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_QLINEPrn"/></ControlData><ControlData Name="mnuITTIN_QLINECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECfg"/></ControlData><ControlData Name="mnuITTIN_QLINEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_QLINEFind"/></ControlData><ControlData Name="mnuITTIN_QLINEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_QLINEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_QLINE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_QLINE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupITTIN_PALET" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Палеты к строке"/><Properties Name="Name" PropValue="mnuPopupITTIN_PALET"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_PALETAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_PALETAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_PALETEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_PALETEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_PALETDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_PALETDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_PALETOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_PALETOpen"/></ControlData><ControlData Name="mnuITTIN_PALETRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_PALETRef"/></ControlData><ControlData Name="mnuITTIN_PALETS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_PALETS1"/></ControlData><ControlData Name="mnuITTIN_PALETBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_PALETBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_PALETCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_PALETCOPY"/></ControlData><ControlData Name="mnuITTIN_PALETCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_PALETCUT"/></ControlData><ControlData Name="mnuITTIN_PALETPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_PALETPASTE"/></ControlData><ControlData Name="mnuITTIN_PALETCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCHANGE"/></ControlData><ControlData Name="mnuITTIN_PALETCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_PALETPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_PALETPrn"/></ControlData><ControlData Name="mnuITTIN_PALETCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCfg"/></ControlData><ControlData Name="mnuITTIN_PALETFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_PALETFind"/></ControlData><ControlData Name="mnuITTIN_PALETAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_PALETAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_PALET" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_PALET"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_QLINE as object
private menuActionITTIN_QLINE as string
private fndITTIN_PALET as object
private menuActionITTIN_PALET as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlITTIN_QLINE_PositionChanged()
  pnlITTIN_QLINE.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridITTIN_QLINE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_QLINECfg_Click
        End If
    End If
end sub

private sub gridITTIN_QLINE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_QLINE
End If
end sub
private sub mnuITTIN_QLINEAdd_click()
   menuActionITTIN_QLINE =&quot;ADD&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEEdit_click()
   menuActionITTIN_QLINE =&quot;EDIT&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEDelete_click()
   menuActionITTIN_QLINE =&quot;DEL&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEOpen_click()
   menuActionITTIN_QLINE =&quot;RUN&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINERef_click()
   menuActionITTIN_QLINE =&quot;REF&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
  Private Sub mnuITTIN_QLINECOPY_Click()
    On Error Resume Next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_QLINE.Row &gt; 0 Then
     If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_QLINECUT_Click()
    On Error Resume Next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_QLINE.Row &gt; 0 Then
     If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_QLINE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_QLINECHANGE_Click()
  On Error Resume Next
  If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
  If gridITTIN_QLINE.Row &gt; 0 Then
   If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_QLINE.ItemCount = u.parent.Count
      gridITTIN_QLINE.RefreshRowIndex gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_QLINECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_QLINEPrn_click()
   menuActionITTIN_QLINE =&quot;PRN&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINECfg_click()
   menuActionITTIN_QLINE =&quot;CFG&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEFind_click()
   menuActionITTIN_QLINE =&quot;FND&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEAcc_click()
   menuActionITTIN_QLINE =&quot;ACC&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub menuTimerITTIN_QLINE_timer()
   menuTimerITTIN_QLINE.enabled = false
   if menuActionITTIN_QLINE =&quot;ADD&quot; then cmdITTIN_QLINEADD_CLick
   if menuActionITTIN_QLINE =&quot;EDIT&quot; then cmdITTIN_QLINEEDIT_CLick
   if menuActionITTIN_QLINE =&quot;DEL&quot; then cmdITTIN_QLINEDEL_CLick
   if menuActionITTIN_QLINE =&quot;RUN&quot; then cmdITTIN_QLINERUN_CLick
   if menuActionITTIN_QLINE =&quot;REF&quot; then cmdITTIN_QLINEREF_CLick
   if menuActionITTIN_QLINE =&quot;PRN&quot; then cmdITTIN_QLINEPRN_CLick
   if menuActionITTIN_QLINE =&quot;CFG&quot; then cmdITTIN_QLINECFG_CLick
   if menuActionITTIN_QLINE =&quot;FND&quot; then cmdITTIN_QLINEFND_CLick
   if menuActionITTIN_QLINE =&quot;ACC&quot; then cmdITTIN_QLINEACC_CLick
   menuActionITTIN_QLINE =&quot;&quot;
end sub
Private Sub cmdITTIN_QLINECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_QLINE,&quot;gridITTIN_QLINE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_QLINEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_QLINE,&quot;Строки заказа&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_QLINERef_Click()
  on error resume next
  item.ITTIN_QLINE.Refresh
  gridITTIN_QLINE.itemCount = item.ITTIN_QLINE.count
  gridITTIN_QLINE.Refetch
  gridITTIN_QLINE.Refresh
End Sub
Private Sub cmdITTIN_QLINEAcc_Click()
On Error Resume Next
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
If gridITTIN_QLINE.Row &gt; 0 Then
 If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_QLINEEdit_Click()
  on error resume next
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
If gridITTIN_QLINE.Row &gt; 0 then
 If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTIN_QLINE_admi.Item = u
    again: frmITTIN_QLINE_admi.NotFirstTime = False
    frmITTIN_QLINE_admi.OnInit
    frmITTIN_QLINE_admi.Show vbModal
    If frmITTIN_QLINE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_QLINE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTIN_QLINEDel_Click()
  on error resume next
  gridITTIN_QLINE.Delete
End Sub
Private Sub cmdITTIN_QLINEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTIN_QLINE.Add()
u.exp_date = DateSerial(1911, 11, 11)
   call GetNumValue(u, &quot;sequence&quot;, &quot;{E7F3EE01-4EC4-41D2-8657-BA22089DE0E5}&quot;,Now,&quot;IN%P&quot;, &quot;&quot;) 

      Set frmITTIN_QLINE_admi.Item = u
      again: frmITTIN_QLINE_admi.NotFirstTime = False
      frmITTIN_QLINE_admi.OnInit
      frmITTIN_QLINE_admi.Show vbModal
      If frmITTIN_QLINE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_QLINE.ItemCount = Item.ITTIN_QLINE.Count
        gridITTIN_QLINE.Refresh
        gridITTIN_QLINE.RefreshGroups
        gridITTIN_QLINE.Refreshsort
        gridITTIN_QLINE.MoveToBookmark u.ID &amp; &quot;ITTIN_QLINE&quot;
      Else
        Item.ITTIN_QLINE.Delete u.ID
        Item.ITTIN_QLINE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_QLINEFnd_Click()
  on error resume next
  fndITTIN_QLINE.ShowForm
End Sub
Private Sub cmdITTIN_QLINERun_Click()
  on error resume next
  gridITTIN_QLINE_DblClick
End Sub
Private Sub gridITTIN_QLINE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_QLINE.LoadRow gridITTIN_QLINE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_QLINE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_QLINE_DblClick()
  cmdITTIN_QLINEEdit_Click
End Sub
Private Sub gridITTIN_QLINE_KeyPress(KeyAscii As Integer)
  If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_QLINE.FindOnPress KeyAscii
End Sub

Private Sub pnlITTIN_QLINE_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridITTIN_QLINE.Left = Left
  gridITTIN_QLINE.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTIN_QLINE.Width = Width
  gridITTIN_QLINE.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTIN_QLINEAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINERef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINECfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINERun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdITTIN_QLINEEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdITTIN_QLINEDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTIN_QLINERef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTIN_QLINEPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTIN_QLINECfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTIN_QLINEFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTIN_QLINERun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTIN_QLINEAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuITTIN_QLINEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTIN_QLINE.Add()
    If GetFromBuffer(u) Then
      gridITTIN_QLINE.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdITTIN_PALETCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_PALET,&quot;gridITTIN_PALET&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_PALETPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_PALET,&quot;Палеты к строке&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_PALETAcc_Click()
On Error Resume Next
If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
If gridITTIN_PALET.Row &gt; 0 Then
 If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_PALETFnd_Click()
  on error resume next
  fndITTIN_PALET.ShowForm
End Sub
Private Sub cmdITTIN_PALETRun_Click()
  on error resume next
  gridITTIN_PALET_DblClick
End Sub
Private Sub pnlITTIN_QLINE_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridITTIN_PALET.Left = Left
  gridITTIN_PALET.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTIN_PALET.Width = Width
  gridITTIN_PALET.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTIN_PALETAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdITTIN_PALETEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdITTIN_PALETDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTIN_PALETRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTIN_PALETPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTIN_PALETCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTIN_PALETFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTIN_PALETRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTIN_PALETAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdITTIN_PALETRef_Click()
  on error resume next
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
If gridITTIN_QLINE.Row &gt; 0 Then
 If gridITTIN_QLINE.RowIndex ( gridITTIN_QLINE.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTIN_PALET.refresh
   gridITTIN_PALET.itemcount=gu.ITTIN_PALET.count
   gridITTIN_PALET.refetch
   gridITTIN_PALET.refresh
 else
  gridITTIN_PALET.columns.clear
  gridITTIN_PALET.itemcount=0
 End If
else
 gridITTIN_PALET.columns.clear
 gridITTIN_PALET.itemcount=0
End If
End Sub
Private Sub cmdITTIN_PALETEdit_Click()
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmITTIN_PALET_admi.Item = u
    again: frmITTIN_PALET_admi.NotFirstTime = False
    frmITTIN_PALET_admi.OnInit
    frmITTIN_PALET_admi.Show vbModal
    If frmITTIN_PALET_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_PALET.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdITTIN_PALETDel_Click()
  on error resume next
  gridITTIN_PALET.Delete
End Sub
Private Sub cmdITTIN_PALETAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.ITTIN_PALET.Add()
   call GetNumValue(u, &quot;sequence&quot;, &quot;{E7F3EE01-4EC4-41D2-8657-BA22089DE0E5}&quot;,Now,&quot;INPAL%P&quot;, &quot;&quot;) 

      Set frmITTIN_PALET_admi.Item = u
      again: frmITTIN_PALET_admi.NotFirstTime = False
      frmITTIN_PALET_admi.OnInit
      frmITTIN_PALET_admi.Show vbModal
      If frmITTIN_PALET_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_PALET.ItemCount = gu.ITTIN_PALET.Count
        gridITTIN_PALET.Refresh
        gridITTIN_PALET.RefreshGroups
        gridITTIN_PALET.Refreshsort
        gridITTIN_PALET.MoveToBookmark u.ID &amp; &quot;ITTIN_PALET&quot;
      Else
        gu.ITTIN_PALET.Delete u.ID
        gu.ITTIN_PALET.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridITTIN_QLINE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridITTIN_QLINE.ItemCount = 0 Then 
  gridITTIN_PALET.ItemCount=0
  Exit Sub
End If
If gridITTIN_QLINE.Row &gt; 0 Then
  If LastRow &lt;&gt; gridITTIN_QLINE.Row And LastRow &gt; 0 Then
    gridITTIN_QLINE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridITTIN_QLINE.GetRowData(gridITTIN_QLINE.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridITTIN_QLINE.RowIndex ( gridITTIN_QLINE.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridITTIN_QLINE.Row or gridITTIN_PALET.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTIN_PALET.Preparegrid gridITTIN_PALET
  gridITTIN_PALET.ItemCount=0
    LoadGridLayout gridITTIN_PALET
    Set fndITTIN_PALET = Nothing
    Set fndITTIN_PALET = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndITTIN_PALET.Init gridITTIN_PALET
  gridITTIN_PALET.ItemCount=gu.ITTIN_PALET.Count
  End If
 End If
End If
End Sub
Private Sub gridITTIN_PALET_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ITTIN_PALET.LoadRow gridITTIN_PALET, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridITTIN_PALET_KeyPress(KeyAscii As Integer)
  If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_PALET.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_PALET_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridITTIN_PALET_DblClick()
    cmdITTIN_PALETEdit_click
End Sub
Private Sub gridITTIN_PALET_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
 If gridITTIN_PALET.Row &gt; 0 Then
   If LastRow &lt;&gt; gridITTIN_PALET.Row And LastRow &gt; 0 Then
     gridITTIN_PALET.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridITTIN_PALET.GetRowData(gridITTIN_PALET.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuITTIN_PALETPASTE_Click()
On Error Resume Next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ITTIN_PALET.Add()
    If GetFromBuffer(u) Then
      gridITTIN_PALET.ItemCount = u.parent.Count
    ELSE
      GU.ITTIN_PALET.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridITTIN_PALET_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_PALETCfg_Click
        End If
    End If
end sub

private sub gridITTIN_PALET_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_PALET
End If
end sub
private sub mnuITTIN_PALETAdd_click()
   menuActionITTIN_PALET =&quot;ADD&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETEdit_click()
   menuActionITTIN_PALET =&quot;EDIT&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETDelete_click()
   menuActionITTIN_PALET =&quot;DEL&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETOpen_click()
   menuActionITTIN_PALET =&quot;RUN&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETRef_click()
   menuActionITTIN_PALET =&quot;REF&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
  Private Sub mnuITTIN_PALETCOPY_Click()
    On Error Resume Next
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.Row &gt; 0 Then
     If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_PALETCUT_Click()
    On Error Resume Next
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.Row &gt; 0 Then
     If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_PALET.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_PALETCHANGE_Click()
  On Error Resume Next
  If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
  If gridITTIN_PALET.Row &gt; 0 Then
   If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_PALET.ItemCount = u.parent.Count
      gridITTIN_PALET.RefreshRowIndex gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_PALETCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_PALETPrn_click()
   menuActionITTIN_PALET =&quot;PRN&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETCfg_click()
   menuActionITTIN_PALET =&quot;CFG&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETFind_click()
   menuActionITTIN_PALET =&quot;FND&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETAcc_click()
   menuActionITTIN_PALET =&quot;ACC&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub menuTimerITTIN_PALET_timer()
   menuTimerITTIN_PALET.enabled = false
   if menuActionITTIN_PALET =&quot;ADD&quot; then cmdITTIN_PALETADD_CLick
   if menuActionITTIN_PALET =&quot;EDIT&quot; then cmdITTIN_PALETEDIT_CLick
   if menuActionITTIN_PALET =&quot;DEL&quot; then cmdITTIN_PALETDEL_CLick
   if menuActionITTIN_PALET =&quot;RUN&quot; then cmdITTIN_PALETRUN_CLick
   if menuActionITTIN_PALET =&quot;REF&quot; then cmdITTIN_PALETREF_CLick
   if menuActionITTIN_PALET =&quot;PRN&quot; then cmdITTIN_PALETPRN_CLick
   if menuActionITTIN_PALET =&quot;CFG&quot; then cmdITTIN_PALETCFG_CLick
   if menuActionITTIN_PALET =&quot;FND&quot; then cmdITTIN_PALETFND_CLick
   if menuActionITTIN_PALET =&quot;ACC&quot; then cmdITTIN_PALETACC_CLick
   menuActionITTIN_PALET =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_QLINEAdd,cmdITTIN_QLINEAdd.tag
  LoadBtnPictures cmdITTIN_QLINEEdit,cmdITTIN_QLINEEdit.tag
  LoadBtnPictures cmdITTIN_QLINEDel,cmdITTIN_QLINEDel.tag
  LoadBtnPictures cmdITTIN_QLINERef,cmdITTIN_QLINERef.tag
  LoadBtnPictures cmdITTIN_QLINEPrn,cmdITTIN_QLINEPrn.tag
  LoadBtnPictures cmdITTIN_QLINEFnd,cmdITTIN_QLINEFnd.tag
  LoadBtnPictures cmdITTIN_QLINERun,cmdITTIN_QLINERun.tag
  LoadBtnPictures cmdITTIN_QLINEAcc,cmdITTIN_QLINEAcc.tag
  LoadBtnPictures cmdITTIN_QLINECfg,cmdITTIN_QLINECfg.tag
  item.ITTIN_QLINE.PrepareGrid gridITTIN_QLINE
  LoadGridLayout gridITTIN_QLINE
  Set fndITTIN_QLINE = Nothing
  On Error Resume Next
  Set fndITTIN_QLINE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_QLINE.Init gridITTIN_QLINE
  LoadBtnPictures cmdITTIN_PALETAdd,cmdITTIN_PALETAdd.tag
  LoadBtnPictures cmdITTIN_PALETEdit,cmdITTIN_PALETEdit.tag
  LoadBtnPictures cmdITTIN_PALETDel,cmdITTIN_PALETDel.tag
  LoadBtnPictures cmdITTIN_PALETRef,cmdITTIN_PALETRef.tag
  LoadBtnPictures cmdITTIN_PALETPrn,cmdITTIN_PALETPrn.tag
  LoadBtnPictures cmdITTIN_PALETFnd,cmdITTIN_PALETFnd.Tag
  LoadBtnPictures cmdITTIN_PALETCfg,cmdITTIN_PALETCfg.tag
  LoadBtnPictures cmdITTIN_PALETRun,cmdITTIN_PALETRun.Tag
  LoadBtnPictures cmdITTIN_PALETAcc,cmdITTIN_PALETAcc.Tag
  gridITTIN_PALET.Columns.Clear
  gridITTIN_PALET.ItemCount=0
  cmdITTIN_PALETRef_Click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

pnlITTIN_QLINE.RestorePosition
  gridITTIN_QLINE_RowColChange gridITTIN_QLINE.Row,-1
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_QLINE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_QLINE = nothing
  set fndITTIN_PALET = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_SRV_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTIN_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Услуги к заказу"/><Properties Name="Name" PropValue="mnuPopupITTIN_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_SRVDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_SRVOpen"/></ControlData><ControlData Name="mnuITTIN_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_SRVRef"/></ControlData><ControlData Name="mnuITTIN_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_SRVS1"/></ControlData><ControlData Name="mnuITTIN_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_SRVBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_SRVCOPY"/></ControlData><ControlData Name="mnuITTIN_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_SRVCUT"/></ControlData><ControlData Name="mnuITTIN_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_SRVPASTE"/></ControlData><ControlData Name="mnuITTIN_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCHANGE"/></ControlData><ControlData Name="mnuITTIN_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_SRVPrn"/></ControlData><ControlData Name="mnuITTIN_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCfg"/></ControlData><ControlData Name="mnuITTIN_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_SRVFind"/></ControlData><ControlData Name="mnuITTIN_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_SRV as object
private menuActionITTIN_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_SRV,&quot;gridITTIN_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_SRV,&quot;Услуги к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_SRVRef_Click()
  on error resume next
  item.ITTIN_SRV.Refresh
  gridITTIN_SRV.itemCount = item.ITTIN_SRV.count
  gridITTIN_SRV.Refetch
  gridITTIN_SRV.Refresh
End Sub
Private Sub cmdITTIN_SRVAcc_Click()
On Error Resume Next
If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
If gridITTIN_SRV.Row &gt; 0 Then
 If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_SRVEdit_Click()
  on error resume next
If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
If gridITTIN_SRV.Row &gt; 0 then
 If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTIN_SRV_admi.Item = u
    again: frmITTIN_SRV_admi.NotFirstTime = False
    frmITTIN_SRV_admi.OnInit
    frmITTIN_SRV_admi.Show vbModal
    If frmITTIN_SRV_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTIN_SRVDel_Click()
  on error resume next
  gridITTIN_SRV.Delete
End Sub
Private Sub cmdITTIN_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTIN_SRV.Add()

      Set frmITTIN_SRV_admi.Item = u
      again: frmITTIN_SRV_admi.NotFirstTime = False
      frmITTIN_SRV_admi.OnInit
      frmITTIN_SRV_admi.Show vbModal
      If frmITTIN_SRV_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_SRV.ItemCount = Item.ITTIN_SRV.Count
        gridITTIN_SRV.Refresh
        gridITTIN_SRV.RefreshGroups
        gridITTIN_SRV.Refreshsort
        gridITTIN_SRV.MoveToBookmark u.ID &amp; &quot;ITTIN_SRV&quot;
      Else
        Item.ITTIN_SRV.Delete u.ID
        Item.ITTIN_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_SRVFnd_Click()
  on error resume next
  fndITTIN_SRV.ShowForm
End Sub
Private Sub cmdITTIN_SRVRun_Click()
  on error resume next
  gridITTIN_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_SRV.LoadRow gridITTIN_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTIN_SRV&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTIN_SRV_DblClick()
  cmdITTIN_SRVEdit_Click
End Sub
Private Sub gridITTIN_SRV_KeyPress(KeyAscii As Integer)
  If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTIN_SRV.Row And LastRow &gt; 0 Then
  gridITTIN_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTIN_SRV.GetRowData(gridITTIN_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTIN_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTIN_SRV.Add()
    If GetFromBuffer(u) Then
      gridITTIN_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTIN_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_SRVCfg_Click
        End If
    End If
end sub

private sub gridITTIN_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_SRV
End If
end sub
private sub mnuITTIN_SRVAdd_click()
   menuActionITTIN_SRV =&quot;ADD&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVEdit_click()
   menuActionITTIN_SRV =&quot;EDIT&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVDelete_click()
   menuActionITTIN_SRV =&quot;DEL&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVOpen_click()
   menuActionITTIN_SRV =&quot;RUN&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVRef_click()
   menuActionITTIN_SRV =&quot;REF&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
  Private Sub mnuITTIN_SRVCOPY_Click()
    On Error Resume Next
    If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
    If gridITTIN_SRV.Row &gt; 0 Then
     If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_SRVCUT_Click()
    On Error Resume Next
    If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
    If gridITTIN_SRV.Row &gt; 0 Then
     If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_SRVCHANGE_Click()
  On Error Resume Next
  If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
  If gridITTIN_SRV.Row &gt; 0 Then
   If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_SRV.ItemCount = u.parent.Count
      gridITTIN_SRV.RefreshRowIndex gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_SRVPrn_click()
   menuActionITTIN_SRV =&quot;PRN&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVCfg_click()
   menuActionITTIN_SRV =&quot;CFG&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVFind_click()
   menuActionITTIN_SRV =&quot;FND&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVAcc_click()
   menuActionITTIN_SRV =&quot;ACC&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub menuTimerITTIN_SRV_timer()
   menuTimerITTIN_SRV.enabled = false
   if menuActionITTIN_SRV =&quot;ADD&quot; then cmdITTIN_SRVADD_CLick
   if menuActionITTIN_SRV =&quot;EDIT&quot; then cmdITTIN_SRVEDIT_CLick
   if menuActionITTIN_SRV =&quot;DEL&quot; then cmdITTIN_SRVDEL_CLick
   if menuActionITTIN_SRV =&quot;RUN&quot; then cmdITTIN_SRVRUN_CLick
   if menuActionITTIN_SRV =&quot;REF&quot; then cmdITTIN_SRVREF_CLick
   if menuActionITTIN_SRV =&quot;PRN&quot; then cmdITTIN_SRVPRN_CLick
   if menuActionITTIN_SRV =&quot;CFG&quot; then cmdITTIN_SRVCFG_CLick
   if menuActionITTIN_SRV =&quot;FND&quot; then cmdITTIN_SRVFND_CLick
   if menuActionITTIN_SRV =&quot;ACC&quot; then cmdITTIN_SRVACC_CLick
   menuActionITTIN_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_SRVAdd,cmdITTIN_SRVAdd.tag
  LoadBtnPictures cmdITTIN_SRVEdit,cmdITTIN_SRVEdit.tag
  LoadBtnPictures cmdITTIN_SRVDel,cmdITTIN_SRVDel.tag
  LoadBtnPictures cmdITTIN_SRVRef,cmdITTIN_SRVRef.tag
  LoadBtnPictures cmdITTIN_SRVPrn,cmdITTIN_SRVPrn.tag
  LoadBtnPictures cmdITTIN_SRVFnd,cmdITTIN_SRVFnd.tag
  LoadBtnPictures cmdITTIN_SRVRun,cmdITTIN_SRVRun.tag
  LoadBtnPictures cmdITTIN_SRVAcc,cmdITTIN_SRVAcc.tag
  LoadBtnPictures cmdITTIN_SRVCfg,cmdITTIN_SRVCfg.tag
  item.ITTIN_SRV.PrepareGrid gridITTIN_SRV
  LoadGridLayout gridITTIN_SRV
  Set fndITTIN_SRV = Nothing
  On Error Resume Next
  Set fndITTIN_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_SRV.Init gridITTIN_SRV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTIN_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTIN_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_EPL_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_EPL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_EPL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTIN_EPL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_EPL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_EPLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_EPLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_EPLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_EPLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_EPLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_EPLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_EPLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_EPLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_EPLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_EPLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_EPL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Поддоны к заказу"/><Properties Name="Name" PropValue="mnuPopupITTIN_EPL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_EPLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_EPLAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_EPLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_EPLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_EPLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_EPLDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_EPLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_EPLOpen"/></ControlData><ControlData Name="mnuITTIN_EPLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_EPLRef"/></ControlData><ControlData Name="mnuITTIN_EPLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_EPLS1"/></ControlData><ControlData Name="mnuITTIN_EPLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_EPLBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_EPLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_EPLCOPY"/></ControlData><ControlData Name="mnuITTIN_EPLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_EPLCUT"/></ControlData><ControlData Name="mnuITTIN_EPLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_EPLPASTE"/></ControlData><ControlData Name="mnuITTIN_EPLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCHANGE"/></ControlData><ControlData Name="mnuITTIN_EPLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_EPLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_EPLPrn"/></ControlData><ControlData Name="mnuITTIN_EPLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCfg"/></ControlData><ControlData Name="mnuITTIN_EPLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_EPLFind"/></ControlData><ControlData Name="mnuITTIN_EPLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_EPLAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_EPL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_EPL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Пустые поддоны к заказу
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_EPL as object
private menuActionITTIN_EPL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_EPLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_EPL,&quot;gridITTIN_EPL&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_EPLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_EPL,&quot;Поддоны к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_EPLRef_Click()
  on error resume next
  item.ITTIN_EPL.Refresh
  gridITTIN_EPL.itemCount = item.ITTIN_EPL.count
  gridITTIN_EPL.Refetch
  gridITTIN_EPL.Refresh
End Sub
Private Sub cmdITTIN_EPLAcc_Click()
On Error Resume Next
If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
If gridITTIN_EPL.Row &gt; 0 Then
 If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_EPLEdit_Click()
  on error resume next
If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
If gridITTIN_EPL.Row &gt; 0 then
 If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTIN_EPL_admi.Item = u
    again: frmITTIN_EPL_admi.NotFirstTime = False
    frmITTIN_EPL_admi.OnInit
    frmITTIN_EPL_admi.Show vbModal
    If frmITTIN_EPL_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_EPL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTIN_EPLDel_Click()
  on error resume next
  gridITTIN_EPL.Delete
End Sub
Private Sub cmdITTIN_EPLAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTIN_EPL.Add()

      Set frmITTIN_EPL_admi.Item = u
      again: frmITTIN_EPL_admi.NotFirstTime = False
      frmITTIN_EPL_admi.OnInit
      frmITTIN_EPL_admi.Show vbModal
      If frmITTIN_EPL_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_EPL.ItemCount = Item.ITTIN_EPL.Count
        gridITTIN_EPL.Refresh
        gridITTIN_EPL.RefreshGroups
        gridITTIN_EPL.Refreshsort
        gridITTIN_EPL.MoveToBookmark u.ID &amp; &quot;ITTIN_EPL&quot;
      Else
        Item.ITTIN_EPL.Delete u.ID
        Item.ITTIN_EPL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_EPLFnd_Click()
  on error resume next
  fndITTIN_EPL.ShowForm
End Sub
Private Sub cmdITTIN_EPLRun_Click()
  on error resume next
  gridITTIN_EPL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_EPL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_EPL.LoadRow gridITTIN_EPL, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_EPL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTIN_EPL&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTIN_EPL_DblClick()
  cmdITTIN_EPLEdit_Click
End Sub
Private Sub gridITTIN_EPL_KeyPress(KeyAscii As Integer)
  If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_EPL.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_EPL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTIN_EPL.Row And LastRow &gt; 0 Then
  gridITTIN_EPL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTIN_EPL.GetRowData(gridITTIN_EPL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTIN_EPLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTIN_EPL.Add()
    If GetFromBuffer(u) Then
      gridITTIN_EPL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTIN_EPL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_EPLCfg_Click
        End If
    End If
end sub

private sub gridITTIN_EPL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_EPL
End If
end sub
private sub mnuITTIN_EPLAdd_click()
   menuActionITTIN_EPL =&quot;ADD&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLEdit_click()
   menuActionITTIN_EPL =&quot;EDIT&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLDelete_click()
   menuActionITTIN_EPL =&quot;DEL&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLOpen_click()
   menuActionITTIN_EPL =&quot;RUN&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLRef_click()
   menuActionITTIN_EPL =&quot;REF&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
  Private Sub mnuITTIN_EPLCOPY_Click()
    On Error Resume Next
    If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
    If gridITTIN_EPL.Row &gt; 0 Then
     If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_EPLCUT_Click()
    On Error Resume Next
    If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
    If gridITTIN_EPL.Row &gt; 0 Then
     If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_EPL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_EPLCHANGE_Click()
  On Error Resume Next
  If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
  If gridITTIN_EPL.Row &gt; 0 Then
   If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_EPL.ItemCount = u.parent.Count
      gridITTIN_EPL.RefreshRowIndex gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_EPLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_EPLPrn_click()
   menuActionITTIN_EPL =&quot;PRN&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLCfg_click()
   menuActionITTIN_EPL =&quot;CFG&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLFind_click()
   menuActionITTIN_EPL =&quot;FND&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLAcc_click()
   menuActionITTIN_EPL =&quot;ACC&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub menuTimerITTIN_EPL_timer()
   menuTimerITTIN_EPL.enabled = false
   if menuActionITTIN_EPL =&quot;ADD&quot; then cmdITTIN_EPLADD_CLick
   if menuActionITTIN_EPL =&quot;EDIT&quot; then cmdITTIN_EPLEDIT_CLick
   if menuActionITTIN_EPL =&quot;DEL&quot; then cmdITTIN_EPLDEL_CLick
   if menuActionITTIN_EPL =&quot;RUN&quot; then cmdITTIN_EPLRUN_CLick
   if menuActionITTIN_EPL =&quot;REF&quot; then cmdITTIN_EPLREF_CLick
   if menuActionITTIN_EPL =&quot;PRN&quot; then cmdITTIN_EPLPRN_CLick
   if menuActionITTIN_EPL =&quot;CFG&quot; then cmdITTIN_EPLCFG_CLick
   if menuActionITTIN_EPL =&quot;FND&quot; then cmdITTIN_EPLFND_CLick
   if menuActionITTIN_EPL =&quot;ACC&quot; then cmdITTIN_EPLACC_CLick
   menuActionITTIN_EPL =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_EPLAdd,cmdITTIN_EPLAdd.tag
  LoadBtnPictures cmdITTIN_EPLEdit,cmdITTIN_EPLEdit.tag
  LoadBtnPictures cmdITTIN_EPLDel,cmdITTIN_EPLDel.tag
  LoadBtnPictures cmdITTIN_EPLRef,cmdITTIN_EPLRef.tag
  LoadBtnPictures cmdITTIN_EPLPrn,cmdITTIN_EPLPrn.tag
  LoadBtnPictures cmdITTIN_EPLFnd,cmdITTIN_EPLFnd.tag
  LoadBtnPictures cmdITTIN_EPLRun,cmdITTIN_EPLRun.tag
  LoadBtnPictures cmdITTIN_EPLAcc,cmdITTIN_EPLAcc.tag
  LoadBtnPictures cmdITTIN_EPLCfg,cmdITTIN_EPLCfg.tag
  item.ITTIN_EPL.PrepareGrid gridITTIN_EPL
  LoadGridLayout gridITTIN_EPL
  Set fndITTIN_EPL = Nothing
  On Error Resume Next
  Set fndITTIN_EPL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_EPL.Init gridITTIN_EPL
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTIN_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTIN_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_EPL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_EPL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctladmi_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_DEF" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_DEF_admi"><Properties Name="Name" PropValue="pnlITTIN_DEF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_QLINE" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_QLINE_admi"><Properties Name="Name" PropValue="pnlITTIN_QLINE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_SRV" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_SRV_admi"><Properties Name="Name" PropValue="pnlITTIN_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_EPL" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_EPL_admi"><Properties Name="Name" PropValue="pnlITTIN_EPL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Приемка груза"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим admi
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlITTIN_DEF.IsOK
if IsItOk then IsItOk = pnlITTIN_QLINE.IsOK
if IsItOk then IsItOk = pnlITTIN_SRV.IsOK
if IsItOk then IsItOk = pnlITTIN_EPL.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlITTIN_EPL.Visible = False
  pnlITTIN_SRV.Visible = False
  pnlITTIN_QLINE.Visible = False
  pnlITTIN_DEF.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ITTIN_DEF&quot;
     With pnlITTIN_DEF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_DEF.OnClick item,parentform
     End With
   Case &quot;ITTIN_QLINE&quot;
     With pnlITTIN_QLINE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_QLINE.OnClick item,parentform
     End With
   Case &quot;ITTIN_SRV&quot;
     With pnlITTIN_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_SRV.OnClick item,parentform
     End With
   Case &quot;ITTIN_EPL&quot;
     With pnlITTIN_EPL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_EPL.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Описание&quot;
ts.Tabs.Item(1).key = &quot;ITTIN_DEF&quot;
pnlITTIN_DEF.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_QLINE&quot;, &quot;Строки заказа&quot;)
pnlITTIN_QLINE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_SRV&quot;, &quot;Услуги к заказу&quot;)
pnlITTIN_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_EPL&quot;, &quot;Поддоны к заказу&quot;)
pnlITTIN_EPL.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ITTIN&quot;, &quot;ctladmi_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlITTIN_DEF.CloseClass
 pnlITTIN_QLINE.CloseClass
 pnlITTIN_SRV.CloseClass
 pnlITTIN_EPL.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlITTIN_DEF.OnSave
 pnlITTIN_QLINE.OnSave
 pnlITTIN_SRV.OnSave
 pnlITTIN_EPL.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlITTIN_DEF.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_QLINE.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_EPL.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 4
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{49A919F7-94A6-49DE-9280-1EEAC973647B}&quot;
    i = i + 1
    m(i).Caption = &quot;Приемка завершена&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot;
    i = i + 1
    m(i).Caption = &quot;Идет приемка&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot;
    i = i + 1
    m(i).Caption = &quot;Приемка обработана&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot;
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{49A919F7-94A6-49DE-9280-1EEAC973647B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmadmi_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ITTINGUI.ctladmi_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Приемка груза"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим admi
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_DEF_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_DEF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_DEF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editITTIN_DEF" ControlIndex="0" PROGID="ITTINGUI.ITTIN_DEF"><Properties Name="Name" PropValue="editITTIN_DEF"/></ControlData><ControlData Name="cmdITTIN_DEFSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_DEFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_DEFCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_DEFCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_DEFRef_Click()
  on error resume next
  Item.ITTIN_DEF.Refresh
  cmdITTIN_DEFAdd_Click
End Sub
Private Sub cmdITTIN_DEFCfg_Click()
    on error resume next 
    editITTIN_DEF.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;ITTIN_editITTIN_DEF_&quot; For Output As #ff
    print #ff, editITTIN_DEF.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdITTIN_DEFAdd_Click()
  on error resume next
 dim u as object
 If Item.ITTIN_DEF.Count = 0 Then
   set u=Item.ITTIN_DEF.Add
u.ProcessDate = date

 End If
 Set editITTIN_DEF.Item = Item.ITTIN_DEF.Item(1)
 editITTIN_DEF.InitPanel
 cmdITTIN_DEFSave.Enabled = True
End Sub
Private Sub cmdITTIN_DEFDel_Click()
  on error resume next
  if  editITTIN_DEF.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editITTIN_DEF.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editITTIN_DEF.item.parent.Delete editITTIN_DEF.item.id
    cmdITTIN_DEFSave.Enabled = false
    editITTIN_DEF.Enabled = false
    set editITTIN_DEF.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editITTIN_DEF_Changed()
 cmdITTIN_DEFSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editITTIN_DEF.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdITTIN_DEFSave_Click()
  on error resume next
    if editITTIN_DEF.IsOK then
    MousePointer = vbHourglass
    editITTIN_DEF.Save
  on error goto bye
    editITTIN_DEF.item.Save
    MousePointer = vbNormal
    cmdITTIN_DEFSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  editITTIN_DEF.item.REFRESH
  editITTIN_DEF.InitPanel
End Sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_DEFSave,cmdITTIN_DEFSave.tag
  LoadBtnPictures cmdITTIN_DEFRef,cmdITTIN_DEFRef.tag
  LoadBtnPictures cmdITTIN_DEFCfg,cmdITTIN_DEFCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;ITTIN_editITTIN_DEF_&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editITTIN_DEF.PanelCustomisationString = buf
  cmdITTIN_DEFAdd_click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      editITTIN_DEF.Top = 40 * Screen.TwipsPerPixelX
      editITTIN_DEF.Left = 5 * Screen.TwipsPerPixelX
      editITTIN_DEF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editITTIN_DEF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
  editITTIN_DEF.Save
if editITTIN_DEF.item.Changed then
  editITTIN_DEF.item.Save
end if
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editITTIN_DEF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_DEF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_QLINE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_QLINE" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlITTIN_QLINE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridITTIN_QLINE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_QLINE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_QLINEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_QLINEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_QLINEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_QLINERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_QLINEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_QLINECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_QLINEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_QLINERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_QLINERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_QLINEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_QLINEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridITTIN_PALET" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_PALET"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_PALETAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_PALETEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_PALETDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_PALETRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_PALETPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_PALETCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_PALETFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_PALETRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_PALETRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_PALETAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_PALETAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_QLINE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Строки заказа"/><Properties Name="Name" PropValue="mnuPopupITTIN_QLINE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_QLINEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_QLINEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_QLINEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_QLINEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_QLINEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_QLINEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_QLINEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_QLINEOpen"/></ControlData><ControlData Name="mnuITTIN_QLINERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_QLINERef"/></ControlData><ControlData Name="mnuITTIN_QLINES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_QLINES1"/></ControlData><ControlData Name="mnuITTIN_QLINEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_QLINEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_QLINECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_QLINECOPY"/></ControlData><ControlData Name="mnuITTIN_QLINECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_QLINECUT"/></ControlData><ControlData Name="mnuITTIN_QLINEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_QLINEPASTE"/></ControlData><ControlData Name="mnuITTIN_QLINECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECHANGE"/></ControlData><ControlData Name="mnuITTIN_QLINECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_QLINEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_QLINEPrn"/></ControlData><ControlData Name="mnuITTIN_QLINECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_QLINECfg"/></ControlData><ControlData Name="mnuITTIN_QLINEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_QLINEFind"/></ControlData><ControlData Name="mnuITTIN_QLINEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_QLINEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_QLINE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_QLINE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupITTIN_PALET" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Палеты к строке"/><Properties Name="Name" PropValue="mnuPopupITTIN_PALET"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_PALETAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_PALETAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_PALETEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_PALETEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_PALETDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_PALETDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_PALETOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_PALETOpen"/></ControlData><ControlData Name="mnuITTIN_PALETRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_PALETRef"/></ControlData><ControlData Name="mnuITTIN_PALETS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_PALETS1"/></ControlData><ControlData Name="mnuITTIN_PALETBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_PALETBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_PALETCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_PALETCOPY"/></ControlData><ControlData Name="mnuITTIN_PALETCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_PALETCUT"/></ControlData><ControlData Name="mnuITTIN_PALETPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_PALETPASTE"/></ControlData><ControlData Name="mnuITTIN_PALETCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCHANGE"/></ControlData><ControlData Name="mnuITTIN_PALETCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_PALETPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_PALETPrn"/></ControlData><ControlData Name="mnuITTIN_PALETCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_PALETCfg"/></ControlData><ControlData Name="mnuITTIN_PALETFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_PALETFind"/></ControlData><ControlData Name="mnuITTIN_PALETAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_PALETAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_PALET" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_PALET"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_QLINE as object
private menuActionITTIN_QLINE as string
private fndITTIN_PALET as object
private menuActionITTIN_PALET as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlITTIN_QLINE_PositionChanged()
  pnlITTIN_QLINE.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridITTIN_QLINE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_QLINECfg_Click
        End If
    End If
end sub

private sub gridITTIN_QLINE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_QLINE
End If
end sub
private sub mnuITTIN_QLINEAdd_click()
   menuActionITTIN_QLINE =&quot;ADD&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEEdit_click()
   menuActionITTIN_QLINE =&quot;EDIT&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEDelete_click()
   menuActionITTIN_QLINE =&quot;DEL&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEOpen_click()
   menuActionITTIN_QLINE =&quot;RUN&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINERef_click()
   menuActionITTIN_QLINE =&quot;REF&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
  Private Sub mnuITTIN_QLINECOPY_Click()
    On Error Resume Next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_QLINE.Row &gt; 0 Then
     If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_QLINECUT_Click()
    On Error Resume Next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_QLINE.Row &gt; 0 Then
     If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_QLINE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_QLINECHANGE_Click()
  On Error Resume Next
  If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
  If gridITTIN_QLINE.Row &gt; 0 Then
   If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_QLINE.ItemCount = u.parent.Count
      gridITTIN_QLINE.RefreshRowIndex gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_QLINECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_QLINEPrn_click()
   menuActionITTIN_QLINE =&quot;PRN&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINECfg_click()
   menuActionITTIN_QLINE =&quot;CFG&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEFind_click()
   menuActionITTIN_QLINE =&quot;FND&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub mnuITTIN_QLINEAcc_click()
   menuActionITTIN_QLINE =&quot;ACC&quot;
   menuTimerITTIN_QLINE.enabled = true
end sub
private sub menuTimerITTIN_QLINE_timer()
   menuTimerITTIN_QLINE.enabled = false
   if menuActionITTIN_QLINE =&quot;ADD&quot; then cmdITTIN_QLINEADD_CLick
   if menuActionITTIN_QLINE =&quot;EDIT&quot; then cmdITTIN_QLINEEDIT_CLick
   if menuActionITTIN_QLINE =&quot;DEL&quot; then cmdITTIN_QLINEDEL_CLick
   if menuActionITTIN_QLINE =&quot;RUN&quot; then cmdITTIN_QLINERUN_CLick
   if menuActionITTIN_QLINE =&quot;REF&quot; then cmdITTIN_QLINEREF_CLick
   if menuActionITTIN_QLINE =&quot;PRN&quot; then cmdITTIN_QLINEPRN_CLick
   if menuActionITTIN_QLINE =&quot;CFG&quot; then cmdITTIN_QLINECFG_CLick
   if menuActionITTIN_QLINE =&quot;FND&quot; then cmdITTIN_QLINEFND_CLick
   if menuActionITTIN_QLINE =&quot;ACC&quot; then cmdITTIN_QLINEACC_CLick
   menuActionITTIN_QLINE =&quot;&quot;
end sub
Private Sub cmdITTIN_QLINECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_QLINE,&quot;gridITTIN_QLINE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_QLINEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_QLINE,&quot;Строки заказа&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_QLINERef_Click()
  on error resume next
  item.ITTIN_QLINE.Refresh
  gridITTIN_QLINE.itemCount = item.ITTIN_QLINE.count
  gridITTIN_QLINE.Refetch
  gridITTIN_QLINE.Refresh
End Sub
Private Sub cmdITTIN_QLINEAcc_Click()
On Error Resume Next
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
If gridITTIN_QLINE.Row &gt; 0 Then
 If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_QLINEEdit_Click()
  on error resume next
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
If gridITTIN_QLINE.Row &gt; 0 then
 If gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTIN_QLINE_.Item = u
    again: frmITTIN_QLINE_.NotFirstTime = False
    frmITTIN_QLINE_.OnInit
    frmITTIN_QLINE_.Show vbModal
    If frmITTIN_QLINE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_QLINE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTIN_QLINEDel_Click()
  on error resume next
  gridITTIN_QLINE.Delete
End Sub
Private Sub cmdITTIN_QLINEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTIN_QLINE.Add()
u.exp_date = DateSerial(1911, 11, 11)
   call GetNumValue(u, &quot;sequence&quot;, &quot;{E7F3EE01-4EC4-41D2-8657-BA22089DE0E5}&quot;,Now,&quot;IN%P&quot;, &quot;&quot;) 

      Set frmITTIN_QLINE_.Item = u
      again: frmITTIN_QLINE_.NotFirstTime = False
      frmITTIN_QLINE_.OnInit
      frmITTIN_QLINE_.Show vbModal
      If frmITTIN_QLINE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_QLINE.ItemCount = Item.ITTIN_QLINE.Count
        gridITTIN_QLINE.Refresh
        gridITTIN_QLINE.RefreshGroups
        gridITTIN_QLINE.Refreshsort
        gridITTIN_QLINE.MoveToBookmark u.ID &amp; &quot;ITTIN_QLINE&quot;
      Else
        Item.ITTIN_QLINE.Delete u.ID
        Item.ITTIN_QLINE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_QLINEFnd_Click()
  on error resume next
  fndITTIN_QLINE.ShowForm
End Sub
Private Sub cmdITTIN_QLINERun_Click()
  on error resume next
  gridITTIN_QLINE_DblClick
End Sub
Private Sub gridITTIN_QLINE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_QLINE.LoadRow gridITTIN_QLINE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_QLINE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_QLINE_DblClick()
  cmdITTIN_QLINEEdit_Click
End Sub
Private Sub gridITTIN_QLINE_KeyPress(KeyAscii As Integer)
  If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_QLINE.FindOnPress KeyAscii
End Sub

Private Sub pnlITTIN_QLINE_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridITTIN_QLINE.Left = Left
  gridITTIN_QLINE.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTIN_QLINE.Width = Width
  gridITTIN_QLINE.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTIN_QLINEAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINERef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINECfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINERun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_QLINEAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdITTIN_QLINEEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdITTIN_QLINEDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTIN_QLINERef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTIN_QLINEPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTIN_QLINECfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTIN_QLINEFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTIN_QLINERun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTIN_QLINEAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuITTIN_QLINEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTIN_QLINE.Add()
    If GetFromBuffer(u) Then
      gridITTIN_QLINE.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdITTIN_PALETCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_PALET,&quot;gridITTIN_PALET&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_PALETPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_PALET,&quot;Палеты к строке&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_PALETAcc_Click()
On Error Resume Next
If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
If gridITTIN_PALET.Row &gt; 0 Then
 If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_PALETFnd_Click()
  on error resume next
  fndITTIN_PALET.ShowForm
End Sub
Private Sub cmdITTIN_PALETRun_Click()
  on error resume next
  gridITTIN_PALET_DblClick
End Sub
Private Sub pnlITTIN_QLINE_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridITTIN_PALET.Left = Left
  gridITTIN_PALET.Top = Top + 25 * Screen.TwipsPerPixelY
  gridITTIN_PALET.Width = Width
  gridITTIN_PALET.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdITTIN_PALETAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdITTIN_PALETAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdITTIN_PALETEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdITTIN_PALETDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdITTIN_PALETRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdITTIN_PALETPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdITTIN_PALETCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdITTIN_PALETFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdITTIN_PALETRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdITTIN_PALETAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdITTIN_PALETRef_Click()
  on error resume next
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
If gridITTIN_QLINE.Row &gt; 0 Then
 If gridITTIN_QLINE.RowIndex ( gridITTIN_QLINE.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTIN_PALET.refresh
   gridITTIN_PALET.itemcount=gu.ITTIN_PALET.count
   gridITTIN_PALET.refetch
   gridITTIN_PALET.refresh
 else
  gridITTIN_PALET.columns.clear
  gridITTIN_PALET.itemcount=0
 End If
else
 gridITTIN_PALET.columns.clear
 gridITTIN_PALET.itemcount=0
End If
End Sub
Private Sub cmdITTIN_PALETEdit_Click()
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmITTIN_PALET_.Item = u
    again: frmITTIN_PALET_.NotFirstTime = False
    frmITTIN_PALET_.OnInit
    frmITTIN_PALET_.Show vbModal
    If frmITTIN_PALET_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_PALET.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdITTIN_PALETDel_Click()
  on error resume next
  gridITTIN_PALET.Delete
End Sub
Private Sub cmdITTIN_PALETAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.ITTIN_PALET.Add()
   call GetNumValue(u, &quot;sequence&quot;, &quot;{E7F3EE01-4EC4-41D2-8657-BA22089DE0E5}&quot;,Now,&quot;INPAL%P&quot;, &quot;&quot;) 

      Set frmITTIN_PALET_.Item = u
      again: frmITTIN_PALET_.NotFirstTime = False
      frmITTIN_PALET_.OnInit
      frmITTIN_PALET_.Show vbModal
      If frmITTIN_PALET_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_PALET.ItemCount = gu.ITTIN_PALET.Count
        gridITTIN_PALET.Refresh
        gridITTIN_PALET.RefreshGroups
        gridITTIN_PALET.Refreshsort
        gridITTIN_PALET.MoveToBookmark u.ID &amp; &quot;ITTIN_PALET&quot;
      Else
        gu.ITTIN_PALET.Delete u.ID
        gu.ITTIN_PALET.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridITTIN_QLINE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridITTIN_QLINE.ItemCount = 0 Then 
  gridITTIN_PALET.ItemCount=0
  Exit Sub
End If
If gridITTIN_QLINE.Row &gt; 0 Then
  If LastRow &lt;&gt; gridITTIN_QLINE.Row And LastRow &gt; 0 Then
    gridITTIN_QLINE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridITTIN_QLINE.GetRowData(gridITTIN_QLINE.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridITTIN_QLINE.RowIndex ( gridITTIN_QLINE.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridITTIN_QLINE.Row or gridITTIN_PALET.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ITTIN_PALET.Preparegrid gridITTIN_PALET
  gridITTIN_PALET.ItemCount=0
    LoadGridLayout gridITTIN_PALET
    Set fndITTIN_PALET = Nothing
    Set fndITTIN_PALET = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndITTIN_PALET.Init gridITTIN_PALET
  gridITTIN_PALET.ItemCount=gu.ITTIN_PALET.Count
  End If
 End If
End If
End Sub
Private Sub gridITTIN_PALET_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ITTIN_PALET.LoadRow gridITTIN_PALET, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridITTIN_PALET_KeyPress(KeyAscii As Integer)
  If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_PALET.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_PALET_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridITTIN_PALET_DblClick()
    cmdITTIN_PALETEdit_click
End Sub
Private Sub gridITTIN_PALET_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
 If gridITTIN_PALET.Row &gt; 0 Then
   If LastRow &lt;&gt; gridITTIN_PALET.Row And LastRow &gt; 0 Then
     gridITTIN_PALET.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridITTIN_PALET.GetRowData(gridITTIN_PALET.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuITTIN_PALETPASTE_Click()
On Error Resume Next
    If gridITTIN_QLINE.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridITTIN_QLINE.RowBookmark(gridITTIN_QLINE.RowIndex(gridITTIN_QLINE.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ITTIN_PALET.Add()
    If GetFromBuffer(u) Then
      gridITTIN_PALET.ItemCount = u.parent.Count
    ELSE
      GU.ITTIN_PALET.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridITTIN_PALET_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_PALETCfg_Click
        End If
    End If
end sub

private sub gridITTIN_PALET_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_PALET
End If
end sub
private sub mnuITTIN_PALETAdd_click()
   menuActionITTIN_PALET =&quot;ADD&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETEdit_click()
   menuActionITTIN_PALET =&quot;EDIT&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETDelete_click()
   menuActionITTIN_PALET =&quot;DEL&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETOpen_click()
   menuActionITTIN_PALET =&quot;RUN&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETRef_click()
   menuActionITTIN_PALET =&quot;REF&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
  Private Sub mnuITTIN_PALETCOPY_Click()
    On Error Resume Next
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.Row &gt; 0 Then
     If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_PALETCUT_Click()
    On Error Resume Next
    If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
    If gridITTIN_PALET.Row &gt; 0 Then
     If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_PALET.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_PALETCHANGE_Click()
  On Error Resume Next
  If gridITTIN_PALET.ItemCount = 0 Then Exit Sub
  If gridITTIN_PALET.Row &gt; 0 Then
   If gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_PALET.RowBookmark(gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_PALET.ItemCount = u.parent.Count
      gridITTIN_PALET.RefreshRowIndex gridITTIN_PALET.RowIndex(gridITTIN_PALET.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_PALETCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_PALETPrn_click()
   menuActionITTIN_PALET =&quot;PRN&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETCfg_click()
   menuActionITTIN_PALET =&quot;CFG&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETFind_click()
   menuActionITTIN_PALET =&quot;FND&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub mnuITTIN_PALETAcc_click()
   menuActionITTIN_PALET =&quot;ACC&quot;
   menuTimerITTIN_PALET.enabled = true
end sub
private sub menuTimerITTIN_PALET_timer()
   menuTimerITTIN_PALET.enabled = false
   if menuActionITTIN_PALET =&quot;ADD&quot; then cmdITTIN_PALETADD_CLick
   if menuActionITTIN_PALET =&quot;EDIT&quot; then cmdITTIN_PALETEDIT_CLick
   if menuActionITTIN_PALET =&quot;DEL&quot; then cmdITTIN_PALETDEL_CLick
   if menuActionITTIN_PALET =&quot;RUN&quot; then cmdITTIN_PALETRUN_CLick
   if menuActionITTIN_PALET =&quot;REF&quot; then cmdITTIN_PALETREF_CLick
   if menuActionITTIN_PALET =&quot;PRN&quot; then cmdITTIN_PALETPRN_CLick
   if menuActionITTIN_PALET =&quot;CFG&quot; then cmdITTIN_PALETCFG_CLick
   if menuActionITTIN_PALET =&quot;FND&quot; then cmdITTIN_PALETFND_CLick
   if menuActionITTIN_PALET =&quot;ACC&quot; then cmdITTIN_PALETACC_CLick
   menuActionITTIN_PALET =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_QLINEAdd,cmdITTIN_QLINEAdd.tag
  LoadBtnPictures cmdITTIN_QLINEEdit,cmdITTIN_QLINEEdit.tag
  LoadBtnPictures cmdITTIN_QLINEDel,cmdITTIN_QLINEDel.tag
  LoadBtnPictures cmdITTIN_QLINERef,cmdITTIN_QLINERef.tag
  LoadBtnPictures cmdITTIN_QLINEPrn,cmdITTIN_QLINEPrn.tag
  LoadBtnPictures cmdITTIN_QLINEFnd,cmdITTIN_QLINEFnd.tag
  LoadBtnPictures cmdITTIN_QLINERun,cmdITTIN_QLINERun.tag
  LoadBtnPictures cmdITTIN_QLINEAcc,cmdITTIN_QLINEAcc.tag
  LoadBtnPictures cmdITTIN_QLINECfg,cmdITTIN_QLINECfg.tag
  item.ITTIN_QLINE.PrepareGrid gridITTIN_QLINE
  LoadGridLayout gridITTIN_QLINE
  Set fndITTIN_QLINE = Nothing
  On Error Resume Next
  Set fndITTIN_QLINE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_QLINE.Init gridITTIN_QLINE
  LoadBtnPictures cmdITTIN_PALETAdd,cmdITTIN_PALETAdd.tag
  LoadBtnPictures cmdITTIN_PALETEdit,cmdITTIN_PALETEdit.tag
  LoadBtnPictures cmdITTIN_PALETDel,cmdITTIN_PALETDel.tag
  LoadBtnPictures cmdITTIN_PALETRef,cmdITTIN_PALETRef.tag
  LoadBtnPictures cmdITTIN_PALETPrn,cmdITTIN_PALETPrn.tag
  LoadBtnPictures cmdITTIN_PALETFnd,cmdITTIN_PALETFnd.Tag
  LoadBtnPictures cmdITTIN_PALETCfg,cmdITTIN_PALETCfg.tag
  LoadBtnPictures cmdITTIN_PALETRun,cmdITTIN_PALETRun.Tag
  LoadBtnPictures cmdITTIN_PALETAcc,cmdITTIN_PALETAcc.Tag
  gridITTIN_PALET.Columns.Clear
  gridITTIN_PALET.ItemCount=0
  cmdITTIN_PALETRef_Click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

pnlITTIN_QLINE.RestorePosition
  gridITTIN_QLINE_RowColChange gridITTIN_QLINE.Row,-1
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_QLINE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_QLINE = nothing
  set fndITTIN_PALET = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_SRV_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTIN_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Услуги к заказу"/><Properties Name="Name" PropValue="mnuPopupITTIN_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_SRVDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_SRVOpen"/></ControlData><ControlData Name="mnuITTIN_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_SRVRef"/></ControlData><ControlData Name="mnuITTIN_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_SRVS1"/></ControlData><ControlData Name="mnuITTIN_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_SRVBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_SRVCOPY"/></ControlData><ControlData Name="mnuITTIN_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_SRVCUT"/></ControlData><ControlData Name="mnuITTIN_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_SRVPASTE"/></ControlData><ControlData Name="mnuITTIN_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCHANGE"/></ControlData><ControlData Name="mnuITTIN_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_SRVPrn"/></ControlData><ControlData Name="mnuITTIN_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_SRVCfg"/></ControlData><ControlData Name="mnuITTIN_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_SRVFind"/></ControlData><ControlData Name="mnuITTIN_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_SRV as object
private menuActionITTIN_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_SRV,&quot;gridITTIN_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_SRV,&quot;Услуги к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_SRVRef_Click()
  on error resume next
  item.ITTIN_SRV.Refresh
  gridITTIN_SRV.itemCount = item.ITTIN_SRV.count
  gridITTIN_SRV.Refetch
  gridITTIN_SRV.Refresh
End Sub
Private Sub cmdITTIN_SRVAcc_Click()
On Error Resume Next
If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
If gridITTIN_SRV.Row &gt; 0 Then
 If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_SRVEdit_Click()
  on error resume next
If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
If gridITTIN_SRV.Row &gt; 0 then
 If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTIN_SRV_.Item = u
    again: frmITTIN_SRV_.NotFirstTime = False
    frmITTIN_SRV_.OnInit
    frmITTIN_SRV_.Show vbModal
    If frmITTIN_SRV_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTIN_SRVDel_Click()
  on error resume next
  gridITTIN_SRV.Delete
End Sub
Private Sub cmdITTIN_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTIN_SRV.Add()

      Set frmITTIN_SRV_.Item = u
      again: frmITTIN_SRV_.NotFirstTime = False
      frmITTIN_SRV_.OnInit
      frmITTIN_SRV_.Show vbModal
      If frmITTIN_SRV_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_SRV.ItemCount = Item.ITTIN_SRV.Count
        gridITTIN_SRV.Refresh
        gridITTIN_SRV.RefreshGroups
        gridITTIN_SRV.Refreshsort
        gridITTIN_SRV.MoveToBookmark u.ID &amp; &quot;ITTIN_SRV&quot;
      Else
        Item.ITTIN_SRV.Delete u.ID
        Item.ITTIN_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_SRVFnd_Click()
  on error resume next
  fndITTIN_SRV.ShowForm
End Sub
Private Sub cmdITTIN_SRVRun_Click()
  on error resume next
  gridITTIN_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_SRV.LoadRow gridITTIN_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTIN_SRV&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTIN_SRV_DblClick()
  cmdITTIN_SRVEdit_Click
End Sub
Private Sub gridITTIN_SRV_KeyPress(KeyAscii As Integer)
  If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTIN_SRV.Row And LastRow &gt; 0 Then
  gridITTIN_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTIN_SRV.GetRowData(gridITTIN_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTIN_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTIN_SRV.Add()
    If GetFromBuffer(u) Then
      gridITTIN_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTIN_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_SRVCfg_Click
        End If
    End If
end sub

private sub gridITTIN_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_SRV
End If
end sub
private sub mnuITTIN_SRVAdd_click()
   menuActionITTIN_SRV =&quot;ADD&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVEdit_click()
   menuActionITTIN_SRV =&quot;EDIT&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVDelete_click()
   menuActionITTIN_SRV =&quot;DEL&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVOpen_click()
   menuActionITTIN_SRV =&quot;RUN&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVRef_click()
   menuActionITTIN_SRV =&quot;REF&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
  Private Sub mnuITTIN_SRVCOPY_Click()
    On Error Resume Next
    If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
    If gridITTIN_SRV.Row &gt; 0 Then
     If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_SRVCUT_Click()
    On Error Resume Next
    If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
    If gridITTIN_SRV.Row &gt; 0 Then
     If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_SRVCHANGE_Click()
  On Error Resume Next
  If gridITTIN_SRV.ItemCount = 0 Then Exit Sub
  If gridITTIN_SRV.Row &gt; 0 Then
   If gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_SRV.RowBookmark(gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_SRV.ItemCount = u.parent.Count
      gridITTIN_SRV.RefreshRowIndex gridITTIN_SRV.RowIndex(gridITTIN_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_SRVPrn_click()
   menuActionITTIN_SRV =&quot;PRN&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVCfg_click()
   menuActionITTIN_SRV =&quot;CFG&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVFind_click()
   menuActionITTIN_SRV =&quot;FND&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub mnuITTIN_SRVAcc_click()
   menuActionITTIN_SRV =&quot;ACC&quot;
   menuTimerITTIN_SRV.enabled = true
end sub
private sub menuTimerITTIN_SRV_timer()
   menuTimerITTIN_SRV.enabled = false
   if menuActionITTIN_SRV =&quot;ADD&quot; then cmdITTIN_SRVADD_CLick
   if menuActionITTIN_SRV =&quot;EDIT&quot; then cmdITTIN_SRVEDIT_CLick
   if menuActionITTIN_SRV =&quot;DEL&quot; then cmdITTIN_SRVDEL_CLick
   if menuActionITTIN_SRV =&quot;RUN&quot; then cmdITTIN_SRVRUN_CLick
   if menuActionITTIN_SRV =&quot;REF&quot; then cmdITTIN_SRVREF_CLick
   if menuActionITTIN_SRV =&quot;PRN&quot; then cmdITTIN_SRVPRN_CLick
   if menuActionITTIN_SRV =&quot;CFG&quot; then cmdITTIN_SRVCFG_CLick
   if menuActionITTIN_SRV =&quot;FND&quot; then cmdITTIN_SRVFND_CLick
   if menuActionITTIN_SRV =&quot;ACC&quot; then cmdITTIN_SRVACC_CLick
   menuActionITTIN_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_SRVAdd,cmdITTIN_SRVAdd.tag
  LoadBtnPictures cmdITTIN_SRVEdit,cmdITTIN_SRVEdit.tag
  LoadBtnPictures cmdITTIN_SRVDel,cmdITTIN_SRVDel.tag
  LoadBtnPictures cmdITTIN_SRVRef,cmdITTIN_SRVRef.tag
  LoadBtnPictures cmdITTIN_SRVPrn,cmdITTIN_SRVPrn.tag
  LoadBtnPictures cmdITTIN_SRVFnd,cmdITTIN_SRVFnd.tag
  LoadBtnPictures cmdITTIN_SRVRun,cmdITTIN_SRVRun.tag
  LoadBtnPictures cmdITTIN_SRVAcc,cmdITTIN_SRVAcc.tag
  LoadBtnPictures cmdITTIN_SRVCfg,cmdITTIN_SRVCfg.tag
  item.ITTIN_SRV.PrepareGrid gridITTIN_SRV
  LoadGridLayout gridITTIN_SRV
  Set fndITTIN_SRV = Nothing
  On Error Resume Next
  Set fndITTIN_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_SRV.Init gridITTIN_SRV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTIN_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTIN_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTIN_EPL_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTIN_EPL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTIN_EPL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTIN_EPL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTIN_EPL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTIN_EPLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_EPLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_EPLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTIN_EPLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTIN_EPLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTIN_EPLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTIN_EPLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTIN_EPLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTIN_EPLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTIN_EPLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTIN_EPLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTIN_EPL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Поддоны к заказу"/><Properties Name="Name" PropValue="mnuPopupITTIN_EPL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTIN_EPLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTIN_EPLAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_EPLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTIN_EPLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_EPLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTIN_EPLDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTIN_EPLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTIN_EPLOpen"/></ControlData><ControlData Name="mnuITTIN_EPLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTIN_EPLRef"/></ControlData><ControlData Name="mnuITTIN_EPLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTIN_EPLS1"/></ControlData><ControlData Name="mnuITTIN_EPLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTIN_EPLBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTIN_EPLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTIN_EPLCOPY"/></ControlData><ControlData Name="mnuITTIN_EPLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTIN_EPLCUT"/></ControlData><ControlData Name="mnuITTIN_EPLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTIN_EPLPASTE"/></ControlData><ControlData Name="mnuITTIN_EPLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCHANGE"/></ControlData><ControlData Name="mnuITTIN_EPLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTIN_EPLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTIN_EPLPrn"/></ControlData><ControlData Name="mnuITTIN_EPLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTIN_EPLCfg"/></ControlData><ControlData Name="mnuITTIN_EPLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTIN_EPLFind"/></ControlData><ControlData Name="mnuITTIN_EPLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTIN_EPLAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTIN_EPL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTIN_EPL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Пустые поддоны к заказу
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTIN_EPL as object
private menuActionITTIN_EPL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTIN_EPLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTIN_EPL,&quot;gridITTIN_EPL&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_EPLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTIN_EPL,&quot;Поддоны к заказу&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTIN_EPLRef_Click()
  on error resume next
  item.ITTIN_EPL.Refresh
  gridITTIN_EPL.itemCount = item.ITTIN_EPL.count
  gridITTIN_EPL.Refetch
  gridITTIN_EPL.Refresh
End Sub
Private Sub cmdITTIN_EPLAcc_Click()
On Error Resume Next
If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
If gridITTIN_EPL.Row &gt; 0 Then
 If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTIN_EPLEdit_Click()
  on error resume next
If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
If gridITTIN_EPL.Row &gt; 0 then
 If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTIN_EPL_.Item = u
    again: frmITTIN_EPL_.NotFirstTime = False
    frmITTIN_EPL_.OnInit
    frmITTIN_EPL_.Show vbModal
    If frmITTIN_EPL_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTIN_EPL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTIN_EPLDel_Click()
  on error resume next
  gridITTIN_EPL.Delete
End Sub
Private Sub cmdITTIN_EPLAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTIN_EPL.Add()

      Set frmITTIN_EPL_.Item = u
      again: frmITTIN_EPL_.NotFirstTime = False
      frmITTIN_EPL_.OnInit
      frmITTIN_EPL_.Show vbModal
      If frmITTIN_EPL_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTIN_EPL.ItemCount = Item.ITTIN_EPL.Count
        gridITTIN_EPL.Refresh
        gridITTIN_EPL.RefreshGroups
        gridITTIN_EPL.Refreshsort
        gridITTIN_EPL.MoveToBookmark u.ID &amp; &quot;ITTIN_EPL&quot;
      Else
        Item.ITTIN_EPL.Delete u.ID
        Item.ITTIN_EPL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTIN_EPLFnd_Click()
  on error resume next
  fndITTIN_EPL.ShowForm
End Sub
Private Sub cmdITTIN_EPLRun_Click()
  on error resume next
  gridITTIN_EPL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTIN_EPL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTIN_EPL.LoadRow gridITTIN_EPL, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTIN_EPL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTIN_EPL&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTIN_EPL_DblClick()
  cmdITTIN_EPLEdit_Click
End Sub
Private Sub gridITTIN_EPL_KeyPress(KeyAscii As Integer)
  If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTIN_EPL.FindOnPress KeyAscii
End Sub

Private Sub gridITTIN_EPL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTIN_EPL.Row And LastRow &gt; 0 Then
  gridITTIN_EPL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTIN_EPL.GetRowData(gridITTIN_EPL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTIN_EPLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTIN_EPL.Add()
    If GetFromBuffer(u) Then
      gridITTIN_EPL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTIN_EPL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTIN_EPLCfg_Click
        End If
    End If
end sub

private sub gridITTIN_EPL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTIN_EPL
End If
end sub
private sub mnuITTIN_EPLAdd_click()
   menuActionITTIN_EPL =&quot;ADD&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLEdit_click()
   menuActionITTIN_EPL =&quot;EDIT&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLDelete_click()
   menuActionITTIN_EPL =&quot;DEL&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLOpen_click()
   menuActionITTIN_EPL =&quot;RUN&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLRef_click()
   menuActionITTIN_EPL =&quot;REF&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
  Private Sub mnuITTIN_EPLCOPY_Click()
    On Error Resume Next
    If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
    If gridITTIN_EPL.Row &gt; 0 Then
     If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTIN_EPLCUT_Click()
    On Error Resume Next
    If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
    If gridITTIN_EPL.Row &gt; 0 Then
     If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTIN_EPL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTIN_EPLCHANGE_Click()
  On Error Resume Next
  If gridITTIN_EPL.ItemCount = 0 Then Exit Sub
  If gridITTIN_EPL.Row &gt; 0 Then
   If gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTIN_EPL.RowBookmark(gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTIN_EPL.ItemCount = u.parent.Count
      gridITTIN_EPL.RefreshRowIndex gridITTIN_EPL.RowIndex(gridITTIN_EPL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTIN_EPLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTIN_EPLPrn_click()
   menuActionITTIN_EPL =&quot;PRN&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLCfg_click()
   menuActionITTIN_EPL =&quot;CFG&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLFind_click()
   menuActionITTIN_EPL =&quot;FND&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub mnuITTIN_EPLAcc_click()
   menuActionITTIN_EPL =&quot;ACC&quot;
   menuTimerITTIN_EPL.enabled = true
end sub
private sub menuTimerITTIN_EPL_timer()
   menuTimerITTIN_EPL.enabled = false
   if menuActionITTIN_EPL =&quot;ADD&quot; then cmdITTIN_EPLADD_CLick
   if menuActionITTIN_EPL =&quot;EDIT&quot; then cmdITTIN_EPLEDIT_CLick
   if menuActionITTIN_EPL =&quot;DEL&quot; then cmdITTIN_EPLDEL_CLick
   if menuActionITTIN_EPL =&quot;RUN&quot; then cmdITTIN_EPLRUN_CLick
   if menuActionITTIN_EPL =&quot;REF&quot; then cmdITTIN_EPLREF_CLick
   if menuActionITTIN_EPL =&quot;PRN&quot; then cmdITTIN_EPLPRN_CLick
   if menuActionITTIN_EPL =&quot;CFG&quot; then cmdITTIN_EPLCFG_CLick
   if menuActionITTIN_EPL =&quot;FND&quot; then cmdITTIN_EPLFND_CLick
   if menuActionITTIN_EPL =&quot;ACC&quot; then cmdITTIN_EPLACC_CLick
   menuActionITTIN_EPL =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTIN_EPLAdd,cmdITTIN_EPLAdd.tag
  LoadBtnPictures cmdITTIN_EPLEdit,cmdITTIN_EPLEdit.tag
  LoadBtnPictures cmdITTIN_EPLDel,cmdITTIN_EPLDel.tag
  LoadBtnPictures cmdITTIN_EPLRef,cmdITTIN_EPLRef.tag
  LoadBtnPictures cmdITTIN_EPLPrn,cmdITTIN_EPLPrn.tag
  LoadBtnPictures cmdITTIN_EPLFnd,cmdITTIN_EPLFnd.tag
  LoadBtnPictures cmdITTIN_EPLRun,cmdITTIN_EPLRun.tag
  LoadBtnPictures cmdITTIN_EPLAcc,cmdITTIN_EPLAcc.tag
  LoadBtnPictures cmdITTIN_EPLCfg,cmdITTIN_EPLCfg.tag
  item.ITTIN_EPL.PrepareGrid gridITTIN_EPL
  LoadGridLayout gridITTIN_EPL
  Set fndITTIN_EPL = Nothing
  On Error Resume Next
  Set fndITTIN_EPL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTIN_EPL.Init gridITTIN_EPL
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTIN_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTIN_EPL.Top = 40 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Left = 5 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTIN_EPL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTIN_EPL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTIN_EPL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_DEF" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_DEF_"><Properties Name="Name" PropValue="pnlITTIN_DEF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_QLINE" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_QLINE_"><Properties Name="Name" PropValue="pnlITTIN_QLINE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_SRV" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_SRV_"><Properties Name="Name" PropValue="pnlITTIN_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTIN_EPL" ControlIndex="0" PROGID="ITTINGUI.vpnITTIN_EPL_"><Properties Name="Name" PropValue="pnlITTIN_EPL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Приемка груза"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим 
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlITTIN_DEF.IsOK
if IsItOk then IsItOk = pnlITTIN_QLINE.IsOK
if IsItOk then IsItOk = pnlITTIN_SRV.IsOK
if IsItOk then IsItOk = pnlITTIN_EPL.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlITTIN_EPL.Visible = False
  pnlITTIN_SRV.Visible = False
  pnlITTIN_QLINE.Visible = False
  pnlITTIN_DEF.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ITTIN_DEF&quot;
     With pnlITTIN_DEF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_DEF.OnClick item,parentform
     End With
   Case &quot;ITTIN_QLINE&quot;
     With pnlITTIN_QLINE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_QLINE.OnClick item,parentform
     End With
   Case &quot;ITTIN_SRV&quot;
     With pnlITTIN_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_SRV.OnClick item,parentform
     End With
   Case &quot;ITTIN_EPL&quot;
     With pnlITTIN_EPL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTIN_EPL.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Описание&quot;
ts.Tabs.Item(1).key = &quot;ITTIN_DEF&quot;
pnlITTIN_DEF.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_QLINE&quot;, &quot;Строки заказа&quot;)
pnlITTIN_QLINE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_SRV&quot;, &quot;Услуги к заказу&quot;)
pnlITTIN_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTIN_EPL&quot;, &quot;Поддоны к заказу&quot;)
pnlITTIN_EPL.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ITTIN&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlITTIN_DEF.CloseClass
 pnlITTIN_QLINE.CloseClass
 pnlITTIN_SRV.CloseClass
 pnlITTIN_EPL.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlITTIN_DEF.OnSave
 pnlITTIN_QLINE.OnSave
 pnlITTIN_SRV.OnSave
 pnlITTIN_EPL.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlITTIN_DEF.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_QLINE.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlITTIN_EPL.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 4
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{49A919F7-94A6-49DE-9280-1EEAC973647B}&quot;
    i = i + 1
    m(i).Caption = &quot;Приемка завершена&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot;
    i = i + 1
    m(i).Caption = &quot;Идет приемка&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot;
    i = i + 1
    m(i).Caption = &quot;Приемка обработана&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot;
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{49A919F7-94A6-49DE-9280-1EEAC973647B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{E3728A5B-6B62-48BF-9E5A-D4F0BCBFC75B}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{EB3A7D03-EB3F-4541-AD93-D55C92BE02AC}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{E8BA9909-6680-4B2C-B446-F58EF91DCD17}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ITTINGUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Приемка груза"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим 
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTIN&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="' модуль общих функций



"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Найти форму по имени
'Parameters:
'[IN]   Name , тип параметра: string, 
'[IN]   Mode , тип параметра: string =&quot;&quot;   - ...
'Returns:
'  объект класса form
'  ,или Nothing
'See Also:
'Example:
' dim variable as form
' Set variable = me.FormByName(...параметры...)
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;read&quot; then

if Name=&quot;ITTIN_DEF&quot; then 
 set FormByName = new frmITTIN_DEF_read
 exit function
end if

if Name=&quot;ITTIN_QLINE&quot; then 
 set FormByName = new frmITTIN_QLINE_read
 exit function
end if

if Name=&quot;ITTIN_PALET&quot; then 
 set FormByName = new frmITTIN_PALET_read
 exit function
end if

if Name=&quot;ITTIN_SRV&quot; then 
 set FormByName = new frmITTIN_SRV_read
 exit function
end if

if Name=&quot;ITTIN_EPL&quot; then 
 set FormByName = new frmITTIN_EPL_read
 exit function
end if

end if
if Mode=&quot;main&quot; then

if Name=&quot;ITTIN_DEF&quot; then 
 set FormByName = new frmITTIN_DEF_main
 exit function
end if

if Name=&quot;ITTIN_QLINE&quot; then 
 set FormByName = new frmITTIN_QLINE_main
 exit function
end if

if Name=&quot;ITTIN_PALET&quot; then 
 set FormByName = new frmITTIN_PALET_main
 exit function
end if

if Name=&quot;ITTIN_SRV&quot; then 
 set FormByName = new frmITTIN_SRV_main
 exit function
end if

if Name=&quot;ITTIN_EPL&quot; then 
 set FormByName = new frmITTIN_EPL_main
 exit function
end if

end if
if Mode=&quot;admi&quot; then

if Name=&quot;ITTIN_DEF&quot; then 
 set FormByName = new frmITTIN_DEF_admi
 exit function
end if

if Name=&quot;ITTIN_QLINE&quot; then 
 set FormByName = new frmITTIN_QLINE_admi
 exit function
end if

if Name=&quot;ITTIN_PALET&quot; then 
 set FormByName = new frmITTIN_PALET_admi
 exit function
end if

if Name=&quot;ITTIN_SRV&quot; then 
 set FormByName = new frmITTIN_SRV_admi
 exit function
end if

if Name=&quot;ITTIN_EPL&quot; then 
 set FormByName = new frmITTIN_EPL_admi
 exit function
end if

end if
if Mode=&quot;&quot; then

if Name=&quot;ITTIN_DEF&quot; then 
 set FormByName = new frmITTIN_DEF_
 exit function
end if

if Name=&quot;ITTIN_QLINE&quot; then 
 set FormByName = new frmITTIN_QLINE_
 exit function
end if

if Name=&quot;ITTIN_PALET&quot; then 
 set FormByName = new frmITTIN_PALET_
 exit function
end if

if Name=&quot;ITTIN_SRV&quot; then 
 set FormByName = new frmITTIN_SRV_
 exit function
end if

if Name=&quot;ITTIN_EPL&quot; then 
 set FormByName = new frmITTIN_EPL_
 exit function
end if

end if
end function

'Скопировать объект в типизированный XML  буфер
'Parameters:
'[IN][OUT]  u , тип параметра: Object  - ...
'See Also:
'Example:
'  call me.SaveToBuffer({параметры})
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub


'Получить объект из типизированного XML  буфера
'Parameters:
'[IN][OUT]  u , тип параметра: Object  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.GetFromBuffer(...параметры...) 
Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
