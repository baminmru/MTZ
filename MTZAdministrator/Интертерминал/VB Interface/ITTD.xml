<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Справочник"/><AttributeHolder Name="Name" Value="ITTDGUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="' основной интерфейс компонента ITTDGUI
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Конструктор класса ITTD
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Справочник&quot;
End Sub


'Деструктор класса
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Terminate()
Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub

'Очистка обратных ссылок
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub

'Поиск формы редактирования
'Parameters:
'[IN]   InstanceID , тип параметра: String, 
'[IN]   mode , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindForm(...параметры...)
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function

'Путь к текущей библиотеке
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
'  variable = me.GUIPath() 
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function

'Количество открытых форм
'Parameters:
'[IN]   InstanceID , тип параметра: String  - ...
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me.FormCount(...параметры...) 
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function

'Очистить форму
'Parameters:
'[IN]   InstanceID , тип параметра: String, 
'[IN]   mode , тип параметра: String, 
'[IN]   ModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.EraseForm({параметры})
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub

'Указатель модального режима работы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. IsModal
public property get IsModal() as boolean
 IsModal = mOpenModal
end property

'Показать форму редактирования документа
'Parameters:
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   optional OpenModal , тип параметра: boolean = false  - ...
'See Also:
'Example:
'  call me.Show({параметры})
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Справочник)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTD:main&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTD:admi&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;read&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTD:read&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmread_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTD:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Справочник&quot; 
  end if
end if
if OpenModal then
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTD:main&quot;)) then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTD:admi&quot;)) then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;read&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTD:read&quot;)) then
     set f = new frmread_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ITTD:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Справочник&quot; 
  end if
end if
end sub

'Покзать форму редактирования строки раздела. RowItem -  объект строка, уже должен быть создан
'Parameters:
'[IN]   Mode , тип параметра: String, 
'[IN][OUT]   RowItem , тип параметра: Object  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.ShowAddForm(...параметры...) 
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;ITTD_MOROZ&quot; Then
    Set f = New frmITTD_MOROZ_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_RULE&quot; Then
    Set f = New frmITTD_RULE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_PLTYPE&quot; Then
    Set f = New frmITTD_PLTYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_FACTORY&quot; Then
    Set f = New frmITTD_FACTORY_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_ZTYPE&quot; Then
    Set f = New frmITTD_ZTYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_GTYPE&quot; Then
    Set f = New frmITTD_GTYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_KILLPLACE&quot; Then
    Set f = New frmITTD_KILLPLACE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_COUNTRY&quot; Then
    Set f = New frmITTD_COUNTRY_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_QTYPE&quot; Then
    Set f = New frmITTD_QTYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_CAMERA&quot; Then
    Set f = New frmITTD_CAMERA_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_SRV&quot; Then
    Set f = New frmITTD_SRV_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_ATYPE&quot; Then
    Set f = New frmITTD_ATYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_OPTTYPE&quot; Then
    Set f = New frmITTD_OPTTYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_EMAIL&quot; Then
    Set f = New frmITTD_EMAIL_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_PART&quot; Then
    Set f = New frmITTD_PART_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;ITTD_MOROZ&quot; Then
    Set f = New frmITTD_MOROZ_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_RULE&quot; Then
    Set f = New frmITTD_RULE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_PLTYPE&quot; Then
    Set f = New frmITTD_PLTYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_FACTORY&quot; Then
    Set f = New frmITTD_FACTORY_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_ZTYPE&quot; Then
    Set f = New frmITTD_ZTYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_GTYPE&quot; Then
    Set f = New frmITTD_GTYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_KILLPLACE&quot; Then
    Set f = New frmITTD_KILLPLACE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_COUNTRY&quot; Then
    Set f = New frmITTD_COUNTRY_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_QTYPE&quot; Then
    Set f = New frmITTD_QTYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_CAMERA&quot; Then
    Set f = New frmITTD_CAMERA_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_SRV&quot; Then
    Set f = New frmITTD_SRV_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_ATYPE&quot; Then
    Set f = New frmITTD_ATYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_OPTTYPE&quot; Then
    Set f = New frmITTD_OPTTYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_EMAIL&quot; Then
    Set f = New frmITTD_EMAIL_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_PART&quot; Then
    Set f = New frmITTD_PART_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If

 If Mode = &quot;read&quot; Then
  If UCase(PartName) = &quot;ITTD_MOROZ&quot; Then
    Set f = New frmITTD_MOROZ_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_RULE&quot; Then
    Set f = New frmITTD_RULE_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_PLTYPE&quot; Then
    Set f = New frmITTD_PLTYPE_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_FACTORY&quot; Then
    Set f = New frmITTD_FACTORY_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_ZTYPE&quot; Then
    Set f = New frmITTD_ZTYPE_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_GTYPE&quot; Then
    Set f = New frmITTD_GTYPE_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_KILLPLACE&quot; Then
    Set f = New frmITTD_KILLPLACE_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_COUNTRY&quot; Then
    Set f = New frmITTD_COUNTRY_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_QTYPE&quot; Then
    Set f = New frmITTD_QTYPE_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_CAMERA&quot; Then
    Set f = New frmITTD_CAMERA_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_SRV&quot; Then
    Set f = New frmITTD_SRV_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_ATYPE&quot; Then
    Set f = New frmITTD_ATYPE_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_OPTTYPE&quot; Then
    Set f = New frmITTD_OPTTYPE_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_EMAIL&quot; Then
    Set f = New frmITTD_EMAIL_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_PART&quot; Then
    Set f = New frmITTD_PART_read
  End If

 If Mode = &quot;read&quot; Then
 End If
 End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;ITTD_MOROZ&quot; Then
    Set f = New frmITTD_MOROZ_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_RULE&quot; Then
    Set f = New frmITTD_RULE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_PLTYPE&quot; Then
    Set f = New frmITTD_PLTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_FACTORY&quot; Then
    Set f = New frmITTD_FACTORY_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_ZTYPE&quot; Then
    Set f = New frmITTD_ZTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_GTYPE&quot; Then
    Set f = New frmITTD_GTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_KILLPLACE&quot; Then
    Set f = New frmITTD_KILLPLACE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_COUNTRY&quot; Then
    Set f = New frmITTD_COUNTRY_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_QTYPE&quot; Then
    Set f = New frmITTD_QTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_CAMERA&quot; Then
    Set f = New frmITTD_CAMERA_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_SRV&quot; Then
    Set f = New frmITTD_SRV_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_ATYPE&quot; Then
    Set f = New frmITTD_ATYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_OPTTYPE&quot; Then
    Set f = New frmITTD_OPTTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_EMAIL&quot; Then
    Set f = New frmITTD_EMAIL_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ITTD_PART&quot; Then
    Set f = New frmITTD_PART_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_MOROZ" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightConst"/><Properties Name="Caption" PropValue="Точность весов:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightConst"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Точность весов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMorozConst"/><Properties Name="Caption" PropValue="Коэффициент выморозки:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMorozConst"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Коэффициент выморозки"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Параметры выморозки
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDTheClient as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheClient_Change()
  if  not (OnInit) then 
If (txtTheClient.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheClient.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheClient.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheClient.Tag = XMLDoc.xml
  End If
End If
  Changing

  end if 
end sub
private sub cmdTheClient_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheClient.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheClient = Mid(txtTheClient.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheClient;&quot; &amp; mIDTheClient, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheClient.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheClient.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheClient.Tag = res.item(&quot;xml&quot;).value
      If (txtTheClient.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheClient.Text = res.item(&quot;brief&quot;).value
        mIDTheClient = res.item(&quot;ID&quot;).value
        Call txtTheClient_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtWeightConst_Validate(cancel as boolean)
if txtWeightConst.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWeightConst.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightConst.SetFocus 
  elseif Val(txtWeightConst.text) &lt; -922337203685477.5808 or Val(txtWeightConst.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightConst.SetFocus 
  end if
end if
end sub
Private Sub txtWeightConst_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWeightConst_Change()
  Changing

end sub
private sub txtMorozConst_Validate(cancel as boolean)
if txtMorozConst.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMorozConst.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMorozConst.SetFocus 
  elseif Val(txtMorozConst.text) &lt; -922337203685477.5808 or Val(txtMorozConst.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMorozConst.SetFocus 
  end if
end if
end sub
Private Sub txtMorozConst_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMorozConst_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTheClient.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtMorozConst.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtTheClient.Text =&quot;&quot;
txtTheClient.Tag =&quot;&quot;
mIDTheClient =&quot;&quot;
' Разобрать XML
Dim XMLDocTheClient As New DOMDocument
On Error Resume Next
If (item.TheClient &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheClient.loadXML(item.TheClient)
  If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
    Dim nodeTheClient As MSXML2.IXMLDOMNode
    txtTheClient.Tag = item.TheClient
    For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
      If (nodeTheClient.baseName = &quot;Brief&quot;) Then
       txtTheClient.Text = nodeTheClient.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheClient As String
    newIDTheClient = item.TheClient
    Dim XMLTheClientID As String
    XMLTheClientID = &quot;&lt;SQLData&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheClient &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheClient As New NamedValues
    Dim resTheClient As NamedValues
    Call parsTheClient.Add(&quot;xml&quot;, XMLTheClientID)
    Set resTheClient = item.Application.Manager.GetSQLDataDialog(parsTheClient)
    If (Not resTheClient Is Nothing) Then
      Dim resStrTheClient As String
      resStrTheClient = resTheClient.item(&quot;RESULT&quot;).value
      If (resStrTheClient = &quot;OK&quot;) Then
        txtTheClient.Tag = Replace(resTheClient.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheClient.Text &lt;&gt; resTheClient.item(&quot;brief&quot;).value) Then
          mIDTheClient = newIDTheClient
          txtTheClient.Text = resTheClient.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheClient = vbNullString
    End If
  End If
Else
  Dim XMLTheClient As String
  XMLTheClient = &quot;&lt;SQLData&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheClient.Tag = XMLTheClient
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheClient,cmdTheClient.tag
  cmdTheClient.RemoveAllMenu
txtWeightConst = item.WeightConst
txtMorozConst = item.MorozConst
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheClient = txtTheClient.Tag
item.WeightConst = cdbl(txtWeightConst)
item.MorozConst = cdbl(txtMorozConst)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_RULE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseProduct"/><Properties Name="Caption" PropValue="Товар:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseProduct"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Товар"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCountry"/><Properties Name="Caption" PropValue="Страна:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbTheCountry"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Страна"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbTheFactory"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Завод"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKillPlace"/><Properties Name="Caption" PropValue="Бойня:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbKillPlace"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Бойня"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseBrak"/><Properties Name="Caption" PropValue="Брак:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseBrak"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Брак"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseExpDate"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseExpDate"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUsePartia"/><Properties Name="Caption" PropValue="Партия товара:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUsePartia"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Партия товара"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUsePalType"/><Properties Name="Caption" PropValue="Тип паллеты:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUsePalType"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тип паллеты"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseVetsved"/><Properties Name="Caption" PropValue="Сертификат:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseVetsved"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Сертификат"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseClient"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Клиент"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Правило по которому зполняются обязательные поля и составляется код партии
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub cmbUseProduct_Click()
  on error resume next
  Changing

end sub
private sub cmbTheCountry_Click()
  on error resume next
  Changing

end sub
private sub cmbTheFactory_Click()
  on error resume next
  Changing

end sub
private sub cmbKillPlace_Click()
  on error resume next
  Changing

end sub
private sub cmbUseBrak_Click()
  on error resume next
  Changing

end sub
private sub cmbUseExpDate_Click()
  on error resume next
  Changing

end sub
private sub cmbUsePartia_Click()
  on error resume next
  Changing

end sub
private sub cmbUsePalType_Click()
  on error resume next
  Changing

end sub
private sub cmbUseVetsved_Click()
  on error resume next
  Changing

end sub
private sub cmbUseClient_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
if mIsOK then mIsOK =(cmbUseProduct.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbTheCountry.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbTheFactory.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbKillPlace.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbUseBrak.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbUseExpDate.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
cmbUseProduct.Clear
cmbUseProduct.additem &quot;Да&quot;
cmbUseProduct.itemdata(cmbUseProduct.newindex)= -1
cmbUseProduct.additem &quot;Нет&quot;
cmbUseProduct.itemdata(cmbUseProduct.newindex)= 0
 For iii = 0 To cmbUseProduct.ListCount-1
  If Item.UseProduct = cmbUseProduct.ItemData(iii) Then
   cmbUseProduct.ListIndex = iii
   Exit For
  End If
 Next
cmbTheCountry.Clear
cmbTheCountry.additem &quot;Да&quot;
cmbTheCountry.itemdata(cmbTheCountry.newindex)= -1
cmbTheCountry.additem &quot;Нет&quot;
cmbTheCountry.itemdata(cmbTheCountry.newindex)= 0
 For iii = 0 To cmbTheCountry.ListCount-1
  If Item.TheCountry = cmbTheCountry.ItemData(iii) Then
   cmbTheCountry.ListIndex = iii
   Exit For
  End If
 Next
cmbTheFactory.Clear
cmbTheFactory.additem &quot;Да&quot;
cmbTheFactory.itemdata(cmbTheFactory.newindex)= -1
cmbTheFactory.additem &quot;Нет&quot;
cmbTheFactory.itemdata(cmbTheFactory.newindex)= 0
 For iii = 0 To cmbTheFactory.ListCount-1
  If Item.TheFactory = cmbTheFactory.ItemData(iii) Then
   cmbTheFactory.ListIndex = iii
   Exit For
  End If
 Next
cmbKillPlace.Clear
cmbKillPlace.additem &quot;Да&quot;
cmbKillPlace.itemdata(cmbKillPlace.newindex)= -1
cmbKillPlace.additem &quot;Нет&quot;
cmbKillPlace.itemdata(cmbKillPlace.newindex)= 0
 For iii = 0 To cmbKillPlace.ListCount-1
  If Item.KillPlace = cmbKillPlace.ItemData(iii) Then
   cmbKillPlace.ListIndex = iii
   Exit For
  End If
 Next
cmbUseBrak.Clear
cmbUseBrak.additem &quot;Да&quot;
cmbUseBrak.itemdata(cmbUseBrak.newindex)= -1
cmbUseBrak.additem &quot;Нет&quot;
cmbUseBrak.itemdata(cmbUseBrak.newindex)= 0
 For iii = 0 To cmbUseBrak.ListCount-1
  If Item.UseBrak = cmbUseBrak.ItemData(iii) Then
   cmbUseBrak.ListIndex = iii
   Exit For
  End If
 Next
cmbUseExpDate.Clear
cmbUseExpDate.additem &quot;Да&quot;
cmbUseExpDate.itemdata(cmbUseExpDate.newindex)= -1
cmbUseExpDate.additem &quot;Нет&quot;
cmbUseExpDate.itemdata(cmbUseExpDate.newindex)= 0
 For iii = 0 To cmbUseExpDate.ListCount-1
  If Item.UseExpDate = cmbUseExpDate.ItemData(iii) Then
   cmbUseExpDate.ListIndex = iii
   Exit For
  End If
 Next
cmbUsePartia.Clear
cmbUsePartia.additem &quot;Да&quot;
cmbUsePartia.itemdata(cmbUsePartia.newindex)= -1
cmbUsePartia.additem &quot;Нет&quot;
cmbUsePartia.itemdata(cmbUsePartia.newindex)= 0
 For iii = 0 To cmbUsePartia.ListCount-1
  If Item.UsePartia = cmbUsePartia.ItemData(iii) Then
   cmbUsePartia.ListIndex = iii
   Exit For
  End If
 Next
cmbUsePalType.Clear
cmbUsePalType.additem &quot;Да&quot;
cmbUsePalType.itemdata(cmbUsePalType.newindex)= -1
cmbUsePalType.additem &quot;Нет&quot;
cmbUsePalType.itemdata(cmbUsePalType.newindex)= 0
 For iii = 0 To cmbUsePalType.ListCount-1
  If Item.UsePalType = cmbUsePalType.ItemData(iii) Then
   cmbUsePalType.ListIndex = iii
   Exit For
  End If
 Next
cmbUseVetsved.Clear
cmbUseVetsved.additem &quot;Да&quot;
cmbUseVetsved.itemdata(cmbUseVetsved.newindex)= -1
cmbUseVetsved.additem &quot;Нет&quot;
cmbUseVetsved.itemdata(cmbUseVetsved.newindex)= 0
 For iii = 0 To cmbUseVetsved.ListCount-1
  If Item.UseVetsved = cmbUseVetsved.ItemData(iii) Then
   cmbUseVetsved.ListIndex = iii
   Exit For
  End If
 Next
cmbUseClient.Clear
cmbUseClient.additem &quot;Да&quot;
cmbUseClient.itemdata(cmbUseClient.newindex)= -1
cmbUseClient.additem &quot;Нет&quot;
cmbUseClient.itemdata(cmbUseClient.newindex)= 0
 For iii = 0 To cmbUseClient.ListCount-1
  If Item.UseClient = cmbUseClient.ItemData(iii) Then
   cmbUseClient.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 if cmbUseProduct.listindex&gt;=0 then
   item.UseProduct = cmbUseProduct.itemdata(cmbUseProduct.listindex)
 end if
 if cmbTheCountry.listindex&gt;=0 then
   item.TheCountry = cmbTheCountry.itemdata(cmbTheCountry.listindex)
 end if
 if cmbTheFactory.listindex&gt;=0 then
   item.TheFactory = cmbTheFactory.itemdata(cmbTheFactory.listindex)
 end if
 if cmbKillPlace.listindex&gt;=0 then
   item.KillPlace = cmbKillPlace.itemdata(cmbKillPlace.listindex)
 end if
 if cmbUseBrak.listindex&gt;=0 then
   item.UseBrak = cmbUseBrak.itemdata(cmbUseBrak.listindex)
 end if
 if cmbUseExpDate.listindex&gt;=0 then
   item.UseExpDate = cmbUseExpDate.itemdata(cmbUseExpDate.listindex)
 end if
 if cmbUsePartia.listindex&gt;=0 then
   item.UsePartia = cmbUsePartia.itemdata(cmbUsePartia.listindex)
 end if
 if cmbUsePalType.listindex&gt;=0 then
   item.UsePalType = cmbUsePalType.itemdata(cmbUsePalType.listindex)
 end if
 if cmbUseVetsved.listindex&gt;=0 then
   item.UseVetsved = cmbUseVetsved.itemdata(cmbUseVetsved.listindex)
 end if
 if cmbUseClient.listindex&gt;=0 then
   item.UseClient = cmbUseClient.itemdata(cmbUseClient.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_PLTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCode"/><Properties Name="Caption" PropValue="Код типа палеты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Код типа палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtTheCode_Validate(cancel as boolean)
if txtTheCode.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtTheCode.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheCode.SetFocus 
  elseif Val(txtTheCode.text) &lt;&gt;clng(Val(txtTheCode.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheCode.SetFocus 
  end if
end if
end sub
Private Sub txtTheCode_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtTheCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
if mIsOK then mIsOK = IsSet(txtTheCode.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
txtTheCode = item.TheCode
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.TheCode = cdbl(txtTheCode)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_FACTORY" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCountry"/><Properties Name="Caption" PropValue="Страна:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCountry"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCountry"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCountry_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCountry_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief) Then
          txtCountry.Tag = Left(id, 38)
          txtCountry = brief
        End If
end sub
private sub cmdCountry_MenuClick(ByVal sCaption As String)
          txtCountry.Tag = &quot;&quot;
          txtCountry = &quot;&quot;
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Country Is Nothing Then
  txtCountry.Tag = item.Country.id
  txtCountry = item.Country.brief
else
  txtCountry.Tag = &quot;&quot; 
  txtCountry = &quot;&quot; 
End If
 LoadBtnPictures cmdCountry,cmdCountry.tag
  cmdCountry.RemoveAllMenu
  cmdCountry.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtCountry.Tag &lt;&gt; &quot;&quot; Then
  Set item.Country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtCountry.Tag)
Else
  Set item.Country = Nothing
End If
item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_ZTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_GTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_KILLPLACE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Производитель:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_COUNTRY" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Поставщик"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
private sub txtTheSupplier_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
  on error resume next
txtTheSupplier = item.TheSupplier
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
item.TheSupplier = txtTheSupplier
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_QTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_CAMERA" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCameraMask"/><Properties Name="Caption" PropValue="Маска номера ячеек:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCameraMask"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="12"/><Properties Name="ToolTipText" PropValue="Маска номера ячеек"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Холодильные камеры
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCameraMask_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCameraMask = item.CameraMask
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.CameraMask = txtCameraMask
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_SRV" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblForShipping"/><Properties Name="Caption" PropValue="Для отгрузки:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbForShipping"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Для отгрузки"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblForReceiving"/><Properties Name="Caption" PropValue="Для приема товара:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbForReceiving"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Для приема товара"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLinkCode"/><Properties Name="Caption" PropValue="Код привязки:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLinkCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Код привязки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAutoSetPallet"/><Properties Name="Caption" PropValue="Подставлять количество паллет:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbAutoSetPallet"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Подставлять количество паллет"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub cmbForShipping_Click()
  on error resume next
  Changing

end sub
private sub cmbForReceiving_Click()
  on error resume next
  Changing

end sub
private sub txtLinkCode_Change()
  Changing

end sub
private sub cmbAutoSetPallet_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
cmbForShipping.Clear
cmbForShipping.additem &quot;Да&quot;
cmbForShipping.itemdata(cmbForShipping.newindex)= -1
cmbForShipping.additem &quot;Нет&quot;
cmbForShipping.itemdata(cmbForShipping.newindex)= 0
 For iii = 0 To cmbForShipping.ListCount-1
  If Item.ForShipping = cmbForShipping.ItemData(iii) Then
   cmbForShipping.ListIndex = iii
   Exit For
  End If
 Next
cmbForReceiving.Clear
cmbForReceiving.additem &quot;Да&quot;
cmbForReceiving.itemdata(cmbForReceiving.newindex)= -1
cmbForReceiving.additem &quot;Нет&quot;
cmbForReceiving.itemdata(cmbForReceiving.newindex)= 0
 For iii = 0 To cmbForReceiving.ListCount-1
  If Item.ForReceiving = cmbForReceiving.ItemData(iii) Then
   cmbForReceiving.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtLinkCode = item.LinkCode
cmbAutoSetPallet.Clear
cmbAutoSetPallet.additem &quot;Да&quot;
cmbAutoSetPallet.itemdata(cmbAutoSetPallet.newindex)= -1
cmbAutoSetPallet.additem &quot;Нет&quot;
cmbAutoSetPallet.itemdata(cmbAutoSetPallet.newindex)= 0
 For iii = 0 To cmbAutoSetPallet.ListCount-1
  If Item.AutoSetPallet = cmbAutoSetPallet.ItemData(iii) Then
   cmbAutoSetPallet.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 if cmbForShipping.listindex&gt;=0 then
   item.ForShipping = cmbForShipping.itemdata(cmbForShipping.listindex)
 end if
 if cmbForReceiving.listindex&gt;=0 then
   item.ForReceiving = cmbForReceiving.itemdata(cmbForReceiving.listindex)
 end if
item.LinkCode = txtLinkCode
 if cmbAutoSetPallet.listindex&gt;=0 then
   item.AutoSetPallet = cmbAutoSetPallet.itemdata(cmbAutoSetPallet.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_ATYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_OPTTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код варианта:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="1"/><Properties Name="ToolTipText" PropValue="Код варианта"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Тип оптимизации склада
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
if mIsOK then mIsOK =IsSet(txtCode.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCode = item.Code
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.Code = txtCode
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_EMAIL" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFIO"/><Properties Name="Caption" PropValue="ФИО. получателя:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFIO"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="ФИО. получателя"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEMAIL"/><Properties Name="Caption" PropValue="Адрес электронной почты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEMAIL"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="Адрес электронной почты"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEMAIL"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="mailopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Адрес электронной почты"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIgnoreAddress"/><Properties Name="Caption" PropValue="Отключить уведомления на этот адрес:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIgnoreAddress"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Отключить уведомления на этот адрес"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Адреса получателей информации о выморозке
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtFIO_Change()
  Changing

end sub
private sub txtEMAIL_Change()
  Changing

end sub
private sub cmdEMAIL_Click()
  on error resume next
  Dim s As String
  s = s &amp; &quot;mailto:&quot; &amp; txtEMAIL.text 
  OpenDocument 0, s
end sub
private sub cmbIgnoreAddress_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtFIO.text)
if mIsOK then mIsOK =IsSet(txtEMAIL.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtFIO = item.FIO
  on error resume next
txtEMAIL = item.EMAIL
 LoadBtnPictures cmdEMAIL,cmdEMAIL.tag
  cmdEMAIL.RemoveAllMenu
cmbIgnoreAddress.Clear
cmbIgnoreAddress.additem &quot;Да&quot;
cmbIgnoreAddress.itemdata(cmbIgnoreAddress.newindex)= -1
cmbIgnoreAddress.additem &quot;Нет&quot;
cmbIgnoreAddress.itemdata(cmbIgnoreAddress.newindex)= 0
 For iii = 0 To cmbIgnoreAddress.ListCount-1
  If Item.IgnoreAddress = cmbIgnoreAddress.ItemData(iii) Then
   cmbIgnoreAddress.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.FIO = txtFIO
item.EMAIL = txtEMAIL
 if cmbIgnoreAddress.listindex&gt;=0 then
   item.IgnoreAddress = cmbIgnoreAddress.itemdata(cmbIgnoreAddress.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_PART" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheGood"/><Properties Name="Caption" PropValue="Товар:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheGood"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Товар"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheGood"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Товар"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Наименование партии:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Наименование партии"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDTheGood as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheGood_Change()
  if  not (OnInit) then 
If (txtTheGood.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheGood.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheGood.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheGood.Tag = XMLDoc.xml
  End If
End If
  Changing

  end if 
end sub
private sub cmdTheGood_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheGood.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheGood.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheGood = Mid(txtTheGood.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheGood;&quot; &amp; mIDTheGood, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheGood.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheGood.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheGood.Tag = res.item(&quot;xml&quot;).value
      If (txtTheGood.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheGood.Text = res.item(&quot;brief&quot;).value
        mIDTheGood = res.item(&quot;ID&quot;).value
        Call txtTheGood_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtTheGood.Text =&quot;&quot;
txtTheGood.Tag =&quot;&quot;
mIDTheGood =&quot;&quot;
' Разобрать XML
Dim XMLDocTheGood As New DOMDocument
On Error Resume Next
If (item.TheGood &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheGood.loadXML(item.TheGood)
  If (Err.Number = 0 And XMLDocTheGood.parseError.errorCode = 0) Then
    Dim nodeTheGood As MSXML2.IXMLDOMNode
    txtTheGood.Tag = item.TheGood
    For Each nodeTheGood In XMLDocTheGood.childNodes.item(0).childNodes
      If (nodeTheGood.baseName = &quot;Brief&quot;) Then
       txtTheGood.Text = nodeTheGood.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheGood As String
    newIDTheGood = item.TheGood
    Dim XMLTheGoodID As String
    XMLTheGoodID = &quot;&lt;SQLData&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;query&gt;select CODE [Код], Description [Название] from item&lt;/query&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheGood &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheGood As New NamedValues
    Dim resTheGood As NamedValues
    Call parsTheGood.Add(&quot;xml&quot;, XMLTheGoodID)
    Set resTheGood = item.Application.Manager.GetSQLDataDialog(parsTheGood)
    If (Not resTheGood Is Nothing) Then
      Dim resStrTheGood As String
      resStrTheGood = resTheGood.item(&quot;RESULT&quot;).value
      If (resStrTheGood = &quot;OK&quot;) Then
        txtTheGood.Tag = Replace(resTheGood.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheGood.Text &lt;&gt; resTheGood.item(&quot;brief&quot;).value) Then
          mIDTheGood = newIDTheGood
          txtTheGood.Text = resTheGood.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheGood = vbNullString
    End If
  End If
Else
  Dim XMLTheGood As String
  XMLTheGood = &quot;&lt;SQLData&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;query&gt;select CODE [Код], Description [Название] from item&lt;/query&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheGood.Tag = XMLTheGood
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheGood,cmdTheGood.tag
  cmdTheGood.RemoveAllMenu
  cmdTheGood.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheGood = txtTheGood.Tag
item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_MOROZmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightConst"/><Properties Name="Caption" PropValue="Точность весов:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightConst"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Точность весов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMorozConst"/><Properties Name="Caption" PropValue="Коэффициент выморозки:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMorozConst"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Коэффициент выморозки"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Параметры выморозки
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDTheClient as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheClient_Change()
  if  not (OnInit) then 
If (txtTheClient.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheClient.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheClient.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheClient.Tag = XMLDoc.xml
  End If
End If
  Changing

  end if 
end sub
private sub cmdTheClient_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheClient.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheClient = Mid(txtTheClient.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheClient;&quot; &amp; mIDTheClient, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheClient.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheClient.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheClient.Tag = res.item(&quot;xml&quot;).value
      If (txtTheClient.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheClient.Text = res.item(&quot;brief&quot;).value
        mIDTheClient = res.item(&quot;ID&quot;).value
        Call txtTheClient_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtWeightConst_Validate(cancel as boolean)
if txtWeightConst.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWeightConst.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightConst.SetFocus 
  elseif Val(txtWeightConst.text) &lt; -922337203685477.5808 or Val(txtWeightConst.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightConst.SetFocus 
  end if
end if
end sub
Private Sub txtWeightConst_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWeightConst_Change()
  Changing

end sub
private sub txtMorozConst_Validate(cancel as boolean)
if txtMorozConst.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMorozConst.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMorozConst.SetFocus 
  elseif Val(txtMorozConst.text) &lt; -922337203685477.5808 or Val(txtMorozConst.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMorozConst.SetFocus 
  end if
end if
end sub
Private Sub txtMorozConst_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMorozConst_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtTheClient.Text =&quot;&quot;
txtTheClient.Tag =&quot;&quot;
mIDTheClient =&quot;&quot;
' Разобрать XML
Dim XMLDocTheClient As New DOMDocument
On Error Resume Next
If (item.TheClient &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheClient.loadXML(item.TheClient)
  If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
    Dim nodeTheClient As MSXML2.IXMLDOMNode
    txtTheClient.Tag = item.TheClient
    For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
      If (nodeTheClient.baseName = &quot;Brief&quot;) Then
       txtTheClient.Text = nodeTheClient.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheClient As String
    newIDTheClient = item.TheClient
    Dim XMLTheClientID As String
    XMLTheClientID = &quot;&lt;SQLData&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheClient &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheClient As New NamedValues
    Dim resTheClient As NamedValues
    Call parsTheClient.Add(&quot;xml&quot;, XMLTheClientID)
    Set resTheClient = item.Application.Manager.GetSQLDataDialog(parsTheClient)
    If (Not resTheClient Is Nothing) Then
      Dim resStrTheClient As String
      resStrTheClient = resTheClient.item(&quot;RESULT&quot;).value
      If (resStrTheClient = &quot;OK&quot;) Then
        txtTheClient.Tag = Replace(resTheClient.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheClient.Text &lt;&gt; resTheClient.item(&quot;brief&quot;).value) Then
          mIDTheClient = newIDTheClient
          txtTheClient.Text = resTheClient.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheClient = vbNullString
    End If
  End If
Else
  Dim XMLTheClient As String
  XMLTheClient = &quot;&lt;SQLData&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheClient.Tag = XMLTheClient
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheClient,cmdTheClient.tag
  cmdTheClient.RemoveAllMenu
  cmdTheClient.AddMenu &quot;Очистить&quot; 
txtWeightConst = item.WeightConst
txtMorozConst = item.MorozConst
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheClient = txtTheClient.Tag
item.WeightConst = cdbl(txtWeightConst)
item.MorozConst = cdbl(txtMorozConst)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_RULEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseProduct"/><Properties Name="Caption" PropValue="Товар:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseProduct"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Товар"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCountry"/><Properties Name="Caption" PropValue="Страна:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbTheCountry"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Страна"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbTheFactory"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Завод"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKillPlace"/><Properties Name="Caption" PropValue="Бойня:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbKillPlace"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Бойня"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseBrak"/><Properties Name="Caption" PropValue="Брак:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseBrak"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Брак"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseExpDate"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseExpDate"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUsePartia"/><Properties Name="Caption" PropValue="Партия товара:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUsePartia"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Партия товара"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUsePalType"/><Properties Name="Caption" PropValue="Тип паллеты:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUsePalType"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тип паллеты"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseVetsved"/><Properties Name="Caption" PropValue="Сертификат:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseVetsved"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Сертификат"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseClient"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Клиент"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Правило по которому зполняются обязательные поля и составляется код партии
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub cmbUseProduct_Click()
  on error resume next
  Changing

end sub
private sub cmbTheCountry_Click()
  on error resume next
  Changing

end sub
private sub cmbTheFactory_Click()
  on error resume next
  Changing

end sub
private sub cmbKillPlace_Click()
  on error resume next
  Changing

end sub
private sub cmbUseBrak_Click()
  on error resume next
  Changing

end sub
private sub cmbUseExpDate_Click()
  on error resume next
  Changing

end sub
private sub cmbUsePartia_Click()
  on error resume next
  Changing

end sub
private sub cmbUsePalType_Click()
  on error resume next
  Changing

end sub
private sub cmbUseVetsved_Click()
  on error resume next
  Changing

end sub
private sub cmbUseClient_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
cmbUseProduct.Clear
cmbUseProduct.additem &quot;Да&quot;
cmbUseProduct.itemdata(cmbUseProduct.newindex)= -1
cmbUseProduct.additem &quot;Нет&quot;
cmbUseProduct.itemdata(cmbUseProduct.newindex)= 0
 For iii = 0 To cmbUseProduct.ListCount-1
  If Item.UseProduct = cmbUseProduct.ItemData(iii) Then
   cmbUseProduct.ListIndex = iii
   Exit For
  End If
 Next
cmbTheCountry.Clear
cmbTheCountry.additem &quot;Да&quot;
cmbTheCountry.itemdata(cmbTheCountry.newindex)= -1
cmbTheCountry.additem &quot;Нет&quot;
cmbTheCountry.itemdata(cmbTheCountry.newindex)= 0
 For iii = 0 To cmbTheCountry.ListCount-1
  If Item.TheCountry = cmbTheCountry.ItemData(iii) Then
   cmbTheCountry.ListIndex = iii
   Exit For
  End If
 Next
cmbTheFactory.Clear
cmbTheFactory.additem &quot;Да&quot;
cmbTheFactory.itemdata(cmbTheFactory.newindex)= -1
cmbTheFactory.additem &quot;Нет&quot;
cmbTheFactory.itemdata(cmbTheFactory.newindex)= 0
 For iii = 0 To cmbTheFactory.ListCount-1
  If Item.TheFactory = cmbTheFactory.ItemData(iii) Then
   cmbTheFactory.ListIndex = iii
   Exit For
  End If
 Next
cmbKillPlace.Clear
cmbKillPlace.additem &quot;Да&quot;
cmbKillPlace.itemdata(cmbKillPlace.newindex)= -1
cmbKillPlace.additem &quot;Нет&quot;
cmbKillPlace.itemdata(cmbKillPlace.newindex)= 0
 For iii = 0 To cmbKillPlace.ListCount-1
  If Item.KillPlace = cmbKillPlace.ItemData(iii) Then
   cmbKillPlace.ListIndex = iii
   Exit For
  End If
 Next
cmbUseBrak.Clear
cmbUseBrak.additem &quot;Да&quot;
cmbUseBrak.itemdata(cmbUseBrak.newindex)= -1
cmbUseBrak.additem &quot;Нет&quot;
cmbUseBrak.itemdata(cmbUseBrak.newindex)= 0
 For iii = 0 To cmbUseBrak.ListCount-1
  If Item.UseBrak = cmbUseBrak.ItemData(iii) Then
   cmbUseBrak.ListIndex = iii
   Exit For
  End If
 Next
cmbUseExpDate.Clear
cmbUseExpDate.additem &quot;Да&quot;
cmbUseExpDate.itemdata(cmbUseExpDate.newindex)= -1
cmbUseExpDate.additem &quot;Нет&quot;
cmbUseExpDate.itemdata(cmbUseExpDate.newindex)= 0
 For iii = 0 To cmbUseExpDate.ListCount-1
  If Item.UseExpDate = cmbUseExpDate.ItemData(iii) Then
   cmbUseExpDate.ListIndex = iii
   Exit For
  End If
 Next
cmbUsePartia.Clear
cmbUsePartia.additem &quot;Да&quot;
cmbUsePartia.itemdata(cmbUsePartia.newindex)= -1
cmbUsePartia.additem &quot;Нет&quot;
cmbUsePartia.itemdata(cmbUsePartia.newindex)= 0
 For iii = 0 To cmbUsePartia.ListCount-1
  If Item.UsePartia = cmbUsePartia.ItemData(iii) Then
   cmbUsePartia.ListIndex = iii
   Exit For
  End If
 Next
cmbUsePalType.Clear
cmbUsePalType.additem &quot;Да&quot;
cmbUsePalType.itemdata(cmbUsePalType.newindex)= -1
cmbUsePalType.additem &quot;Нет&quot;
cmbUsePalType.itemdata(cmbUsePalType.newindex)= 0
 For iii = 0 To cmbUsePalType.ListCount-1
  If Item.UsePalType = cmbUsePalType.ItemData(iii) Then
   cmbUsePalType.ListIndex = iii
   Exit For
  End If
 Next
cmbUseVetsved.Clear
cmbUseVetsved.additem &quot;Да&quot;
cmbUseVetsved.itemdata(cmbUseVetsved.newindex)= -1
cmbUseVetsved.additem &quot;Нет&quot;
cmbUseVetsved.itemdata(cmbUseVetsved.newindex)= 0
 For iii = 0 To cmbUseVetsved.ListCount-1
  If Item.UseVetsved = cmbUseVetsved.ItemData(iii) Then
   cmbUseVetsved.ListIndex = iii
   Exit For
  End If
 Next
cmbUseClient.Clear
cmbUseClient.additem &quot;Да&quot;
cmbUseClient.itemdata(cmbUseClient.newindex)= -1
cmbUseClient.additem &quot;Нет&quot;
cmbUseClient.itemdata(cmbUseClient.newindex)= 0
 For iii = 0 To cmbUseClient.ListCount-1
  If Item.UseClient = cmbUseClient.ItemData(iii) Then
   cmbUseClient.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 if cmbUseProduct.listindex&gt;=0 then
   item.UseProduct = cmbUseProduct.itemdata(cmbUseProduct.listindex)
 end if
 if cmbTheCountry.listindex&gt;=0 then
   item.TheCountry = cmbTheCountry.itemdata(cmbTheCountry.listindex)
 end if
 if cmbTheFactory.listindex&gt;=0 then
   item.TheFactory = cmbTheFactory.itemdata(cmbTheFactory.listindex)
 end if
 if cmbKillPlace.listindex&gt;=0 then
   item.KillPlace = cmbKillPlace.itemdata(cmbKillPlace.listindex)
 end if
 if cmbUseBrak.listindex&gt;=0 then
   item.UseBrak = cmbUseBrak.itemdata(cmbUseBrak.listindex)
 end if
 if cmbUseExpDate.listindex&gt;=0 then
   item.UseExpDate = cmbUseExpDate.itemdata(cmbUseExpDate.listindex)
 end if
 if cmbUsePartia.listindex&gt;=0 then
   item.UsePartia = cmbUsePartia.itemdata(cmbUsePartia.listindex)
 end if
 if cmbUsePalType.listindex&gt;=0 then
   item.UsePalType = cmbUsePalType.itemdata(cmbUsePalType.listindex)
 end if
 if cmbUseVetsved.listindex&gt;=0 then
   item.UseVetsved = cmbUseVetsved.itemdata(cmbUseVetsved.listindex)
 end if
 if cmbUseClient.listindex&gt;=0 then
   item.UseClient = cmbUseClient.itemdata(cmbUseClient.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_PLTYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCode"/><Properties Name="Caption" PropValue="Код типа палеты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Код типа палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtTheCode_Validate(cancel as boolean)
if txtTheCode.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtTheCode.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheCode.SetFocus 
  elseif Val(txtTheCode.text) &lt;&gt;clng(Val(txtTheCode.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheCode.SetFocus 
  end if
end if
end sub
Private Sub txtTheCode_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtTheCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
txtTheCode = item.TheCode
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.TheCode = cdbl(txtTheCode)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_FACTORYmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCountry"/><Properties Name="Caption" PropValue="Страна:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCountry"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCountry"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCountry_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCountry_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief) Then
          txtCountry.Tag = Left(id, 38)
          txtCountry = brief
        End If
end sub
private sub cmdCountry_MenuClick(ByVal sCaption As String)
          txtCountry.Tag = &quot;&quot;
          txtCountry = &quot;&quot;
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Country Is Nothing Then
  txtCountry.Tag = item.Country.id
  txtCountry = item.Country.brief
else
  txtCountry.Tag = &quot;&quot; 
  txtCountry = &quot;&quot; 
End If
 LoadBtnPictures cmdCountry,cmdCountry.tag
  cmdCountry.RemoveAllMenu
  cmdCountry.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtCountry.Tag &lt;&gt; &quot;&quot; Then
  Set item.Country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtCountry.Tag)
Else
  Set item.Country = Nothing
End If
item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_ZTYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_GTYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_KILLPLACEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Производитель:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_COUNTRYmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Поставщик"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
private sub txtTheSupplier_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
  on error resume next
txtTheSupplier = item.TheSupplier
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
item.TheSupplier = txtTheSupplier
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_QTYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_CAMERAmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCameraMask"/><Properties Name="Caption" PropValue="Маска номера ячеек:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCameraMask"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="12"/><Properties Name="ToolTipText" PropValue="Маска номера ячеек"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Холодильные камеры
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCameraMask_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCameraMask = item.CameraMask
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.CameraMask = txtCameraMask
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_SRVmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblForShipping"/><Properties Name="Caption" PropValue="Для отгрузки:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbForShipping"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Для отгрузки"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblForReceiving"/><Properties Name="Caption" PropValue="Для приема товара:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbForReceiving"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Для приема товара"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLinkCode"/><Properties Name="Caption" PropValue="Код привязки:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLinkCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Код привязки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAutoSetPallet"/><Properties Name="Caption" PropValue="Подставлять количество паллет:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbAutoSetPallet"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Подставлять количество паллет"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub cmbForShipping_Click()
  on error resume next
  Changing

end sub
private sub cmbForReceiving_Click()
  on error resume next
  Changing

end sub
private sub txtLinkCode_Change()
  Changing

end sub
private sub cmbAutoSetPallet_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
cmbForShipping.Clear
cmbForShipping.additem &quot;Да&quot;
cmbForShipping.itemdata(cmbForShipping.newindex)= -1
cmbForShipping.additem &quot;Нет&quot;
cmbForShipping.itemdata(cmbForShipping.newindex)= 0
 For iii = 0 To cmbForShipping.ListCount-1
  If Item.ForShipping = cmbForShipping.ItemData(iii) Then
   cmbForShipping.ListIndex = iii
   Exit For
  End If
 Next
cmbForReceiving.Clear
cmbForReceiving.additem &quot;Да&quot;
cmbForReceiving.itemdata(cmbForReceiving.newindex)= -1
cmbForReceiving.additem &quot;Нет&quot;
cmbForReceiving.itemdata(cmbForReceiving.newindex)= 0
 For iii = 0 To cmbForReceiving.ListCount-1
  If Item.ForReceiving = cmbForReceiving.ItemData(iii) Then
   cmbForReceiving.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtLinkCode = item.LinkCode
cmbAutoSetPallet.Clear
cmbAutoSetPallet.additem &quot;Да&quot;
cmbAutoSetPallet.itemdata(cmbAutoSetPallet.newindex)= -1
cmbAutoSetPallet.additem &quot;Нет&quot;
cmbAutoSetPallet.itemdata(cmbAutoSetPallet.newindex)= 0
 For iii = 0 To cmbAutoSetPallet.ListCount-1
  If Item.AutoSetPallet = cmbAutoSetPallet.ItemData(iii) Then
   cmbAutoSetPallet.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 if cmbForShipping.listindex&gt;=0 then
   item.ForShipping = cmbForShipping.itemdata(cmbForShipping.listindex)
 end if
 if cmbForReceiving.listindex&gt;=0 then
   item.ForReceiving = cmbForReceiving.itemdata(cmbForReceiving.listindex)
 end if
item.LinkCode = txtLinkCode
 if cmbAutoSetPallet.listindex&gt;=0 then
   item.AutoSetPallet = cmbAutoSetPallet.itemdata(cmbAutoSetPallet.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_ATYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_OPTTYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код варианта:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="1"/><Properties Name="ToolTipText" PropValue="Код варианта"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Тип оптимизации склада
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCode = item.Code
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.Code = txtCode
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_EMAILmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFIO"/><Properties Name="Caption" PropValue="ФИО. получателя:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFIO"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="ФИО. получателя"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEMAIL"/><Properties Name="Caption" PropValue="Адрес электронной почты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEMAIL"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="Адрес электронной почты"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEMAIL"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="mailopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Адрес электронной почты"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIgnoreAddress"/><Properties Name="Caption" PropValue="Отключить уведомления на этот адрес:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIgnoreAddress"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Отключить уведомления на этот адрес"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Адреса получателей информации о выморозке
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtFIO_Change()
  Changing

end sub
private sub txtEMAIL_Change()
  Changing

end sub
private sub cmdEMAIL_Click()
  on error resume next
  Dim s As String
  s = s &amp; &quot;mailto:&quot; &amp; txtEMAIL.text 
  OpenDocument 0, s
end sub
private sub cmbIgnoreAddress_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtFIO = item.FIO
  on error resume next
txtEMAIL = item.EMAIL
 LoadBtnPictures cmdEMAIL,cmdEMAIL.tag
  cmdEMAIL.RemoveAllMenu
cmbIgnoreAddress.Clear
cmbIgnoreAddress.additem &quot;Да&quot;
cmbIgnoreAddress.itemdata(cmbIgnoreAddress.newindex)= -1
cmbIgnoreAddress.additem &quot;Нет&quot;
cmbIgnoreAddress.itemdata(cmbIgnoreAddress.newindex)= 0
 For iii = 0 To cmbIgnoreAddress.ListCount-1
  If Item.IgnoreAddress = cmbIgnoreAddress.ItemData(iii) Then
   cmbIgnoreAddress.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.FIO = txtFIO
item.EMAIL = txtEMAIL
 if cmbIgnoreAddress.listindex&gt;=0 then
   item.IgnoreAddress = cmbIgnoreAddress.itemdata(cmbIgnoreAddress.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_PARTmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheGood"/><Properties Name="Caption" PropValue="Товар:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheGood"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Товар"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheGood"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Товар"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Наименование партии:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Наименование партии"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDTheGood as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheGood_Change()
  if  not (OnInit) then 
If (txtTheGood.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheGood.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheGood.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheGood.Tag = XMLDoc.xml
  End If
End If
  Changing

  end if 
end sub
private sub cmdTheGood_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheGood.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheGood.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheGood = Mid(txtTheGood.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheGood;&quot; &amp; mIDTheGood, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheGood.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheGood.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheGood.Tag = res.item(&quot;xml&quot;).value
      If (txtTheGood.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheGood.Text = res.item(&quot;brief&quot;).value
        mIDTheGood = res.item(&quot;ID&quot;).value
        Call txtTheGood_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtTheGood.Text =&quot;&quot;
txtTheGood.Tag =&quot;&quot;
mIDTheGood =&quot;&quot;
' Разобрать XML
Dim XMLDocTheGood As New DOMDocument
On Error Resume Next
If (item.TheGood &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheGood.loadXML(item.TheGood)
  If (Err.Number = 0 And XMLDocTheGood.parseError.errorCode = 0) Then
    Dim nodeTheGood As MSXML2.IXMLDOMNode
    txtTheGood.Tag = item.TheGood
    For Each nodeTheGood In XMLDocTheGood.childNodes.item(0).childNodes
      If (nodeTheGood.baseName = &quot;Brief&quot;) Then
       txtTheGood.Text = nodeTheGood.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheGood As String
    newIDTheGood = item.TheGood
    Dim XMLTheGoodID As String
    XMLTheGoodID = &quot;&lt;SQLData&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;query&gt;select CODE [Код], Description [Название] from item&lt;/query&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheGood &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheGood As New NamedValues
    Dim resTheGood As NamedValues
    Call parsTheGood.Add(&quot;xml&quot;, XMLTheGoodID)
    Set resTheGood = item.Application.Manager.GetSQLDataDialog(parsTheGood)
    If (Not resTheGood Is Nothing) Then
      Dim resStrTheGood As String
      resStrTheGood = resTheGood.item(&quot;RESULT&quot;).value
      If (resStrTheGood = &quot;OK&quot;) Then
        txtTheGood.Tag = Replace(resTheGood.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheGood.Text &lt;&gt; resTheGood.item(&quot;brief&quot;).value) Then
          mIDTheGood = newIDTheGood
          txtTheGood.Text = resTheGood.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheGood = vbNullString
    End If
  End If
Else
  Dim XMLTheGood As String
  XMLTheGood = &quot;&lt;SQLData&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;query&gt;select CODE [Код], Description [Название] from item&lt;/query&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheGood.Tag = XMLTheGood
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheGood,cmdTheGood.tag
  cmdTheGood.RemoveAllMenu
  cmdTheGood.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheGood = txtTheGood.Tag
item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_MOROZadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightConst"/><Properties Name="Caption" PropValue="Точность весов:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightConst"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Точность весов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMorozConst"/><Properties Name="Caption" PropValue="Коэффициент выморозки:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMorozConst"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Коэффициент выморозки"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Параметры выморозки
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDTheClient as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheClient_Change()
  if  not (OnInit) then 
If (txtTheClient.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheClient.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheClient.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheClient.Tag = XMLDoc.xml
  End If
End If
  Changing

  end if 
end sub
private sub cmdTheClient_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheClient.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheClient = Mid(txtTheClient.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheClient;&quot; &amp; mIDTheClient, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheClient.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheClient.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheClient.Tag = res.item(&quot;xml&quot;).value
      If (txtTheClient.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheClient.Text = res.item(&quot;brief&quot;).value
        mIDTheClient = res.item(&quot;ID&quot;).value
        Call txtTheClient_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtWeightConst_Validate(cancel as boolean)
if txtWeightConst.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWeightConst.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightConst.SetFocus 
  elseif Val(txtWeightConst.text) &lt; -922337203685477.5808 or Val(txtWeightConst.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightConst.SetFocus 
  end if
end if
end sub
Private Sub txtWeightConst_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWeightConst_Change()
  Changing

end sub
private sub txtMorozConst_Validate(cancel as boolean)
if txtMorozConst.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMorozConst.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMorozConst.SetFocus 
  elseif Val(txtMorozConst.text) &lt; -922337203685477.5808 or Val(txtMorozConst.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMorozConst.SetFocus 
  end if
end if
end sub
Private Sub txtMorozConst_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMorozConst_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtTheClient.Text =&quot;&quot;
txtTheClient.Tag =&quot;&quot;
mIDTheClient =&quot;&quot;
' Разобрать XML
Dim XMLDocTheClient As New DOMDocument
On Error Resume Next
If (item.TheClient &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheClient.loadXML(item.TheClient)
  If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
    Dim nodeTheClient As MSXML2.IXMLDOMNode
    txtTheClient.Tag = item.TheClient
    For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
      If (nodeTheClient.baseName = &quot;Brief&quot;) Then
       txtTheClient.Text = nodeTheClient.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheClient As String
    newIDTheClient = item.TheClient
    Dim XMLTheClientID As String
    XMLTheClientID = &quot;&lt;SQLData&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheClient &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheClient As New NamedValues
    Dim resTheClient As NamedValues
    Call parsTheClient.Add(&quot;xml&quot;, XMLTheClientID)
    Set resTheClient = item.Application.Manager.GetSQLDataDialog(parsTheClient)
    If (Not resTheClient Is Nothing) Then
      Dim resStrTheClient As String
      resStrTheClient = resTheClient.item(&quot;RESULT&quot;).value
      If (resStrTheClient = &quot;OK&quot;) Then
        txtTheClient.Tag = Replace(resTheClient.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheClient.Text &lt;&gt; resTheClient.item(&quot;brief&quot;).value) Then
          mIDTheClient = newIDTheClient
          txtTheClient.Text = resTheClient.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheClient = vbNullString
    End If
  End If
Else
  Dim XMLTheClient As String
  XMLTheClient = &quot;&lt;SQLData&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheClient.Tag = XMLTheClient
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheClient,cmdTheClient.tag
  cmdTheClient.RemoveAllMenu
  cmdTheClient.AddMenu &quot;Очистить&quot; 
txtWeightConst = item.WeightConst
txtMorozConst = item.MorozConst
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheClient = txtTheClient.Tag
item.WeightConst = cdbl(txtWeightConst)
item.MorozConst = cdbl(txtMorozConst)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_RULEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseProduct"/><Properties Name="Caption" PropValue="Товар:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseProduct"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Товар"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCountry"/><Properties Name="Caption" PropValue="Страна:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbTheCountry"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Страна"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbTheFactory"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Завод"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKillPlace"/><Properties Name="Caption" PropValue="Бойня:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbKillPlace"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Бойня"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseBrak"/><Properties Name="Caption" PropValue="Брак:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseBrak"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Брак"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseExpDate"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseExpDate"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUsePartia"/><Properties Name="Caption" PropValue="Партия товара:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUsePartia"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Партия товара"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUsePalType"/><Properties Name="Caption" PropValue="Тип паллеты:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUsePalType"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тип паллеты"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseVetsved"/><Properties Name="Caption" PropValue="Сертификат:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseVetsved"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Сертификат"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseClient"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Клиент"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Правило по которому зполняются обязательные поля и составляется код партии
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub cmbUseProduct_Click()
  on error resume next
  Changing

end sub
private sub cmbTheCountry_Click()
  on error resume next
  Changing

end sub
private sub cmbTheFactory_Click()
  on error resume next
  Changing

end sub
private sub cmbKillPlace_Click()
  on error resume next
  Changing

end sub
private sub cmbUseBrak_Click()
  on error resume next
  Changing

end sub
private sub cmbUseExpDate_Click()
  on error resume next
  Changing

end sub
private sub cmbUsePartia_Click()
  on error resume next
  Changing

end sub
private sub cmbUsePalType_Click()
  on error resume next
  Changing

end sub
private sub cmbUseVetsved_Click()
  on error resume next
  Changing

end sub
private sub cmbUseClient_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
cmbUseProduct.Clear
cmbUseProduct.additem &quot;Да&quot;
cmbUseProduct.itemdata(cmbUseProduct.newindex)= -1
cmbUseProduct.additem &quot;Нет&quot;
cmbUseProduct.itemdata(cmbUseProduct.newindex)= 0
 For iii = 0 To cmbUseProduct.ListCount-1
  If Item.UseProduct = cmbUseProduct.ItemData(iii) Then
   cmbUseProduct.ListIndex = iii
   Exit For
  End If
 Next
cmbTheCountry.Clear
cmbTheCountry.additem &quot;Да&quot;
cmbTheCountry.itemdata(cmbTheCountry.newindex)= -1
cmbTheCountry.additem &quot;Нет&quot;
cmbTheCountry.itemdata(cmbTheCountry.newindex)= 0
 For iii = 0 To cmbTheCountry.ListCount-1
  If Item.TheCountry = cmbTheCountry.ItemData(iii) Then
   cmbTheCountry.ListIndex = iii
   Exit For
  End If
 Next
cmbTheFactory.Clear
cmbTheFactory.additem &quot;Да&quot;
cmbTheFactory.itemdata(cmbTheFactory.newindex)= -1
cmbTheFactory.additem &quot;Нет&quot;
cmbTheFactory.itemdata(cmbTheFactory.newindex)= 0
 For iii = 0 To cmbTheFactory.ListCount-1
  If Item.TheFactory = cmbTheFactory.ItemData(iii) Then
   cmbTheFactory.ListIndex = iii
   Exit For
  End If
 Next
cmbKillPlace.Clear
cmbKillPlace.additem &quot;Да&quot;
cmbKillPlace.itemdata(cmbKillPlace.newindex)= -1
cmbKillPlace.additem &quot;Нет&quot;
cmbKillPlace.itemdata(cmbKillPlace.newindex)= 0
 For iii = 0 To cmbKillPlace.ListCount-1
  If Item.KillPlace = cmbKillPlace.ItemData(iii) Then
   cmbKillPlace.ListIndex = iii
   Exit For
  End If
 Next
cmbUseBrak.Clear
cmbUseBrak.additem &quot;Да&quot;
cmbUseBrak.itemdata(cmbUseBrak.newindex)= -1
cmbUseBrak.additem &quot;Нет&quot;
cmbUseBrak.itemdata(cmbUseBrak.newindex)= 0
 For iii = 0 To cmbUseBrak.ListCount-1
  If Item.UseBrak = cmbUseBrak.ItemData(iii) Then
   cmbUseBrak.ListIndex = iii
   Exit For
  End If
 Next
cmbUseExpDate.Clear
cmbUseExpDate.additem &quot;Да&quot;
cmbUseExpDate.itemdata(cmbUseExpDate.newindex)= -1
cmbUseExpDate.additem &quot;Нет&quot;
cmbUseExpDate.itemdata(cmbUseExpDate.newindex)= 0
 For iii = 0 To cmbUseExpDate.ListCount-1
  If Item.UseExpDate = cmbUseExpDate.ItemData(iii) Then
   cmbUseExpDate.ListIndex = iii
   Exit For
  End If
 Next
cmbUsePartia.Clear
cmbUsePartia.additem &quot;Да&quot;
cmbUsePartia.itemdata(cmbUsePartia.newindex)= -1
cmbUsePartia.additem &quot;Нет&quot;
cmbUsePartia.itemdata(cmbUsePartia.newindex)= 0
 For iii = 0 To cmbUsePartia.ListCount-1
  If Item.UsePartia = cmbUsePartia.ItemData(iii) Then
   cmbUsePartia.ListIndex = iii
   Exit For
  End If
 Next
cmbUsePalType.Clear
cmbUsePalType.additem &quot;Да&quot;
cmbUsePalType.itemdata(cmbUsePalType.newindex)= -1
cmbUsePalType.additem &quot;Нет&quot;
cmbUsePalType.itemdata(cmbUsePalType.newindex)= 0
 For iii = 0 To cmbUsePalType.ListCount-1
  If Item.UsePalType = cmbUsePalType.ItemData(iii) Then
   cmbUsePalType.ListIndex = iii
   Exit For
  End If
 Next
cmbUseVetsved.Clear
cmbUseVetsved.additem &quot;Да&quot;
cmbUseVetsved.itemdata(cmbUseVetsved.newindex)= -1
cmbUseVetsved.additem &quot;Нет&quot;
cmbUseVetsved.itemdata(cmbUseVetsved.newindex)= 0
 For iii = 0 To cmbUseVetsved.ListCount-1
  If Item.UseVetsved = cmbUseVetsved.ItemData(iii) Then
   cmbUseVetsved.ListIndex = iii
   Exit For
  End If
 Next
cmbUseClient.Clear
cmbUseClient.additem &quot;Да&quot;
cmbUseClient.itemdata(cmbUseClient.newindex)= -1
cmbUseClient.additem &quot;Нет&quot;
cmbUseClient.itemdata(cmbUseClient.newindex)= 0
 For iii = 0 To cmbUseClient.ListCount-1
  If Item.UseClient = cmbUseClient.ItemData(iii) Then
   cmbUseClient.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 if cmbUseProduct.listindex&gt;=0 then
   item.UseProduct = cmbUseProduct.itemdata(cmbUseProduct.listindex)
 end if
 if cmbTheCountry.listindex&gt;=0 then
   item.TheCountry = cmbTheCountry.itemdata(cmbTheCountry.listindex)
 end if
 if cmbTheFactory.listindex&gt;=0 then
   item.TheFactory = cmbTheFactory.itemdata(cmbTheFactory.listindex)
 end if
 if cmbKillPlace.listindex&gt;=0 then
   item.KillPlace = cmbKillPlace.itemdata(cmbKillPlace.listindex)
 end if
 if cmbUseBrak.listindex&gt;=0 then
   item.UseBrak = cmbUseBrak.itemdata(cmbUseBrak.listindex)
 end if
 if cmbUseExpDate.listindex&gt;=0 then
   item.UseExpDate = cmbUseExpDate.itemdata(cmbUseExpDate.listindex)
 end if
 if cmbUsePartia.listindex&gt;=0 then
   item.UsePartia = cmbUsePartia.itemdata(cmbUsePartia.listindex)
 end if
 if cmbUsePalType.listindex&gt;=0 then
   item.UsePalType = cmbUsePalType.itemdata(cmbUsePalType.listindex)
 end if
 if cmbUseVetsved.listindex&gt;=0 then
   item.UseVetsved = cmbUseVetsved.itemdata(cmbUseVetsved.listindex)
 end if
 if cmbUseClient.listindex&gt;=0 then
   item.UseClient = cmbUseClient.itemdata(cmbUseClient.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_PLTYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCode"/><Properties Name="Caption" PropValue="Код типа палеты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Код типа палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtTheCode_Validate(cancel as boolean)
if txtTheCode.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtTheCode.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheCode.SetFocus 
  elseif Val(txtTheCode.text) &lt;&gt;clng(Val(txtTheCode.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheCode.SetFocus 
  end if
end if
end sub
Private Sub txtTheCode_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtTheCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
txtTheCode = item.TheCode
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.TheCode = cdbl(txtTheCode)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_FACTORYadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCountry"/><Properties Name="Caption" PropValue="Страна:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCountry"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCountry"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCountry_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCountry_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief) Then
          txtCountry.Tag = Left(id, 38)
          txtCountry = brief
        End If
end sub
private sub cmdCountry_MenuClick(ByVal sCaption As String)
          txtCountry.Tag = &quot;&quot;
          txtCountry = &quot;&quot;
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Country Is Nothing Then
  txtCountry.Tag = item.Country.id
  txtCountry = item.Country.brief
else
  txtCountry.Tag = &quot;&quot; 
  txtCountry = &quot;&quot; 
End If
 LoadBtnPictures cmdCountry,cmdCountry.tag
  cmdCountry.RemoveAllMenu
  cmdCountry.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtCountry.Tag &lt;&gt; &quot;&quot; Then
  Set item.Country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtCountry.Tag)
Else
  Set item.Country = Nothing
End If
item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_ZTYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_GTYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_KILLPLACEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Производитель:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_COUNTRYadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Поставщик"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
private sub txtTheSupplier_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
  on error resume next
txtTheSupplier = item.TheSupplier
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
item.TheSupplier = txtTheSupplier
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_QTYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_CAMERAadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCameraMask"/><Properties Name="Caption" PropValue="Маска номера ячеек:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCameraMask"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="12"/><Properties Name="ToolTipText" PropValue="Маска номера ячеек"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Холодильные камеры
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCameraMask_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCameraMask = item.CameraMask
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.CameraMask = txtCameraMask
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_SRVadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblForShipping"/><Properties Name="Caption" PropValue="Для отгрузки:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbForShipping"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Для отгрузки"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblForReceiving"/><Properties Name="Caption" PropValue="Для приема товара:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbForReceiving"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Для приема товара"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLinkCode"/><Properties Name="Caption" PropValue="Код привязки:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLinkCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Код привязки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAutoSetPallet"/><Properties Name="Caption" PropValue="Подставлять количество паллет:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbAutoSetPallet"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Подставлять количество паллет"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub cmbForShipping_Click()
  on error resume next
  Changing

end sub
private sub cmbForReceiving_Click()
  on error resume next
  Changing

end sub
private sub txtLinkCode_Change()
  Changing

end sub
private sub cmbAutoSetPallet_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
cmbForShipping.Clear
cmbForShipping.additem &quot;Да&quot;
cmbForShipping.itemdata(cmbForShipping.newindex)= -1
cmbForShipping.additem &quot;Нет&quot;
cmbForShipping.itemdata(cmbForShipping.newindex)= 0
 For iii = 0 To cmbForShipping.ListCount-1
  If Item.ForShipping = cmbForShipping.ItemData(iii) Then
   cmbForShipping.ListIndex = iii
   Exit For
  End If
 Next
cmbForReceiving.Clear
cmbForReceiving.additem &quot;Да&quot;
cmbForReceiving.itemdata(cmbForReceiving.newindex)= -1
cmbForReceiving.additem &quot;Нет&quot;
cmbForReceiving.itemdata(cmbForReceiving.newindex)= 0
 For iii = 0 To cmbForReceiving.ListCount-1
  If Item.ForReceiving = cmbForReceiving.ItemData(iii) Then
   cmbForReceiving.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtLinkCode = item.LinkCode
cmbAutoSetPallet.Clear
cmbAutoSetPallet.additem &quot;Да&quot;
cmbAutoSetPallet.itemdata(cmbAutoSetPallet.newindex)= -1
cmbAutoSetPallet.additem &quot;Нет&quot;
cmbAutoSetPallet.itemdata(cmbAutoSetPallet.newindex)= 0
 For iii = 0 To cmbAutoSetPallet.ListCount-1
  If Item.AutoSetPallet = cmbAutoSetPallet.ItemData(iii) Then
   cmbAutoSetPallet.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 if cmbForShipping.listindex&gt;=0 then
   item.ForShipping = cmbForShipping.itemdata(cmbForShipping.listindex)
 end if
 if cmbForReceiving.listindex&gt;=0 then
   item.ForReceiving = cmbForReceiving.itemdata(cmbForReceiving.listindex)
 end if
item.LinkCode = txtLinkCode
 if cmbAutoSetPallet.listindex&gt;=0 then
   item.AutoSetPallet = cmbAutoSetPallet.itemdata(cmbAutoSetPallet.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_ATYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_OPTTYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код варианта:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="1"/><Properties Name="ToolTipText" PropValue="Код варианта"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Тип оптимизации склада
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCode = item.Code
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.Code = txtCode
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_EMAILadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFIO"/><Properties Name="Caption" PropValue="ФИО. получателя:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFIO"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="ФИО. получателя"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEMAIL"/><Properties Name="Caption" PropValue="Адрес электронной почты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEMAIL"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="Адрес электронной почты"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEMAIL"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="mailopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Адрес электронной почты"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIgnoreAddress"/><Properties Name="Caption" PropValue="Отключить уведомления на этот адрес:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIgnoreAddress"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Отключить уведомления на этот адрес"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Адреса получателей информации о выморозке
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtFIO_Change()
  Changing

end sub
private sub txtEMAIL_Change()
  Changing

end sub
private sub cmdEMAIL_Click()
  on error resume next
  Dim s As String
  s = s &amp; &quot;mailto:&quot; &amp; txtEMAIL.text 
  OpenDocument 0, s
end sub
private sub cmbIgnoreAddress_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtFIO = item.FIO
  on error resume next
txtEMAIL = item.EMAIL
 LoadBtnPictures cmdEMAIL,cmdEMAIL.tag
  cmdEMAIL.RemoveAllMenu
cmbIgnoreAddress.Clear
cmbIgnoreAddress.additem &quot;Да&quot;
cmbIgnoreAddress.itemdata(cmbIgnoreAddress.newindex)= -1
cmbIgnoreAddress.additem &quot;Нет&quot;
cmbIgnoreAddress.itemdata(cmbIgnoreAddress.newindex)= 0
 For iii = 0 To cmbIgnoreAddress.ListCount-1
  If Item.IgnoreAddress = cmbIgnoreAddress.ItemData(iii) Then
   cmbIgnoreAddress.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.FIO = txtFIO
item.EMAIL = txtEMAIL
 if cmbIgnoreAddress.listindex&gt;=0 then
   item.IgnoreAddress = cmbIgnoreAddress.itemdata(cmbIgnoreAddress.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_PARTadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheGood"/><Properties Name="Caption" PropValue="Товар:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheGood"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Товар"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheGood"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Товар"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Наименование партии:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Наименование партии"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDTheGood as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheGood_Change()
  if  not (OnInit) then 
If (txtTheGood.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheGood.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheGood.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheGood.Tag = XMLDoc.xml
  End If
End If
  Changing

  end if 
end sub
private sub cmdTheGood_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheGood.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheGood.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheGood = Mid(txtTheGood.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheGood;&quot; &amp; mIDTheGood, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheGood.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheGood.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheGood.Tag = res.item(&quot;xml&quot;).value
      If (txtTheGood.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheGood.Text = res.item(&quot;brief&quot;).value
        mIDTheGood = res.item(&quot;ID&quot;).value
        Call txtTheGood_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtTheGood.Text =&quot;&quot;
txtTheGood.Tag =&quot;&quot;
mIDTheGood =&quot;&quot;
' Разобрать XML
Dim XMLDocTheGood As New DOMDocument
On Error Resume Next
If (item.TheGood &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheGood.loadXML(item.TheGood)
  If (Err.Number = 0 And XMLDocTheGood.parseError.errorCode = 0) Then
    Dim nodeTheGood As MSXML2.IXMLDOMNode
    txtTheGood.Tag = item.TheGood
    For Each nodeTheGood In XMLDocTheGood.childNodes.item(0).childNodes
      If (nodeTheGood.baseName = &quot;Brief&quot;) Then
       txtTheGood.Text = nodeTheGood.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheGood As String
    newIDTheGood = item.TheGood
    Dim XMLTheGoodID As String
    XMLTheGoodID = &quot;&lt;SQLData&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;query&gt;select CODE [Код], Description [Название] from item&lt;/query&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheGood &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheGood As New NamedValues
    Dim resTheGood As NamedValues
    Call parsTheGood.Add(&quot;xml&quot;, XMLTheGoodID)
    Set resTheGood = item.Application.Manager.GetSQLDataDialog(parsTheGood)
    If (Not resTheGood Is Nothing) Then
      Dim resStrTheGood As String
      resStrTheGood = resTheGood.item(&quot;RESULT&quot;).value
      If (resStrTheGood = &quot;OK&quot;) Then
        txtTheGood.Tag = Replace(resTheGood.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheGood.Text &lt;&gt; resTheGood.item(&quot;brief&quot;).value) Then
          mIDTheGood = newIDTheGood
          txtTheGood.Text = resTheGood.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheGood = vbNullString
    End If
  End If
Else
  Dim XMLTheGood As String
  XMLTheGood = &quot;&lt;SQLData&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;query&gt;select CODE [Код], Description [Название] from item&lt;/query&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheGood.Tag = XMLTheGood
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheGood,cmdTheGood.tag
  cmdTheGood.RemoveAllMenu
  cmdTheGood.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheGood = txtTheGood.Tag
item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_MOROZread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheClient"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheClient"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Клиент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightConst"/><Properties Name="Caption" PropValue="Точность весов:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightConst"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Точность весов"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMorozConst"/><Properties Name="Caption" PropValue="Коэффициент выморозки:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMorozConst"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Коэффициент выморозки"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Параметры выморозки
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDTheClient as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheClient_Change()
  if  not (OnInit) then 
If (txtTheClient.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheClient.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheClient.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheClient.Tag = XMLDoc.xml
  End If
End If
  Changing

  end if 
end sub
private sub cmdTheClient_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheClient.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheClient = Mid(txtTheClient.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheClient;&quot; &amp; mIDTheClient, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheClient.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    txtTheClient.Tag = Replace(txtTheClient.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheClient.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheClient.Tag = res.item(&quot;xml&quot;).value
      If (txtTheClient.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheClient.Text = res.item(&quot;brief&quot;).value
        mIDTheClient = res.item(&quot;ID&quot;).value
        Call txtTheClient_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtWeightConst_Change()
  Changing

end sub
private sub txtMorozConst_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtTheClient.Text =&quot;&quot;
txtTheClient.Tag =&quot;&quot;
mIDTheClient =&quot;&quot;
' Разобрать XML
Dim XMLDocTheClient As New DOMDocument
On Error Resume Next
If (item.TheClient &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheClient.loadXML(item.TheClient)
  If (Err.Number = 0 And XMLDocTheClient.parseError.errorCode = 0) Then
    Dim nodeTheClient As MSXML2.IXMLDOMNode
    txtTheClient.Tag = item.TheClient
    For Each nodeTheClient In XMLDocTheClient.childNodes.item(0).childNodes
      If (nodeTheClient.baseName = &quot;Brief&quot;) Then
       txtTheClient.Text = nodeTheClient.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheClient As String
    newIDTheClient = item.TheClient
    Dim XMLTheClientID As String
    XMLTheClientID = &quot;&lt;SQLData&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheClient &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
    XMLTheClientID = XMLTheClientID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheClient As New NamedValues
    Dim resTheClient As NamedValues
    Call parsTheClient.Add(&quot;xml&quot;, XMLTheClientID)
    Set resTheClient = item.Application.Manager.GetSQLDataDialog(parsTheClient)
    If (Not resTheClient Is Nothing) Then
      Dim resStrTheClient As String
      resStrTheClient = resTheClient.item(&quot;RESULT&quot;).value
      If (resStrTheClient = &quot;OK&quot;) Then
        txtTheClient.Tag = Replace(resTheClient.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheClient.Text &lt;&gt; resTheClient.item(&quot;brief&quot;).value) Then
          mIDTheClient = newIDTheClient
          txtTheClient.Text = resTheClient.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheClient = vbNullString
    End If
  End If
Else
  Dim XMLTheClient As String
  XMLTheClient = &quot;&lt;SQLData&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;query&gt;select partner.ID, partner.Name from RECEIVING_ORDER join partner on RECEIVING_ORDER.partner_id=partner.id where RECEIVING_ORDER.ID='%QryCodeID%'&lt;/query&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;IDFieldName&gt;ID&lt;/IDFieldName&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;BriefFields&gt;Name&lt;/BriefFields&gt;&quot;
  XMLTheClient = XMLTheClient &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheClient.Tag = XMLTheClient
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheClient,cmdTheClient.tag
  cmdTheClient.RemoveAllMenu
  cmdTheClient.AddMenu &quot;Очистить&quot; 
txtWeightConst = item.WeightConst
txtMorozConst = item.MorozConst
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheClient = txtTheClient.Tag
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_RULEread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseProduct"/><Properties Name="Caption" PropValue="Товар:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseProduct"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Товар"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCountry"/><Properties Name="Caption" PropValue="Страна:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbTheCountry"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Страна"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheFactory"/><Properties Name="Caption" PropValue="Завод:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbTheFactory"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Завод"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKillPlace"/><Properties Name="Caption" PropValue="Бойня:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbKillPlace"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Бойня"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseBrak"/><Properties Name="Caption" PropValue="Брак:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseBrak"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Брак"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseExpDate"/><Properties Name="Caption" PropValue="Срок годности:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseExpDate"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Срок годности"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUsePartia"/><Properties Name="Caption" PropValue="Партия товара:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUsePartia"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Партия товара"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUsePalType"/><Properties Name="Caption" PropValue="Тип паллеты:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUsePalType"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тип паллеты"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseVetsved"/><Properties Name="Caption" PropValue="Сертификат:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseVetsved"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Сертификат"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseClient"/><Properties Name="Caption" PropValue="Клиент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseClient"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Клиент"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Правило по которому зполняются обязательные поля и составляется код партии
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub cmbUseProduct_Click()
  on error resume next
  Changing

end sub
private sub cmbTheCountry_Click()
  on error resume next
  Changing

end sub
private sub cmbTheFactory_Click()
  on error resume next
  Changing

end sub
private sub cmbKillPlace_Click()
  on error resume next
  Changing

end sub
private sub cmbUseBrak_Click()
  on error resume next
  Changing

end sub
private sub cmbUseExpDate_Click()
  on error resume next
  Changing

end sub
private sub cmbUsePartia_Click()
  on error resume next
  Changing

end sub
private sub cmbUsePalType_Click()
  on error resume next
  Changing

end sub
private sub cmbUseVetsved_Click()
  on error resume next
  Changing

end sub
private sub cmbUseClient_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
cmbUseProduct.Clear
cmbUseProduct.additem &quot;Да&quot;
cmbUseProduct.itemdata(cmbUseProduct.newindex)= -1
cmbUseProduct.additem &quot;Нет&quot;
cmbUseProduct.itemdata(cmbUseProduct.newindex)= 0
 For iii = 0 To cmbUseProduct.ListCount-1
  If Item.UseProduct = cmbUseProduct.ItemData(iii) Then
   cmbUseProduct.ListIndex = iii
   Exit For
  End If
 Next
cmbTheCountry.Clear
cmbTheCountry.additem &quot;Да&quot;
cmbTheCountry.itemdata(cmbTheCountry.newindex)= -1
cmbTheCountry.additem &quot;Нет&quot;
cmbTheCountry.itemdata(cmbTheCountry.newindex)= 0
 For iii = 0 To cmbTheCountry.ListCount-1
  If Item.TheCountry = cmbTheCountry.ItemData(iii) Then
   cmbTheCountry.ListIndex = iii
   Exit For
  End If
 Next
cmbTheFactory.Clear
cmbTheFactory.additem &quot;Да&quot;
cmbTheFactory.itemdata(cmbTheFactory.newindex)= -1
cmbTheFactory.additem &quot;Нет&quot;
cmbTheFactory.itemdata(cmbTheFactory.newindex)= 0
 For iii = 0 To cmbTheFactory.ListCount-1
  If Item.TheFactory = cmbTheFactory.ItemData(iii) Then
   cmbTheFactory.ListIndex = iii
   Exit For
  End If
 Next
cmbKillPlace.Clear
cmbKillPlace.additem &quot;Да&quot;
cmbKillPlace.itemdata(cmbKillPlace.newindex)= -1
cmbKillPlace.additem &quot;Нет&quot;
cmbKillPlace.itemdata(cmbKillPlace.newindex)= 0
 For iii = 0 To cmbKillPlace.ListCount-1
  If Item.KillPlace = cmbKillPlace.ItemData(iii) Then
   cmbKillPlace.ListIndex = iii
   Exit For
  End If
 Next
cmbUseBrak.Clear
cmbUseBrak.additem &quot;Да&quot;
cmbUseBrak.itemdata(cmbUseBrak.newindex)= -1
cmbUseBrak.additem &quot;Нет&quot;
cmbUseBrak.itemdata(cmbUseBrak.newindex)= 0
 For iii = 0 To cmbUseBrak.ListCount-1
  If Item.UseBrak = cmbUseBrak.ItemData(iii) Then
   cmbUseBrak.ListIndex = iii
   Exit For
  End If
 Next
cmbUseExpDate.Clear
cmbUseExpDate.additem &quot;Да&quot;
cmbUseExpDate.itemdata(cmbUseExpDate.newindex)= -1
cmbUseExpDate.additem &quot;Нет&quot;
cmbUseExpDate.itemdata(cmbUseExpDate.newindex)= 0
 For iii = 0 To cmbUseExpDate.ListCount-1
  If Item.UseExpDate = cmbUseExpDate.ItemData(iii) Then
   cmbUseExpDate.ListIndex = iii
   Exit For
  End If
 Next
cmbUsePartia.Clear
cmbUsePartia.additem &quot;Да&quot;
cmbUsePartia.itemdata(cmbUsePartia.newindex)= -1
cmbUsePartia.additem &quot;Нет&quot;
cmbUsePartia.itemdata(cmbUsePartia.newindex)= 0
 For iii = 0 To cmbUsePartia.ListCount-1
  If Item.UsePartia = cmbUsePartia.ItemData(iii) Then
   cmbUsePartia.ListIndex = iii
   Exit For
  End If
 Next
cmbUsePalType.Clear
cmbUsePalType.additem &quot;Да&quot;
cmbUsePalType.itemdata(cmbUsePalType.newindex)= -1
cmbUsePalType.additem &quot;Нет&quot;
cmbUsePalType.itemdata(cmbUsePalType.newindex)= 0
 For iii = 0 To cmbUsePalType.ListCount-1
  If Item.UsePalType = cmbUsePalType.ItemData(iii) Then
   cmbUsePalType.ListIndex = iii
   Exit For
  End If
 Next
cmbUseVetsved.Clear
cmbUseVetsved.additem &quot;Да&quot;
cmbUseVetsved.itemdata(cmbUseVetsved.newindex)= -1
cmbUseVetsved.additem &quot;Нет&quot;
cmbUseVetsved.itemdata(cmbUseVetsved.newindex)= 0
 For iii = 0 To cmbUseVetsved.ListCount-1
  If Item.UseVetsved = cmbUseVetsved.ItemData(iii) Then
   cmbUseVetsved.ListIndex = iii
   Exit For
  End If
 Next
cmbUseClient.Clear
cmbUseClient.additem &quot;Да&quot;
cmbUseClient.itemdata(cmbUseClient.newindex)= -1
cmbUseClient.additem &quot;Нет&quot;
cmbUseClient.itemdata(cmbUseClient.newindex)= 0
 For iii = 0 To cmbUseClient.ListCount-1
  If Item.UseClient = cmbUseClient.ItemData(iii) Then
   cmbUseClient.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 if cmbUseProduct.listindex&gt;=0 then
   item.UseProduct = cmbUseProduct.itemdata(cmbUseProduct.listindex)
 end if
 if cmbTheCountry.listindex&gt;=0 then
   item.TheCountry = cmbTheCountry.itemdata(cmbTheCountry.listindex)
 end if
 if cmbTheFactory.listindex&gt;=0 then
   item.TheFactory = cmbTheFactory.itemdata(cmbTheFactory.listindex)
 end if
 if cmbKillPlace.listindex&gt;=0 then
   item.KillPlace = cmbKillPlace.itemdata(cmbKillPlace.listindex)
 end if
 if cmbUseBrak.listindex&gt;=0 then
   item.UseBrak = cmbUseBrak.itemdata(cmbUseBrak.listindex)
 end if
 if cmbUseExpDate.listindex&gt;=0 then
   item.UseExpDate = cmbUseExpDate.itemdata(cmbUseExpDate.listindex)
 end if
 if cmbUsePartia.listindex&gt;=0 then
   item.UsePartia = cmbUsePartia.itemdata(cmbUsePartia.listindex)
 end if
 if cmbUsePalType.listindex&gt;=0 then
   item.UsePalType = cmbUsePalType.itemdata(cmbUsePalType.listindex)
 end if
 if cmbUseVetsved.listindex&gt;=0 then
   item.UseVetsved = cmbUseVetsved.itemdata(cmbUseVetsved.listindex)
 end if
 if cmbUseClient.listindex&gt;=0 then
   item.UseClient = cmbUseClient.itemdata(cmbUseClient.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_PLTYPEread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCode"/><Properties Name="Caption" PropValue="Код типа палеты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Код типа палеты"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtTheCode_Validate(cancel as boolean)
if txtTheCode.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtTheCode.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheCode.SetFocus 
  elseif Val(txtTheCode.text) &lt;&gt;clng(Val(txtTheCode.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheCode.SetFocus 
  end if
end if
end sub
Private Sub txtTheCode_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtTheCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
txtTheCode = item.TheCode
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.TheCode = cdbl(txtTheCode)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_FACTORYread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCountry"/><Properties Name="Caption" PropValue="Страна:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCountry"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCountry"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCountry_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCountry_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_COUNTRY&quot;, id, brief) Then
          txtCountry.Tag = Left(id, 38)
          txtCountry = brief
        End If
end sub
private sub cmdCountry_MenuClick(ByVal sCaption As String)
          txtCountry.Tag = &quot;&quot;
          txtCountry = &quot;&quot;
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Country Is Nothing Then
  txtCountry.Tag = item.Country.id
  txtCountry = item.Country.brief
else
  txtCountry.Tag = &quot;&quot; 
  txtCountry = &quot;&quot; 
End If
 LoadBtnPictures cmdCountry,cmdCountry.tag
  cmdCountry.RemoveAllMenu
  cmdCountry.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtCountry.Tag &lt;&gt; &quot;&quot; Then
  Set item.Country = Item.Application.FindRowObject(&quot;ITTD_COUNTRY&quot;,txtCountry.Tag)
Else
  Set item.Country = Nothing
End If
item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_ZTYPEread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_GTYPEread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_KILLPLACEread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFactory"/><Properties Name="Caption" PropValue="Производитель:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFactory"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFactory"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Производитель"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtFactory_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFactory_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ITTD_FACTORY&quot;, id, brief) Then
          txtFactory.Tag = Left(id, 38)
          txtFactory = brief
        End If
end sub
private sub cmdFactory_MenuClick(ByVal sCaption As String)
          txtFactory.Tag = &quot;&quot;
          txtFactory = &quot;&quot;
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Factory Is Nothing Then
  txtFactory.Tag = item.Factory.id
  txtFactory = item.Factory.brief
else
  txtFactory.Tag = &quot;&quot; 
  txtFactory = &quot;&quot; 
End If
 LoadBtnPictures cmdFactory,cmdFactory.tag
  cmdFactory.RemoveAllMenu
  cmdFactory.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtFactory.Tag &lt;&gt; &quot;&quot; Then
  Set item.Factory = Item.Application.FindRowObject(&quot;ITTD_FACTORY&quot;,txtFactory.Tag)
Else
  Set item.Factory = Nothing
End If
item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_COUNTRYread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1"/><Properties Name="Caption" PropValue="Код1:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode2"/><Properties Name="Caption" PropValue="Код 2:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Поставщик"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCode1_Change()
  Changing

end sub
private sub txtCode2_Change()
  Changing

end sub
private sub txtTheSupplier_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCode1 = item.Code1
  on error resume next
txtCode2 = item.Code2
  on error resume next
txtTheSupplier = item.TheSupplier
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.Code1 = txtCode1
item.Code2 = txtCode2
item.TheSupplier = txtTheSupplier
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_QTYPEread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_CAMERAread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCameraMask"/><Properties Name="Caption" PropValue="Маска номера ячеек:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCameraMask"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="12"/><Properties Name="ToolTipText" PropValue="Маска номера ячеек"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Холодильные камеры
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCameraMask_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCameraMask = item.CameraMask
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_SRVread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblForShipping"/><Properties Name="Caption" PropValue="Для отгрузки:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbForShipping"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Для отгрузки"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblForReceiving"/><Properties Name="Caption" PropValue="Для приема товара:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbForReceiving"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Для приема товара"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLinkCode"/><Properties Name="Caption" PropValue="Код привязки:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLinkCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="30"/><Properties Name="ToolTipText" PropValue="Код привязки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAutoSetPallet"/><Properties Name="Caption" PropValue="Подставлять количество паллет:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbAutoSetPallet"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Подставлять количество паллет"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub cmbForShipping_Click()
  on error resume next
  Changing

end sub
private sub cmbForReceiving_Click()
  on error resume next
  Changing

end sub
private sub txtLinkCode_Change()
  Changing

end sub
private sub cmbAutoSetPallet_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
cmbForShipping.Clear
cmbForShipping.additem &quot;Да&quot;
cmbForShipping.itemdata(cmbForShipping.newindex)= -1
cmbForShipping.additem &quot;Нет&quot;
cmbForShipping.itemdata(cmbForShipping.newindex)= 0
 For iii = 0 To cmbForShipping.ListCount-1
  If Item.ForShipping = cmbForShipping.ItemData(iii) Then
   cmbForShipping.ListIndex = iii
   Exit For
  End If
 Next
cmbForReceiving.Clear
cmbForReceiving.additem &quot;Да&quot;
cmbForReceiving.itemdata(cmbForReceiving.newindex)= -1
cmbForReceiving.additem &quot;Нет&quot;
cmbForReceiving.itemdata(cmbForReceiving.newindex)= 0
 For iii = 0 To cmbForReceiving.ListCount-1
  If Item.ForReceiving = cmbForReceiving.ItemData(iii) Then
   cmbForReceiving.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtLinkCode = item.LinkCode
cmbAutoSetPallet.Clear
cmbAutoSetPallet.additem &quot;Да&quot;
cmbAutoSetPallet.itemdata(cmbAutoSetPallet.newindex)= -1
cmbAutoSetPallet.additem &quot;Нет&quot;
cmbAutoSetPallet.itemdata(cmbAutoSetPallet.newindex)= 0
 For iii = 0 To cmbAutoSetPallet.ListCount-1
  If Item.AutoSetPallet = cmbAutoSetPallet.ItemData(iii) Then
   cmbAutoSetPallet.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
 if cmbForShipping.listindex&gt;=0 then
   item.ForShipping = cmbForShipping.itemdata(cmbForShipping.listindex)
 end if
 if cmbForReceiving.listindex&gt;=0 then
   item.ForReceiving = cmbForReceiving.itemdata(cmbForReceiving.listindex)
 end if
item.LinkCode = txtLinkCode
 if cmbAutoSetPallet.listindex&gt;=0 then
   item.AutoSetPallet = cmbAutoSetPallet.itemdata(cmbAutoSetPallet.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_ATYPEread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_OPTTYPEread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код варианта:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="1"/><Properties Name="ToolTipText" PropValue="Код варианта"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Тип оптимизации склада
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtCode = item.Code
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_EMAILread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFIO"/><Properties Name="Caption" PropValue="ФИО. получателя:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFIO"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="ФИО. получателя"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEMAIL"/><Properties Name="Caption" PropValue="Адрес электронной почты:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEMAIL"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="Адрес электронной почты"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEMAIL"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="mailopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Адрес электронной почты"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIgnoreAddress"/><Properties Name="Caption" PropValue="Отключить уведомления на этот адрес:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIgnoreAddress"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Отключить уведомления на этот адрес"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Адреса получателей информации о выморозке
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtFIO_Change()
  Changing

end sub
private sub txtEMAIL_Change()
  Changing

end sub
private sub cmdEMAIL_Click()
  on error resume next
  Dim s As String
  s = s &amp; &quot;mailto:&quot; &amp; txtEMAIL.text 
  OpenDocument 0, s
end sub
private sub cmbIgnoreAddress_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtFIO = item.FIO
  on error resume next
txtEMAIL = item.EMAIL
 LoadBtnPictures cmdEMAIL,cmdEMAIL.tag
  cmdEMAIL.RemoveAllMenu
cmbIgnoreAddress.Clear
cmbIgnoreAddress.additem &quot;Да&quot;
cmbIgnoreAddress.itemdata(cmbIgnoreAddress.newindex)= -1
cmbIgnoreAddress.additem &quot;Нет&quot;
cmbIgnoreAddress.itemdata(cmbIgnoreAddress.newindex)= 0
 For iii = 0 To cmbIgnoreAddress.ListCount-1
  If Item.IgnoreAddress = cmbIgnoreAddress.ItemData(iii) Then
   cmbIgnoreAddress.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ITTD_PARTread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheGood"/><Properties Name="Caption" PropValue="Товар:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheGood"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Товар"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheGood"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Товар"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Наименование партии:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Наименование партии"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean
  private mIDTheGood as string 

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheGood_Change()
  if  not (OnInit) then 
If (txtTheGood.Text = &quot;&quot;) Then
  ' Убрать Brief и ID
  If (txtTheGood.Tag &lt;&gt; &quot;&quot;) Then
    Dim XMLDoc As New DOMDocument
    Call XMLDoc.loadXML(txtTheGood.Tag)
    Dim Node As MSXML2.IXMLDOMNode
    For Each Node In XMLDoc.childNodes.item(0).childNodes
     If (Node.baseName = &quot;ID&quot;) Then
       Node.Text = &quot;&quot;
     End If
     If (Node.baseName = &quot;Brief&quot;) Then
       Node.Text = &quot;&quot;
     End If
    Next
    txtTheGood.Tag = XMLDoc.xml
  End If
End If
  Changing

  end if 
end sub
private sub cmdTheGood_Click()
  on error resume next
  If (Not OnInit) Then
    Dim iFrom As Long
    Dim iTo As Long
    iFrom = InStr(1, txtTheGood.Tag, &quot;&lt;ID&gt;&quot;)
    If (iFrom &gt; 0) Then
      iTo = InStr(iFrom, txtTheGood.Tag, &quot;&lt;/ID&gt;&quot;)
      mIDTheGood = Mid(txtTheGood.Tag, iFrom + 4, iTo-iFrom-5)
    End If
    Dim MTZShell As Object
    Set MTZShell = item.Application.Manager.GetCustomObjects(&quot;MTZShell&quot;)
    If (Not MTZShell Is Nothing) Then
      Err.Clear
      Dim Processed As Variant
      Processed = False
      Call MTZShell.FireEvent(&quot;TheGood;&quot; &amp; mIDTheGood, Processed)
      If (Err.Number = 0 And Processed &lt;&gt; vbNullString And Processed &lt;&gt; false) Then
        Exit Sub
      End If
    End If
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;&lt;ID&gt;&quot;,&quot;&lt;IDOld&gt;&quot;) 
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;&lt;/ID&gt;&quot;,&quot;&lt;/IDOld&gt;&quot;) 
  End If
  Dim pars As New NamedValues
  Dim res As NamedValues
  If (txtTheGood.Tag = &quot;&quot;) Then
    ' call MsgBox(&quot;Нет данных для запроса&quot;)
  Else
    txtTheGood.Tag = Replace(txtTheGood.Tag, &quot;%ID%&quot;, &quot; 1=1 &quot;)
    Call pars.Add(&quot;xml&quot;, txtTheGood.Tag)
  End If
  Set res = item.Application.Manager.GetSQLDataDialog(pars)
  If (Not res Is Nothing) Then
    Dim resStr As String
    resStr = res.item(&quot;RESULT&quot;).value
    If (resStr = &quot;OK&quot;) Then
      txtTheGood.Tag = res.item(&quot;xml&quot;).value
      If (txtTheGood.Text &lt;&gt; res.item(&quot;brief&quot;).value) Then
        txtTheGood.Text = res.item(&quot;brief&quot;).value
        mIDTheGood = res.item(&quot;ID&quot;).value
        Call txtTheGood_Change
      End If
    Else
      Dim errStr As String
      errStr = res.item(&quot;ErrorDescription&quot;).value
      If (errStr &lt;&gt; vbNullString) Then
       Call MsgBox(&quot;Ошибка исполнения: &quot; &amp; errStr, vbOKOnly + vbCritical)
     End If
    End If
  End If
end sub
private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtTheGood.Text =&quot;&quot;
txtTheGood.Tag =&quot;&quot;
mIDTheGood =&quot;&quot;
' Разобрать XML
Dim XMLDocTheGood As New DOMDocument
On Error Resume Next
If (item.TheGood &lt;&gt; &quot;&quot;) Then
  Call XMLDocTheGood.loadXML(item.TheGood)
  If (Err.Number = 0 And XMLDocTheGood.parseError.errorCode = 0) Then
    Dim nodeTheGood As MSXML2.IXMLDOMNode
    txtTheGood.Tag = item.TheGood
    For Each nodeTheGood In XMLDocTheGood.childNodes.item(0).childNodes
      If (nodeTheGood.baseName = &quot;Brief&quot;) Then
       txtTheGood.Text = nodeTheGood.Text
       Exit For 
      End If
    Next
  Else
    ' Попытка подобрать по ID
    Dim newIDTheGood As String
    newIDTheGood = item.TheGood
    Dim XMLTheGoodID As String
    XMLTheGoodID = &quot;&lt;SQLData&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;query&gt;select CODE [Код], Description [Название] from item&lt;/query&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;ID&gt;&quot; &amp;  newIDTheGood &amp; &quot;&lt;/ID&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
    XMLTheGoodID = XMLTheGoodID &amp; &quot;&lt;/SQLData&gt;&quot;
    Dim parsTheGood As New NamedValues
    Dim resTheGood As NamedValues
    Call parsTheGood.Add(&quot;xml&quot;, XMLTheGoodID)
    Set resTheGood = item.Application.Manager.GetSQLDataDialog(parsTheGood)
    If (Not resTheGood Is Nothing) Then
      Dim resStrTheGood As String
      resStrTheGood = resTheGood.item(&quot;RESULT&quot;).value
      If (resStrTheGood = &quot;OK&quot;) Then
        txtTheGood.Tag = Replace(resTheGood.item(&quot;xml&quot;).value, &quot;%ID%&quot;, &quot; 1=1 &quot;)
        If (txtTheGood.Text &lt;&gt; resTheGood.item(&quot;brief&quot;).value) Then
          mIDTheGood = newIDTheGood
          txtTheGood.Text = resTheGood.item(&quot;brief&quot;).value
        End If
      End If
    Else
      item.TheGood = vbNullString
    End If
  End If
Else
  Dim XMLTheGood As String
  XMLTheGood = &quot;&lt;SQLData&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;connectionstring&gt;ref&lt;/connectionstring&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;connectionprovider&gt;ref&lt;/connectionprovider&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;query&gt;select CODE [Код], Description [Название] from item&lt;/query&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;IDFieldName&gt;Код&lt;/IDFieldName&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;BriefFields&gt;Название&lt;/BriefFields&gt;&quot;
  XMLTheGood = XMLTheGood &amp; &quot;&lt;/SQLData&gt;&quot;
  txtTheGood.Tag = XMLTheGood
End if 
On Error GoTo 0
 LoadBtnPictures cmdTheGood,cmdTheGood.tag
  cmdTheGood.RemoveAllMenu
  cmdTheGood.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheGood = txtTheGood.Tag
item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_MOROZ_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_MOROZ"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Параметры выморозки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Параметры выморозки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_MOROZ режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot;
  Open s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_RULE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_RULE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Правило по которому зполняются обязательные поля и составляется код партии"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Правило формирования партии"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_RULE режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot;
  Open s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_PLTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_PLTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип палеты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_PLTYPE режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot;
  Open s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_FACTORY_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_FACTORY"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Завод"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_FACTORY режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot;
  Open s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_ZTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_ZTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип зоны"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_ZTYPE режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot;
  Open s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_GTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_GTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип товара"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_GTYPE режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot;
  Open s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_KILLPLACE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_KILLPLACE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Бойня"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_KILLPLACE режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot;
  Open s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_COUNTRY_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_COUNTRY"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Страна"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_COUNTRY режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot;
  Open s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_QTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_QTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип заявки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_QTYPE режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot;
  Open s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_CAMERA_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_CAMERA"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Холодильные камеры"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Холодильные камеры"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_CAMERA режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot;
  Open s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_SRV_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_SRV"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Услуги"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_SRV режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot;
  Open s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_ATYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_ATYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип операции"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_ATYPE режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot;
  Open s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_OPTTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_OPTTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип оптимизации склада"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип оптимизации"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_OPTTYPE режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot;
  Open s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_EMAIL_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_EMAIL"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Адреса получателей информации о выморозке"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Почтовые адреса"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_EMAIL режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot;
  Open s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_PART_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_PART"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Партия товара"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_PART режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot;
  Open s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_MOROZ_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_MOROZmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Параметры выморозки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Параметры выморозки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_MOROZ режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot;
  Open s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_RULE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_RULEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Правило по которому зполняются обязательные поля и составляется код партии"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Правило формирования партии"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_RULE режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot;
  Open s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_PLTYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_PLTYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип палеты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_PLTYPE режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot;
  Open s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_FACTORY_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_FACTORYmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Завод"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_FACTORY режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot;
  Open s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_ZTYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_ZTYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип зоны"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_ZTYPE режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot;
  Open s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_GTYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_GTYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип товара"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_GTYPE режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot;
  Open s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_KILLPLACE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_KILLPLACEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Бойня"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_KILLPLACE режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot;
  Open s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_COUNTRY_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_COUNTRYmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Страна"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_COUNTRY режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot;
  Open s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_QTYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_QTYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип заявки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_QTYPE режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot;
  Open s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_CAMERA_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_CAMERAmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Холодильные камеры"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Холодильные камеры"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_CAMERA режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot;
  Open s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_SRV_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_SRVmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Услуги"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_SRV режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot;
  Open s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_ATYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_ATYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип операции"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_ATYPE режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot;
  Open s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_OPTTYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_OPTTYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип оптимизации склада"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип оптимизации"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_OPTTYPE режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot;
  Open s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_EMAIL_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_EMAILmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Адреса получателей информации о выморозке"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Почтовые адреса"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_EMAIL режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot;
  Open s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_PART_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_PARTmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Партия товара"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_PART режим main
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot;
  Open s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_GTYPE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_GTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_GTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_GTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_GTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_GTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_GTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_GTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_GTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_GTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_GTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_GTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_GTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_GTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_GTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_GTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип товара"/><Properties Name="Name" PropValue="mnuPopupITTD_GTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_GTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_GTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_GTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_GTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_GTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_GTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_GTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_GTYPEOpen"/></ControlData><ControlData Name="mnuITTD_GTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_GTYPERef"/></ControlData><ControlData Name="mnuITTD_GTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_GTYPES1"/></ControlData><ControlData Name="mnuITTD_GTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_GTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_GTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_GTYPECOPY"/></ControlData><ControlData Name="mnuITTD_GTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_GTYPECUT"/></ControlData><ControlData Name="mnuITTD_GTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_GTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_GTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_GTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_GTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_GTYPEPrn"/></ControlData><ControlData Name="mnuITTD_GTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECfg"/></ControlData><ControlData Name="mnuITTD_GTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_GTYPEFind"/></ControlData><ControlData Name="mnuITTD_GTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_GTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_GTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_GTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_GTYPE as object
private menuActionITTD_GTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_GTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_GTYPE,&quot;gridITTD_GTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_GTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_GTYPE,&quot;Тип товара&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_GTYPERef_Click()
  on error resume next
  item.ITTD_GTYPE.Refresh
  gridITTD_GTYPE.itemCount = item.ITTD_GTYPE.count
  gridITTD_GTYPE.Refetch
  gridITTD_GTYPE.Refresh
End Sub
Private Sub cmdITTD_GTYPEAcc_Click()
On Error Resume Next
If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_GTYPE.Row &gt; 0 Then
 If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_GTYPEEdit_Click()
  on error resume next
If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_GTYPE.Row &gt; 0 then
 If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_GTYPE_main.Item = u
    again: frmITTD_GTYPE_main.NotFirstTime = False
    frmITTD_GTYPE_main.OnInit
    frmITTD_GTYPE_main.Show vbModal
    If frmITTD_GTYPE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_GTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_GTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_GTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_GTYPE.Add()

      Set frmITTD_GTYPE_main.Item = u
      again: frmITTD_GTYPE_main.NotFirstTime = False
      frmITTD_GTYPE_main.OnInit
      frmITTD_GTYPE_main.Show vbModal
      If frmITTD_GTYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_GTYPE.ItemCount = Item.ITTD_GTYPE.Count
        gridITTD_GTYPE.Refresh
        gridITTD_GTYPE.RefreshGroups
        gridITTD_GTYPE.Refreshsort
        gridITTD_GTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_GTYPE&quot;
      Else
        Item.ITTD_GTYPE.Delete u.ID
        Item.ITTD_GTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_GTYPEFnd_Click()
  on error resume next
  fndITTD_GTYPE.ShowForm
End Sub
Private Sub cmdITTD_GTYPERun_Click()
  on error resume next
  gridITTD_GTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_GTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_GTYPE.LoadRow gridITTD_GTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_GTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_GTYPE_DblClick()
  cmdITTD_GTYPEEdit_Click
End Sub
Private Sub gridITTD_GTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_GTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_GTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_GTYPE.Row And LastRow &gt; 0 Then
  gridITTD_GTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_GTYPE.GetRowData(gridITTD_GTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_GTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_GTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_GTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_GTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_GTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_GTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_GTYPE
End If
end sub
private sub mnuITTD_GTYPEAdd_click()
   menuActionITTD_GTYPE =&quot;ADD&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEEdit_click()
   menuActionITTD_GTYPE =&quot;EDIT&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEDelete_click()
   menuActionITTD_GTYPE =&quot;DEL&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEOpen_click()
   menuActionITTD_GTYPE =&quot;RUN&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPERef_click()
   menuActionITTD_GTYPE =&quot;REF&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
  Private Sub mnuITTD_GTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_GTYPE.Row &gt; 0 Then
     If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_GTYPECUT_Click()
    On Error Resume Next
    If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_GTYPE.Row &gt; 0 Then
     If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_GTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_GTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_GTYPE.Row &gt; 0 Then
   If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_GTYPE.ItemCount = u.parent.Count
      gridITTD_GTYPE.RefreshRowIndex gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_GTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_GTYPEPrn_click()
   menuActionITTD_GTYPE =&quot;PRN&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPECfg_click()
   menuActionITTD_GTYPE =&quot;CFG&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEFind_click()
   menuActionITTD_GTYPE =&quot;FND&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEAcc_click()
   menuActionITTD_GTYPE =&quot;ACC&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub menuTimerITTD_GTYPE_timer()
   menuTimerITTD_GTYPE.enabled = false
   if menuActionITTD_GTYPE =&quot;ADD&quot; then cmdITTD_GTYPEADD_CLick
   if menuActionITTD_GTYPE =&quot;EDIT&quot; then cmdITTD_GTYPEEDIT_CLick
   if menuActionITTD_GTYPE =&quot;DEL&quot; then cmdITTD_GTYPEDEL_CLick
   if menuActionITTD_GTYPE =&quot;RUN&quot; then cmdITTD_GTYPERUN_CLick
   if menuActionITTD_GTYPE =&quot;REF&quot; then cmdITTD_GTYPEREF_CLick
   if menuActionITTD_GTYPE =&quot;PRN&quot; then cmdITTD_GTYPEPRN_CLick
   if menuActionITTD_GTYPE =&quot;CFG&quot; then cmdITTD_GTYPECFG_CLick
   if menuActionITTD_GTYPE =&quot;FND&quot; then cmdITTD_GTYPEFND_CLick
   if menuActionITTD_GTYPE =&quot;ACC&quot; then cmdITTD_GTYPEACC_CLick
   menuActionITTD_GTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_GTYPEAdd,cmdITTD_GTYPEAdd.tag
  LoadBtnPictures cmdITTD_GTYPEEdit,cmdITTD_GTYPEEdit.tag
  LoadBtnPictures cmdITTD_GTYPEDel,cmdITTD_GTYPEDel.tag
  LoadBtnPictures cmdITTD_GTYPERef,cmdITTD_GTYPERef.tag
  LoadBtnPictures cmdITTD_GTYPEPrn,cmdITTD_GTYPEPrn.tag
  LoadBtnPictures cmdITTD_GTYPEFnd,cmdITTD_GTYPEFnd.tag
  LoadBtnPictures cmdITTD_GTYPERun,cmdITTD_GTYPERun.tag
  LoadBtnPictures cmdITTD_GTYPEAcc,cmdITTD_GTYPEAcc.tag
  LoadBtnPictures cmdITTD_GTYPECfg,cmdITTD_GTYPECfg.tag
  item.ITTD_GTYPE.PrepareGrid gridITTD_GTYPE
  LoadGridLayout gridITTD_GTYPE
  Set fndITTD_GTYPE = Nothing
  On Error Resume Next
  Set fndITTD_GTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_GTYPE.Init gridITTD_GTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_GTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_GTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_GTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_GTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_ZTYPE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_ZTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_ZTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_ZTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_ZTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_ZTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ZTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ZTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_ZTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_ZTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_ZTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_ZTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_ZTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_ZTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_ZTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип зоны"/><Properties Name="Name" PropValue="mnuPopupITTD_ZTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_ZTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ZTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ZTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_ZTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEOpen"/></ControlData><ControlData Name="mnuITTD_ZTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPERef"/></ControlData><ControlData Name="mnuITTD_ZTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_ZTYPES1"/></ControlData><ControlData Name="mnuITTD_ZTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_ZTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECOPY"/></ControlData><ControlData Name="mnuITTD_ZTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECUT"/></ControlData><ControlData Name="mnuITTD_ZTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_ZTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_ZTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_ZTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEPrn"/></ControlData><ControlData Name="mnuITTD_ZTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECfg"/></ControlData><ControlData Name="mnuITTD_ZTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEFind"/></ControlData><ControlData Name="mnuITTD_ZTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_ZTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_ZTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_ZTYPE as object
private menuActionITTD_ZTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_ZTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_ZTYPE,&quot;gridITTD_ZTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ZTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_ZTYPE,&quot;Тип зоны&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ZTYPERef_Click()
  on error resume next
  item.ITTD_ZTYPE.Refresh
  gridITTD_ZTYPE.itemCount = item.ITTD_ZTYPE.count
  gridITTD_ZTYPE.Refetch
  gridITTD_ZTYPE.Refresh
End Sub
Private Sub cmdITTD_ZTYPEAcc_Click()
On Error Resume Next
If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ZTYPE.Row &gt; 0 Then
 If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_ZTYPEEdit_Click()
  on error resume next
If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ZTYPE.Row &gt; 0 then
 If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_ZTYPE_main.Item = u
    again: frmITTD_ZTYPE_main.NotFirstTime = False
    frmITTD_ZTYPE_main.OnInit
    frmITTD_ZTYPE_main.Show vbModal
    If frmITTD_ZTYPE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_ZTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_ZTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_ZTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_ZTYPE.Add()

      Set frmITTD_ZTYPE_main.Item = u
      again: frmITTD_ZTYPE_main.NotFirstTime = False
      frmITTD_ZTYPE_main.OnInit
      frmITTD_ZTYPE_main.Show vbModal
      If frmITTD_ZTYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_ZTYPE.ItemCount = Item.ITTD_ZTYPE.Count
        gridITTD_ZTYPE.Refresh
        gridITTD_ZTYPE.RefreshGroups
        gridITTD_ZTYPE.Refreshsort
        gridITTD_ZTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_ZTYPE&quot;
      Else
        Item.ITTD_ZTYPE.Delete u.ID
        Item.ITTD_ZTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_ZTYPEFnd_Click()
  on error resume next
  fndITTD_ZTYPE.ShowForm
End Sub
Private Sub cmdITTD_ZTYPERun_Click()
  on error resume next
  gridITTD_ZTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_ZTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_ZTYPE.LoadRow gridITTD_ZTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_ZTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_ZTYPE_DblClick()
  cmdITTD_ZTYPEEdit_Click
End Sub
Private Sub gridITTD_ZTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_ZTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_ZTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_ZTYPE.Row And LastRow &gt; 0 Then
  gridITTD_ZTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_ZTYPE.GetRowData(gridITTD_ZTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_ZTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_ZTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_ZTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_ZTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_ZTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_ZTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_ZTYPE
End If
end sub
private sub mnuITTD_ZTYPEAdd_click()
   menuActionITTD_ZTYPE =&quot;ADD&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEEdit_click()
   menuActionITTD_ZTYPE =&quot;EDIT&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEDelete_click()
   menuActionITTD_ZTYPE =&quot;DEL&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEOpen_click()
   menuActionITTD_ZTYPE =&quot;RUN&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPERef_click()
   menuActionITTD_ZTYPE =&quot;REF&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
  Private Sub mnuITTD_ZTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ZTYPE.Row &gt; 0 Then
     If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_ZTYPECUT_Click()
    On Error Resume Next
    If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ZTYPE.Row &gt; 0 Then
     If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_ZTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_ZTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_ZTYPE.Row &gt; 0 Then
   If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_ZTYPE.ItemCount = u.parent.Count
      gridITTD_ZTYPE.RefreshRowIndex gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_ZTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_ZTYPEPrn_click()
   menuActionITTD_ZTYPE =&quot;PRN&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPECfg_click()
   menuActionITTD_ZTYPE =&quot;CFG&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEFind_click()
   menuActionITTD_ZTYPE =&quot;FND&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEAcc_click()
   menuActionITTD_ZTYPE =&quot;ACC&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub menuTimerITTD_ZTYPE_timer()
   menuTimerITTD_ZTYPE.enabled = false
   if menuActionITTD_ZTYPE =&quot;ADD&quot; then cmdITTD_ZTYPEADD_CLick
   if menuActionITTD_ZTYPE =&quot;EDIT&quot; then cmdITTD_ZTYPEEDIT_CLick
   if menuActionITTD_ZTYPE =&quot;DEL&quot; then cmdITTD_ZTYPEDEL_CLick
   if menuActionITTD_ZTYPE =&quot;RUN&quot; then cmdITTD_ZTYPERUN_CLick
   if menuActionITTD_ZTYPE =&quot;REF&quot; then cmdITTD_ZTYPEREF_CLick
   if menuActionITTD_ZTYPE =&quot;PRN&quot; then cmdITTD_ZTYPEPRN_CLick
   if menuActionITTD_ZTYPE =&quot;CFG&quot; then cmdITTD_ZTYPECFG_CLick
   if menuActionITTD_ZTYPE =&quot;FND&quot; then cmdITTD_ZTYPEFND_CLick
   if menuActionITTD_ZTYPE =&quot;ACC&quot; then cmdITTD_ZTYPEACC_CLick
   menuActionITTD_ZTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_ZTYPEAdd,cmdITTD_ZTYPEAdd.tag
  LoadBtnPictures cmdITTD_ZTYPEEdit,cmdITTD_ZTYPEEdit.tag
  LoadBtnPictures cmdITTD_ZTYPEDel,cmdITTD_ZTYPEDel.tag
  LoadBtnPictures cmdITTD_ZTYPERef,cmdITTD_ZTYPERef.tag
  LoadBtnPictures cmdITTD_ZTYPEPrn,cmdITTD_ZTYPEPrn.tag
  LoadBtnPictures cmdITTD_ZTYPEFnd,cmdITTD_ZTYPEFnd.tag
  LoadBtnPictures cmdITTD_ZTYPERun,cmdITTD_ZTYPERun.tag
  LoadBtnPictures cmdITTD_ZTYPEAcc,cmdITTD_ZTYPEAcc.tag
  LoadBtnPictures cmdITTD_ZTYPECfg,cmdITTD_ZTYPECfg.tag
  item.ITTD_ZTYPE.PrepareGrid gridITTD_ZTYPE
  LoadGridLayout gridITTD_ZTYPE
  Set fndITTD_ZTYPE = Nothing
  On Error Resume Next
  Set fndITTD_ZTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_ZTYPE.Init gridITTD_ZTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_ZTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_ZTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_ZTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_ZTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_PLTYPE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_PLTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_PLTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_PLTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_PLTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_PLTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PLTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PLTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_PLTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_PLTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_PLTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_PLTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_PLTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_PLTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_PLTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип палеты"/><Properties Name="Name" PropValue="mnuPopupITTD_PLTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_PLTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PLTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PLTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_PLTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEOpen"/></ControlData><ControlData Name="mnuITTD_PLTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPERef"/></ControlData><ControlData Name="mnuITTD_PLTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_PLTYPES1"/></ControlData><ControlData Name="mnuITTD_PLTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_PLTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECOPY"/></ControlData><ControlData Name="mnuITTD_PLTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECUT"/></ControlData><ControlData Name="mnuITTD_PLTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_PLTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_PLTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_PLTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEPrn"/></ControlData><ControlData Name="mnuITTD_PLTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECfg"/></ControlData><ControlData Name="mnuITTD_PLTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEFind"/></ControlData><ControlData Name="mnuITTD_PLTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_PLTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_PLTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_PLTYPE as object
private menuActionITTD_PLTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_PLTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_PLTYPE,&quot;gridITTD_PLTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PLTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_PLTYPE,&quot;Тип палеты&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PLTYPERef_Click()
  on error resume next
  item.ITTD_PLTYPE.Refresh
  gridITTD_PLTYPE.itemCount = item.ITTD_PLTYPE.count
  gridITTD_PLTYPE.Refetch
  gridITTD_PLTYPE.Refresh
End Sub
Private Sub cmdITTD_PLTYPEAcc_Click()
On Error Resume Next
If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_PLTYPE.Row &gt; 0 Then
 If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_PLTYPEEdit_Click()
  on error resume next
If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_PLTYPE.Row &gt; 0 then
 If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_PLTYPE_main.Item = u
    again: frmITTD_PLTYPE_main.NotFirstTime = False
    frmITTD_PLTYPE_main.OnInit
    frmITTD_PLTYPE_main.Show vbModal
    If frmITTD_PLTYPE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_PLTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_PLTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_PLTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_PLTYPE.Add()

      Set frmITTD_PLTYPE_main.Item = u
      again: frmITTD_PLTYPE_main.NotFirstTime = False
      frmITTD_PLTYPE_main.OnInit
      frmITTD_PLTYPE_main.Show vbModal
      If frmITTD_PLTYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_PLTYPE.ItemCount = Item.ITTD_PLTYPE.Count
        gridITTD_PLTYPE.Refresh
        gridITTD_PLTYPE.RefreshGroups
        gridITTD_PLTYPE.Refreshsort
        gridITTD_PLTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_PLTYPE&quot;
      Else
        Item.ITTD_PLTYPE.Delete u.ID
        Item.ITTD_PLTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_PLTYPEFnd_Click()
  on error resume next
  fndITTD_PLTYPE.ShowForm
End Sub
Private Sub cmdITTD_PLTYPERun_Click()
  on error resume next
  gridITTD_PLTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_PLTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_PLTYPE.LoadRow gridITTD_PLTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_PLTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_PLTYPE_DblClick()
  cmdITTD_PLTYPEEdit_Click
End Sub
Private Sub gridITTD_PLTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_PLTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_PLTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_PLTYPE.Row And LastRow &gt; 0 Then
  gridITTD_PLTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_PLTYPE.GetRowData(gridITTD_PLTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_PLTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_PLTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_PLTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_PLTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_PLTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_PLTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_PLTYPE
End If
end sub
private sub mnuITTD_PLTYPEAdd_click()
   menuActionITTD_PLTYPE =&quot;ADD&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEEdit_click()
   menuActionITTD_PLTYPE =&quot;EDIT&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEDelete_click()
   menuActionITTD_PLTYPE =&quot;DEL&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEOpen_click()
   menuActionITTD_PLTYPE =&quot;RUN&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPERef_click()
   menuActionITTD_PLTYPE =&quot;REF&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
  Private Sub mnuITTD_PLTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_PLTYPE.Row &gt; 0 Then
     If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_PLTYPECUT_Click()
    On Error Resume Next
    If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_PLTYPE.Row &gt; 0 Then
     If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_PLTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_PLTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_PLTYPE.Row &gt; 0 Then
   If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_PLTYPE.ItemCount = u.parent.Count
      gridITTD_PLTYPE.RefreshRowIndex gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_PLTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_PLTYPEPrn_click()
   menuActionITTD_PLTYPE =&quot;PRN&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPECfg_click()
   menuActionITTD_PLTYPE =&quot;CFG&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEFind_click()
   menuActionITTD_PLTYPE =&quot;FND&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEAcc_click()
   menuActionITTD_PLTYPE =&quot;ACC&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub menuTimerITTD_PLTYPE_timer()
   menuTimerITTD_PLTYPE.enabled = false
   if menuActionITTD_PLTYPE =&quot;ADD&quot; then cmdITTD_PLTYPEADD_CLick
   if menuActionITTD_PLTYPE =&quot;EDIT&quot; then cmdITTD_PLTYPEEDIT_CLick
   if menuActionITTD_PLTYPE =&quot;DEL&quot; then cmdITTD_PLTYPEDEL_CLick
   if menuActionITTD_PLTYPE =&quot;RUN&quot; then cmdITTD_PLTYPERUN_CLick
   if menuActionITTD_PLTYPE =&quot;REF&quot; then cmdITTD_PLTYPEREF_CLick
   if menuActionITTD_PLTYPE =&quot;PRN&quot; then cmdITTD_PLTYPEPRN_CLick
   if menuActionITTD_PLTYPE =&quot;CFG&quot; then cmdITTD_PLTYPECFG_CLick
   if menuActionITTD_PLTYPE =&quot;FND&quot; then cmdITTD_PLTYPEFND_CLick
   if menuActionITTD_PLTYPE =&quot;ACC&quot; then cmdITTD_PLTYPEACC_CLick
   menuActionITTD_PLTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_PLTYPEAdd,cmdITTD_PLTYPEAdd.tag
  LoadBtnPictures cmdITTD_PLTYPEEdit,cmdITTD_PLTYPEEdit.tag
  LoadBtnPictures cmdITTD_PLTYPEDel,cmdITTD_PLTYPEDel.tag
  LoadBtnPictures cmdITTD_PLTYPERef,cmdITTD_PLTYPERef.tag
  LoadBtnPictures cmdITTD_PLTYPEPrn,cmdITTD_PLTYPEPrn.tag
  LoadBtnPictures cmdITTD_PLTYPEFnd,cmdITTD_PLTYPEFnd.tag
  LoadBtnPictures cmdITTD_PLTYPERun,cmdITTD_PLTYPERun.tag
  LoadBtnPictures cmdITTD_PLTYPEAcc,cmdITTD_PLTYPEAcc.tag
  LoadBtnPictures cmdITTD_PLTYPECfg,cmdITTD_PLTYPECfg.tag
  item.ITTD_PLTYPE.PrepareGrid gridITTD_PLTYPE
  LoadGridLayout gridITTD_PLTYPE
  Set fndITTD_PLTYPE = Nothing
  On Error Resume Next
  Set fndITTD_PLTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_PLTYPE.Init gridITTD_PLTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_PLTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_PLTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_PLTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_PLTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_QTYPE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_QTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_QTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_QTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_QTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_QTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_QTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_QTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_QTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_QTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_QTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_QTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_QTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_QTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_QTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_QTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип заявки"/><Properties Name="Name" PropValue="mnuPopupITTD_QTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_QTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_QTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_QTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_QTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_QTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_QTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_QTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_QTYPEOpen"/></ControlData><ControlData Name="mnuITTD_QTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_QTYPERef"/></ControlData><ControlData Name="mnuITTD_QTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_QTYPES1"/></ControlData><ControlData Name="mnuITTD_QTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_QTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_QTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_QTYPECOPY"/></ControlData><ControlData Name="mnuITTD_QTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_QTYPECUT"/></ControlData><ControlData Name="mnuITTD_QTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_QTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_QTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_QTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_QTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_QTYPEPrn"/></ControlData><ControlData Name="mnuITTD_QTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECfg"/></ControlData><ControlData Name="mnuITTD_QTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_QTYPEFind"/></ControlData><ControlData Name="mnuITTD_QTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_QTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_QTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_QTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_QTYPE as object
private menuActionITTD_QTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_QTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_QTYPE,&quot;gridITTD_QTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_QTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_QTYPE,&quot;Тип заявки&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_QTYPERef_Click()
  on error resume next
  item.ITTD_QTYPE.Refresh
  gridITTD_QTYPE.itemCount = item.ITTD_QTYPE.count
  gridITTD_QTYPE.Refetch
  gridITTD_QTYPE.Refresh
End Sub
Private Sub cmdITTD_QTYPEAcc_Click()
On Error Resume Next
If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_QTYPE.Row &gt; 0 Then
 If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_QTYPEEdit_Click()
  on error resume next
If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_QTYPE.Row &gt; 0 then
 If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_QTYPE_main.Item = u
    again: frmITTD_QTYPE_main.NotFirstTime = False
    frmITTD_QTYPE_main.OnInit
    frmITTD_QTYPE_main.Show vbModal
    If frmITTD_QTYPE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_QTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_QTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_QTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_QTYPE.Add()

      Set frmITTD_QTYPE_main.Item = u
      again: frmITTD_QTYPE_main.NotFirstTime = False
      frmITTD_QTYPE_main.OnInit
      frmITTD_QTYPE_main.Show vbModal
      If frmITTD_QTYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_QTYPE.ItemCount = Item.ITTD_QTYPE.Count
        gridITTD_QTYPE.Refresh
        gridITTD_QTYPE.RefreshGroups
        gridITTD_QTYPE.Refreshsort
        gridITTD_QTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_QTYPE&quot;
      Else
        Item.ITTD_QTYPE.Delete u.ID
        Item.ITTD_QTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_QTYPEFnd_Click()
  on error resume next
  fndITTD_QTYPE.ShowForm
End Sub
Private Sub cmdITTD_QTYPERun_Click()
  on error resume next
  gridITTD_QTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_QTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_QTYPE.LoadRow gridITTD_QTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_QTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_QTYPE_DblClick()
  cmdITTD_QTYPEEdit_Click
End Sub
Private Sub gridITTD_QTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_QTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_QTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_QTYPE.Row And LastRow &gt; 0 Then
  gridITTD_QTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_QTYPE.GetRowData(gridITTD_QTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_QTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_QTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_QTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_QTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_QTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_QTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_QTYPE
End If
end sub
private sub mnuITTD_QTYPEAdd_click()
   menuActionITTD_QTYPE =&quot;ADD&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEEdit_click()
   menuActionITTD_QTYPE =&quot;EDIT&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEDelete_click()
   menuActionITTD_QTYPE =&quot;DEL&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEOpen_click()
   menuActionITTD_QTYPE =&quot;RUN&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPERef_click()
   menuActionITTD_QTYPE =&quot;REF&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
  Private Sub mnuITTD_QTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_QTYPE.Row &gt; 0 Then
     If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_QTYPECUT_Click()
    On Error Resume Next
    If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_QTYPE.Row &gt; 0 Then
     If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_QTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_QTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_QTYPE.Row &gt; 0 Then
   If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_QTYPE.ItemCount = u.parent.Count
      gridITTD_QTYPE.RefreshRowIndex gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_QTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_QTYPEPrn_click()
   menuActionITTD_QTYPE =&quot;PRN&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPECfg_click()
   menuActionITTD_QTYPE =&quot;CFG&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEFind_click()
   menuActionITTD_QTYPE =&quot;FND&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEAcc_click()
   menuActionITTD_QTYPE =&quot;ACC&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub menuTimerITTD_QTYPE_timer()
   menuTimerITTD_QTYPE.enabled = false
   if menuActionITTD_QTYPE =&quot;ADD&quot; then cmdITTD_QTYPEADD_CLick
   if menuActionITTD_QTYPE =&quot;EDIT&quot; then cmdITTD_QTYPEEDIT_CLick
   if menuActionITTD_QTYPE =&quot;DEL&quot; then cmdITTD_QTYPEDEL_CLick
   if menuActionITTD_QTYPE =&quot;RUN&quot; then cmdITTD_QTYPERUN_CLick
   if menuActionITTD_QTYPE =&quot;REF&quot; then cmdITTD_QTYPEREF_CLick
   if menuActionITTD_QTYPE =&quot;PRN&quot; then cmdITTD_QTYPEPRN_CLick
   if menuActionITTD_QTYPE =&quot;CFG&quot; then cmdITTD_QTYPECFG_CLick
   if menuActionITTD_QTYPE =&quot;FND&quot; then cmdITTD_QTYPEFND_CLick
   if menuActionITTD_QTYPE =&quot;ACC&quot; then cmdITTD_QTYPEACC_CLick
   menuActionITTD_QTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_QTYPEAdd,cmdITTD_QTYPEAdd.tag
  LoadBtnPictures cmdITTD_QTYPEEdit,cmdITTD_QTYPEEdit.tag
  LoadBtnPictures cmdITTD_QTYPEDel,cmdITTD_QTYPEDel.tag
  LoadBtnPictures cmdITTD_QTYPERef,cmdITTD_QTYPERef.tag
  LoadBtnPictures cmdITTD_QTYPEPrn,cmdITTD_QTYPEPrn.tag
  LoadBtnPictures cmdITTD_QTYPEFnd,cmdITTD_QTYPEFnd.tag
  LoadBtnPictures cmdITTD_QTYPERun,cmdITTD_QTYPERun.tag
  LoadBtnPictures cmdITTD_QTYPEAcc,cmdITTD_QTYPEAcc.tag
  LoadBtnPictures cmdITTD_QTYPECfg,cmdITTD_QTYPECfg.tag
  item.ITTD_QTYPE.PrepareGrid gridITTD_QTYPE
  LoadGridLayout gridITTD_QTYPE
  Set fndITTD_QTYPE = Nothing
  On Error Resume Next
  Set fndITTD_QTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_QTYPE.Init gridITTD_QTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_QTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_QTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_QTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_QTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_ATYPE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_ATYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_ATYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_ATYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_ATYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_ATYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ATYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ATYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_ATYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_ATYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_ATYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_ATYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_ATYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_ATYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_ATYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_ATYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип операции"/><Properties Name="Name" PropValue="mnuPopupITTD_ATYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_ATYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_ATYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ATYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_ATYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ATYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_ATYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_ATYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_ATYPEOpen"/></ControlData><ControlData Name="mnuITTD_ATYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_ATYPERef"/></ControlData><ControlData Name="mnuITTD_ATYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_ATYPES1"/></ControlData><ControlData Name="mnuITTD_ATYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_ATYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_ATYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_ATYPECOPY"/></ControlData><ControlData Name="mnuITTD_ATYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_ATYPECUT"/></ControlData><ControlData Name="mnuITTD_ATYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_ATYPEPASTE"/></ControlData><ControlData Name="mnuITTD_ATYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECHANGE"/></ControlData><ControlData Name="mnuITTD_ATYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_ATYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_ATYPEPrn"/></ControlData><ControlData Name="mnuITTD_ATYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECfg"/></ControlData><ControlData Name="mnuITTD_ATYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_ATYPEFind"/></ControlData><ControlData Name="mnuITTD_ATYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_ATYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_ATYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_ATYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_ATYPE as object
private menuActionITTD_ATYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_ATYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_ATYPE,&quot;gridITTD_ATYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ATYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_ATYPE,&quot;Тип операции&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ATYPERef_Click()
  on error resume next
  item.ITTD_ATYPE.Refresh
  gridITTD_ATYPE.itemCount = item.ITTD_ATYPE.count
  gridITTD_ATYPE.Refetch
  gridITTD_ATYPE.Refresh
End Sub
Private Sub cmdITTD_ATYPEAcc_Click()
On Error Resume Next
If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ATYPE.Row &gt; 0 Then
 If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_ATYPEEdit_Click()
  on error resume next
If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ATYPE.Row &gt; 0 then
 If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_ATYPE_main.Item = u
    again: frmITTD_ATYPE_main.NotFirstTime = False
    frmITTD_ATYPE_main.OnInit
    frmITTD_ATYPE_main.Show vbModal
    If frmITTD_ATYPE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_ATYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_ATYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_ATYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_ATYPE.Add()

      Set frmITTD_ATYPE_main.Item = u
      again: frmITTD_ATYPE_main.NotFirstTime = False
      frmITTD_ATYPE_main.OnInit
      frmITTD_ATYPE_main.Show vbModal
      If frmITTD_ATYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_ATYPE.ItemCount = Item.ITTD_ATYPE.Count
        gridITTD_ATYPE.Refresh
        gridITTD_ATYPE.RefreshGroups
        gridITTD_ATYPE.Refreshsort
        gridITTD_ATYPE.MoveToBookmark u.ID &amp; &quot;ITTD_ATYPE&quot;
      Else
        Item.ITTD_ATYPE.Delete u.ID
        Item.ITTD_ATYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_ATYPEFnd_Click()
  on error resume next
  fndITTD_ATYPE.ShowForm
End Sub
Private Sub cmdITTD_ATYPERun_Click()
  on error resume next
  gridITTD_ATYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_ATYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_ATYPE.LoadRow gridITTD_ATYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_ATYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_ATYPE_DblClick()
  cmdITTD_ATYPEEdit_Click
End Sub
Private Sub gridITTD_ATYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_ATYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_ATYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_ATYPE.Row And LastRow &gt; 0 Then
  gridITTD_ATYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_ATYPE.GetRowData(gridITTD_ATYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_ATYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_ATYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_ATYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_ATYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_ATYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_ATYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_ATYPE
End If
end sub
private sub mnuITTD_ATYPEAdd_click()
   menuActionITTD_ATYPE =&quot;ADD&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEEdit_click()
   menuActionITTD_ATYPE =&quot;EDIT&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEDelete_click()
   menuActionITTD_ATYPE =&quot;DEL&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEOpen_click()
   menuActionITTD_ATYPE =&quot;RUN&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPERef_click()
   menuActionITTD_ATYPE =&quot;REF&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
  Private Sub mnuITTD_ATYPECOPY_Click()
    On Error Resume Next
    If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ATYPE.Row &gt; 0 Then
     If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_ATYPECUT_Click()
    On Error Resume Next
    If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ATYPE.Row &gt; 0 Then
     If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_ATYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_ATYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_ATYPE.Row &gt; 0 Then
   If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_ATYPE.ItemCount = u.parent.Count
      gridITTD_ATYPE.RefreshRowIndex gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_ATYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_ATYPEPrn_click()
   menuActionITTD_ATYPE =&quot;PRN&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPECfg_click()
   menuActionITTD_ATYPE =&quot;CFG&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEFind_click()
   menuActionITTD_ATYPE =&quot;FND&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEAcc_click()
   menuActionITTD_ATYPE =&quot;ACC&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub menuTimerITTD_ATYPE_timer()
   menuTimerITTD_ATYPE.enabled = false
   if menuActionITTD_ATYPE =&quot;ADD&quot; then cmdITTD_ATYPEADD_CLick
   if menuActionITTD_ATYPE =&quot;EDIT&quot; then cmdITTD_ATYPEEDIT_CLick
   if menuActionITTD_ATYPE =&quot;DEL&quot; then cmdITTD_ATYPEDEL_CLick
   if menuActionITTD_ATYPE =&quot;RUN&quot; then cmdITTD_ATYPERUN_CLick
   if menuActionITTD_ATYPE =&quot;REF&quot; then cmdITTD_ATYPEREF_CLick
   if menuActionITTD_ATYPE =&quot;PRN&quot; then cmdITTD_ATYPEPRN_CLick
   if menuActionITTD_ATYPE =&quot;CFG&quot; then cmdITTD_ATYPECFG_CLick
   if menuActionITTD_ATYPE =&quot;FND&quot; then cmdITTD_ATYPEFND_CLick
   if menuActionITTD_ATYPE =&quot;ACC&quot; then cmdITTD_ATYPEACC_CLick
   menuActionITTD_ATYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_ATYPEAdd,cmdITTD_ATYPEAdd.tag
  LoadBtnPictures cmdITTD_ATYPEEdit,cmdITTD_ATYPEEdit.tag
  LoadBtnPictures cmdITTD_ATYPEDel,cmdITTD_ATYPEDel.tag
  LoadBtnPictures cmdITTD_ATYPERef,cmdITTD_ATYPERef.tag
  LoadBtnPictures cmdITTD_ATYPEPrn,cmdITTD_ATYPEPrn.tag
  LoadBtnPictures cmdITTD_ATYPEFnd,cmdITTD_ATYPEFnd.tag
  LoadBtnPictures cmdITTD_ATYPERun,cmdITTD_ATYPERun.tag
  LoadBtnPictures cmdITTD_ATYPEAcc,cmdITTD_ATYPEAcc.tag
  LoadBtnPictures cmdITTD_ATYPECfg,cmdITTD_ATYPECfg.tag
  item.ITTD_ATYPE.PrepareGrid gridITTD_ATYPE
  LoadGridLayout gridITTD_ATYPE
  Set fndITTD_ATYPE = Nothing
  On Error Resume Next
  Set fndITTD_ATYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_ATYPE.Init gridITTD_ATYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_ATYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_ATYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_ATYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_ATYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_SRV_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Услуги"/><Properties Name="Name" PropValue="mnuPopupITTD_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_SRVDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_SRVOpen"/></ControlData><ControlData Name="mnuITTD_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_SRVRef"/></ControlData><ControlData Name="mnuITTD_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_SRVS1"/></ControlData><ControlData Name="mnuITTD_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_SRVBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_SRVCOPY"/></ControlData><ControlData Name="mnuITTD_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_SRVCUT"/></ControlData><ControlData Name="mnuITTD_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_SRVPASTE"/></ControlData><ControlData Name="mnuITTD_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_SRVCHANGE"/></ControlData><ControlData Name="mnuITTD_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_SRVPrn"/></ControlData><ControlData Name="mnuITTD_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_SRVCfg"/></ControlData><ControlData Name="mnuITTD_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_SRVFind"/></ControlData><ControlData Name="mnuITTD_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_SRV as object
private menuActionITTD_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_SRV,&quot;gridITTD_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_SRV,&quot;Услуги&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_SRVRef_Click()
  on error resume next
  item.ITTD_SRV.Refresh
  gridITTD_SRV.itemCount = item.ITTD_SRV.count
  gridITTD_SRV.Refetch
  gridITTD_SRV.Refresh
End Sub
Private Sub cmdITTD_SRVAcc_Click()
On Error Resume Next
If gridITTD_SRV.ItemCount = 0 Then Exit Sub
If gridITTD_SRV.Row &gt; 0 Then
 If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_SRVEdit_Click()
  on error resume next
If gridITTD_SRV.ItemCount = 0 Then Exit Sub
If gridITTD_SRV.Row &gt; 0 then
 If gridITTD_SRV.RowIndex(gridITTD_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_SRV_main.Item = u
    again: frmITTD_SRV_main.NotFirstTime = False
    frmITTD_SRV_main.OnInit
    frmITTD_SRV_main.Show vbModal
    If frmITTD_SRV_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_SRVDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_SRV.Add()

      Set frmITTD_SRV_main.Item = u
      again: frmITTD_SRV_main.NotFirstTime = False
      frmITTD_SRV_main.OnInit
      frmITTD_SRV_main.Show vbModal
      If frmITTD_SRV_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_SRV.ItemCount = Item.ITTD_SRV.Count
        gridITTD_SRV.Refresh
        gridITTD_SRV.RefreshGroups
        gridITTD_SRV.Refreshsort
        gridITTD_SRV.MoveToBookmark u.ID &amp; &quot;ITTD_SRV&quot;
      Else
        Item.ITTD_SRV.Delete u.ID
        Item.ITTD_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_SRVFnd_Click()
  on error resume next
  fndITTD_SRV.ShowForm
End Sub
Private Sub cmdITTD_SRVRun_Click()
  on error resume next
  gridITTD_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_SRV.LoadRow gridITTD_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_SRV_DblClick()
  cmdITTD_SRVEdit_Click
End Sub
Private Sub gridITTD_SRV_KeyPress(KeyAscii As Integer)
  If gridITTD_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_SRV.Row And LastRow &gt; 0 Then
  gridITTD_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_SRV.GetRowData(gridITTD_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_SRV.Add()
    If GetFromBuffer(u) Then
      gridITTD_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_SRVCfg_Click
        End If
    End If
end sub

private sub gridITTD_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_SRV
End If
end sub
private sub mnuITTD_SRVAdd_click()
   menuActionITTD_SRV =&quot;ADD&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVEdit_click()
   menuActionITTD_SRV =&quot;EDIT&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVDelete_click()
   menuActionITTD_SRV =&quot;DEL&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVOpen_click()
   menuActionITTD_SRV =&quot;RUN&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVRef_click()
   menuActionITTD_SRV =&quot;REF&quot;
   menuTimerITTD_SRV.enabled = true
end sub
  Private Sub mnuITTD_SRVCOPY_Click()
    On Error Resume Next
    If gridITTD_SRV.ItemCount = 0 Then Exit Sub
    If gridITTD_SRV.Row &gt; 0 Then
     If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_SRVCUT_Click()
    On Error Resume Next
    If gridITTD_SRV.ItemCount = 0 Then Exit Sub
    If gridITTD_SRV.Row &gt; 0 Then
     If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_SRVCHANGE_Click()
  On Error Resume Next
  If gridITTD_SRV.ItemCount = 0 Then Exit Sub
  If gridITTD_SRV.Row &gt; 0 Then
   If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_SRV.ItemCount = u.parent.Count
      gridITTD_SRV.RefreshRowIndex gridITTD_SRV.RowIndex(gridITTD_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_SRVPrn_click()
   menuActionITTD_SRV =&quot;PRN&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVCfg_click()
   menuActionITTD_SRV =&quot;CFG&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVFind_click()
   menuActionITTD_SRV =&quot;FND&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVAcc_click()
   menuActionITTD_SRV =&quot;ACC&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub menuTimerITTD_SRV_timer()
   menuTimerITTD_SRV.enabled = false
   if menuActionITTD_SRV =&quot;ADD&quot; then cmdITTD_SRVADD_CLick
   if menuActionITTD_SRV =&quot;EDIT&quot; then cmdITTD_SRVEDIT_CLick
   if menuActionITTD_SRV =&quot;DEL&quot; then cmdITTD_SRVDEL_CLick
   if menuActionITTD_SRV =&quot;RUN&quot; then cmdITTD_SRVRUN_CLick
   if menuActionITTD_SRV =&quot;REF&quot; then cmdITTD_SRVREF_CLick
   if menuActionITTD_SRV =&quot;PRN&quot; then cmdITTD_SRVPRN_CLick
   if menuActionITTD_SRV =&quot;CFG&quot; then cmdITTD_SRVCFG_CLick
   if menuActionITTD_SRV =&quot;FND&quot; then cmdITTD_SRVFND_CLick
   if menuActionITTD_SRV =&quot;ACC&quot; then cmdITTD_SRVACC_CLick
   menuActionITTD_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_SRVAdd,cmdITTD_SRVAdd.tag
  LoadBtnPictures cmdITTD_SRVEdit,cmdITTD_SRVEdit.tag
  LoadBtnPictures cmdITTD_SRVDel,cmdITTD_SRVDel.tag
  LoadBtnPictures cmdITTD_SRVRef,cmdITTD_SRVRef.tag
  LoadBtnPictures cmdITTD_SRVPrn,cmdITTD_SRVPrn.tag
  LoadBtnPictures cmdITTD_SRVFnd,cmdITTD_SRVFnd.tag
  LoadBtnPictures cmdITTD_SRVRun,cmdITTD_SRVRun.tag
  LoadBtnPictures cmdITTD_SRVAcc,cmdITTD_SRVAcc.tag
  LoadBtnPictures cmdITTD_SRVCfg,cmdITTD_SRVCfg.tag
  item.ITTD_SRV.PrepareGrid gridITTD_SRV
  LoadGridLayout gridITTD_SRV
  Set fndITTD_SRV = Nothing
  On Error Resume Next
  Set fndITTD_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_SRV.Init gridITTD_SRV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_PART_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_PART" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_PART"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_PART" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_PART"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_PARTAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PARTEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PARTDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_PARTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_PARTPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_PARTCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_PARTFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_PARTRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_PARTRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_PARTAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_PART" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Партия товара"/><Properties Name="Name" PropValue="mnuPopupITTD_PART"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_PARTAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_PARTAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PARTEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_PARTEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PARTDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_PARTDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_PARTOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_PARTOpen"/></ControlData><ControlData Name="mnuITTD_PARTRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_PARTRef"/></ControlData><ControlData Name="mnuITTD_PARTS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_PARTS1"/></ControlData><ControlData Name="mnuITTD_PARTBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_PARTBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_PARTCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_PARTCOPY"/></ControlData><ControlData Name="mnuITTD_PARTCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_PARTCUT"/></ControlData><ControlData Name="mnuITTD_PARTPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_PARTPASTE"/></ControlData><ControlData Name="mnuITTD_PARTCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_PARTCHANGE"/></ControlData><ControlData Name="mnuITTD_PARTCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_PARTCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_PARTPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_PARTPrn"/></ControlData><ControlData Name="mnuITTD_PARTCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_PARTCfg"/></ControlData><ControlData Name="mnuITTD_PARTFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_PARTFind"/></ControlData><ControlData Name="mnuITTD_PARTAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_PARTAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_PART" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_PART"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_PART as object
private menuActionITTD_PART as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_PARTCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_PART,&quot;gridITTD_PART&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PARTPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_PART,&quot;Партия товара&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PARTRef_Click()
  on error resume next
  item.ITTD_PART.Refresh
  gridITTD_PART.itemCount = item.ITTD_PART.count
  gridITTD_PART.Refetch
  gridITTD_PART.Refresh
End Sub
Private Sub cmdITTD_PARTAcc_Click()
On Error Resume Next
If gridITTD_PART.ItemCount = 0 Then Exit Sub
If gridITTD_PART.Row &gt; 0 Then
 If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_PARTEdit_Click()
  on error resume next
If gridITTD_PART.ItemCount = 0 Then Exit Sub
If gridITTD_PART.Row &gt; 0 then
 If gridITTD_PART.RowIndex(gridITTD_PART.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_PART_main.Item = u
    again: frmITTD_PART_main.NotFirstTime = False
    frmITTD_PART_main.OnInit
    frmITTD_PART_main.Show vbModal
    If frmITTD_PART_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_PART.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_PARTDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_PARTAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_PART.Add()

      Set frmITTD_PART_main.Item = u
      again: frmITTD_PART_main.NotFirstTime = False
      frmITTD_PART_main.OnInit
      frmITTD_PART_main.Show vbModal
      If frmITTD_PART_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_PART.ItemCount = Item.ITTD_PART.Count
        gridITTD_PART.Refresh
        gridITTD_PART.RefreshGroups
        gridITTD_PART.Refreshsort
        gridITTD_PART.MoveToBookmark u.ID &amp; &quot;ITTD_PART&quot;
      Else
        Item.ITTD_PART.Delete u.ID
        Item.ITTD_PART.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_PARTFnd_Click()
  on error resume next
  fndITTD_PART.ShowForm
End Sub
Private Sub cmdITTD_PARTRun_Click()
  on error resume next
  gridITTD_PART_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_PART_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_PART.LoadRow gridITTD_PART, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_PART_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_PART_DblClick()
  cmdITTD_PARTEdit_Click
End Sub
Private Sub gridITTD_PART_KeyPress(KeyAscii As Integer)
  If gridITTD_PART.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_PART.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_PART_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_PART.Row And LastRow &gt; 0 Then
  gridITTD_PART.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_PART.GetRowData(gridITTD_PART.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_PARTPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_PART.Add()
    If GetFromBuffer(u) Then
      gridITTD_PART.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_PART_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_PARTCfg_Click
        End If
    End If
end sub

private sub gridITTD_PART_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_PART
End If
end sub
private sub mnuITTD_PARTAdd_click()
   menuActionITTD_PART =&quot;ADD&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTEdit_click()
   menuActionITTD_PART =&quot;EDIT&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTDelete_click()
   menuActionITTD_PART =&quot;DEL&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTOpen_click()
   menuActionITTD_PART =&quot;RUN&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTRef_click()
   menuActionITTD_PART =&quot;REF&quot;
   menuTimerITTD_PART.enabled = true
end sub
  Private Sub mnuITTD_PARTCOPY_Click()
    On Error Resume Next
    If gridITTD_PART.ItemCount = 0 Then Exit Sub
    If gridITTD_PART.Row &gt; 0 Then
     If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_PARTCUT_Click()
    On Error Resume Next
    If gridITTD_PART.ItemCount = 0 Then Exit Sub
    If gridITTD_PART.Row &gt; 0 Then
     If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_PART.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_PARTCHANGE_Click()
  On Error Resume Next
  If gridITTD_PART.ItemCount = 0 Then Exit Sub
  If gridITTD_PART.Row &gt; 0 Then
   If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_PART.ItemCount = u.parent.Count
      gridITTD_PART.RefreshRowIndex gridITTD_PART.RowIndex(gridITTD_PART.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_PARTCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_PARTPrn_click()
   menuActionITTD_PART =&quot;PRN&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTCfg_click()
   menuActionITTD_PART =&quot;CFG&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTFind_click()
   menuActionITTD_PART =&quot;FND&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTAcc_click()
   menuActionITTD_PART =&quot;ACC&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub menuTimerITTD_PART_timer()
   menuTimerITTD_PART.enabled = false
   if menuActionITTD_PART =&quot;ADD&quot; then cmdITTD_PARTADD_CLick
   if menuActionITTD_PART =&quot;EDIT&quot; then cmdITTD_PARTEDIT_CLick
   if menuActionITTD_PART =&quot;DEL&quot; then cmdITTD_PARTDEL_CLick
   if menuActionITTD_PART =&quot;RUN&quot; then cmdITTD_PARTRUN_CLick
   if menuActionITTD_PART =&quot;REF&quot; then cmdITTD_PARTREF_CLick
   if menuActionITTD_PART =&quot;PRN&quot; then cmdITTD_PARTPRN_CLick
   if menuActionITTD_PART =&quot;CFG&quot; then cmdITTD_PARTCFG_CLick
   if menuActionITTD_PART =&quot;FND&quot; then cmdITTD_PARTFND_CLick
   if menuActionITTD_PART =&quot;ACC&quot; then cmdITTD_PARTACC_CLick
   menuActionITTD_PART =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_PARTAdd,cmdITTD_PARTAdd.tag
  LoadBtnPictures cmdITTD_PARTEdit,cmdITTD_PARTEdit.tag
  LoadBtnPictures cmdITTD_PARTDel,cmdITTD_PARTDel.tag
  LoadBtnPictures cmdITTD_PARTRef,cmdITTD_PARTRef.tag
  LoadBtnPictures cmdITTD_PARTPrn,cmdITTD_PARTPrn.tag
  LoadBtnPictures cmdITTD_PARTFnd,cmdITTD_PARTFnd.tag
  LoadBtnPictures cmdITTD_PARTRun,cmdITTD_PARTRun.tag
  LoadBtnPictures cmdITTD_PARTAcc,cmdITTD_PARTAcc.tag
  LoadBtnPictures cmdITTD_PARTCfg,cmdITTD_PARTCfg.tag
  item.ITTD_PART.PrepareGrid gridITTD_PART
  LoadGridLayout gridITTD_PART
  Set fndITTD_PART = Nothing
  On Error Resume Next
  Set fndITTD_PART = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_PART.Init gridITTD_PART
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_PART.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PART.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PART.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PART.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_PART.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PART.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PART.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PART.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_PART.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_PART = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_FACTORY_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_FACTORY" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_FACTORY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_FACTORY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_FACTORY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_FACTORYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_FACTORYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_FACTORYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_FACTORYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_FACTORYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_FACTORYCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_FACTORYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_FACTORYRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_FACTORYAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_FACTORY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Завод"/><Properties Name="Name" PropValue="mnuPopupITTD_FACTORY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_FACTORYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_FACTORYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_FACTORYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_FACTORYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_FACTORYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_FACTORYOpen"/></ControlData><ControlData Name="mnuITTD_FACTORYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYRef"/></ControlData><ControlData Name="mnuITTD_FACTORYS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_FACTORYS1"/></ControlData><ControlData Name="mnuITTD_FACTORYBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_FACTORYBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_FACTORYCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCOPY"/></ControlData><ControlData Name="mnuITTD_FACTORYCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCUT"/></ControlData><ControlData Name="mnuITTD_FACTORYPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYPASTE"/></ControlData><ControlData Name="mnuITTD_FACTORYCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCHANGE"/></ControlData><ControlData Name="mnuITTD_FACTORYCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_FACTORYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYPrn"/></ControlData><ControlData Name="mnuITTD_FACTORYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCfg"/></ControlData><ControlData Name="mnuITTD_FACTORYFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_FACTORYFind"/></ControlData><ControlData Name="mnuITTD_FACTORYAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_FACTORYAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_FACTORY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_FACTORY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_FACTORY as object
private menuActionITTD_FACTORY as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_FACTORYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_FACTORY,&quot;gridITTD_FACTORY&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_FACTORYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_FACTORY,&quot;Завод&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_FACTORYRef_Click()
  on error resume next
  item.ITTD_FACTORY.Refresh
  gridITTD_FACTORY.itemCount = item.ITTD_FACTORY.count
  gridITTD_FACTORY.Refetch
  gridITTD_FACTORY.Refresh
End Sub
Private Sub cmdITTD_FACTORYAcc_Click()
On Error Resume Next
If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
If gridITTD_FACTORY.Row &gt; 0 Then
 If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_FACTORYEdit_Click()
  on error resume next
If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
If gridITTD_FACTORY.Row &gt; 0 then
 If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_FACTORY_main.Item = u
    again: frmITTD_FACTORY_main.NotFirstTime = False
    frmITTD_FACTORY_main.OnInit
    frmITTD_FACTORY_main.Show vbModal
    If frmITTD_FACTORY_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_FACTORY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_FACTORYDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_FACTORYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_FACTORY.Add()

      Set frmITTD_FACTORY_main.Item = u
      again: frmITTD_FACTORY_main.NotFirstTime = False
      frmITTD_FACTORY_main.OnInit
      frmITTD_FACTORY_main.Show vbModal
      If frmITTD_FACTORY_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_FACTORY.ItemCount = Item.ITTD_FACTORY.Count
        gridITTD_FACTORY.Refresh
        gridITTD_FACTORY.RefreshGroups
        gridITTD_FACTORY.Refreshsort
        gridITTD_FACTORY.MoveToBookmark u.ID &amp; &quot;ITTD_FACTORY&quot;
      Else
        Item.ITTD_FACTORY.Delete u.ID
        Item.ITTD_FACTORY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_FACTORYFnd_Click()
  on error resume next
  fndITTD_FACTORY.ShowForm
End Sub
Private Sub cmdITTD_FACTORYRun_Click()
  on error resume next
  gridITTD_FACTORY_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_FACTORY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_FACTORY.LoadRow gridITTD_FACTORY, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_FACTORY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_FACTORY_DblClick()
  cmdITTD_FACTORYEdit_Click
End Sub
Private Sub gridITTD_FACTORY_KeyPress(KeyAscii As Integer)
  If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_FACTORY.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_FACTORY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_FACTORY.Row And LastRow &gt; 0 Then
  gridITTD_FACTORY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_FACTORY.GetRowData(gridITTD_FACTORY.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_FACTORYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_FACTORY.Add()
    If GetFromBuffer(u) Then
      gridITTD_FACTORY.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_FACTORY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_FACTORYCfg_Click
        End If
    End If
end sub

private sub gridITTD_FACTORY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_FACTORY
End If
end sub
private sub mnuITTD_FACTORYAdd_click()
   menuActionITTD_FACTORY =&quot;ADD&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYEdit_click()
   menuActionITTD_FACTORY =&quot;EDIT&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYDelete_click()
   menuActionITTD_FACTORY =&quot;DEL&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYOpen_click()
   menuActionITTD_FACTORY =&quot;RUN&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYRef_click()
   menuActionITTD_FACTORY =&quot;REF&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
  Private Sub mnuITTD_FACTORYCOPY_Click()
    On Error Resume Next
    If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
    If gridITTD_FACTORY.Row &gt; 0 Then
     If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_FACTORYCUT_Click()
    On Error Resume Next
    If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
    If gridITTD_FACTORY.Row &gt; 0 Then
     If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_FACTORY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_FACTORYCHANGE_Click()
  On Error Resume Next
  If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
  If gridITTD_FACTORY.Row &gt; 0 Then
   If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_FACTORY.ItemCount = u.parent.Count
      gridITTD_FACTORY.RefreshRowIndex gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_FACTORYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_FACTORYPrn_click()
   menuActionITTD_FACTORY =&quot;PRN&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYCfg_click()
   menuActionITTD_FACTORY =&quot;CFG&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYFind_click()
   menuActionITTD_FACTORY =&quot;FND&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYAcc_click()
   menuActionITTD_FACTORY =&quot;ACC&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub menuTimerITTD_FACTORY_timer()
   menuTimerITTD_FACTORY.enabled = false
   if menuActionITTD_FACTORY =&quot;ADD&quot; then cmdITTD_FACTORYADD_CLick
   if menuActionITTD_FACTORY =&quot;EDIT&quot; then cmdITTD_FACTORYEDIT_CLick
   if menuActionITTD_FACTORY =&quot;DEL&quot; then cmdITTD_FACTORYDEL_CLick
   if menuActionITTD_FACTORY =&quot;RUN&quot; then cmdITTD_FACTORYRUN_CLick
   if menuActionITTD_FACTORY =&quot;REF&quot; then cmdITTD_FACTORYREF_CLick
   if menuActionITTD_FACTORY =&quot;PRN&quot; then cmdITTD_FACTORYPRN_CLick
   if menuActionITTD_FACTORY =&quot;CFG&quot; then cmdITTD_FACTORYCFG_CLick
   if menuActionITTD_FACTORY =&quot;FND&quot; then cmdITTD_FACTORYFND_CLick
   if menuActionITTD_FACTORY =&quot;ACC&quot; then cmdITTD_FACTORYACC_CLick
   menuActionITTD_FACTORY =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_FACTORYAdd,cmdITTD_FACTORYAdd.tag
  LoadBtnPictures cmdITTD_FACTORYEdit,cmdITTD_FACTORYEdit.tag
  LoadBtnPictures cmdITTD_FACTORYDel,cmdITTD_FACTORYDel.tag
  LoadBtnPictures cmdITTD_FACTORYRef,cmdITTD_FACTORYRef.tag
  LoadBtnPictures cmdITTD_FACTORYPrn,cmdITTD_FACTORYPrn.tag
  LoadBtnPictures cmdITTD_FACTORYFnd,cmdITTD_FACTORYFnd.tag
  LoadBtnPictures cmdITTD_FACTORYRun,cmdITTD_FACTORYRun.tag
  LoadBtnPictures cmdITTD_FACTORYAcc,cmdITTD_FACTORYAcc.tag
  LoadBtnPictures cmdITTD_FACTORYCfg,cmdITTD_FACTORYCfg.tag
  item.ITTD_FACTORY.PrepareGrid gridITTD_FACTORY
  LoadGridLayout gridITTD_FACTORY
  Set fndITTD_FACTORY = Nothing
  On Error Resume Next
  Set fndITTD_FACTORY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_FACTORY.Init gridITTD_FACTORY
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_FACTORY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_FACTORY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_FACTORY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_FACTORY = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_KILLPLACE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_KILLPLACE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_KILLPLACE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_KILLPLACE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_KILLPLACEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_KILLPLACEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_KILLPLACEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_KILLPLACERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_KILLPLACEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_KILLPLACECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_KILLPLACEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_KILLPLACERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_KILLPLACEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Бойня"/><Properties Name="Name" PropValue="mnuPopupITTD_KILLPLACE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_KILLPLACEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_KILLPLACEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_KILLPLACEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_KILLPLACEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEOpen"/></ControlData><ControlData Name="mnuITTD_KILLPLACERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACERef"/></ControlData><ControlData Name="mnuITTD_KILLPLACES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACES1"/></ControlData><ControlData Name="mnuITTD_KILLPLACEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_KILLPLACECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECOPY"/></ControlData><ControlData Name="mnuITTD_KILLPLACECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECUT"/></ControlData><ControlData Name="mnuITTD_KILLPLACEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEPASTE"/></ControlData><ControlData Name="mnuITTD_KILLPLACECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECHANGE"/></ControlData><ControlData Name="mnuITTD_KILLPLACECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_KILLPLACEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEPrn"/></ControlData><ControlData Name="mnuITTD_KILLPLACECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECfg"/></ControlData><ControlData Name="mnuITTD_KILLPLACEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEFind"/></ControlData><ControlData Name="mnuITTD_KILLPLACEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_KILLPLACE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_KILLPLACE as object
private menuActionITTD_KILLPLACE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_KILLPLACECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_KILLPLACE,&quot;gridITTD_KILLPLACE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_KILLPLACEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_KILLPLACE,&quot;Бойня&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_KILLPLACERef_Click()
  on error resume next
  item.ITTD_KILLPLACE.Refresh
  gridITTD_KILLPLACE.itemCount = item.ITTD_KILLPLACE.count
  gridITTD_KILLPLACE.Refetch
  gridITTD_KILLPLACE.Refresh
End Sub
Private Sub cmdITTD_KILLPLACEAcc_Click()
On Error Resume Next
If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
If gridITTD_KILLPLACE.Row &gt; 0 Then
 If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_KILLPLACEEdit_Click()
  on error resume next
If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
If gridITTD_KILLPLACE.Row &gt; 0 then
 If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_KILLPLACE_main.Item = u
    again: frmITTD_KILLPLACE_main.NotFirstTime = False
    frmITTD_KILLPLACE_main.OnInit
    frmITTD_KILLPLACE_main.Show vbModal
    If frmITTD_KILLPLACE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_KILLPLACE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_KILLPLACEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_KILLPLACEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_KILLPLACE.Add()

      Set frmITTD_KILLPLACE_main.Item = u
      again: frmITTD_KILLPLACE_main.NotFirstTime = False
      frmITTD_KILLPLACE_main.OnInit
      frmITTD_KILLPLACE_main.Show vbModal
      If frmITTD_KILLPLACE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_KILLPLACE.ItemCount = Item.ITTD_KILLPLACE.Count
        gridITTD_KILLPLACE.Refresh
        gridITTD_KILLPLACE.RefreshGroups
        gridITTD_KILLPLACE.Refreshsort
        gridITTD_KILLPLACE.MoveToBookmark u.ID &amp; &quot;ITTD_KILLPLACE&quot;
      Else
        Item.ITTD_KILLPLACE.Delete u.ID
        Item.ITTD_KILLPLACE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_KILLPLACEFnd_Click()
  on error resume next
  fndITTD_KILLPLACE.ShowForm
End Sub
Private Sub cmdITTD_KILLPLACERun_Click()
  on error resume next
  gridITTD_KILLPLACE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_KILLPLACE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_KILLPLACE.LoadRow gridITTD_KILLPLACE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_KILLPLACE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_KILLPLACE_DblClick()
  cmdITTD_KILLPLACEEdit_Click
End Sub
Private Sub gridITTD_KILLPLACE_KeyPress(KeyAscii As Integer)
  If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_KILLPLACE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_KILLPLACE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_KILLPLACE.Row And LastRow &gt; 0 Then
  gridITTD_KILLPLACE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_KILLPLACE.GetRowData(gridITTD_KILLPLACE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_KILLPLACEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_KILLPLACE.Add()
    If GetFromBuffer(u) Then
      gridITTD_KILLPLACE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_KILLPLACE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_KILLPLACECfg_Click
        End If
    End If
end sub

private sub gridITTD_KILLPLACE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_KILLPLACE
End If
end sub
private sub mnuITTD_KILLPLACEAdd_click()
   menuActionITTD_KILLPLACE =&quot;ADD&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEEdit_click()
   menuActionITTD_KILLPLACE =&quot;EDIT&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEDelete_click()
   menuActionITTD_KILLPLACE =&quot;DEL&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEOpen_click()
   menuActionITTD_KILLPLACE =&quot;RUN&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACERef_click()
   menuActionITTD_KILLPLACE =&quot;REF&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
  Private Sub mnuITTD_KILLPLACECOPY_Click()
    On Error Resume Next
    If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
    If gridITTD_KILLPLACE.Row &gt; 0 Then
     If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_KILLPLACECUT_Click()
    On Error Resume Next
    If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
    If gridITTD_KILLPLACE.Row &gt; 0 Then
     If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_KILLPLACE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_KILLPLACECHANGE_Click()
  On Error Resume Next
  If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
  If gridITTD_KILLPLACE.Row &gt; 0 Then
   If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_KILLPLACE.ItemCount = u.parent.Count
      gridITTD_KILLPLACE.RefreshRowIndex gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_KILLPLACECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_KILLPLACEPrn_click()
   menuActionITTD_KILLPLACE =&quot;PRN&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACECfg_click()
   menuActionITTD_KILLPLACE =&quot;CFG&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEFind_click()
   menuActionITTD_KILLPLACE =&quot;FND&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEAcc_click()
   menuActionITTD_KILLPLACE =&quot;ACC&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub menuTimerITTD_KILLPLACE_timer()
   menuTimerITTD_KILLPLACE.enabled = false
   if menuActionITTD_KILLPLACE =&quot;ADD&quot; then cmdITTD_KILLPLACEADD_CLick
   if menuActionITTD_KILLPLACE =&quot;EDIT&quot; then cmdITTD_KILLPLACEEDIT_CLick
   if menuActionITTD_KILLPLACE =&quot;DEL&quot; then cmdITTD_KILLPLACEDEL_CLick
   if menuActionITTD_KILLPLACE =&quot;RUN&quot; then cmdITTD_KILLPLACERUN_CLick
   if menuActionITTD_KILLPLACE =&quot;REF&quot; then cmdITTD_KILLPLACEREF_CLick
   if menuActionITTD_KILLPLACE =&quot;PRN&quot; then cmdITTD_KILLPLACEPRN_CLick
   if menuActionITTD_KILLPLACE =&quot;CFG&quot; then cmdITTD_KILLPLACECFG_CLick
   if menuActionITTD_KILLPLACE =&quot;FND&quot; then cmdITTD_KILLPLACEFND_CLick
   if menuActionITTD_KILLPLACE =&quot;ACC&quot; then cmdITTD_KILLPLACEACC_CLick
   menuActionITTD_KILLPLACE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_KILLPLACEAdd,cmdITTD_KILLPLACEAdd.tag
  LoadBtnPictures cmdITTD_KILLPLACEEdit,cmdITTD_KILLPLACEEdit.tag
  LoadBtnPictures cmdITTD_KILLPLACEDel,cmdITTD_KILLPLACEDel.tag
  LoadBtnPictures cmdITTD_KILLPLACERef,cmdITTD_KILLPLACERef.tag
  LoadBtnPictures cmdITTD_KILLPLACEPrn,cmdITTD_KILLPLACEPrn.tag
  LoadBtnPictures cmdITTD_KILLPLACEFnd,cmdITTD_KILLPLACEFnd.tag
  LoadBtnPictures cmdITTD_KILLPLACERun,cmdITTD_KILLPLACERun.tag
  LoadBtnPictures cmdITTD_KILLPLACEAcc,cmdITTD_KILLPLACEAcc.tag
  LoadBtnPictures cmdITTD_KILLPLACECfg,cmdITTD_KILLPLACECfg.tag
  item.ITTD_KILLPLACE.PrepareGrid gridITTD_KILLPLACE
  LoadGridLayout gridITTD_KILLPLACE
  Set fndITTD_KILLPLACE = Nothing
  On Error Resume Next
  Set fndITTD_KILLPLACE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_KILLPLACE.Init gridITTD_KILLPLACE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_KILLPLACE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_KILLPLACE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_KILLPLACE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_KILLPLACE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_COUNTRY_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_COUNTRY" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_COUNTRY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_COUNTRY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_COUNTRY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_COUNTRYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_COUNTRYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_COUNTRYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_COUNTRYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_COUNTRYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_COUNTRYCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_COUNTRYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_COUNTRYRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_COUNTRYAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_COUNTRY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Страна"/><Properties Name="Name" PropValue="mnuPopupITTD_COUNTRY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_COUNTRYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_COUNTRYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_COUNTRYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_COUNTRYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYOpen"/></ControlData><ControlData Name="mnuITTD_COUNTRYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYRef"/></ControlData><ControlData Name="mnuITTD_COUNTRYS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYS1"/></ControlData><ControlData Name="mnuITTD_COUNTRYBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_COUNTRYCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCOPY"/></ControlData><ControlData Name="mnuITTD_COUNTRYCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCUT"/></ControlData><ControlData Name="mnuITTD_COUNTRYPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYPASTE"/></ControlData><ControlData Name="mnuITTD_COUNTRYCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCHANGE"/></ControlData><ControlData Name="mnuITTD_COUNTRYCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_COUNTRYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYPrn"/></ControlData><ControlData Name="mnuITTD_COUNTRYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCfg"/></ControlData><ControlData Name="mnuITTD_COUNTRYFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYFind"/></ControlData><ControlData Name="mnuITTD_COUNTRYAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_COUNTRY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_COUNTRY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_COUNTRY as object
private menuActionITTD_COUNTRY as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_COUNTRYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_COUNTRY,&quot;gridITTD_COUNTRY&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_COUNTRYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_COUNTRY,&quot;Страна&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_COUNTRYRef_Click()
  on error resume next
  item.ITTD_COUNTRY.Refresh
  gridITTD_COUNTRY.itemCount = item.ITTD_COUNTRY.count
  gridITTD_COUNTRY.Refetch
  gridITTD_COUNTRY.Refresh
End Sub
Private Sub cmdITTD_COUNTRYAcc_Click()
On Error Resume Next
If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
If gridITTD_COUNTRY.Row &gt; 0 Then
 If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_COUNTRYEdit_Click()
  on error resume next
If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
If gridITTD_COUNTRY.Row &gt; 0 then
 If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_COUNTRY_main.Item = u
    again: frmITTD_COUNTRY_main.NotFirstTime = False
    frmITTD_COUNTRY_main.OnInit
    frmITTD_COUNTRY_main.Show vbModal
    If frmITTD_COUNTRY_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_COUNTRY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_COUNTRYDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_COUNTRYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_COUNTRY.Add()

      Set frmITTD_COUNTRY_main.Item = u
      again: frmITTD_COUNTRY_main.NotFirstTime = False
      frmITTD_COUNTRY_main.OnInit
      frmITTD_COUNTRY_main.Show vbModal
      If frmITTD_COUNTRY_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_COUNTRY.ItemCount = Item.ITTD_COUNTRY.Count
        gridITTD_COUNTRY.Refresh
        gridITTD_COUNTRY.RefreshGroups
        gridITTD_COUNTRY.Refreshsort
        gridITTD_COUNTRY.MoveToBookmark u.ID &amp; &quot;ITTD_COUNTRY&quot;
      Else
        Item.ITTD_COUNTRY.Delete u.ID
        Item.ITTD_COUNTRY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_COUNTRYFnd_Click()
  on error resume next
  fndITTD_COUNTRY.ShowForm
End Sub
Private Sub cmdITTD_COUNTRYRun_Click()
  on error resume next
  gridITTD_COUNTRY_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_COUNTRY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_COUNTRY.LoadRow gridITTD_COUNTRY, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_COUNTRY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_COUNTRY_DblClick()
  cmdITTD_COUNTRYEdit_Click
End Sub
Private Sub gridITTD_COUNTRY_KeyPress(KeyAscii As Integer)
  If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_COUNTRY.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_COUNTRY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_COUNTRY.Row And LastRow &gt; 0 Then
  gridITTD_COUNTRY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_COUNTRY.GetRowData(gridITTD_COUNTRY.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_COUNTRYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_COUNTRY.Add()
    If GetFromBuffer(u) Then
      gridITTD_COUNTRY.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_COUNTRY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_COUNTRYCfg_Click
        End If
    End If
end sub

private sub gridITTD_COUNTRY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_COUNTRY
End If
end sub
private sub mnuITTD_COUNTRYAdd_click()
   menuActionITTD_COUNTRY =&quot;ADD&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYEdit_click()
   menuActionITTD_COUNTRY =&quot;EDIT&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYDelete_click()
   menuActionITTD_COUNTRY =&quot;DEL&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYOpen_click()
   menuActionITTD_COUNTRY =&quot;RUN&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYRef_click()
   menuActionITTD_COUNTRY =&quot;REF&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
  Private Sub mnuITTD_COUNTRYCOPY_Click()
    On Error Resume Next
    If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridITTD_COUNTRY.Row &gt; 0 Then
     If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_COUNTRYCUT_Click()
    On Error Resume Next
    If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridITTD_COUNTRY.Row &gt; 0 Then
     If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_COUNTRY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_COUNTRYCHANGE_Click()
  On Error Resume Next
  If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
  If gridITTD_COUNTRY.Row &gt; 0 Then
   If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_COUNTRY.ItemCount = u.parent.Count
      gridITTD_COUNTRY.RefreshRowIndex gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_COUNTRYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_COUNTRYPrn_click()
   menuActionITTD_COUNTRY =&quot;PRN&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYCfg_click()
   menuActionITTD_COUNTRY =&quot;CFG&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYFind_click()
   menuActionITTD_COUNTRY =&quot;FND&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYAcc_click()
   menuActionITTD_COUNTRY =&quot;ACC&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub menuTimerITTD_COUNTRY_timer()
   menuTimerITTD_COUNTRY.enabled = false
   if menuActionITTD_COUNTRY =&quot;ADD&quot; then cmdITTD_COUNTRYADD_CLick
   if menuActionITTD_COUNTRY =&quot;EDIT&quot; then cmdITTD_COUNTRYEDIT_CLick
   if menuActionITTD_COUNTRY =&quot;DEL&quot; then cmdITTD_COUNTRYDEL_CLick
   if menuActionITTD_COUNTRY =&quot;RUN&quot; then cmdITTD_COUNTRYRUN_CLick
   if menuActionITTD_COUNTRY =&quot;REF&quot; then cmdITTD_COUNTRYREF_CLick
   if menuActionITTD_COUNTRY =&quot;PRN&quot; then cmdITTD_COUNTRYPRN_CLick
   if menuActionITTD_COUNTRY =&quot;CFG&quot; then cmdITTD_COUNTRYCFG_CLick
   if menuActionITTD_COUNTRY =&quot;FND&quot; then cmdITTD_COUNTRYFND_CLick
   if menuActionITTD_COUNTRY =&quot;ACC&quot; then cmdITTD_COUNTRYACC_CLick
   menuActionITTD_COUNTRY =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_COUNTRYAdd,cmdITTD_COUNTRYAdd.tag
  LoadBtnPictures cmdITTD_COUNTRYEdit,cmdITTD_COUNTRYEdit.tag
  LoadBtnPictures cmdITTD_COUNTRYDel,cmdITTD_COUNTRYDel.tag
  LoadBtnPictures cmdITTD_COUNTRYRef,cmdITTD_COUNTRYRef.tag
  LoadBtnPictures cmdITTD_COUNTRYPrn,cmdITTD_COUNTRYPrn.tag
  LoadBtnPictures cmdITTD_COUNTRYFnd,cmdITTD_COUNTRYFnd.tag
  LoadBtnPictures cmdITTD_COUNTRYRun,cmdITTD_COUNTRYRun.tag
  LoadBtnPictures cmdITTD_COUNTRYAcc,cmdITTD_COUNTRYAcc.tag
  LoadBtnPictures cmdITTD_COUNTRYCfg,cmdITTD_COUNTRYCfg.tag
  item.ITTD_COUNTRY.PrepareGrid gridITTD_COUNTRY
  LoadGridLayout gridITTD_COUNTRY
  Set fndITTD_COUNTRY = Nothing
  On Error Resume Next
  Set fndITTD_COUNTRY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_COUNTRY.Init gridITTD_COUNTRY
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_COUNTRY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_COUNTRY = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_CAMERA_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_CAMERA" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_CAMERA"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_CAMERA" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_CAMERA"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_CAMERAAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_CAMERAEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_CAMERADel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERADel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_CAMERARef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERARef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_CAMERAPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_CAMERACfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERACfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_CAMERAFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_CAMERARun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_CAMERARun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_CAMERAAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_CAMERA" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Холодильные камеры"/><Properties Name="Name" PropValue="mnuPopupITTD_CAMERA"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_CAMERAAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_CAMERAAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_CAMERAEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_CAMERAEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_CAMERADelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_CAMERADelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_CAMERAOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_CAMERAOpen"/></ControlData><ControlData Name="mnuITTD_CAMERARef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_CAMERARef"/></ControlData><ControlData Name="mnuITTD_CAMERAS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_CAMERAS1"/></ControlData><ControlData Name="mnuITTD_CAMERABuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_CAMERABuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_CAMERACOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_CAMERACOPY"/></ControlData><ControlData Name="mnuITTD_CAMERACUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_CAMERACUT"/></ControlData><ControlData Name="mnuITTD_CAMERAPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_CAMERAPASTE"/></ControlData><ControlData Name="mnuITTD_CAMERACHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACHANGE"/></ControlData><ControlData Name="mnuITTD_CAMERACLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_CAMERAPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_CAMERAPrn"/></ControlData><ControlData Name="mnuITTD_CAMERACfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACfg"/></ControlData><ControlData Name="mnuITTD_CAMERAFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_CAMERAFind"/></ControlData><ControlData Name="mnuITTD_CAMERAAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_CAMERAAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_CAMERA" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_CAMERA"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Холодильные камеры
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_CAMERA as object
private menuActionITTD_CAMERA as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_CAMERACfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_CAMERA,&quot;gridITTD_CAMERA&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_CAMERAPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_CAMERA,&quot;Холодильные камеры&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_CAMERARef_Click()
  on error resume next
  item.ITTD_CAMERA.Refresh
  gridITTD_CAMERA.itemCount = item.ITTD_CAMERA.count
  gridITTD_CAMERA.Refetch
  gridITTD_CAMERA.Refresh
End Sub
Private Sub cmdITTD_CAMERAAcc_Click()
On Error Resume Next
If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
If gridITTD_CAMERA.Row &gt; 0 Then
 If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_CAMERAEdit_Click()
  on error resume next
If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
If gridITTD_CAMERA.Row &gt; 0 then
 If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_CAMERA_main.Item = u
    again: frmITTD_CAMERA_main.NotFirstTime = False
    frmITTD_CAMERA_main.OnInit
    frmITTD_CAMERA_main.Show vbModal
    If frmITTD_CAMERA_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_CAMERA.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_CAMERADel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_CAMERAAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_CAMERA.Add()

      Set frmITTD_CAMERA_main.Item = u
      again: frmITTD_CAMERA_main.NotFirstTime = False
      frmITTD_CAMERA_main.OnInit
      frmITTD_CAMERA_main.Show vbModal
      If frmITTD_CAMERA_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_CAMERA.ItemCount = Item.ITTD_CAMERA.Count
        gridITTD_CAMERA.Refresh
        gridITTD_CAMERA.RefreshGroups
        gridITTD_CAMERA.Refreshsort
        gridITTD_CAMERA.MoveToBookmark u.ID &amp; &quot;ITTD_CAMERA&quot;
      Else
        Item.ITTD_CAMERA.Delete u.ID
        Item.ITTD_CAMERA.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_CAMERAFnd_Click()
  on error resume next
  fndITTD_CAMERA.ShowForm
End Sub
Private Sub cmdITTD_CAMERARun_Click()
  on error resume next
  gridITTD_CAMERA_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_CAMERA_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_CAMERA.LoadRow gridITTD_CAMERA, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_CAMERA_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_CAMERA_DblClick()
  cmdITTD_CAMERAEdit_Click
End Sub
Private Sub gridITTD_CAMERA_KeyPress(KeyAscii As Integer)
  If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_CAMERA.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_CAMERA_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_CAMERA.Row And LastRow &gt; 0 Then
  gridITTD_CAMERA.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_CAMERA.GetRowData(gridITTD_CAMERA.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_CAMERAPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_CAMERA.Add()
    If GetFromBuffer(u) Then
      gridITTD_CAMERA.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_CAMERA_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_CAMERACfg_Click
        End If
    End If
end sub

private sub gridITTD_CAMERA_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_CAMERA
End If
end sub
private sub mnuITTD_CAMERAAdd_click()
   menuActionITTD_CAMERA =&quot;ADD&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAEdit_click()
   menuActionITTD_CAMERA =&quot;EDIT&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERADelete_click()
   menuActionITTD_CAMERA =&quot;DEL&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAOpen_click()
   menuActionITTD_CAMERA =&quot;RUN&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERARef_click()
   menuActionITTD_CAMERA =&quot;REF&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
  Private Sub mnuITTD_CAMERACOPY_Click()
    On Error Resume Next
    If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
    If gridITTD_CAMERA.Row &gt; 0 Then
     If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_CAMERACUT_Click()
    On Error Resume Next
    If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
    If gridITTD_CAMERA.Row &gt; 0 Then
     If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_CAMERA.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_CAMERACHANGE_Click()
  On Error Resume Next
  If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
  If gridITTD_CAMERA.Row &gt; 0 Then
   If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_CAMERA.ItemCount = u.parent.Count
      gridITTD_CAMERA.RefreshRowIndex gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_CAMERACLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_CAMERAPrn_click()
   menuActionITTD_CAMERA =&quot;PRN&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERACfg_click()
   menuActionITTD_CAMERA =&quot;CFG&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAFind_click()
   menuActionITTD_CAMERA =&quot;FND&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAAcc_click()
   menuActionITTD_CAMERA =&quot;ACC&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub menuTimerITTD_CAMERA_timer()
   menuTimerITTD_CAMERA.enabled = false
   if menuActionITTD_CAMERA =&quot;ADD&quot; then cmdITTD_CAMERAADD_CLick
   if menuActionITTD_CAMERA =&quot;EDIT&quot; then cmdITTD_CAMERAEDIT_CLick
   if menuActionITTD_CAMERA =&quot;DEL&quot; then cmdITTD_CAMERADEL_CLick
   if menuActionITTD_CAMERA =&quot;RUN&quot; then cmdITTD_CAMERARUN_CLick
   if menuActionITTD_CAMERA =&quot;REF&quot; then cmdITTD_CAMERAREF_CLick
   if menuActionITTD_CAMERA =&quot;PRN&quot; then cmdITTD_CAMERAPRN_CLick
   if menuActionITTD_CAMERA =&quot;CFG&quot; then cmdITTD_CAMERACFG_CLick
   if menuActionITTD_CAMERA =&quot;FND&quot; then cmdITTD_CAMERAFND_CLick
   if menuActionITTD_CAMERA =&quot;ACC&quot; then cmdITTD_CAMERAACC_CLick
   menuActionITTD_CAMERA =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_CAMERAAdd,cmdITTD_CAMERAAdd.tag
  LoadBtnPictures cmdITTD_CAMERAEdit,cmdITTD_CAMERAEdit.tag
  LoadBtnPictures cmdITTD_CAMERADel,cmdITTD_CAMERADel.tag
  LoadBtnPictures cmdITTD_CAMERARef,cmdITTD_CAMERARef.tag
  LoadBtnPictures cmdITTD_CAMERAPrn,cmdITTD_CAMERAPrn.tag
  LoadBtnPictures cmdITTD_CAMERAFnd,cmdITTD_CAMERAFnd.tag
  LoadBtnPictures cmdITTD_CAMERARun,cmdITTD_CAMERARun.tag
  LoadBtnPictures cmdITTD_CAMERAAcc,cmdITTD_CAMERAAcc.tag
  LoadBtnPictures cmdITTD_CAMERACfg,cmdITTD_CAMERACfg.tag
  item.ITTD_CAMERA.PrepareGrid gridITTD_CAMERA
  LoadGridLayout gridITTD_CAMERA
  Set fndITTD_CAMERA = Nothing
  On Error Resume Next
  Set fndITTD_CAMERA = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_CAMERA.Init gridITTD_CAMERA
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_CAMERA.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_CAMERA.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_CAMERA.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_CAMERA = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_RULE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_RULE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_RULE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_RULE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_RULE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_RULEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_RULEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_RULEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_RULERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_RULEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_RULECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_RULEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_RULERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_RULERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_RULEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_RULE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Правило формирования партии"/><Properties Name="Name" PropValue="mnuPopupITTD_RULE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_RULEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_RULEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_RULEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_RULEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_RULEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_RULEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_RULEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_RULEOpen"/></ControlData><ControlData Name="mnuITTD_RULERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_RULERef"/></ControlData><ControlData Name="mnuITTD_RULES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_RULES1"/></ControlData><ControlData Name="mnuITTD_RULEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_RULEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_RULECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_RULECOPY"/></ControlData><ControlData Name="mnuITTD_RULECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_RULECUT"/></ControlData><ControlData Name="mnuITTD_RULEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_RULEPASTE"/></ControlData><ControlData Name="mnuITTD_RULECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_RULECHANGE"/></ControlData><ControlData Name="mnuITTD_RULECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_RULECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_RULEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_RULEPrn"/></ControlData><ControlData Name="mnuITTD_RULECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_RULECfg"/></ControlData><ControlData Name="mnuITTD_RULEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_RULEFind"/></ControlData><ControlData Name="mnuITTD_RULEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_RULEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_RULE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_RULE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Правило по которому зполняются обязательные поля и составляется код партии
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_RULE as object
private menuActionITTD_RULE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_RULECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_RULE,&quot;gridITTD_RULE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_RULEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_RULE,&quot;Правило формирования партии&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_RULERef_Click()
  on error resume next
  item.ITTD_RULE.Refresh
  gridITTD_RULE.itemCount = item.ITTD_RULE.count
  gridITTD_RULE.Refetch
  gridITTD_RULE.Refresh
End Sub
Private Sub cmdITTD_RULEAcc_Click()
On Error Resume Next
If gridITTD_RULE.ItemCount = 0 Then Exit Sub
If gridITTD_RULE.Row &gt; 0 Then
 If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_RULEEdit_Click()
  on error resume next
If gridITTD_RULE.ItemCount = 0 Then Exit Sub
If gridITTD_RULE.Row &gt; 0 then
 If gridITTD_RULE.RowIndex(gridITTD_RULE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_RULE_main.Item = u
    again: frmITTD_RULE_main.NotFirstTime = False
    frmITTD_RULE_main.OnInit
    frmITTD_RULE_main.Show vbModal
    If frmITTD_RULE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_RULE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_RULEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_RULEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_RULE.Add()

      Set frmITTD_RULE_main.Item = u
      again: frmITTD_RULE_main.NotFirstTime = False
      frmITTD_RULE_main.OnInit
      frmITTD_RULE_main.Show vbModal
      If frmITTD_RULE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_RULE.ItemCount = Item.ITTD_RULE.Count
        gridITTD_RULE.Refresh
        gridITTD_RULE.RefreshGroups
        gridITTD_RULE.Refreshsort
        gridITTD_RULE.MoveToBookmark u.ID &amp; &quot;ITTD_RULE&quot;
      Else
        Item.ITTD_RULE.Delete u.ID
        Item.ITTD_RULE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_RULEFnd_Click()
  on error resume next
  fndITTD_RULE.ShowForm
End Sub
Private Sub cmdITTD_RULERun_Click()
  on error resume next
  gridITTD_RULE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_RULE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_RULE.LoadRow gridITTD_RULE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_RULE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_RULE_DblClick()
  cmdITTD_RULEEdit_Click
End Sub
Private Sub gridITTD_RULE_KeyPress(KeyAscii As Integer)
  If gridITTD_RULE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_RULE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_RULE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_RULE.Row And LastRow &gt; 0 Then
  gridITTD_RULE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_RULE.GetRowData(gridITTD_RULE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_RULEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_RULE.Add()
    If GetFromBuffer(u) Then
      gridITTD_RULE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_RULE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_RULECfg_Click
        End If
    End If
end sub

private sub gridITTD_RULE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_RULE
End If
end sub
private sub mnuITTD_RULEAdd_click()
   menuActionITTD_RULE =&quot;ADD&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEEdit_click()
   menuActionITTD_RULE =&quot;EDIT&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEDelete_click()
   menuActionITTD_RULE =&quot;DEL&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEOpen_click()
   menuActionITTD_RULE =&quot;RUN&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULERef_click()
   menuActionITTD_RULE =&quot;REF&quot;
   menuTimerITTD_RULE.enabled = true
end sub
  Private Sub mnuITTD_RULECOPY_Click()
    On Error Resume Next
    If gridITTD_RULE.ItemCount = 0 Then Exit Sub
    If gridITTD_RULE.Row &gt; 0 Then
     If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_RULECUT_Click()
    On Error Resume Next
    If gridITTD_RULE.ItemCount = 0 Then Exit Sub
    If gridITTD_RULE.Row &gt; 0 Then
     If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_RULE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_RULECHANGE_Click()
  On Error Resume Next
  If gridITTD_RULE.ItemCount = 0 Then Exit Sub
  If gridITTD_RULE.Row &gt; 0 Then
   If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_RULE.ItemCount = u.parent.Count
      gridITTD_RULE.RefreshRowIndex gridITTD_RULE.RowIndex(gridITTD_RULE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_RULECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_RULEPrn_click()
   menuActionITTD_RULE =&quot;PRN&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULECfg_click()
   menuActionITTD_RULE =&quot;CFG&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEFind_click()
   menuActionITTD_RULE =&quot;FND&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEAcc_click()
   menuActionITTD_RULE =&quot;ACC&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub menuTimerITTD_RULE_timer()
   menuTimerITTD_RULE.enabled = false
   if menuActionITTD_RULE =&quot;ADD&quot; then cmdITTD_RULEADD_CLick
   if menuActionITTD_RULE =&quot;EDIT&quot; then cmdITTD_RULEEDIT_CLick
   if menuActionITTD_RULE =&quot;DEL&quot; then cmdITTD_RULEDEL_CLick
   if menuActionITTD_RULE =&quot;RUN&quot; then cmdITTD_RULERUN_CLick
   if menuActionITTD_RULE =&quot;REF&quot; then cmdITTD_RULEREF_CLick
   if menuActionITTD_RULE =&quot;PRN&quot; then cmdITTD_RULEPRN_CLick
   if menuActionITTD_RULE =&quot;CFG&quot; then cmdITTD_RULECFG_CLick
   if menuActionITTD_RULE =&quot;FND&quot; then cmdITTD_RULEFND_CLick
   if menuActionITTD_RULE =&quot;ACC&quot; then cmdITTD_RULEACC_CLick
   menuActionITTD_RULE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_RULEAdd,cmdITTD_RULEAdd.tag
  LoadBtnPictures cmdITTD_RULEEdit,cmdITTD_RULEEdit.tag
  LoadBtnPictures cmdITTD_RULEDel,cmdITTD_RULEDel.tag
  LoadBtnPictures cmdITTD_RULERef,cmdITTD_RULERef.tag
  LoadBtnPictures cmdITTD_RULEPrn,cmdITTD_RULEPrn.tag
  LoadBtnPictures cmdITTD_RULEFnd,cmdITTD_RULEFnd.tag
  LoadBtnPictures cmdITTD_RULERun,cmdITTD_RULERun.tag
  LoadBtnPictures cmdITTD_RULEAcc,cmdITTD_RULEAcc.tag
  LoadBtnPictures cmdITTD_RULECfg,cmdITTD_RULECfg.tag
  item.ITTD_RULE.PrepareGrid gridITTD_RULE
  LoadGridLayout gridITTD_RULE
  Set fndITTD_RULE = Nothing
  On Error Resume Next
  Set fndITTD_RULE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_RULE.Init gridITTD_RULE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_RULE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_RULE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_RULE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_RULE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_RULE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_RULE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_RULE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_RULE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_RULE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_RULE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_OPTTYPE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_OPTTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_OPTTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_OPTTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_OPTTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_OPTTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_OPTTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_OPTTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_OPTTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_OPTTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_OPTTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_OPTTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_OPTTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип оптимизации"/><Properties Name="Name" PropValue="mnuPopupITTD_OPTTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_OPTTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_OPTTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_OPTTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_OPTTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEOpen"/></ControlData><ControlData Name="mnuITTD_OPTTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPERef"/></ControlData><ControlData Name="mnuITTD_OPTTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPES1"/></ControlData><ControlData Name="mnuITTD_OPTTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_OPTTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECOPY"/></ControlData><ControlData Name="mnuITTD_OPTTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECUT"/></ControlData><ControlData Name="mnuITTD_OPTTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_OPTTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_OPTTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_OPTTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEPrn"/></ControlData><ControlData Name="mnuITTD_OPTTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECfg"/></ControlData><ControlData Name="mnuITTD_OPTTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEFind"/></ControlData><ControlData Name="mnuITTD_OPTTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_OPTTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Тип оптимизации склада
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_OPTTYPE as object
private menuActionITTD_OPTTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_OPTTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_OPTTYPE,&quot;gridITTD_OPTTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_OPTTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_OPTTYPE,&quot;Тип оптимизации&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_OPTTYPERef_Click()
  on error resume next
  item.ITTD_OPTTYPE.Refresh
  gridITTD_OPTTYPE.itemCount = item.ITTD_OPTTYPE.count
  gridITTD_OPTTYPE.Refetch
  gridITTD_OPTTYPE.Refresh
End Sub
Private Sub cmdITTD_OPTTYPEAcc_Click()
On Error Resume Next
If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_OPTTYPE.Row &gt; 0 Then
 If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_OPTTYPEEdit_Click()
  on error resume next
If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_OPTTYPE.Row &gt; 0 then
 If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_OPTTYPE_main.Item = u
    again: frmITTD_OPTTYPE_main.NotFirstTime = False
    frmITTD_OPTTYPE_main.OnInit
    frmITTD_OPTTYPE_main.Show vbModal
    If frmITTD_OPTTYPE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_OPTTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_OPTTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_OPTTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_OPTTYPE.Add()

      Set frmITTD_OPTTYPE_main.Item = u
      again: frmITTD_OPTTYPE_main.NotFirstTime = False
      frmITTD_OPTTYPE_main.OnInit
      frmITTD_OPTTYPE_main.Show vbModal
      If frmITTD_OPTTYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_OPTTYPE.ItemCount = Item.ITTD_OPTTYPE.Count
        gridITTD_OPTTYPE.Refresh
        gridITTD_OPTTYPE.RefreshGroups
        gridITTD_OPTTYPE.Refreshsort
        gridITTD_OPTTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_OPTTYPE&quot;
      Else
        Item.ITTD_OPTTYPE.Delete u.ID
        Item.ITTD_OPTTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_OPTTYPEFnd_Click()
  on error resume next
  fndITTD_OPTTYPE.ShowForm
End Sub
Private Sub cmdITTD_OPTTYPERun_Click()
  on error resume next
  gridITTD_OPTTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_OPTTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_OPTTYPE.LoadRow gridITTD_OPTTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_OPTTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_OPTTYPE_DblClick()
  cmdITTD_OPTTYPEEdit_Click
End Sub
Private Sub gridITTD_OPTTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_OPTTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_OPTTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_OPTTYPE.Row And LastRow &gt; 0 Then
  gridITTD_OPTTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_OPTTYPE.GetRowData(gridITTD_OPTTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_OPTTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_OPTTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_OPTTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_OPTTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_OPTTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_OPTTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_OPTTYPE
End If
end sub
private sub mnuITTD_OPTTYPEAdd_click()
   menuActionITTD_OPTTYPE =&quot;ADD&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEEdit_click()
   menuActionITTD_OPTTYPE =&quot;EDIT&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEDelete_click()
   menuActionITTD_OPTTYPE =&quot;DEL&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEOpen_click()
   menuActionITTD_OPTTYPE =&quot;RUN&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPERef_click()
   menuActionITTD_OPTTYPE =&quot;REF&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
  Private Sub mnuITTD_OPTTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_OPTTYPE.Row &gt; 0 Then
     If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_OPTTYPECUT_Click()
    On Error Resume Next
    If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_OPTTYPE.Row &gt; 0 Then
     If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_OPTTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_OPTTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_OPTTYPE.Row &gt; 0 Then
   If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_OPTTYPE.ItemCount = u.parent.Count
      gridITTD_OPTTYPE.RefreshRowIndex gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_OPTTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_OPTTYPEPrn_click()
   menuActionITTD_OPTTYPE =&quot;PRN&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPECfg_click()
   menuActionITTD_OPTTYPE =&quot;CFG&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEFind_click()
   menuActionITTD_OPTTYPE =&quot;FND&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEAcc_click()
   menuActionITTD_OPTTYPE =&quot;ACC&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub menuTimerITTD_OPTTYPE_timer()
   menuTimerITTD_OPTTYPE.enabled = false
   if menuActionITTD_OPTTYPE =&quot;ADD&quot; then cmdITTD_OPTTYPEADD_CLick
   if menuActionITTD_OPTTYPE =&quot;EDIT&quot; then cmdITTD_OPTTYPEEDIT_CLick
   if menuActionITTD_OPTTYPE =&quot;DEL&quot; then cmdITTD_OPTTYPEDEL_CLick
   if menuActionITTD_OPTTYPE =&quot;RUN&quot; then cmdITTD_OPTTYPERUN_CLick
   if menuActionITTD_OPTTYPE =&quot;REF&quot; then cmdITTD_OPTTYPEREF_CLick
   if menuActionITTD_OPTTYPE =&quot;PRN&quot; then cmdITTD_OPTTYPEPRN_CLick
   if menuActionITTD_OPTTYPE =&quot;CFG&quot; then cmdITTD_OPTTYPECFG_CLick
   if menuActionITTD_OPTTYPE =&quot;FND&quot; then cmdITTD_OPTTYPEFND_CLick
   if menuActionITTD_OPTTYPE =&quot;ACC&quot; then cmdITTD_OPTTYPEACC_CLick
   menuActionITTD_OPTTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_OPTTYPEAdd,cmdITTD_OPTTYPEAdd.tag
  LoadBtnPictures cmdITTD_OPTTYPEEdit,cmdITTD_OPTTYPEEdit.tag
  LoadBtnPictures cmdITTD_OPTTYPEDel,cmdITTD_OPTTYPEDel.tag
  LoadBtnPictures cmdITTD_OPTTYPERef,cmdITTD_OPTTYPERef.tag
  LoadBtnPictures cmdITTD_OPTTYPEPrn,cmdITTD_OPTTYPEPrn.tag
  LoadBtnPictures cmdITTD_OPTTYPEFnd,cmdITTD_OPTTYPEFnd.tag
  LoadBtnPictures cmdITTD_OPTTYPERun,cmdITTD_OPTTYPERun.tag
  LoadBtnPictures cmdITTD_OPTTYPEAcc,cmdITTD_OPTTYPEAcc.tag
  LoadBtnPictures cmdITTD_OPTTYPECfg,cmdITTD_OPTTYPECfg.tag
  item.ITTD_OPTTYPE.PrepareGrid gridITTD_OPTTYPE
  LoadGridLayout gridITTD_OPTTYPE
  Set fndITTD_OPTTYPE = Nothing
  On Error Resume Next
  Set fndITTD_OPTTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_OPTTYPE.Init gridITTD_OPTTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_OPTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_OPTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_OPTTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_OPTTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_MOROZ_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_MOROZ" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_MOROZ"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_MOROZ" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_MOROZ"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_MOROZAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_MOROZEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_MOROZDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_MOROZRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_MOROZPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_MOROZCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_MOROZFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_MOROZRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_MOROZRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_MOROZAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_MOROZ" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Параметры выморозки"/><Properties Name="Name" PropValue="mnuPopupITTD_MOROZ"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_MOROZAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_MOROZAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_MOROZEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_MOROZEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_MOROZDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_MOROZDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_MOROZOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_MOROZOpen"/></ControlData><ControlData Name="mnuITTD_MOROZRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_MOROZRef"/></ControlData><ControlData Name="mnuITTD_MOROZS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_MOROZS1"/></ControlData><ControlData Name="mnuITTD_MOROZBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_MOROZBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_MOROZCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_MOROZCOPY"/></ControlData><ControlData Name="mnuITTD_MOROZCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_MOROZCUT"/></ControlData><ControlData Name="mnuITTD_MOROZPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_MOROZPASTE"/></ControlData><ControlData Name="mnuITTD_MOROZCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCHANGE"/></ControlData><ControlData Name="mnuITTD_MOROZCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_MOROZPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_MOROZPrn"/></ControlData><ControlData Name="mnuITTD_MOROZCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCfg"/></ControlData><ControlData Name="mnuITTD_MOROZFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_MOROZFind"/></ControlData><ControlData Name="mnuITTD_MOROZAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_MOROZAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_MOROZ" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_MOROZ"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Параметры выморозки
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_MOROZ as object
private menuActionITTD_MOROZ as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_MOROZCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_MOROZ,&quot;gridITTD_MOROZ&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_MOROZPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_MOROZ,&quot;Параметры выморозки&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_MOROZRef_Click()
  on error resume next
  item.ITTD_MOROZ.Refresh
  gridITTD_MOROZ.itemCount = item.ITTD_MOROZ.count
  gridITTD_MOROZ.Refetch
  gridITTD_MOROZ.Refresh
End Sub
Private Sub cmdITTD_MOROZAcc_Click()
On Error Resume Next
If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
If gridITTD_MOROZ.Row &gt; 0 Then
 If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_MOROZEdit_Click()
  on error resume next
If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
If gridITTD_MOROZ.Row &gt; 0 then
 If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_MOROZ_main.Item = u
    again: frmITTD_MOROZ_main.NotFirstTime = False
    frmITTD_MOROZ_main.OnInit
    frmITTD_MOROZ_main.Show vbModal
    If frmITTD_MOROZ_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_MOROZ.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_MOROZDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_MOROZAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_MOROZ.Add()

      Set frmITTD_MOROZ_main.Item = u
      again: frmITTD_MOROZ_main.NotFirstTime = False
      frmITTD_MOROZ_main.OnInit
      frmITTD_MOROZ_main.Show vbModal
      If frmITTD_MOROZ_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_MOROZ.ItemCount = Item.ITTD_MOROZ.Count
        gridITTD_MOROZ.Refresh
        gridITTD_MOROZ.RefreshGroups
        gridITTD_MOROZ.Refreshsort
        gridITTD_MOROZ.MoveToBookmark u.ID &amp; &quot;ITTD_MOROZ&quot;
      Else
        Item.ITTD_MOROZ.Delete u.ID
        Item.ITTD_MOROZ.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_MOROZFnd_Click()
  on error resume next
  fndITTD_MOROZ.ShowForm
End Sub
Private Sub cmdITTD_MOROZRun_Click()
  on error resume next
  gridITTD_MOROZ_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_MOROZ_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_MOROZ.LoadRow gridITTD_MOROZ, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_MOROZ_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_MOROZ_DblClick()
  cmdITTD_MOROZEdit_Click
End Sub
Private Sub gridITTD_MOROZ_KeyPress(KeyAscii As Integer)
  If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_MOROZ.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_MOROZ_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_MOROZ.Row And LastRow &gt; 0 Then
  gridITTD_MOROZ.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_MOROZ.GetRowData(gridITTD_MOROZ.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_MOROZPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_MOROZ.Add()
    If GetFromBuffer(u) Then
      gridITTD_MOROZ.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_MOROZ_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_MOROZCfg_Click
        End If
    End If
end sub

private sub gridITTD_MOROZ_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_MOROZ
End If
end sub
private sub mnuITTD_MOROZAdd_click()
   menuActionITTD_MOROZ =&quot;ADD&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZEdit_click()
   menuActionITTD_MOROZ =&quot;EDIT&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZDelete_click()
   menuActionITTD_MOROZ =&quot;DEL&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZOpen_click()
   menuActionITTD_MOROZ =&quot;RUN&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZRef_click()
   menuActionITTD_MOROZ =&quot;REF&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
  Private Sub mnuITTD_MOROZCOPY_Click()
    On Error Resume Next
    If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
    If gridITTD_MOROZ.Row &gt; 0 Then
     If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_MOROZCUT_Click()
    On Error Resume Next
    If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
    If gridITTD_MOROZ.Row &gt; 0 Then
     If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_MOROZ.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_MOROZCHANGE_Click()
  On Error Resume Next
  If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
  If gridITTD_MOROZ.Row &gt; 0 Then
   If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_MOROZ.ItemCount = u.parent.Count
      gridITTD_MOROZ.RefreshRowIndex gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_MOROZCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_MOROZPrn_click()
   menuActionITTD_MOROZ =&quot;PRN&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZCfg_click()
   menuActionITTD_MOROZ =&quot;CFG&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZFind_click()
   menuActionITTD_MOROZ =&quot;FND&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZAcc_click()
   menuActionITTD_MOROZ =&quot;ACC&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub menuTimerITTD_MOROZ_timer()
   menuTimerITTD_MOROZ.enabled = false
   if menuActionITTD_MOROZ =&quot;ADD&quot; then cmdITTD_MOROZADD_CLick
   if menuActionITTD_MOROZ =&quot;EDIT&quot; then cmdITTD_MOROZEDIT_CLick
   if menuActionITTD_MOROZ =&quot;DEL&quot; then cmdITTD_MOROZDEL_CLick
   if menuActionITTD_MOROZ =&quot;RUN&quot; then cmdITTD_MOROZRUN_CLick
   if menuActionITTD_MOROZ =&quot;REF&quot; then cmdITTD_MOROZREF_CLick
   if menuActionITTD_MOROZ =&quot;PRN&quot; then cmdITTD_MOROZPRN_CLick
   if menuActionITTD_MOROZ =&quot;CFG&quot; then cmdITTD_MOROZCFG_CLick
   if menuActionITTD_MOROZ =&quot;FND&quot; then cmdITTD_MOROZFND_CLick
   if menuActionITTD_MOROZ =&quot;ACC&quot; then cmdITTD_MOROZACC_CLick
   menuActionITTD_MOROZ =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_MOROZAdd,cmdITTD_MOROZAdd.tag
  LoadBtnPictures cmdITTD_MOROZEdit,cmdITTD_MOROZEdit.tag
  LoadBtnPictures cmdITTD_MOROZDel,cmdITTD_MOROZDel.tag
  LoadBtnPictures cmdITTD_MOROZRef,cmdITTD_MOROZRef.tag
  LoadBtnPictures cmdITTD_MOROZPrn,cmdITTD_MOROZPrn.tag
  LoadBtnPictures cmdITTD_MOROZFnd,cmdITTD_MOROZFnd.tag
  LoadBtnPictures cmdITTD_MOROZRun,cmdITTD_MOROZRun.tag
  LoadBtnPictures cmdITTD_MOROZAcc,cmdITTD_MOROZAcc.tag
  LoadBtnPictures cmdITTD_MOROZCfg,cmdITTD_MOROZCfg.tag
  item.ITTD_MOROZ.PrepareGrid gridITTD_MOROZ
  LoadGridLayout gridITTD_MOROZ
  Set fndITTD_MOROZ = Nothing
  On Error Resume Next
  Set fndITTD_MOROZ = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_MOROZ.Init gridITTD_MOROZ
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_MOROZ.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_MOROZ.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_MOROZ.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_MOROZ = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_EMAIL_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_EMAIL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_EMAIL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_EMAIL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_EMAIL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_EMAILAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_EMAILEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_EMAILDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_EMAILRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_EMAILPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_EMAILCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_EMAILFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_EMAILRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_EMAILRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_EMAILAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_EMAIL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Почтовые адреса"/><Properties Name="Name" PropValue="mnuPopupITTD_EMAIL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_EMAILAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_EMAILAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_EMAILEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_EMAILEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_EMAILDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_EMAILDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_EMAILOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_EMAILOpen"/></ControlData><ControlData Name="mnuITTD_EMAILRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_EMAILRef"/></ControlData><ControlData Name="mnuITTD_EMAILS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_EMAILS1"/></ControlData><ControlData Name="mnuITTD_EMAILBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_EMAILBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_EMAILCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_EMAILCOPY"/></ControlData><ControlData Name="mnuITTD_EMAILCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_EMAILCUT"/></ControlData><ControlData Name="mnuITTD_EMAILPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_EMAILPASTE"/></ControlData><ControlData Name="mnuITTD_EMAILCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCHANGE"/></ControlData><ControlData Name="mnuITTD_EMAILCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_EMAILPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_EMAILPrn"/></ControlData><ControlData Name="mnuITTD_EMAILCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCfg"/></ControlData><ControlData Name="mnuITTD_EMAILFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_EMAILFind"/></ControlData><ControlData Name="mnuITTD_EMAILAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_EMAILAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_EMAIL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_EMAIL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Адреса получателей информации о выморозке
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_EMAIL as object
private menuActionITTD_EMAIL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_EMAILCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_EMAIL,&quot;gridITTD_EMAIL&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_EMAILPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_EMAIL,&quot;Почтовые адреса&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_EMAILRef_Click()
  on error resume next
  item.ITTD_EMAIL.Refresh
  gridITTD_EMAIL.itemCount = item.ITTD_EMAIL.count
  gridITTD_EMAIL.Refetch
  gridITTD_EMAIL.Refresh
End Sub
Private Sub cmdITTD_EMAILAcc_Click()
On Error Resume Next
If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
If gridITTD_EMAIL.Row &gt; 0 Then
 If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_EMAILEdit_Click()
  on error resume next
If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
If gridITTD_EMAIL.Row &gt; 0 then
 If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_EMAIL_main.Item = u
    again: frmITTD_EMAIL_main.NotFirstTime = False
    frmITTD_EMAIL_main.OnInit
    frmITTD_EMAIL_main.Show vbModal
    If frmITTD_EMAIL_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_EMAIL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_EMAILDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_EMAILAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_EMAIL.Add()

      Set frmITTD_EMAIL_main.Item = u
      again: frmITTD_EMAIL_main.NotFirstTime = False
      frmITTD_EMAIL_main.OnInit
      frmITTD_EMAIL_main.Show vbModal
      If frmITTD_EMAIL_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_EMAIL.ItemCount = Item.ITTD_EMAIL.Count
        gridITTD_EMAIL.Refresh
        gridITTD_EMAIL.RefreshGroups
        gridITTD_EMAIL.Refreshsort
        gridITTD_EMAIL.MoveToBookmark u.ID &amp; &quot;ITTD_EMAIL&quot;
      Else
        Item.ITTD_EMAIL.Delete u.ID
        Item.ITTD_EMAIL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_EMAILFnd_Click()
  on error resume next
  fndITTD_EMAIL.ShowForm
End Sub
Private Sub cmdITTD_EMAILRun_Click()
  on error resume next
  gridITTD_EMAIL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_EMAIL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_EMAIL.LoadRow gridITTD_EMAIL, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_EMAIL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_EMAIL_DblClick()
  cmdITTD_EMAILEdit_Click
End Sub
Private Sub gridITTD_EMAIL_KeyPress(KeyAscii As Integer)
  If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_EMAIL.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_EMAIL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_EMAIL.Row And LastRow &gt; 0 Then
  gridITTD_EMAIL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_EMAIL.GetRowData(gridITTD_EMAIL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_EMAILPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_EMAIL.Add()
    If GetFromBuffer(u) Then
      gridITTD_EMAIL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_EMAIL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_EMAILCfg_Click
        End If
    End If
end sub

private sub gridITTD_EMAIL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_EMAIL
End If
end sub
private sub mnuITTD_EMAILAdd_click()
   menuActionITTD_EMAIL =&quot;ADD&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILEdit_click()
   menuActionITTD_EMAIL =&quot;EDIT&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILDelete_click()
   menuActionITTD_EMAIL =&quot;DEL&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILOpen_click()
   menuActionITTD_EMAIL =&quot;RUN&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILRef_click()
   menuActionITTD_EMAIL =&quot;REF&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
  Private Sub mnuITTD_EMAILCOPY_Click()
    On Error Resume Next
    If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
    If gridITTD_EMAIL.Row &gt; 0 Then
     If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_EMAILCUT_Click()
    On Error Resume Next
    If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
    If gridITTD_EMAIL.Row &gt; 0 Then
     If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_EMAIL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_EMAILCHANGE_Click()
  On Error Resume Next
  If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
  If gridITTD_EMAIL.Row &gt; 0 Then
   If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_EMAIL.ItemCount = u.parent.Count
      gridITTD_EMAIL.RefreshRowIndex gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_EMAILCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_EMAILPrn_click()
   menuActionITTD_EMAIL =&quot;PRN&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILCfg_click()
   menuActionITTD_EMAIL =&quot;CFG&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILFind_click()
   menuActionITTD_EMAIL =&quot;FND&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILAcc_click()
   menuActionITTD_EMAIL =&quot;ACC&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub menuTimerITTD_EMAIL_timer()
   menuTimerITTD_EMAIL.enabled = false
   if menuActionITTD_EMAIL =&quot;ADD&quot; then cmdITTD_EMAILADD_CLick
   if menuActionITTD_EMAIL =&quot;EDIT&quot; then cmdITTD_EMAILEDIT_CLick
   if menuActionITTD_EMAIL =&quot;DEL&quot; then cmdITTD_EMAILDEL_CLick
   if menuActionITTD_EMAIL =&quot;RUN&quot; then cmdITTD_EMAILRUN_CLick
   if menuActionITTD_EMAIL =&quot;REF&quot; then cmdITTD_EMAILREF_CLick
   if menuActionITTD_EMAIL =&quot;PRN&quot; then cmdITTD_EMAILPRN_CLick
   if menuActionITTD_EMAIL =&quot;CFG&quot; then cmdITTD_EMAILCFG_CLick
   if menuActionITTD_EMAIL =&quot;FND&quot; then cmdITTD_EMAILFND_CLick
   if menuActionITTD_EMAIL =&quot;ACC&quot; then cmdITTD_EMAILACC_CLick
   menuActionITTD_EMAIL =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_EMAILAdd,cmdITTD_EMAILAdd.tag
  LoadBtnPictures cmdITTD_EMAILEdit,cmdITTD_EMAILEdit.tag
  LoadBtnPictures cmdITTD_EMAILDel,cmdITTD_EMAILDel.tag
  LoadBtnPictures cmdITTD_EMAILRef,cmdITTD_EMAILRef.tag
  LoadBtnPictures cmdITTD_EMAILPrn,cmdITTD_EMAILPrn.tag
  LoadBtnPictures cmdITTD_EMAILFnd,cmdITTD_EMAILFnd.tag
  LoadBtnPictures cmdITTD_EMAILRun,cmdITTD_EMAILRun.tag
  LoadBtnPictures cmdITTD_EMAILAcc,cmdITTD_EMAILAcc.tag
  LoadBtnPictures cmdITTD_EMAILCfg,cmdITTD_EMAILCfg.tag
  item.ITTD_EMAIL.PrepareGrid gridITTD_EMAIL
  LoadGridLayout gridITTD_EMAIL
  Set fndITTD_EMAIL = Nothing
  On Error Resume Next
  Set fndITTD_EMAIL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_EMAIL.Init gridITTD_EMAIL
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_EMAIL.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_EMAIL.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_EMAIL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_EMAIL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlmain_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_GTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_GTYPE_main"><Properties Name="Name" PropValue="pnlITTD_GTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_ZTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_ZTYPE_main"><Properties Name="Name" PropValue="pnlITTD_ZTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_PLTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_PLTYPE_main"><Properties Name="Name" PropValue="pnlITTD_PLTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_QTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_QTYPE_main"><Properties Name="Name" PropValue="pnlITTD_QTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_ATYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_ATYPE_main"><Properties Name="Name" PropValue="pnlITTD_ATYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_SRV" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_SRV_main"><Properties Name="Name" PropValue="pnlITTD_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_PART" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_PART_main"><Properties Name="Name" PropValue="pnlITTD_PART"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_FACTORY" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_FACTORY_main"><Properties Name="Name" PropValue="pnlITTD_FACTORY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_KILLPLACE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_KILLPLACE_main"><Properties Name="Name" PropValue="pnlITTD_KILLPLACE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_COUNTRY" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_COUNTRY_main"><Properties Name="Name" PropValue="pnlITTD_COUNTRY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_CAMERA" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_CAMERA_main"><Properties Name="Name" PropValue="pnlITTD_CAMERA"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_RULE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_RULE_main"><Properties Name="Name" PropValue="pnlITTD_RULE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_OPTTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_OPTTYPE_main"><Properties Name="Name" PropValue="pnlITTD_OPTTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_MOROZ" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_MOROZ_main"><Properties Name="Name" PropValue="pnlITTD_MOROZ"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_EMAIL" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_EMAIL_main"><Properties Name="Name" PropValue="pnlITTD_EMAIL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим main
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlITTD_GTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_ZTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_PLTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_QTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_ATYPE.IsOK
if IsItOk then IsItOk = pnlITTD_SRV.IsOK
if IsItOk then IsItOk = pnlITTD_PART.IsOK
if IsItOk then IsItOk = pnlITTD_FACTORY.IsOK
if IsItOk then IsItOk = pnlITTD_KILLPLACE.IsOK
if IsItOk then IsItOk = pnlITTD_COUNTRY.IsOK
if IsItOk then IsItOk = pnlITTD_CAMERA.IsOK
if IsItOk then IsItOk = pnlITTD_RULE.IsOK
if IsItOk then IsItOk = pnlITTD_OPTTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_MOROZ.IsOK
if IsItOk then IsItOk = pnlITTD_EMAIL.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlITTD_EMAIL.Visible = False
  pnlITTD_MOROZ.Visible = False
  pnlITTD_OPTTYPE.Visible = False
  pnlITTD_RULE.Visible = False
  pnlITTD_CAMERA.Visible = False
  pnlITTD_COUNTRY.Visible = False
  pnlITTD_KILLPLACE.Visible = False
  pnlITTD_FACTORY.Visible = False
  pnlITTD_PART.Visible = False
  pnlITTD_SRV.Visible = False
  pnlITTD_ATYPE.Visible = False
  pnlITTD_QTYPE.Visible = False
  pnlITTD_PLTYPE.Visible = False
  pnlITTD_ZTYPE.Visible = False
  pnlITTD_GTYPE.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ITTD_GTYPE&quot;
     With pnlITTD_GTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_GTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_ZTYPE&quot;
     With pnlITTD_ZTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_ZTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_PLTYPE&quot;
     With pnlITTD_PLTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_PLTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_QTYPE&quot;
     With pnlITTD_QTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_QTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_ATYPE&quot;
     With pnlITTD_ATYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_ATYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_SRV&quot;
     With pnlITTD_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_SRV.OnClick item,parentform
     End With
   Case &quot;ITTD_PART&quot;
     With pnlITTD_PART
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_PART.OnClick item,parentform
     End With
   Case &quot;ITTD_FACTORY&quot;
     With pnlITTD_FACTORY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_FACTORY.OnClick item,parentform
     End With
   Case &quot;ITTD_KILLPLACE&quot;
     With pnlITTD_KILLPLACE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_KILLPLACE.OnClick item,parentform
     End With
   Case &quot;ITTD_COUNTRY&quot;
     With pnlITTD_COUNTRY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_COUNTRY.OnClick item,parentform
     End With
   Case &quot;ITTD_CAMERA&quot;
     With pnlITTD_CAMERA
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_CAMERA.OnClick item,parentform
     End With
   Case &quot;ITTD_RULE&quot;
     With pnlITTD_RULE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_RULE.OnClick item,parentform
     End With
   Case &quot;ITTD_OPTTYPE&quot;
     With pnlITTD_OPTTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_OPTTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_MOROZ&quot;
     With pnlITTD_MOROZ
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_MOROZ.OnClick item,parentform
     End With
   Case &quot;ITTD_EMAIL&quot;
     With pnlITTD_EMAIL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_EMAIL.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Тип товара&quot;
ts.Tabs.Item(1).key = &quot;ITTD_GTYPE&quot;
pnlITTD_GTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_ZTYPE&quot;, &quot;Тип зоны&quot;)
pnlITTD_ZTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_PLTYPE&quot;, &quot;Тип палеты&quot;)
pnlITTD_PLTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_QTYPE&quot;, &quot;Тип заявки&quot;)
pnlITTD_QTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_ATYPE&quot;, &quot;Тип операции&quot;)
pnlITTD_ATYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_SRV&quot;, &quot;Услуги&quot;)
pnlITTD_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_PART&quot;, &quot;Партия товара&quot;)
pnlITTD_PART.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_FACTORY&quot;, &quot;Завод&quot;)
pnlITTD_FACTORY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_KILLPLACE&quot;, &quot;Бойня&quot;)
pnlITTD_KILLPLACE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_COUNTRY&quot;, &quot;Страна&quot;)
pnlITTD_COUNTRY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_CAMERA&quot;, &quot;Холодильные камеры&quot;)
pnlITTD_CAMERA.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_RULE&quot;, &quot;Правило формирования партии&quot;)
pnlITTD_RULE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_OPTTYPE&quot;, &quot;Тип оптимизации&quot;)
pnlITTD_OPTTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_MOROZ&quot;, &quot;Параметры выморозки&quot;)
pnlITTD_MOROZ.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_EMAIL&quot;, &quot;Почтовые адреса&quot;)
pnlITTD_EMAIL.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ITTD&quot;, &quot;ctlmain_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlITTD_GTYPE.CloseClass
 pnlITTD_ZTYPE.CloseClass
 pnlITTD_PLTYPE.CloseClass
 pnlITTD_QTYPE.CloseClass
 pnlITTD_ATYPE.CloseClass
 pnlITTD_SRV.CloseClass
 pnlITTD_PART.CloseClass
 pnlITTD_FACTORY.CloseClass
 pnlITTD_KILLPLACE.CloseClass
 pnlITTD_COUNTRY.CloseClass
 pnlITTD_CAMERA.CloseClass
 pnlITTD_RULE.CloseClass
 pnlITTD_OPTTYPE.CloseClass
 pnlITTD_MOROZ.CloseClass
 pnlITTD_EMAIL.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlITTD_GTYPE.OnSave
 pnlITTD_ZTYPE.OnSave
 pnlITTD_PLTYPE.OnSave
 pnlITTD_QTYPE.OnSave
 pnlITTD_ATYPE.OnSave
 pnlITTD_SRV.OnSave
 pnlITTD_PART.OnSave
 pnlITTD_FACTORY.OnSave
 pnlITTD_KILLPLACE.OnSave
 pnlITTD_COUNTRY.OnSave
 pnlITTD_CAMERA.OnSave
 pnlITTD_RULE.OnSave
 pnlITTD_OPTTYPE.OnSave
 pnlITTD_MOROZ.OnSave
 pnlITTD_EMAIL.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlITTD_GTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_ZTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_PLTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_QTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_ATYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_PART.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_FACTORY.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_KILLPLACE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_COUNTRY.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_CAMERA.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_RULE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_OPTTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_MOROZ.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_EMAIL.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmmain_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ITTDGUI.ctlmain_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим main
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_GTYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_GTYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип товара"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_GTYPE режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot;
  Open s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_ZTYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_ZTYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип зоны"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_ZTYPE режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot;
  Open s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_PLTYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_PLTYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип палеты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_PLTYPE режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot;
  Open s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_QTYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_QTYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип заявки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_QTYPE режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot;
  Open s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_ATYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_ATYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип операции"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_ATYPE режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot;
  Open s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_SRV_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_SRVadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Услуги"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_SRV режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot;
  Open s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_PART_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_PARTadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Партия товара"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_PART режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot;
  Open s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_FACTORY_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_FACTORYadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Завод"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_FACTORY режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot;
  Open s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_KILLPLACE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_KILLPLACEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Бойня"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_KILLPLACE режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot;
  Open s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_COUNTRY_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_COUNTRYadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Страна"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_COUNTRY режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot;
  Open s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_CAMERA_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_CAMERAadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Холодильные камеры"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Холодильные камеры"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_CAMERA режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot;
  Open s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_RULE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_RULEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Правило по которому зполняются обязательные поля и составляется код партии"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Правило формирования партии"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_RULE режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot;
  Open s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_OPTTYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_OPTTYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип оптимизации склада"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип оптимизации"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_OPTTYPE режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot;
  Open s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_MOROZ_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_MOROZadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Параметры выморозки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Параметры выморозки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_MOROZ режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot;
  Open s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_EMAIL_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_EMAILadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Адреса получателей информации о выморозке"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Почтовые адреса"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_EMAIL режим admi
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot;
  Open s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_GTYPE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_GTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_GTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_GTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_GTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_GTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_GTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_GTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_GTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_GTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_GTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_GTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_GTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_GTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_GTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_GTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип товара"/><Properties Name="Name" PropValue="mnuPopupITTD_GTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_GTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_GTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_GTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_GTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_GTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_GTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_GTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_GTYPEOpen"/></ControlData><ControlData Name="mnuITTD_GTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_GTYPERef"/></ControlData><ControlData Name="mnuITTD_GTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_GTYPES1"/></ControlData><ControlData Name="mnuITTD_GTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_GTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_GTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_GTYPECOPY"/></ControlData><ControlData Name="mnuITTD_GTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_GTYPECUT"/></ControlData><ControlData Name="mnuITTD_GTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_GTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_GTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_GTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_GTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_GTYPEPrn"/></ControlData><ControlData Name="mnuITTD_GTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECfg"/></ControlData><ControlData Name="mnuITTD_GTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_GTYPEFind"/></ControlData><ControlData Name="mnuITTD_GTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_GTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_GTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_GTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_GTYPE as object
private menuActionITTD_GTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_GTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_GTYPE,&quot;gridITTD_GTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_GTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_GTYPE,&quot;Тип товара&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_GTYPERef_Click()
  on error resume next
  item.ITTD_GTYPE.Refresh
  gridITTD_GTYPE.itemCount = item.ITTD_GTYPE.count
  gridITTD_GTYPE.Refetch
  gridITTD_GTYPE.Refresh
End Sub
Private Sub cmdITTD_GTYPEAcc_Click()
On Error Resume Next
If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_GTYPE.Row &gt; 0 Then
 If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_GTYPEEdit_Click()
  on error resume next
If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_GTYPE.Row &gt; 0 then
 If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_GTYPE_admi.Item = u
    again: frmITTD_GTYPE_admi.NotFirstTime = False
    frmITTD_GTYPE_admi.OnInit
    frmITTD_GTYPE_admi.Show vbModal
    If frmITTD_GTYPE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_GTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_GTYPEDel_Click()
  on error resume next
  gridITTD_GTYPE.Delete
End Sub
Private Sub cmdITTD_GTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_GTYPE.Add()

      Set frmITTD_GTYPE_admi.Item = u
      again: frmITTD_GTYPE_admi.NotFirstTime = False
      frmITTD_GTYPE_admi.OnInit
      frmITTD_GTYPE_admi.Show vbModal
      If frmITTD_GTYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_GTYPE.ItemCount = Item.ITTD_GTYPE.Count
        gridITTD_GTYPE.Refresh
        gridITTD_GTYPE.RefreshGroups
        gridITTD_GTYPE.Refreshsort
        gridITTD_GTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_GTYPE&quot;
      Else
        Item.ITTD_GTYPE.Delete u.ID
        Item.ITTD_GTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_GTYPEFnd_Click()
  on error resume next
  fndITTD_GTYPE.ShowForm
End Sub
Private Sub cmdITTD_GTYPERun_Click()
  on error resume next
  gridITTD_GTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_GTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_GTYPE.LoadRow gridITTD_GTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_GTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_GTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_GTYPE_DblClick()
  cmdITTD_GTYPEEdit_Click
End Sub
Private Sub gridITTD_GTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_GTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_GTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_GTYPE.Row And LastRow &gt; 0 Then
  gridITTD_GTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_GTYPE.GetRowData(gridITTD_GTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_GTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_GTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_GTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_GTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_GTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_GTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_GTYPE
End If
end sub
private sub mnuITTD_GTYPEAdd_click()
   menuActionITTD_GTYPE =&quot;ADD&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEEdit_click()
   menuActionITTD_GTYPE =&quot;EDIT&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEDelete_click()
   menuActionITTD_GTYPE =&quot;DEL&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEOpen_click()
   menuActionITTD_GTYPE =&quot;RUN&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPERef_click()
   menuActionITTD_GTYPE =&quot;REF&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
  Private Sub mnuITTD_GTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_GTYPE.Row &gt; 0 Then
     If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_GTYPECUT_Click()
    On Error Resume Next
    If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_GTYPE.Row &gt; 0 Then
     If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_GTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_GTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_GTYPE.Row &gt; 0 Then
   If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_GTYPE.ItemCount = u.parent.Count
      gridITTD_GTYPE.RefreshRowIndex gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_GTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_GTYPEPrn_click()
   menuActionITTD_GTYPE =&quot;PRN&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPECfg_click()
   menuActionITTD_GTYPE =&quot;CFG&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEFind_click()
   menuActionITTD_GTYPE =&quot;FND&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEAcc_click()
   menuActionITTD_GTYPE =&quot;ACC&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub menuTimerITTD_GTYPE_timer()
   menuTimerITTD_GTYPE.enabled = false
   if menuActionITTD_GTYPE =&quot;ADD&quot; then cmdITTD_GTYPEADD_CLick
   if menuActionITTD_GTYPE =&quot;EDIT&quot; then cmdITTD_GTYPEEDIT_CLick
   if menuActionITTD_GTYPE =&quot;DEL&quot; then cmdITTD_GTYPEDEL_CLick
   if menuActionITTD_GTYPE =&quot;RUN&quot; then cmdITTD_GTYPERUN_CLick
   if menuActionITTD_GTYPE =&quot;REF&quot; then cmdITTD_GTYPEREF_CLick
   if menuActionITTD_GTYPE =&quot;PRN&quot; then cmdITTD_GTYPEPRN_CLick
   if menuActionITTD_GTYPE =&quot;CFG&quot; then cmdITTD_GTYPECFG_CLick
   if menuActionITTD_GTYPE =&quot;FND&quot; then cmdITTD_GTYPEFND_CLick
   if menuActionITTD_GTYPE =&quot;ACC&quot; then cmdITTD_GTYPEACC_CLick
   menuActionITTD_GTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_GTYPEAdd,cmdITTD_GTYPEAdd.tag
  LoadBtnPictures cmdITTD_GTYPEEdit,cmdITTD_GTYPEEdit.tag
  LoadBtnPictures cmdITTD_GTYPEDel,cmdITTD_GTYPEDel.tag
  LoadBtnPictures cmdITTD_GTYPERef,cmdITTD_GTYPERef.tag
  LoadBtnPictures cmdITTD_GTYPEPrn,cmdITTD_GTYPEPrn.tag
  LoadBtnPictures cmdITTD_GTYPEFnd,cmdITTD_GTYPEFnd.tag
  LoadBtnPictures cmdITTD_GTYPERun,cmdITTD_GTYPERun.tag
  LoadBtnPictures cmdITTD_GTYPEAcc,cmdITTD_GTYPEAcc.tag
  LoadBtnPictures cmdITTD_GTYPECfg,cmdITTD_GTYPECfg.tag
  item.ITTD_GTYPE.PrepareGrid gridITTD_GTYPE
  LoadGridLayout gridITTD_GTYPE
  Set fndITTD_GTYPE = Nothing
  On Error Resume Next
  Set fndITTD_GTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_GTYPE.Init gridITTD_GTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_GTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_GTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_GTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_GTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_ZTYPE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_ZTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_ZTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_ZTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_ZTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_ZTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ZTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ZTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ZTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_ZTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_ZTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_ZTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_ZTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_ZTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_ZTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип зоны"/><Properties Name="Name" PropValue="mnuPopupITTD_ZTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_ZTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ZTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ZTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ZTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEOpen"/></ControlData><ControlData Name="mnuITTD_ZTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPERef"/></ControlData><ControlData Name="mnuITTD_ZTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_ZTYPES1"/></ControlData><ControlData Name="mnuITTD_ZTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_ZTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECOPY"/></ControlData><ControlData Name="mnuITTD_ZTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECUT"/></ControlData><ControlData Name="mnuITTD_ZTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_ZTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_ZTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_ZTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEPrn"/></ControlData><ControlData Name="mnuITTD_ZTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECfg"/></ControlData><ControlData Name="mnuITTD_ZTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEFind"/></ControlData><ControlData Name="mnuITTD_ZTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_ZTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_ZTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_ZTYPE as object
private menuActionITTD_ZTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_ZTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_ZTYPE,&quot;gridITTD_ZTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ZTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_ZTYPE,&quot;Тип зоны&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ZTYPERef_Click()
  on error resume next
  item.ITTD_ZTYPE.Refresh
  gridITTD_ZTYPE.itemCount = item.ITTD_ZTYPE.count
  gridITTD_ZTYPE.Refetch
  gridITTD_ZTYPE.Refresh
End Sub
Private Sub cmdITTD_ZTYPEAcc_Click()
On Error Resume Next
If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ZTYPE.Row &gt; 0 Then
 If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_ZTYPEEdit_Click()
  on error resume next
If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ZTYPE.Row &gt; 0 then
 If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_ZTYPE_admi.Item = u
    again: frmITTD_ZTYPE_admi.NotFirstTime = False
    frmITTD_ZTYPE_admi.OnInit
    frmITTD_ZTYPE_admi.Show vbModal
    If frmITTD_ZTYPE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_ZTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_ZTYPEDel_Click()
  on error resume next
  gridITTD_ZTYPE.Delete
End Sub
Private Sub cmdITTD_ZTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_ZTYPE.Add()

      Set frmITTD_ZTYPE_admi.Item = u
      again: frmITTD_ZTYPE_admi.NotFirstTime = False
      frmITTD_ZTYPE_admi.OnInit
      frmITTD_ZTYPE_admi.Show vbModal
      If frmITTD_ZTYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_ZTYPE.ItemCount = Item.ITTD_ZTYPE.Count
        gridITTD_ZTYPE.Refresh
        gridITTD_ZTYPE.RefreshGroups
        gridITTD_ZTYPE.Refreshsort
        gridITTD_ZTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_ZTYPE&quot;
      Else
        Item.ITTD_ZTYPE.Delete u.ID
        Item.ITTD_ZTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_ZTYPEFnd_Click()
  on error resume next
  fndITTD_ZTYPE.ShowForm
End Sub
Private Sub cmdITTD_ZTYPERun_Click()
  on error resume next
  gridITTD_ZTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_ZTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_ZTYPE.LoadRow gridITTD_ZTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_ZTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_ZTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_ZTYPE_DblClick()
  cmdITTD_ZTYPEEdit_Click
End Sub
Private Sub gridITTD_ZTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_ZTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_ZTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_ZTYPE.Row And LastRow &gt; 0 Then
  gridITTD_ZTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_ZTYPE.GetRowData(gridITTD_ZTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_ZTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_ZTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_ZTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_ZTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_ZTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_ZTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_ZTYPE
End If
end sub
private sub mnuITTD_ZTYPEAdd_click()
   menuActionITTD_ZTYPE =&quot;ADD&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEEdit_click()
   menuActionITTD_ZTYPE =&quot;EDIT&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEDelete_click()
   menuActionITTD_ZTYPE =&quot;DEL&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEOpen_click()
   menuActionITTD_ZTYPE =&quot;RUN&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPERef_click()
   menuActionITTD_ZTYPE =&quot;REF&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
  Private Sub mnuITTD_ZTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ZTYPE.Row &gt; 0 Then
     If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_ZTYPECUT_Click()
    On Error Resume Next
    If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ZTYPE.Row &gt; 0 Then
     If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_ZTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_ZTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_ZTYPE.Row &gt; 0 Then
   If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_ZTYPE.ItemCount = u.parent.Count
      gridITTD_ZTYPE.RefreshRowIndex gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_ZTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_ZTYPEPrn_click()
   menuActionITTD_ZTYPE =&quot;PRN&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPECfg_click()
   menuActionITTD_ZTYPE =&quot;CFG&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEFind_click()
   menuActionITTD_ZTYPE =&quot;FND&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEAcc_click()
   menuActionITTD_ZTYPE =&quot;ACC&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub menuTimerITTD_ZTYPE_timer()
   menuTimerITTD_ZTYPE.enabled = false
   if menuActionITTD_ZTYPE =&quot;ADD&quot; then cmdITTD_ZTYPEADD_CLick
   if menuActionITTD_ZTYPE =&quot;EDIT&quot; then cmdITTD_ZTYPEEDIT_CLick
   if menuActionITTD_ZTYPE =&quot;DEL&quot; then cmdITTD_ZTYPEDEL_CLick
   if menuActionITTD_ZTYPE =&quot;RUN&quot; then cmdITTD_ZTYPERUN_CLick
   if menuActionITTD_ZTYPE =&quot;REF&quot; then cmdITTD_ZTYPEREF_CLick
   if menuActionITTD_ZTYPE =&quot;PRN&quot; then cmdITTD_ZTYPEPRN_CLick
   if menuActionITTD_ZTYPE =&quot;CFG&quot; then cmdITTD_ZTYPECFG_CLick
   if menuActionITTD_ZTYPE =&quot;FND&quot; then cmdITTD_ZTYPEFND_CLick
   if menuActionITTD_ZTYPE =&quot;ACC&quot; then cmdITTD_ZTYPEACC_CLick
   menuActionITTD_ZTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_ZTYPEAdd,cmdITTD_ZTYPEAdd.tag
  LoadBtnPictures cmdITTD_ZTYPEEdit,cmdITTD_ZTYPEEdit.tag
  LoadBtnPictures cmdITTD_ZTYPEDel,cmdITTD_ZTYPEDel.tag
  LoadBtnPictures cmdITTD_ZTYPERef,cmdITTD_ZTYPERef.tag
  LoadBtnPictures cmdITTD_ZTYPEPrn,cmdITTD_ZTYPEPrn.tag
  LoadBtnPictures cmdITTD_ZTYPEFnd,cmdITTD_ZTYPEFnd.tag
  LoadBtnPictures cmdITTD_ZTYPERun,cmdITTD_ZTYPERun.tag
  LoadBtnPictures cmdITTD_ZTYPEAcc,cmdITTD_ZTYPEAcc.tag
  LoadBtnPictures cmdITTD_ZTYPECfg,cmdITTD_ZTYPECfg.tag
  item.ITTD_ZTYPE.PrepareGrid gridITTD_ZTYPE
  LoadGridLayout gridITTD_ZTYPE
  Set fndITTD_ZTYPE = Nothing
  On Error Resume Next
  Set fndITTD_ZTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_ZTYPE.Init gridITTD_ZTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_ZTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_ZTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_ZTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_ZTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_PLTYPE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_PLTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_PLTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_PLTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_PLTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_PLTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PLTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PLTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PLTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_PLTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_PLTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_PLTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_PLTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_PLTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_PLTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип палеты"/><Properties Name="Name" PropValue="mnuPopupITTD_PLTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_PLTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PLTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PLTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PLTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEOpen"/></ControlData><ControlData Name="mnuITTD_PLTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPERef"/></ControlData><ControlData Name="mnuITTD_PLTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_PLTYPES1"/></ControlData><ControlData Name="mnuITTD_PLTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_PLTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECOPY"/></ControlData><ControlData Name="mnuITTD_PLTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECUT"/></ControlData><ControlData Name="mnuITTD_PLTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_PLTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_PLTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_PLTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEPrn"/></ControlData><ControlData Name="mnuITTD_PLTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECfg"/></ControlData><ControlData Name="mnuITTD_PLTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEFind"/></ControlData><ControlData Name="mnuITTD_PLTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_PLTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_PLTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_PLTYPE as object
private menuActionITTD_PLTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_PLTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_PLTYPE,&quot;gridITTD_PLTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PLTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_PLTYPE,&quot;Тип палеты&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PLTYPERef_Click()
  on error resume next
  item.ITTD_PLTYPE.Refresh
  gridITTD_PLTYPE.itemCount = item.ITTD_PLTYPE.count
  gridITTD_PLTYPE.Refetch
  gridITTD_PLTYPE.Refresh
End Sub
Private Sub cmdITTD_PLTYPEAcc_Click()
On Error Resume Next
If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_PLTYPE.Row &gt; 0 Then
 If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_PLTYPEEdit_Click()
  on error resume next
If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_PLTYPE.Row &gt; 0 then
 If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_PLTYPE_admi.Item = u
    again: frmITTD_PLTYPE_admi.NotFirstTime = False
    frmITTD_PLTYPE_admi.OnInit
    frmITTD_PLTYPE_admi.Show vbModal
    If frmITTD_PLTYPE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_PLTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_PLTYPEDel_Click()
  on error resume next
  gridITTD_PLTYPE.Delete
End Sub
Private Sub cmdITTD_PLTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_PLTYPE.Add()

      Set frmITTD_PLTYPE_admi.Item = u
      again: frmITTD_PLTYPE_admi.NotFirstTime = False
      frmITTD_PLTYPE_admi.OnInit
      frmITTD_PLTYPE_admi.Show vbModal
      If frmITTD_PLTYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_PLTYPE.ItemCount = Item.ITTD_PLTYPE.Count
        gridITTD_PLTYPE.Refresh
        gridITTD_PLTYPE.RefreshGroups
        gridITTD_PLTYPE.Refreshsort
        gridITTD_PLTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_PLTYPE&quot;
      Else
        Item.ITTD_PLTYPE.Delete u.ID
        Item.ITTD_PLTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_PLTYPEFnd_Click()
  on error resume next
  fndITTD_PLTYPE.ShowForm
End Sub
Private Sub cmdITTD_PLTYPERun_Click()
  on error resume next
  gridITTD_PLTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_PLTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_PLTYPE.LoadRow gridITTD_PLTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_PLTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_PLTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_PLTYPE_DblClick()
  cmdITTD_PLTYPEEdit_Click
End Sub
Private Sub gridITTD_PLTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_PLTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_PLTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_PLTYPE.Row And LastRow &gt; 0 Then
  gridITTD_PLTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_PLTYPE.GetRowData(gridITTD_PLTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_PLTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_PLTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_PLTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_PLTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_PLTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_PLTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_PLTYPE
End If
end sub
private sub mnuITTD_PLTYPEAdd_click()
   menuActionITTD_PLTYPE =&quot;ADD&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEEdit_click()
   menuActionITTD_PLTYPE =&quot;EDIT&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEDelete_click()
   menuActionITTD_PLTYPE =&quot;DEL&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEOpen_click()
   menuActionITTD_PLTYPE =&quot;RUN&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPERef_click()
   menuActionITTD_PLTYPE =&quot;REF&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
  Private Sub mnuITTD_PLTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_PLTYPE.Row &gt; 0 Then
     If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_PLTYPECUT_Click()
    On Error Resume Next
    If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_PLTYPE.Row &gt; 0 Then
     If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_PLTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_PLTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_PLTYPE.Row &gt; 0 Then
   If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_PLTYPE.ItemCount = u.parent.Count
      gridITTD_PLTYPE.RefreshRowIndex gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_PLTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_PLTYPEPrn_click()
   menuActionITTD_PLTYPE =&quot;PRN&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPECfg_click()
   menuActionITTD_PLTYPE =&quot;CFG&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEFind_click()
   menuActionITTD_PLTYPE =&quot;FND&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEAcc_click()
   menuActionITTD_PLTYPE =&quot;ACC&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub menuTimerITTD_PLTYPE_timer()
   menuTimerITTD_PLTYPE.enabled = false
   if menuActionITTD_PLTYPE =&quot;ADD&quot; then cmdITTD_PLTYPEADD_CLick
   if menuActionITTD_PLTYPE =&quot;EDIT&quot; then cmdITTD_PLTYPEEDIT_CLick
   if menuActionITTD_PLTYPE =&quot;DEL&quot; then cmdITTD_PLTYPEDEL_CLick
   if menuActionITTD_PLTYPE =&quot;RUN&quot; then cmdITTD_PLTYPERUN_CLick
   if menuActionITTD_PLTYPE =&quot;REF&quot; then cmdITTD_PLTYPEREF_CLick
   if menuActionITTD_PLTYPE =&quot;PRN&quot; then cmdITTD_PLTYPEPRN_CLick
   if menuActionITTD_PLTYPE =&quot;CFG&quot; then cmdITTD_PLTYPECFG_CLick
   if menuActionITTD_PLTYPE =&quot;FND&quot; then cmdITTD_PLTYPEFND_CLick
   if menuActionITTD_PLTYPE =&quot;ACC&quot; then cmdITTD_PLTYPEACC_CLick
   menuActionITTD_PLTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_PLTYPEAdd,cmdITTD_PLTYPEAdd.tag
  LoadBtnPictures cmdITTD_PLTYPEEdit,cmdITTD_PLTYPEEdit.tag
  LoadBtnPictures cmdITTD_PLTYPEDel,cmdITTD_PLTYPEDel.tag
  LoadBtnPictures cmdITTD_PLTYPERef,cmdITTD_PLTYPERef.tag
  LoadBtnPictures cmdITTD_PLTYPEPrn,cmdITTD_PLTYPEPrn.tag
  LoadBtnPictures cmdITTD_PLTYPEFnd,cmdITTD_PLTYPEFnd.tag
  LoadBtnPictures cmdITTD_PLTYPERun,cmdITTD_PLTYPERun.tag
  LoadBtnPictures cmdITTD_PLTYPEAcc,cmdITTD_PLTYPEAcc.tag
  LoadBtnPictures cmdITTD_PLTYPECfg,cmdITTD_PLTYPECfg.tag
  item.ITTD_PLTYPE.PrepareGrid gridITTD_PLTYPE
  LoadGridLayout gridITTD_PLTYPE
  Set fndITTD_PLTYPE = Nothing
  On Error Resume Next
  Set fndITTD_PLTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_PLTYPE.Init gridITTD_PLTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_PLTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_PLTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_PLTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_PLTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_QTYPE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_QTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_QTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_QTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_QTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_QTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_QTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_QTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_QTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_QTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_QTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_QTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_QTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_QTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_QTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_QTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип заявки"/><Properties Name="Name" PropValue="mnuPopupITTD_QTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_QTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_QTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_QTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_QTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_QTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_QTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_QTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_QTYPEOpen"/></ControlData><ControlData Name="mnuITTD_QTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_QTYPERef"/></ControlData><ControlData Name="mnuITTD_QTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_QTYPES1"/></ControlData><ControlData Name="mnuITTD_QTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_QTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_QTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_QTYPECOPY"/></ControlData><ControlData Name="mnuITTD_QTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_QTYPECUT"/></ControlData><ControlData Name="mnuITTD_QTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_QTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_QTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_QTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_QTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_QTYPEPrn"/></ControlData><ControlData Name="mnuITTD_QTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECfg"/></ControlData><ControlData Name="mnuITTD_QTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_QTYPEFind"/></ControlData><ControlData Name="mnuITTD_QTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_QTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_QTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_QTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_QTYPE as object
private menuActionITTD_QTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_QTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_QTYPE,&quot;gridITTD_QTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_QTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_QTYPE,&quot;Тип заявки&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_QTYPERef_Click()
  on error resume next
  item.ITTD_QTYPE.Refresh
  gridITTD_QTYPE.itemCount = item.ITTD_QTYPE.count
  gridITTD_QTYPE.Refetch
  gridITTD_QTYPE.Refresh
End Sub
Private Sub cmdITTD_QTYPEAcc_Click()
On Error Resume Next
If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_QTYPE.Row &gt; 0 Then
 If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_QTYPEEdit_Click()
  on error resume next
If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_QTYPE.Row &gt; 0 then
 If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_QTYPE_admi.Item = u
    again: frmITTD_QTYPE_admi.NotFirstTime = False
    frmITTD_QTYPE_admi.OnInit
    frmITTD_QTYPE_admi.Show vbModal
    If frmITTD_QTYPE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_QTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_QTYPEDel_Click()
  on error resume next
  gridITTD_QTYPE.Delete
End Sub
Private Sub cmdITTD_QTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_QTYPE.Add()

      Set frmITTD_QTYPE_admi.Item = u
      again: frmITTD_QTYPE_admi.NotFirstTime = False
      frmITTD_QTYPE_admi.OnInit
      frmITTD_QTYPE_admi.Show vbModal
      If frmITTD_QTYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_QTYPE.ItemCount = Item.ITTD_QTYPE.Count
        gridITTD_QTYPE.Refresh
        gridITTD_QTYPE.RefreshGroups
        gridITTD_QTYPE.Refreshsort
        gridITTD_QTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_QTYPE&quot;
      Else
        Item.ITTD_QTYPE.Delete u.ID
        Item.ITTD_QTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_QTYPEFnd_Click()
  on error resume next
  fndITTD_QTYPE.ShowForm
End Sub
Private Sub cmdITTD_QTYPERun_Click()
  on error resume next
  gridITTD_QTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_QTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_QTYPE.LoadRow gridITTD_QTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_QTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_QTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_QTYPE_DblClick()
  cmdITTD_QTYPEEdit_Click
End Sub
Private Sub gridITTD_QTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_QTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_QTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_QTYPE.Row And LastRow &gt; 0 Then
  gridITTD_QTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_QTYPE.GetRowData(gridITTD_QTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_QTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_QTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_QTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_QTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_QTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_QTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_QTYPE
End If
end sub
private sub mnuITTD_QTYPEAdd_click()
   menuActionITTD_QTYPE =&quot;ADD&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEEdit_click()
   menuActionITTD_QTYPE =&quot;EDIT&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEDelete_click()
   menuActionITTD_QTYPE =&quot;DEL&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEOpen_click()
   menuActionITTD_QTYPE =&quot;RUN&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPERef_click()
   menuActionITTD_QTYPE =&quot;REF&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
  Private Sub mnuITTD_QTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_QTYPE.Row &gt; 0 Then
     If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_QTYPECUT_Click()
    On Error Resume Next
    If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_QTYPE.Row &gt; 0 Then
     If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_QTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_QTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_QTYPE.Row &gt; 0 Then
   If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_QTYPE.ItemCount = u.parent.Count
      gridITTD_QTYPE.RefreshRowIndex gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_QTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_QTYPEPrn_click()
   menuActionITTD_QTYPE =&quot;PRN&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPECfg_click()
   menuActionITTD_QTYPE =&quot;CFG&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEFind_click()
   menuActionITTD_QTYPE =&quot;FND&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEAcc_click()
   menuActionITTD_QTYPE =&quot;ACC&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub menuTimerITTD_QTYPE_timer()
   menuTimerITTD_QTYPE.enabled = false
   if menuActionITTD_QTYPE =&quot;ADD&quot; then cmdITTD_QTYPEADD_CLick
   if menuActionITTD_QTYPE =&quot;EDIT&quot; then cmdITTD_QTYPEEDIT_CLick
   if menuActionITTD_QTYPE =&quot;DEL&quot; then cmdITTD_QTYPEDEL_CLick
   if menuActionITTD_QTYPE =&quot;RUN&quot; then cmdITTD_QTYPERUN_CLick
   if menuActionITTD_QTYPE =&quot;REF&quot; then cmdITTD_QTYPEREF_CLick
   if menuActionITTD_QTYPE =&quot;PRN&quot; then cmdITTD_QTYPEPRN_CLick
   if menuActionITTD_QTYPE =&quot;CFG&quot; then cmdITTD_QTYPECFG_CLick
   if menuActionITTD_QTYPE =&quot;FND&quot; then cmdITTD_QTYPEFND_CLick
   if menuActionITTD_QTYPE =&quot;ACC&quot; then cmdITTD_QTYPEACC_CLick
   menuActionITTD_QTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_QTYPEAdd,cmdITTD_QTYPEAdd.tag
  LoadBtnPictures cmdITTD_QTYPEEdit,cmdITTD_QTYPEEdit.tag
  LoadBtnPictures cmdITTD_QTYPEDel,cmdITTD_QTYPEDel.tag
  LoadBtnPictures cmdITTD_QTYPERef,cmdITTD_QTYPERef.tag
  LoadBtnPictures cmdITTD_QTYPEPrn,cmdITTD_QTYPEPrn.tag
  LoadBtnPictures cmdITTD_QTYPEFnd,cmdITTD_QTYPEFnd.tag
  LoadBtnPictures cmdITTD_QTYPERun,cmdITTD_QTYPERun.tag
  LoadBtnPictures cmdITTD_QTYPEAcc,cmdITTD_QTYPEAcc.tag
  LoadBtnPictures cmdITTD_QTYPECfg,cmdITTD_QTYPECfg.tag
  item.ITTD_QTYPE.PrepareGrid gridITTD_QTYPE
  LoadGridLayout gridITTD_QTYPE
  Set fndITTD_QTYPE = Nothing
  On Error Resume Next
  Set fndITTD_QTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_QTYPE.Init gridITTD_QTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_QTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_QTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_QTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_QTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_ATYPE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_ATYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_ATYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_ATYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_ATYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_ATYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ATYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ATYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ATYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_ATYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_ATYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_ATYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_ATYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_ATYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_ATYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_ATYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип операции"/><Properties Name="Name" PropValue="mnuPopupITTD_ATYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_ATYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_ATYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ATYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_ATYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ATYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_ATYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ATYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_ATYPEOpen"/></ControlData><ControlData Name="mnuITTD_ATYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_ATYPERef"/></ControlData><ControlData Name="mnuITTD_ATYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_ATYPES1"/></ControlData><ControlData Name="mnuITTD_ATYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_ATYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_ATYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_ATYPECOPY"/></ControlData><ControlData Name="mnuITTD_ATYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_ATYPECUT"/></ControlData><ControlData Name="mnuITTD_ATYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_ATYPEPASTE"/></ControlData><ControlData Name="mnuITTD_ATYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECHANGE"/></ControlData><ControlData Name="mnuITTD_ATYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_ATYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_ATYPEPrn"/></ControlData><ControlData Name="mnuITTD_ATYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECfg"/></ControlData><ControlData Name="mnuITTD_ATYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_ATYPEFind"/></ControlData><ControlData Name="mnuITTD_ATYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_ATYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_ATYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_ATYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_ATYPE as object
private menuActionITTD_ATYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_ATYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_ATYPE,&quot;gridITTD_ATYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ATYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_ATYPE,&quot;Тип операции&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ATYPERef_Click()
  on error resume next
  item.ITTD_ATYPE.Refresh
  gridITTD_ATYPE.itemCount = item.ITTD_ATYPE.count
  gridITTD_ATYPE.Refetch
  gridITTD_ATYPE.Refresh
End Sub
Private Sub cmdITTD_ATYPEAcc_Click()
On Error Resume Next
If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ATYPE.Row &gt; 0 Then
 If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_ATYPEEdit_Click()
  on error resume next
If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ATYPE.Row &gt; 0 then
 If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_ATYPE_admi.Item = u
    again: frmITTD_ATYPE_admi.NotFirstTime = False
    frmITTD_ATYPE_admi.OnInit
    frmITTD_ATYPE_admi.Show vbModal
    If frmITTD_ATYPE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_ATYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_ATYPEDel_Click()
  on error resume next
  gridITTD_ATYPE.Delete
End Sub
Private Sub cmdITTD_ATYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_ATYPE.Add()

      Set frmITTD_ATYPE_admi.Item = u
      again: frmITTD_ATYPE_admi.NotFirstTime = False
      frmITTD_ATYPE_admi.OnInit
      frmITTD_ATYPE_admi.Show vbModal
      If frmITTD_ATYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_ATYPE.ItemCount = Item.ITTD_ATYPE.Count
        gridITTD_ATYPE.Refresh
        gridITTD_ATYPE.RefreshGroups
        gridITTD_ATYPE.Refreshsort
        gridITTD_ATYPE.MoveToBookmark u.ID &amp; &quot;ITTD_ATYPE&quot;
      Else
        Item.ITTD_ATYPE.Delete u.ID
        Item.ITTD_ATYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_ATYPEFnd_Click()
  on error resume next
  fndITTD_ATYPE.ShowForm
End Sub
Private Sub cmdITTD_ATYPERun_Click()
  on error resume next
  gridITTD_ATYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_ATYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_ATYPE.LoadRow gridITTD_ATYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_ATYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_ATYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_ATYPE_DblClick()
  cmdITTD_ATYPEEdit_Click
End Sub
Private Sub gridITTD_ATYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_ATYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_ATYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_ATYPE.Row And LastRow &gt; 0 Then
  gridITTD_ATYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_ATYPE.GetRowData(gridITTD_ATYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_ATYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_ATYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_ATYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_ATYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_ATYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_ATYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_ATYPE
End If
end sub
private sub mnuITTD_ATYPEAdd_click()
   menuActionITTD_ATYPE =&quot;ADD&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEEdit_click()
   menuActionITTD_ATYPE =&quot;EDIT&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEDelete_click()
   menuActionITTD_ATYPE =&quot;DEL&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEOpen_click()
   menuActionITTD_ATYPE =&quot;RUN&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPERef_click()
   menuActionITTD_ATYPE =&quot;REF&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
  Private Sub mnuITTD_ATYPECOPY_Click()
    On Error Resume Next
    If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ATYPE.Row &gt; 0 Then
     If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_ATYPECUT_Click()
    On Error Resume Next
    If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ATYPE.Row &gt; 0 Then
     If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_ATYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_ATYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_ATYPE.Row &gt; 0 Then
   If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_ATYPE.ItemCount = u.parent.Count
      gridITTD_ATYPE.RefreshRowIndex gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_ATYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_ATYPEPrn_click()
   menuActionITTD_ATYPE =&quot;PRN&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPECfg_click()
   menuActionITTD_ATYPE =&quot;CFG&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEFind_click()
   menuActionITTD_ATYPE =&quot;FND&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEAcc_click()
   menuActionITTD_ATYPE =&quot;ACC&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub menuTimerITTD_ATYPE_timer()
   menuTimerITTD_ATYPE.enabled = false
   if menuActionITTD_ATYPE =&quot;ADD&quot; then cmdITTD_ATYPEADD_CLick
   if menuActionITTD_ATYPE =&quot;EDIT&quot; then cmdITTD_ATYPEEDIT_CLick
   if menuActionITTD_ATYPE =&quot;DEL&quot; then cmdITTD_ATYPEDEL_CLick
   if menuActionITTD_ATYPE =&quot;RUN&quot; then cmdITTD_ATYPERUN_CLick
   if menuActionITTD_ATYPE =&quot;REF&quot; then cmdITTD_ATYPEREF_CLick
   if menuActionITTD_ATYPE =&quot;PRN&quot; then cmdITTD_ATYPEPRN_CLick
   if menuActionITTD_ATYPE =&quot;CFG&quot; then cmdITTD_ATYPECFG_CLick
   if menuActionITTD_ATYPE =&quot;FND&quot; then cmdITTD_ATYPEFND_CLick
   if menuActionITTD_ATYPE =&quot;ACC&quot; then cmdITTD_ATYPEACC_CLick
   menuActionITTD_ATYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_ATYPEAdd,cmdITTD_ATYPEAdd.tag
  LoadBtnPictures cmdITTD_ATYPEEdit,cmdITTD_ATYPEEdit.tag
  LoadBtnPictures cmdITTD_ATYPEDel,cmdITTD_ATYPEDel.tag
  LoadBtnPictures cmdITTD_ATYPERef,cmdITTD_ATYPERef.tag
  LoadBtnPictures cmdITTD_ATYPEPrn,cmdITTD_ATYPEPrn.tag
  LoadBtnPictures cmdITTD_ATYPEFnd,cmdITTD_ATYPEFnd.tag
  LoadBtnPictures cmdITTD_ATYPERun,cmdITTD_ATYPERun.tag
  LoadBtnPictures cmdITTD_ATYPEAcc,cmdITTD_ATYPEAcc.tag
  LoadBtnPictures cmdITTD_ATYPECfg,cmdITTD_ATYPECfg.tag
  item.ITTD_ATYPE.PrepareGrid gridITTD_ATYPE
  LoadGridLayout gridITTD_ATYPE
  Set fndITTD_ATYPE = Nothing
  On Error Resume Next
  Set fndITTD_ATYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_ATYPE.Init gridITTD_ATYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_ATYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_ATYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_ATYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_ATYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_SRV_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Услуги"/><Properties Name="Name" PropValue="mnuPopupITTD_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_SRVDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_SRVOpen"/></ControlData><ControlData Name="mnuITTD_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_SRVRef"/></ControlData><ControlData Name="mnuITTD_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_SRVS1"/></ControlData><ControlData Name="mnuITTD_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_SRVBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_SRVCOPY"/></ControlData><ControlData Name="mnuITTD_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_SRVCUT"/></ControlData><ControlData Name="mnuITTD_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_SRVPASTE"/></ControlData><ControlData Name="mnuITTD_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_SRVCHANGE"/></ControlData><ControlData Name="mnuITTD_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_SRVPrn"/></ControlData><ControlData Name="mnuITTD_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_SRVCfg"/></ControlData><ControlData Name="mnuITTD_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_SRVFind"/></ControlData><ControlData Name="mnuITTD_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_SRV as object
private menuActionITTD_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_SRV,&quot;gridITTD_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_SRV,&quot;Услуги&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_SRVRef_Click()
  on error resume next
  item.ITTD_SRV.Refresh
  gridITTD_SRV.itemCount = item.ITTD_SRV.count
  gridITTD_SRV.Refetch
  gridITTD_SRV.Refresh
End Sub
Private Sub cmdITTD_SRVAcc_Click()
On Error Resume Next
If gridITTD_SRV.ItemCount = 0 Then Exit Sub
If gridITTD_SRV.Row &gt; 0 Then
 If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_SRVEdit_Click()
  on error resume next
If gridITTD_SRV.ItemCount = 0 Then Exit Sub
If gridITTD_SRV.Row &gt; 0 then
 If gridITTD_SRV.RowIndex(gridITTD_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_SRV_admi.Item = u
    again: frmITTD_SRV_admi.NotFirstTime = False
    frmITTD_SRV_admi.OnInit
    frmITTD_SRV_admi.Show vbModal
    If frmITTD_SRV_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_SRVDel_Click()
  on error resume next
  gridITTD_SRV.Delete
End Sub
Private Sub cmdITTD_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_SRV.Add()

      Set frmITTD_SRV_admi.Item = u
      again: frmITTD_SRV_admi.NotFirstTime = False
      frmITTD_SRV_admi.OnInit
      frmITTD_SRV_admi.Show vbModal
      If frmITTD_SRV_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_SRV.ItemCount = Item.ITTD_SRV.Count
        gridITTD_SRV.Refresh
        gridITTD_SRV.RefreshGroups
        gridITTD_SRV.Refreshsort
        gridITTD_SRV.MoveToBookmark u.ID &amp; &quot;ITTD_SRV&quot;
      Else
        Item.ITTD_SRV.Delete u.ID
        Item.ITTD_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_SRVFnd_Click()
  on error resume next
  fndITTD_SRV.ShowForm
End Sub
Private Sub cmdITTD_SRVRun_Click()
  on error resume next
  gridITTD_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_SRV.LoadRow gridITTD_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_SRV.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_SRV&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_SRV_DblClick()
  cmdITTD_SRVEdit_Click
End Sub
Private Sub gridITTD_SRV_KeyPress(KeyAscii As Integer)
  If gridITTD_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_SRV.Row And LastRow &gt; 0 Then
  gridITTD_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_SRV.GetRowData(gridITTD_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_SRV.Add()
    If GetFromBuffer(u) Then
      gridITTD_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_SRVCfg_Click
        End If
    End If
end sub

private sub gridITTD_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_SRV
End If
end sub
private sub mnuITTD_SRVAdd_click()
   menuActionITTD_SRV =&quot;ADD&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVEdit_click()
   menuActionITTD_SRV =&quot;EDIT&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVDelete_click()
   menuActionITTD_SRV =&quot;DEL&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVOpen_click()
   menuActionITTD_SRV =&quot;RUN&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVRef_click()
   menuActionITTD_SRV =&quot;REF&quot;
   menuTimerITTD_SRV.enabled = true
end sub
  Private Sub mnuITTD_SRVCOPY_Click()
    On Error Resume Next
    If gridITTD_SRV.ItemCount = 0 Then Exit Sub
    If gridITTD_SRV.Row &gt; 0 Then
     If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_SRVCUT_Click()
    On Error Resume Next
    If gridITTD_SRV.ItemCount = 0 Then Exit Sub
    If gridITTD_SRV.Row &gt; 0 Then
     If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_SRVCHANGE_Click()
  On Error Resume Next
  If gridITTD_SRV.ItemCount = 0 Then Exit Sub
  If gridITTD_SRV.Row &gt; 0 Then
   If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_SRV.ItemCount = u.parent.Count
      gridITTD_SRV.RefreshRowIndex gridITTD_SRV.RowIndex(gridITTD_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_SRVPrn_click()
   menuActionITTD_SRV =&quot;PRN&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVCfg_click()
   menuActionITTD_SRV =&quot;CFG&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVFind_click()
   menuActionITTD_SRV =&quot;FND&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVAcc_click()
   menuActionITTD_SRV =&quot;ACC&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub menuTimerITTD_SRV_timer()
   menuTimerITTD_SRV.enabled = false
   if menuActionITTD_SRV =&quot;ADD&quot; then cmdITTD_SRVADD_CLick
   if menuActionITTD_SRV =&quot;EDIT&quot; then cmdITTD_SRVEDIT_CLick
   if menuActionITTD_SRV =&quot;DEL&quot; then cmdITTD_SRVDEL_CLick
   if menuActionITTD_SRV =&quot;RUN&quot; then cmdITTD_SRVRUN_CLick
   if menuActionITTD_SRV =&quot;REF&quot; then cmdITTD_SRVREF_CLick
   if menuActionITTD_SRV =&quot;PRN&quot; then cmdITTD_SRVPRN_CLick
   if menuActionITTD_SRV =&quot;CFG&quot; then cmdITTD_SRVCFG_CLick
   if menuActionITTD_SRV =&quot;FND&quot; then cmdITTD_SRVFND_CLick
   if menuActionITTD_SRV =&quot;ACC&quot; then cmdITTD_SRVACC_CLick
   menuActionITTD_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_SRVAdd,cmdITTD_SRVAdd.tag
  LoadBtnPictures cmdITTD_SRVEdit,cmdITTD_SRVEdit.tag
  LoadBtnPictures cmdITTD_SRVDel,cmdITTD_SRVDel.tag
  LoadBtnPictures cmdITTD_SRVRef,cmdITTD_SRVRef.tag
  LoadBtnPictures cmdITTD_SRVPrn,cmdITTD_SRVPrn.tag
  LoadBtnPictures cmdITTD_SRVFnd,cmdITTD_SRVFnd.tag
  LoadBtnPictures cmdITTD_SRVRun,cmdITTD_SRVRun.tag
  LoadBtnPictures cmdITTD_SRVAcc,cmdITTD_SRVAcc.tag
  LoadBtnPictures cmdITTD_SRVCfg,cmdITTD_SRVCfg.tag
  item.ITTD_SRV.PrepareGrid gridITTD_SRV
  LoadGridLayout gridITTD_SRV
  Set fndITTD_SRV = Nothing
  On Error Resume Next
  Set fndITTD_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_SRV.Init gridITTD_SRV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_PART_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_PART" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_PART"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_PART" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_PART"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_PARTAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PARTEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PARTDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PARTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_PARTPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_PARTCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_PARTFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_PARTRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_PARTRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_PARTAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_PART" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Партия товара"/><Properties Name="Name" PropValue="mnuPopupITTD_PART"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_PARTAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_PARTAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PARTEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_PARTEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PARTDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_PARTDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PARTOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_PARTOpen"/></ControlData><ControlData Name="mnuITTD_PARTRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_PARTRef"/></ControlData><ControlData Name="mnuITTD_PARTS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_PARTS1"/></ControlData><ControlData Name="mnuITTD_PARTBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_PARTBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_PARTCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_PARTCOPY"/></ControlData><ControlData Name="mnuITTD_PARTCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_PARTCUT"/></ControlData><ControlData Name="mnuITTD_PARTPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_PARTPASTE"/></ControlData><ControlData Name="mnuITTD_PARTCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_PARTCHANGE"/></ControlData><ControlData Name="mnuITTD_PARTCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_PARTCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_PARTPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_PARTPrn"/></ControlData><ControlData Name="mnuITTD_PARTCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_PARTCfg"/></ControlData><ControlData Name="mnuITTD_PARTFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_PARTFind"/></ControlData><ControlData Name="mnuITTD_PARTAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_PARTAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_PART" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_PART"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_PART as object
private menuActionITTD_PART as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_PARTCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_PART,&quot;gridITTD_PART&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PARTPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_PART,&quot;Партия товара&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PARTRef_Click()
  on error resume next
  item.ITTD_PART.Refresh
  gridITTD_PART.itemCount = item.ITTD_PART.count
  gridITTD_PART.Refetch
  gridITTD_PART.Refresh
End Sub
Private Sub cmdITTD_PARTAcc_Click()
On Error Resume Next
If gridITTD_PART.ItemCount = 0 Then Exit Sub
If gridITTD_PART.Row &gt; 0 Then
 If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_PARTEdit_Click()
  on error resume next
If gridITTD_PART.ItemCount = 0 Then Exit Sub
If gridITTD_PART.Row &gt; 0 then
 If gridITTD_PART.RowIndex(gridITTD_PART.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_PART_admi.Item = u
    again: frmITTD_PART_admi.NotFirstTime = False
    frmITTD_PART_admi.OnInit
    frmITTD_PART_admi.Show vbModal
    If frmITTD_PART_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_PART.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_PARTDel_Click()
  on error resume next
  gridITTD_PART.Delete
End Sub
Private Sub cmdITTD_PARTAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_PART.Add()

      Set frmITTD_PART_admi.Item = u
      again: frmITTD_PART_admi.NotFirstTime = False
      frmITTD_PART_admi.OnInit
      frmITTD_PART_admi.Show vbModal
      If frmITTD_PART_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_PART.ItemCount = Item.ITTD_PART.Count
        gridITTD_PART.Refresh
        gridITTD_PART.RefreshGroups
        gridITTD_PART.Refreshsort
        gridITTD_PART.MoveToBookmark u.ID &amp; &quot;ITTD_PART&quot;
      Else
        Item.ITTD_PART.Delete u.ID
        Item.ITTD_PART.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_PARTFnd_Click()
  on error resume next
  fndITTD_PART.ShowForm
End Sub
Private Sub cmdITTD_PARTRun_Click()
  on error resume next
  gridITTD_PART_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_PART_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_PART.LoadRow gridITTD_PART, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_PART_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_PART.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_PART&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_PART_DblClick()
  cmdITTD_PARTEdit_Click
End Sub
Private Sub gridITTD_PART_KeyPress(KeyAscii As Integer)
  If gridITTD_PART.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_PART.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_PART_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_PART.Row And LastRow &gt; 0 Then
  gridITTD_PART.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_PART.GetRowData(gridITTD_PART.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_PARTPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_PART.Add()
    If GetFromBuffer(u) Then
      gridITTD_PART.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_PART_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_PARTCfg_Click
        End If
    End If
end sub

private sub gridITTD_PART_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_PART
End If
end sub
private sub mnuITTD_PARTAdd_click()
   menuActionITTD_PART =&quot;ADD&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTEdit_click()
   menuActionITTD_PART =&quot;EDIT&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTDelete_click()
   menuActionITTD_PART =&quot;DEL&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTOpen_click()
   menuActionITTD_PART =&quot;RUN&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTRef_click()
   menuActionITTD_PART =&quot;REF&quot;
   menuTimerITTD_PART.enabled = true
end sub
  Private Sub mnuITTD_PARTCOPY_Click()
    On Error Resume Next
    If gridITTD_PART.ItemCount = 0 Then Exit Sub
    If gridITTD_PART.Row &gt; 0 Then
     If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_PARTCUT_Click()
    On Error Resume Next
    If gridITTD_PART.ItemCount = 0 Then Exit Sub
    If gridITTD_PART.Row &gt; 0 Then
     If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_PART.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_PARTCHANGE_Click()
  On Error Resume Next
  If gridITTD_PART.ItemCount = 0 Then Exit Sub
  If gridITTD_PART.Row &gt; 0 Then
   If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_PART.ItemCount = u.parent.Count
      gridITTD_PART.RefreshRowIndex gridITTD_PART.RowIndex(gridITTD_PART.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_PARTCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_PARTPrn_click()
   menuActionITTD_PART =&quot;PRN&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTCfg_click()
   menuActionITTD_PART =&quot;CFG&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTFind_click()
   menuActionITTD_PART =&quot;FND&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTAcc_click()
   menuActionITTD_PART =&quot;ACC&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub menuTimerITTD_PART_timer()
   menuTimerITTD_PART.enabled = false
   if menuActionITTD_PART =&quot;ADD&quot; then cmdITTD_PARTADD_CLick
   if menuActionITTD_PART =&quot;EDIT&quot; then cmdITTD_PARTEDIT_CLick
   if menuActionITTD_PART =&quot;DEL&quot; then cmdITTD_PARTDEL_CLick
   if menuActionITTD_PART =&quot;RUN&quot; then cmdITTD_PARTRUN_CLick
   if menuActionITTD_PART =&quot;REF&quot; then cmdITTD_PARTREF_CLick
   if menuActionITTD_PART =&quot;PRN&quot; then cmdITTD_PARTPRN_CLick
   if menuActionITTD_PART =&quot;CFG&quot; then cmdITTD_PARTCFG_CLick
   if menuActionITTD_PART =&quot;FND&quot; then cmdITTD_PARTFND_CLick
   if menuActionITTD_PART =&quot;ACC&quot; then cmdITTD_PARTACC_CLick
   menuActionITTD_PART =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_PARTAdd,cmdITTD_PARTAdd.tag
  LoadBtnPictures cmdITTD_PARTEdit,cmdITTD_PARTEdit.tag
  LoadBtnPictures cmdITTD_PARTDel,cmdITTD_PARTDel.tag
  LoadBtnPictures cmdITTD_PARTRef,cmdITTD_PARTRef.tag
  LoadBtnPictures cmdITTD_PARTPrn,cmdITTD_PARTPrn.tag
  LoadBtnPictures cmdITTD_PARTFnd,cmdITTD_PARTFnd.tag
  LoadBtnPictures cmdITTD_PARTRun,cmdITTD_PARTRun.tag
  LoadBtnPictures cmdITTD_PARTAcc,cmdITTD_PARTAcc.tag
  LoadBtnPictures cmdITTD_PARTCfg,cmdITTD_PARTCfg.tag
  item.ITTD_PART.PrepareGrid gridITTD_PART
  LoadGridLayout gridITTD_PART
  Set fndITTD_PART = Nothing
  On Error Resume Next
  Set fndITTD_PART = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_PART.Init gridITTD_PART
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_PART.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PART.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PART.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PART.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_PART.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PART.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PART.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PART.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_PART.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_PART = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_FACTORY_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_FACTORY" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_FACTORY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_FACTORY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_FACTORY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_FACTORYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_FACTORYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_FACTORYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_FACTORYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_FACTORYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_FACTORYCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_FACTORYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_FACTORYRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_FACTORYAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_FACTORY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Завод"/><Properties Name="Name" PropValue="mnuPopupITTD_FACTORY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_FACTORYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_FACTORYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_FACTORYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_FACTORYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_FACTORYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_FACTORYOpen"/></ControlData><ControlData Name="mnuITTD_FACTORYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYRef"/></ControlData><ControlData Name="mnuITTD_FACTORYS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_FACTORYS1"/></ControlData><ControlData Name="mnuITTD_FACTORYBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_FACTORYBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_FACTORYCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCOPY"/></ControlData><ControlData Name="mnuITTD_FACTORYCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCUT"/></ControlData><ControlData Name="mnuITTD_FACTORYPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYPASTE"/></ControlData><ControlData Name="mnuITTD_FACTORYCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCHANGE"/></ControlData><ControlData Name="mnuITTD_FACTORYCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_FACTORYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYPrn"/></ControlData><ControlData Name="mnuITTD_FACTORYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCfg"/></ControlData><ControlData Name="mnuITTD_FACTORYFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_FACTORYFind"/></ControlData><ControlData Name="mnuITTD_FACTORYAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_FACTORYAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_FACTORY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_FACTORY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_FACTORY as object
private menuActionITTD_FACTORY as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_FACTORYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_FACTORY,&quot;gridITTD_FACTORY&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_FACTORYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_FACTORY,&quot;Завод&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_FACTORYRef_Click()
  on error resume next
  item.ITTD_FACTORY.Refresh
  gridITTD_FACTORY.itemCount = item.ITTD_FACTORY.count
  gridITTD_FACTORY.Refetch
  gridITTD_FACTORY.Refresh
End Sub
Private Sub cmdITTD_FACTORYAcc_Click()
On Error Resume Next
If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
If gridITTD_FACTORY.Row &gt; 0 Then
 If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_FACTORYEdit_Click()
  on error resume next
If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
If gridITTD_FACTORY.Row &gt; 0 then
 If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_FACTORY_admi.Item = u
    again: frmITTD_FACTORY_admi.NotFirstTime = False
    frmITTD_FACTORY_admi.OnInit
    frmITTD_FACTORY_admi.Show vbModal
    If frmITTD_FACTORY_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_FACTORY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_FACTORYDel_Click()
  on error resume next
  gridITTD_FACTORY.Delete
End Sub
Private Sub cmdITTD_FACTORYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_FACTORY.Add()

      Set frmITTD_FACTORY_admi.Item = u
      again: frmITTD_FACTORY_admi.NotFirstTime = False
      frmITTD_FACTORY_admi.OnInit
      frmITTD_FACTORY_admi.Show vbModal
      If frmITTD_FACTORY_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_FACTORY.ItemCount = Item.ITTD_FACTORY.Count
        gridITTD_FACTORY.Refresh
        gridITTD_FACTORY.RefreshGroups
        gridITTD_FACTORY.Refreshsort
        gridITTD_FACTORY.MoveToBookmark u.ID &amp; &quot;ITTD_FACTORY&quot;
      Else
        Item.ITTD_FACTORY.Delete u.ID
        Item.ITTD_FACTORY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_FACTORYFnd_Click()
  on error resume next
  fndITTD_FACTORY.ShowForm
End Sub
Private Sub cmdITTD_FACTORYRun_Click()
  on error resume next
  gridITTD_FACTORY_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_FACTORY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_FACTORY.LoadRow gridITTD_FACTORY, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_FACTORY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_FACTORY&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_FACTORY_DblClick()
  cmdITTD_FACTORYEdit_Click
End Sub
Private Sub gridITTD_FACTORY_KeyPress(KeyAscii As Integer)
  If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_FACTORY.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_FACTORY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_FACTORY.Row And LastRow &gt; 0 Then
  gridITTD_FACTORY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_FACTORY.GetRowData(gridITTD_FACTORY.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_FACTORYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_FACTORY.Add()
    If GetFromBuffer(u) Then
      gridITTD_FACTORY.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_FACTORY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_FACTORYCfg_Click
        End If
    End If
end sub

private sub gridITTD_FACTORY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_FACTORY
End If
end sub
private sub mnuITTD_FACTORYAdd_click()
   menuActionITTD_FACTORY =&quot;ADD&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYEdit_click()
   menuActionITTD_FACTORY =&quot;EDIT&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYDelete_click()
   menuActionITTD_FACTORY =&quot;DEL&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYOpen_click()
   menuActionITTD_FACTORY =&quot;RUN&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYRef_click()
   menuActionITTD_FACTORY =&quot;REF&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
  Private Sub mnuITTD_FACTORYCOPY_Click()
    On Error Resume Next
    If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
    If gridITTD_FACTORY.Row &gt; 0 Then
     If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_FACTORYCUT_Click()
    On Error Resume Next
    If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
    If gridITTD_FACTORY.Row &gt; 0 Then
     If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_FACTORY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_FACTORYCHANGE_Click()
  On Error Resume Next
  If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
  If gridITTD_FACTORY.Row &gt; 0 Then
   If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_FACTORY.ItemCount = u.parent.Count
      gridITTD_FACTORY.RefreshRowIndex gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_FACTORYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_FACTORYPrn_click()
   menuActionITTD_FACTORY =&quot;PRN&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYCfg_click()
   menuActionITTD_FACTORY =&quot;CFG&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYFind_click()
   menuActionITTD_FACTORY =&quot;FND&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYAcc_click()
   menuActionITTD_FACTORY =&quot;ACC&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub menuTimerITTD_FACTORY_timer()
   menuTimerITTD_FACTORY.enabled = false
   if menuActionITTD_FACTORY =&quot;ADD&quot; then cmdITTD_FACTORYADD_CLick
   if menuActionITTD_FACTORY =&quot;EDIT&quot; then cmdITTD_FACTORYEDIT_CLick
   if menuActionITTD_FACTORY =&quot;DEL&quot; then cmdITTD_FACTORYDEL_CLick
   if menuActionITTD_FACTORY =&quot;RUN&quot; then cmdITTD_FACTORYRUN_CLick
   if menuActionITTD_FACTORY =&quot;REF&quot; then cmdITTD_FACTORYREF_CLick
   if menuActionITTD_FACTORY =&quot;PRN&quot; then cmdITTD_FACTORYPRN_CLick
   if menuActionITTD_FACTORY =&quot;CFG&quot; then cmdITTD_FACTORYCFG_CLick
   if menuActionITTD_FACTORY =&quot;FND&quot; then cmdITTD_FACTORYFND_CLick
   if menuActionITTD_FACTORY =&quot;ACC&quot; then cmdITTD_FACTORYACC_CLick
   menuActionITTD_FACTORY =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_FACTORYAdd,cmdITTD_FACTORYAdd.tag
  LoadBtnPictures cmdITTD_FACTORYEdit,cmdITTD_FACTORYEdit.tag
  LoadBtnPictures cmdITTD_FACTORYDel,cmdITTD_FACTORYDel.tag
  LoadBtnPictures cmdITTD_FACTORYRef,cmdITTD_FACTORYRef.tag
  LoadBtnPictures cmdITTD_FACTORYPrn,cmdITTD_FACTORYPrn.tag
  LoadBtnPictures cmdITTD_FACTORYFnd,cmdITTD_FACTORYFnd.tag
  LoadBtnPictures cmdITTD_FACTORYRun,cmdITTD_FACTORYRun.tag
  LoadBtnPictures cmdITTD_FACTORYAcc,cmdITTD_FACTORYAcc.tag
  LoadBtnPictures cmdITTD_FACTORYCfg,cmdITTD_FACTORYCfg.tag
  item.ITTD_FACTORY.PrepareGrid gridITTD_FACTORY
  LoadGridLayout gridITTD_FACTORY
  Set fndITTD_FACTORY = Nothing
  On Error Resume Next
  Set fndITTD_FACTORY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_FACTORY.Init gridITTD_FACTORY
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_FACTORY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_FACTORY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_FACTORY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_FACTORY = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_KILLPLACE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_KILLPLACE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_KILLPLACE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_KILLPLACE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_KILLPLACEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_KILLPLACEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_KILLPLACEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_KILLPLACERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_KILLPLACEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_KILLPLACECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_KILLPLACEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_KILLPLACERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_KILLPLACEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Бойня"/><Properties Name="Name" PropValue="mnuPopupITTD_KILLPLACE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_KILLPLACEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_KILLPLACEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_KILLPLACEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_KILLPLACEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEOpen"/></ControlData><ControlData Name="mnuITTD_KILLPLACERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACERef"/></ControlData><ControlData Name="mnuITTD_KILLPLACES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACES1"/></ControlData><ControlData Name="mnuITTD_KILLPLACEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_KILLPLACECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECOPY"/></ControlData><ControlData Name="mnuITTD_KILLPLACECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECUT"/></ControlData><ControlData Name="mnuITTD_KILLPLACEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEPASTE"/></ControlData><ControlData Name="mnuITTD_KILLPLACECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECHANGE"/></ControlData><ControlData Name="mnuITTD_KILLPLACECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_KILLPLACEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEPrn"/></ControlData><ControlData Name="mnuITTD_KILLPLACECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECfg"/></ControlData><ControlData Name="mnuITTD_KILLPLACEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEFind"/></ControlData><ControlData Name="mnuITTD_KILLPLACEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_KILLPLACE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_KILLPLACE as object
private menuActionITTD_KILLPLACE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_KILLPLACECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_KILLPLACE,&quot;gridITTD_KILLPLACE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_KILLPLACEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_KILLPLACE,&quot;Бойня&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_KILLPLACERef_Click()
  on error resume next
  item.ITTD_KILLPLACE.Refresh
  gridITTD_KILLPLACE.itemCount = item.ITTD_KILLPLACE.count
  gridITTD_KILLPLACE.Refetch
  gridITTD_KILLPLACE.Refresh
End Sub
Private Sub cmdITTD_KILLPLACEAcc_Click()
On Error Resume Next
If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
If gridITTD_KILLPLACE.Row &gt; 0 Then
 If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_KILLPLACEEdit_Click()
  on error resume next
If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
If gridITTD_KILLPLACE.Row &gt; 0 then
 If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_KILLPLACE_admi.Item = u
    again: frmITTD_KILLPLACE_admi.NotFirstTime = False
    frmITTD_KILLPLACE_admi.OnInit
    frmITTD_KILLPLACE_admi.Show vbModal
    If frmITTD_KILLPLACE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_KILLPLACE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_KILLPLACEDel_Click()
  on error resume next
  gridITTD_KILLPLACE.Delete
End Sub
Private Sub cmdITTD_KILLPLACEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_KILLPLACE.Add()

      Set frmITTD_KILLPLACE_admi.Item = u
      again: frmITTD_KILLPLACE_admi.NotFirstTime = False
      frmITTD_KILLPLACE_admi.OnInit
      frmITTD_KILLPLACE_admi.Show vbModal
      If frmITTD_KILLPLACE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_KILLPLACE.ItemCount = Item.ITTD_KILLPLACE.Count
        gridITTD_KILLPLACE.Refresh
        gridITTD_KILLPLACE.RefreshGroups
        gridITTD_KILLPLACE.Refreshsort
        gridITTD_KILLPLACE.MoveToBookmark u.ID &amp; &quot;ITTD_KILLPLACE&quot;
      Else
        Item.ITTD_KILLPLACE.Delete u.ID
        Item.ITTD_KILLPLACE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_KILLPLACEFnd_Click()
  on error resume next
  fndITTD_KILLPLACE.ShowForm
End Sub
Private Sub cmdITTD_KILLPLACERun_Click()
  on error resume next
  gridITTD_KILLPLACE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_KILLPLACE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_KILLPLACE.LoadRow gridITTD_KILLPLACE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_KILLPLACE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_KILLPLACE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_KILLPLACE_DblClick()
  cmdITTD_KILLPLACEEdit_Click
End Sub
Private Sub gridITTD_KILLPLACE_KeyPress(KeyAscii As Integer)
  If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_KILLPLACE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_KILLPLACE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_KILLPLACE.Row And LastRow &gt; 0 Then
  gridITTD_KILLPLACE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_KILLPLACE.GetRowData(gridITTD_KILLPLACE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_KILLPLACEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_KILLPLACE.Add()
    If GetFromBuffer(u) Then
      gridITTD_KILLPLACE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_KILLPLACE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_KILLPLACECfg_Click
        End If
    End If
end sub

private sub gridITTD_KILLPLACE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_KILLPLACE
End If
end sub
private sub mnuITTD_KILLPLACEAdd_click()
   menuActionITTD_KILLPLACE =&quot;ADD&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEEdit_click()
   menuActionITTD_KILLPLACE =&quot;EDIT&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEDelete_click()
   menuActionITTD_KILLPLACE =&quot;DEL&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEOpen_click()
   menuActionITTD_KILLPLACE =&quot;RUN&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACERef_click()
   menuActionITTD_KILLPLACE =&quot;REF&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
  Private Sub mnuITTD_KILLPLACECOPY_Click()
    On Error Resume Next
    If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
    If gridITTD_KILLPLACE.Row &gt; 0 Then
     If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_KILLPLACECUT_Click()
    On Error Resume Next
    If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
    If gridITTD_KILLPLACE.Row &gt; 0 Then
     If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_KILLPLACE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_KILLPLACECHANGE_Click()
  On Error Resume Next
  If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
  If gridITTD_KILLPLACE.Row &gt; 0 Then
   If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_KILLPLACE.ItemCount = u.parent.Count
      gridITTD_KILLPLACE.RefreshRowIndex gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_KILLPLACECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_KILLPLACEPrn_click()
   menuActionITTD_KILLPLACE =&quot;PRN&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACECfg_click()
   menuActionITTD_KILLPLACE =&quot;CFG&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEFind_click()
   menuActionITTD_KILLPLACE =&quot;FND&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEAcc_click()
   menuActionITTD_KILLPLACE =&quot;ACC&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub menuTimerITTD_KILLPLACE_timer()
   menuTimerITTD_KILLPLACE.enabled = false
   if menuActionITTD_KILLPLACE =&quot;ADD&quot; then cmdITTD_KILLPLACEADD_CLick
   if menuActionITTD_KILLPLACE =&quot;EDIT&quot; then cmdITTD_KILLPLACEEDIT_CLick
   if menuActionITTD_KILLPLACE =&quot;DEL&quot; then cmdITTD_KILLPLACEDEL_CLick
   if menuActionITTD_KILLPLACE =&quot;RUN&quot; then cmdITTD_KILLPLACERUN_CLick
   if menuActionITTD_KILLPLACE =&quot;REF&quot; then cmdITTD_KILLPLACEREF_CLick
   if menuActionITTD_KILLPLACE =&quot;PRN&quot; then cmdITTD_KILLPLACEPRN_CLick
   if menuActionITTD_KILLPLACE =&quot;CFG&quot; then cmdITTD_KILLPLACECFG_CLick
   if menuActionITTD_KILLPLACE =&quot;FND&quot; then cmdITTD_KILLPLACEFND_CLick
   if menuActionITTD_KILLPLACE =&quot;ACC&quot; then cmdITTD_KILLPLACEACC_CLick
   menuActionITTD_KILLPLACE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_KILLPLACEAdd,cmdITTD_KILLPLACEAdd.tag
  LoadBtnPictures cmdITTD_KILLPLACEEdit,cmdITTD_KILLPLACEEdit.tag
  LoadBtnPictures cmdITTD_KILLPLACEDel,cmdITTD_KILLPLACEDel.tag
  LoadBtnPictures cmdITTD_KILLPLACERef,cmdITTD_KILLPLACERef.tag
  LoadBtnPictures cmdITTD_KILLPLACEPrn,cmdITTD_KILLPLACEPrn.tag
  LoadBtnPictures cmdITTD_KILLPLACEFnd,cmdITTD_KILLPLACEFnd.tag
  LoadBtnPictures cmdITTD_KILLPLACERun,cmdITTD_KILLPLACERun.tag
  LoadBtnPictures cmdITTD_KILLPLACEAcc,cmdITTD_KILLPLACEAcc.tag
  LoadBtnPictures cmdITTD_KILLPLACECfg,cmdITTD_KILLPLACECfg.tag
  item.ITTD_KILLPLACE.PrepareGrid gridITTD_KILLPLACE
  LoadGridLayout gridITTD_KILLPLACE
  Set fndITTD_KILLPLACE = Nothing
  On Error Resume Next
  Set fndITTD_KILLPLACE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_KILLPLACE.Init gridITTD_KILLPLACE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_KILLPLACE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_KILLPLACE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_KILLPLACE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_KILLPLACE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_COUNTRY_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_COUNTRY" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_COUNTRY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_COUNTRY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_COUNTRY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_COUNTRYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_COUNTRYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_COUNTRYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_COUNTRYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_COUNTRYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_COUNTRYCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_COUNTRYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_COUNTRYRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_COUNTRYAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_COUNTRY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Страна"/><Properties Name="Name" PropValue="mnuPopupITTD_COUNTRY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_COUNTRYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_COUNTRYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_COUNTRYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_COUNTRYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYOpen"/></ControlData><ControlData Name="mnuITTD_COUNTRYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYRef"/></ControlData><ControlData Name="mnuITTD_COUNTRYS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYS1"/></ControlData><ControlData Name="mnuITTD_COUNTRYBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_COUNTRYCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCOPY"/></ControlData><ControlData Name="mnuITTD_COUNTRYCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCUT"/></ControlData><ControlData Name="mnuITTD_COUNTRYPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYPASTE"/></ControlData><ControlData Name="mnuITTD_COUNTRYCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCHANGE"/></ControlData><ControlData Name="mnuITTD_COUNTRYCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_COUNTRYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYPrn"/></ControlData><ControlData Name="mnuITTD_COUNTRYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCfg"/></ControlData><ControlData Name="mnuITTD_COUNTRYFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYFind"/></ControlData><ControlData Name="mnuITTD_COUNTRYAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_COUNTRY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_COUNTRY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_COUNTRY as object
private menuActionITTD_COUNTRY as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_COUNTRYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_COUNTRY,&quot;gridITTD_COUNTRY&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_COUNTRYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_COUNTRY,&quot;Страна&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_COUNTRYRef_Click()
  on error resume next
  item.ITTD_COUNTRY.Refresh
  gridITTD_COUNTRY.itemCount = item.ITTD_COUNTRY.count
  gridITTD_COUNTRY.Refetch
  gridITTD_COUNTRY.Refresh
End Sub
Private Sub cmdITTD_COUNTRYAcc_Click()
On Error Resume Next
If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
If gridITTD_COUNTRY.Row &gt; 0 Then
 If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_COUNTRYEdit_Click()
  on error resume next
If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
If gridITTD_COUNTRY.Row &gt; 0 then
 If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_COUNTRY_admi.Item = u
    again: frmITTD_COUNTRY_admi.NotFirstTime = False
    frmITTD_COUNTRY_admi.OnInit
    frmITTD_COUNTRY_admi.Show vbModal
    If frmITTD_COUNTRY_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_COUNTRY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_COUNTRYDel_Click()
  on error resume next
  gridITTD_COUNTRY.Delete
End Sub
Private Sub cmdITTD_COUNTRYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_COUNTRY.Add()

      Set frmITTD_COUNTRY_admi.Item = u
      again: frmITTD_COUNTRY_admi.NotFirstTime = False
      frmITTD_COUNTRY_admi.OnInit
      frmITTD_COUNTRY_admi.Show vbModal
      If frmITTD_COUNTRY_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_COUNTRY.ItemCount = Item.ITTD_COUNTRY.Count
        gridITTD_COUNTRY.Refresh
        gridITTD_COUNTRY.RefreshGroups
        gridITTD_COUNTRY.Refreshsort
        gridITTD_COUNTRY.MoveToBookmark u.ID &amp; &quot;ITTD_COUNTRY&quot;
      Else
        Item.ITTD_COUNTRY.Delete u.ID
        Item.ITTD_COUNTRY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_COUNTRYFnd_Click()
  on error resume next
  fndITTD_COUNTRY.ShowForm
End Sub
Private Sub cmdITTD_COUNTRYRun_Click()
  on error resume next
  gridITTD_COUNTRY_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_COUNTRY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_COUNTRY.LoadRow gridITTD_COUNTRY, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_COUNTRY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_COUNTRY&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_COUNTRY_DblClick()
  cmdITTD_COUNTRYEdit_Click
End Sub
Private Sub gridITTD_COUNTRY_KeyPress(KeyAscii As Integer)
  If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_COUNTRY.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_COUNTRY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_COUNTRY.Row And LastRow &gt; 0 Then
  gridITTD_COUNTRY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_COUNTRY.GetRowData(gridITTD_COUNTRY.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_COUNTRYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_COUNTRY.Add()
    If GetFromBuffer(u) Then
      gridITTD_COUNTRY.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_COUNTRY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_COUNTRYCfg_Click
        End If
    End If
end sub

private sub gridITTD_COUNTRY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_COUNTRY
End If
end sub
private sub mnuITTD_COUNTRYAdd_click()
   menuActionITTD_COUNTRY =&quot;ADD&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYEdit_click()
   menuActionITTD_COUNTRY =&quot;EDIT&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYDelete_click()
   menuActionITTD_COUNTRY =&quot;DEL&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYOpen_click()
   menuActionITTD_COUNTRY =&quot;RUN&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYRef_click()
   menuActionITTD_COUNTRY =&quot;REF&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
  Private Sub mnuITTD_COUNTRYCOPY_Click()
    On Error Resume Next
    If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridITTD_COUNTRY.Row &gt; 0 Then
     If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_COUNTRYCUT_Click()
    On Error Resume Next
    If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridITTD_COUNTRY.Row &gt; 0 Then
     If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_COUNTRY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_COUNTRYCHANGE_Click()
  On Error Resume Next
  If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
  If gridITTD_COUNTRY.Row &gt; 0 Then
   If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_COUNTRY.ItemCount = u.parent.Count
      gridITTD_COUNTRY.RefreshRowIndex gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_COUNTRYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_COUNTRYPrn_click()
   menuActionITTD_COUNTRY =&quot;PRN&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYCfg_click()
   menuActionITTD_COUNTRY =&quot;CFG&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYFind_click()
   menuActionITTD_COUNTRY =&quot;FND&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYAcc_click()
   menuActionITTD_COUNTRY =&quot;ACC&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub menuTimerITTD_COUNTRY_timer()
   menuTimerITTD_COUNTRY.enabled = false
   if menuActionITTD_COUNTRY =&quot;ADD&quot; then cmdITTD_COUNTRYADD_CLick
   if menuActionITTD_COUNTRY =&quot;EDIT&quot; then cmdITTD_COUNTRYEDIT_CLick
   if menuActionITTD_COUNTRY =&quot;DEL&quot; then cmdITTD_COUNTRYDEL_CLick
   if menuActionITTD_COUNTRY =&quot;RUN&quot; then cmdITTD_COUNTRYRUN_CLick
   if menuActionITTD_COUNTRY =&quot;REF&quot; then cmdITTD_COUNTRYREF_CLick
   if menuActionITTD_COUNTRY =&quot;PRN&quot; then cmdITTD_COUNTRYPRN_CLick
   if menuActionITTD_COUNTRY =&quot;CFG&quot; then cmdITTD_COUNTRYCFG_CLick
   if menuActionITTD_COUNTRY =&quot;FND&quot; then cmdITTD_COUNTRYFND_CLick
   if menuActionITTD_COUNTRY =&quot;ACC&quot; then cmdITTD_COUNTRYACC_CLick
   menuActionITTD_COUNTRY =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_COUNTRYAdd,cmdITTD_COUNTRYAdd.tag
  LoadBtnPictures cmdITTD_COUNTRYEdit,cmdITTD_COUNTRYEdit.tag
  LoadBtnPictures cmdITTD_COUNTRYDel,cmdITTD_COUNTRYDel.tag
  LoadBtnPictures cmdITTD_COUNTRYRef,cmdITTD_COUNTRYRef.tag
  LoadBtnPictures cmdITTD_COUNTRYPrn,cmdITTD_COUNTRYPrn.tag
  LoadBtnPictures cmdITTD_COUNTRYFnd,cmdITTD_COUNTRYFnd.tag
  LoadBtnPictures cmdITTD_COUNTRYRun,cmdITTD_COUNTRYRun.tag
  LoadBtnPictures cmdITTD_COUNTRYAcc,cmdITTD_COUNTRYAcc.tag
  LoadBtnPictures cmdITTD_COUNTRYCfg,cmdITTD_COUNTRYCfg.tag
  item.ITTD_COUNTRY.PrepareGrid gridITTD_COUNTRY
  LoadGridLayout gridITTD_COUNTRY
  Set fndITTD_COUNTRY = Nothing
  On Error Resume Next
  Set fndITTD_COUNTRY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_COUNTRY.Init gridITTD_COUNTRY
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_COUNTRY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_COUNTRY = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_CAMERA_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_CAMERA" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_CAMERA"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_CAMERA" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_CAMERA"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_CAMERAAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_CAMERAEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_CAMERADel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERADel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_CAMERARef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERARef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_CAMERAPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_CAMERACfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERACfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_CAMERAFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_CAMERARun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_CAMERARun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_CAMERAAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_CAMERA" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Холодильные камеры"/><Properties Name="Name" PropValue="mnuPopupITTD_CAMERA"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_CAMERAAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_CAMERAAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_CAMERAEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_CAMERAEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_CAMERADelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_CAMERADelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_CAMERAOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_CAMERAOpen"/></ControlData><ControlData Name="mnuITTD_CAMERARef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_CAMERARef"/></ControlData><ControlData Name="mnuITTD_CAMERAS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_CAMERAS1"/></ControlData><ControlData Name="mnuITTD_CAMERABuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_CAMERABuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_CAMERACOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_CAMERACOPY"/></ControlData><ControlData Name="mnuITTD_CAMERACUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_CAMERACUT"/></ControlData><ControlData Name="mnuITTD_CAMERAPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_CAMERAPASTE"/></ControlData><ControlData Name="mnuITTD_CAMERACHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACHANGE"/></ControlData><ControlData Name="mnuITTD_CAMERACLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_CAMERAPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_CAMERAPrn"/></ControlData><ControlData Name="mnuITTD_CAMERACfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACfg"/></ControlData><ControlData Name="mnuITTD_CAMERAFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_CAMERAFind"/></ControlData><ControlData Name="mnuITTD_CAMERAAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_CAMERAAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_CAMERA" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_CAMERA"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Холодильные камеры
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_CAMERA as object
private menuActionITTD_CAMERA as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_CAMERACfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_CAMERA,&quot;gridITTD_CAMERA&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_CAMERAPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_CAMERA,&quot;Холодильные камеры&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_CAMERARef_Click()
  on error resume next
  item.ITTD_CAMERA.Refresh
  gridITTD_CAMERA.itemCount = item.ITTD_CAMERA.count
  gridITTD_CAMERA.Refetch
  gridITTD_CAMERA.Refresh
End Sub
Private Sub cmdITTD_CAMERAAcc_Click()
On Error Resume Next
If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
If gridITTD_CAMERA.Row &gt; 0 Then
 If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_CAMERAEdit_Click()
  on error resume next
If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
If gridITTD_CAMERA.Row &gt; 0 then
 If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_CAMERA_admi.Item = u
    again: frmITTD_CAMERA_admi.NotFirstTime = False
    frmITTD_CAMERA_admi.OnInit
    frmITTD_CAMERA_admi.Show vbModal
    If frmITTD_CAMERA_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_CAMERA.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_CAMERADel_Click()
  on error resume next
  gridITTD_CAMERA.Delete
End Sub
Private Sub cmdITTD_CAMERAAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_CAMERA.Add()

      Set frmITTD_CAMERA_admi.Item = u
      again: frmITTD_CAMERA_admi.NotFirstTime = False
      frmITTD_CAMERA_admi.OnInit
      frmITTD_CAMERA_admi.Show vbModal
      If frmITTD_CAMERA_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_CAMERA.ItemCount = Item.ITTD_CAMERA.Count
        gridITTD_CAMERA.Refresh
        gridITTD_CAMERA.RefreshGroups
        gridITTD_CAMERA.Refreshsort
        gridITTD_CAMERA.MoveToBookmark u.ID &amp; &quot;ITTD_CAMERA&quot;
      Else
        Item.ITTD_CAMERA.Delete u.ID
        Item.ITTD_CAMERA.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_CAMERAFnd_Click()
  on error resume next
  fndITTD_CAMERA.ShowForm
End Sub
Private Sub cmdITTD_CAMERARun_Click()
  on error resume next
  gridITTD_CAMERA_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_CAMERA_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_CAMERA.LoadRow gridITTD_CAMERA, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_CAMERA_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_CAMERA&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_CAMERA_DblClick()
  cmdITTD_CAMERAEdit_Click
End Sub
Private Sub gridITTD_CAMERA_KeyPress(KeyAscii As Integer)
  If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_CAMERA.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_CAMERA_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_CAMERA.Row And LastRow &gt; 0 Then
  gridITTD_CAMERA.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_CAMERA.GetRowData(gridITTD_CAMERA.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_CAMERAPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_CAMERA.Add()
    If GetFromBuffer(u) Then
      gridITTD_CAMERA.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_CAMERA_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_CAMERACfg_Click
        End If
    End If
end sub

private sub gridITTD_CAMERA_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_CAMERA
End If
end sub
private sub mnuITTD_CAMERAAdd_click()
   menuActionITTD_CAMERA =&quot;ADD&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAEdit_click()
   menuActionITTD_CAMERA =&quot;EDIT&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERADelete_click()
   menuActionITTD_CAMERA =&quot;DEL&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAOpen_click()
   menuActionITTD_CAMERA =&quot;RUN&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERARef_click()
   menuActionITTD_CAMERA =&quot;REF&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
  Private Sub mnuITTD_CAMERACOPY_Click()
    On Error Resume Next
    If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
    If gridITTD_CAMERA.Row &gt; 0 Then
     If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_CAMERACUT_Click()
    On Error Resume Next
    If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
    If gridITTD_CAMERA.Row &gt; 0 Then
     If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_CAMERA.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_CAMERACHANGE_Click()
  On Error Resume Next
  If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
  If gridITTD_CAMERA.Row &gt; 0 Then
   If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_CAMERA.ItemCount = u.parent.Count
      gridITTD_CAMERA.RefreshRowIndex gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_CAMERACLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_CAMERAPrn_click()
   menuActionITTD_CAMERA =&quot;PRN&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERACfg_click()
   menuActionITTD_CAMERA =&quot;CFG&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAFind_click()
   menuActionITTD_CAMERA =&quot;FND&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAAcc_click()
   menuActionITTD_CAMERA =&quot;ACC&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub menuTimerITTD_CAMERA_timer()
   menuTimerITTD_CAMERA.enabled = false
   if menuActionITTD_CAMERA =&quot;ADD&quot; then cmdITTD_CAMERAADD_CLick
   if menuActionITTD_CAMERA =&quot;EDIT&quot; then cmdITTD_CAMERAEDIT_CLick
   if menuActionITTD_CAMERA =&quot;DEL&quot; then cmdITTD_CAMERADEL_CLick
   if menuActionITTD_CAMERA =&quot;RUN&quot; then cmdITTD_CAMERARUN_CLick
   if menuActionITTD_CAMERA =&quot;REF&quot; then cmdITTD_CAMERAREF_CLick
   if menuActionITTD_CAMERA =&quot;PRN&quot; then cmdITTD_CAMERAPRN_CLick
   if menuActionITTD_CAMERA =&quot;CFG&quot; then cmdITTD_CAMERACFG_CLick
   if menuActionITTD_CAMERA =&quot;FND&quot; then cmdITTD_CAMERAFND_CLick
   if menuActionITTD_CAMERA =&quot;ACC&quot; then cmdITTD_CAMERAACC_CLick
   menuActionITTD_CAMERA =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_CAMERAAdd,cmdITTD_CAMERAAdd.tag
  LoadBtnPictures cmdITTD_CAMERAEdit,cmdITTD_CAMERAEdit.tag
  LoadBtnPictures cmdITTD_CAMERADel,cmdITTD_CAMERADel.tag
  LoadBtnPictures cmdITTD_CAMERARef,cmdITTD_CAMERARef.tag
  LoadBtnPictures cmdITTD_CAMERAPrn,cmdITTD_CAMERAPrn.tag
  LoadBtnPictures cmdITTD_CAMERAFnd,cmdITTD_CAMERAFnd.tag
  LoadBtnPictures cmdITTD_CAMERARun,cmdITTD_CAMERARun.tag
  LoadBtnPictures cmdITTD_CAMERAAcc,cmdITTD_CAMERAAcc.tag
  LoadBtnPictures cmdITTD_CAMERACfg,cmdITTD_CAMERACfg.tag
  item.ITTD_CAMERA.PrepareGrid gridITTD_CAMERA
  LoadGridLayout gridITTD_CAMERA
  Set fndITTD_CAMERA = Nothing
  On Error Resume Next
  Set fndITTD_CAMERA = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_CAMERA.Init gridITTD_CAMERA
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_CAMERA.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_CAMERA.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_CAMERA.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_CAMERA = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_RULE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_RULE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_RULE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_RULE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_RULE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_RULEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_RULEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_RULEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_RULERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_RULEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_RULECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_RULEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_RULERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_RULERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_RULEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_RULE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Правило формирования партии"/><Properties Name="Name" PropValue="mnuPopupITTD_RULE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_RULEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_RULEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_RULEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_RULEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_RULEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_RULEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_RULEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_RULEOpen"/></ControlData><ControlData Name="mnuITTD_RULERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_RULERef"/></ControlData><ControlData Name="mnuITTD_RULES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_RULES1"/></ControlData><ControlData Name="mnuITTD_RULEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_RULEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_RULECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_RULECOPY"/></ControlData><ControlData Name="mnuITTD_RULECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_RULECUT"/></ControlData><ControlData Name="mnuITTD_RULEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_RULEPASTE"/></ControlData><ControlData Name="mnuITTD_RULECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_RULECHANGE"/></ControlData><ControlData Name="mnuITTD_RULECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_RULECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_RULEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_RULEPrn"/></ControlData><ControlData Name="mnuITTD_RULECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_RULECfg"/></ControlData><ControlData Name="mnuITTD_RULEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_RULEFind"/></ControlData><ControlData Name="mnuITTD_RULEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_RULEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_RULE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_RULE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Правило по которому зполняются обязательные поля и составляется код партии
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_RULE as object
private menuActionITTD_RULE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_RULECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_RULE,&quot;gridITTD_RULE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_RULEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_RULE,&quot;Правило формирования партии&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_RULERef_Click()
  on error resume next
  item.ITTD_RULE.Refresh
  gridITTD_RULE.itemCount = item.ITTD_RULE.count
  gridITTD_RULE.Refetch
  gridITTD_RULE.Refresh
End Sub
Private Sub cmdITTD_RULEAcc_Click()
On Error Resume Next
If gridITTD_RULE.ItemCount = 0 Then Exit Sub
If gridITTD_RULE.Row &gt; 0 Then
 If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_RULEEdit_Click()
  on error resume next
If gridITTD_RULE.ItemCount = 0 Then Exit Sub
If gridITTD_RULE.Row &gt; 0 then
 If gridITTD_RULE.RowIndex(gridITTD_RULE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_RULE_admi.Item = u
    again: frmITTD_RULE_admi.NotFirstTime = False
    frmITTD_RULE_admi.OnInit
    frmITTD_RULE_admi.Show vbModal
    If frmITTD_RULE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_RULE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_RULEDel_Click()
  on error resume next
  gridITTD_RULE.Delete
End Sub
Private Sub cmdITTD_RULEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_RULE.Add()

      Set frmITTD_RULE_admi.Item = u
      again: frmITTD_RULE_admi.NotFirstTime = False
      frmITTD_RULE_admi.OnInit
      frmITTD_RULE_admi.Show vbModal
      If frmITTD_RULE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_RULE.ItemCount = Item.ITTD_RULE.Count
        gridITTD_RULE.Refresh
        gridITTD_RULE.RefreshGroups
        gridITTD_RULE.Refreshsort
        gridITTD_RULE.MoveToBookmark u.ID &amp; &quot;ITTD_RULE&quot;
      Else
        Item.ITTD_RULE.Delete u.ID
        Item.ITTD_RULE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_RULEFnd_Click()
  on error resume next
  fndITTD_RULE.ShowForm
End Sub
Private Sub cmdITTD_RULERun_Click()
  on error resume next
  gridITTD_RULE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_RULE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_RULE.LoadRow gridITTD_RULE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_RULE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_RULE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_RULE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_RULE_DblClick()
  cmdITTD_RULEEdit_Click
End Sub
Private Sub gridITTD_RULE_KeyPress(KeyAscii As Integer)
  If gridITTD_RULE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_RULE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_RULE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_RULE.Row And LastRow &gt; 0 Then
  gridITTD_RULE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_RULE.GetRowData(gridITTD_RULE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_RULEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_RULE.Add()
    If GetFromBuffer(u) Then
      gridITTD_RULE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_RULE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_RULECfg_Click
        End If
    End If
end sub

private sub gridITTD_RULE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_RULE
End If
end sub
private sub mnuITTD_RULEAdd_click()
   menuActionITTD_RULE =&quot;ADD&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEEdit_click()
   menuActionITTD_RULE =&quot;EDIT&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEDelete_click()
   menuActionITTD_RULE =&quot;DEL&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEOpen_click()
   menuActionITTD_RULE =&quot;RUN&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULERef_click()
   menuActionITTD_RULE =&quot;REF&quot;
   menuTimerITTD_RULE.enabled = true
end sub
  Private Sub mnuITTD_RULECOPY_Click()
    On Error Resume Next
    If gridITTD_RULE.ItemCount = 0 Then Exit Sub
    If gridITTD_RULE.Row &gt; 0 Then
     If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_RULECUT_Click()
    On Error Resume Next
    If gridITTD_RULE.ItemCount = 0 Then Exit Sub
    If gridITTD_RULE.Row &gt; 0 Then
     If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_RULE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_RULECHANGE_Click()
  On Error Resume Next
  If gridITTD_RULE.ItemCount = 0 Then Exit Sub
  If gridITTD_RULE.Row &gt; 0 Then
   If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_RULE.ItemCount = u.parent.Count
      gridITTD_RULE.RefreshRowIndex gridITTD_RULE.RowIndex(gridITTD_RULE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_RULECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_RULEPrn_click()
   menuActionITTD_RULE =&quot;PRN&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULECfg_click()
   menuActionITTD_RULE =&quot;CFG&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEFind_click()
   menuActionITTD_RULE =&quot;FND&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEAcc_click()
   menuActionITTD_RULE =&quot;ACC&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub menuTimerITTD_RULE_timer()
   menuTimerITTD_RULE.enabled = false
   if menuActionITTD_RULE =&quot;ADD&quot; then cmdITTD_RULEADD_CLick
   if menuActionITTD_RULE =&quot;EDIT&quot; then cmdITTD_RULEEDIT_CLick
   if menuActionITTD_RULE =&quot;DEL&quot; then cmdITTD_RULEDEL_CLick
   if menuActionITTD_RULE =&quot;RUN&quot; then cmdITTD_RULERUN_CLick
   if menuActionITTD_RULE =&quot;REF&quot; then cmdITTD_RULEREF_CLick
   if menuActionITTD_RULE =&quot;PRN&quot; then cmdITTD_RULEPRN_CLick
   if menuActionITTD_RULE =&quot;CFG&quot; then cmdITTD_RULECFG_CLick
   if menuActionITTD_RULE =&quot;FND&quot; then cmdITTD_RULEFND_CLick
   if menuActionITTD_RULE =&quot;ACC&quot; then cmdITTD_RULEACC_CLick
   menuActionITTD_RULE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_RULEAdd,cmdITTD_RULEAdd.tag
  LoadBtnPictures cmdITTD_RULEEdit,cmdITTD_RULEEdit.tag
  LoadBtnPictures cmdITTD_RULEDel,cmdITTD_RULEDel.tag
  LoadBtnPictures cmdITTD_RULERef,cmdITTD_RULERef.tag
  LoadBtnPictures cmdITTD_RULEPrn,cmdITTD_RULEPrn.tag
  LoadBtnPictures cmdITTD_RULEFnd,cmdITTD_RULEFnd.tag
  LoadBtnPictures cmdITTD_RULERun,cmdITTD_RULERun.tag
  LoadBtnPictures cmdITTD_RULEAcc,cmdITTD_RULEAcc.tag
  LoadBtnPictures cmdITTD_RULECfg,cmdITTD_RULECfg.tag
  item.ITTD_RULE.PrepareGrid gridITTD_RULE
  LoadGridLayout gridITTD_RULE
  Set fndITTD_RULE = Nothing
  On Error Resume Next
  Set fndITTD_RULE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_RULE.Init gridITTD_RULE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_RULE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_RULE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_RULE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_RULE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_RULE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_RULE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_RULE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_RULE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_RULE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_RULE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_OPTTYPE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_OPTTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_OPTTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_OPTTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_OPTTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_OPTTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_OPTTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_OPTTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_OPTTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_OPTTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_OPTTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_OPTTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_OPTTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип оптимизации"/><Properties Name="Name" PropValue="mnuPopupITTD_OPTTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_OPTTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_OPTTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_OPTTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_OPTTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEOpen"/></ControlData><ControlData Name="mnuITTD_OPTTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPERef"/></ControlData><ControlData Name="mnuITTD_OPTTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPES1"/></ControlData><ControlData Name="mnuITTD_OPTTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_OPTTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECOPY"/></ControlData><ControlData Name="mnuITTD_OPTTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECUT"/></ControlData><ControlData Name="mnuITTD_OPTTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_OPTTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_OPTTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_OPTTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEPrn"/></ControlData><ControlData Name="mnuITTD_OPTTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECfg"/></ControlData><ControlData Name="mnuITTD_OPTTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEFind"/></ControlData><ControlData Name="mnuITTD_OPTTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_OPTTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Тип оптимизации склада
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_OPTTYPE as object
private menuActionITTD_OPTTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_OPTTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_OPTTYPE,&quot;gridITTD_OPTTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_OPTTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_OPTTYPE,&quot;Тип оптимизации&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_OPTTYPERef_Click()
  on error resume next
  item.ITTD_OPTTYPE.Refresh
  gridITTD_OPTTYPE.itemCount = item.ITTD_OPTTYPE.count
  gridITTD_OPTTYPE.Refetch
  gridITTD_OPTTYPE.Refresh
End Sub
Private Sub cmdITTD_OPTTYPEAcc_Click()
On Error Resume Next
If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_OPTTYPE.Row &gt; 0 Then
 If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_OPTTYPEEdit_Click()
  on error resume next
If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_OPTTYPE.Row &gt; 0 then
 If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_OPTTYPE_admi.Item = u
    again: frmITTD_OPTTYPE_admi.NotFirstTime = False
    frmITTD_OPTTYPE_admi.OnInit
    frmITTD_OPTTYPE_admi.Show vbModal
    If frmITTD_OPTTYPE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_OPTTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_OPTTYPEDel_Click()
  on error resume next
  gridITTD_OPTTYPE.Delete
End Sub
Private Sub cmdITTD_OPTTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_OPTTYPE.Add()

      Set frmITTD_OPTTYPE_admi.Item = u
      again: frmITTD_OPTTYPE_admi.NotFirstTime = False
      frmITTD_OPTTYPE_admi.OnInit
      frmITTD_OPTTYPE_admi.Show vbModal
      If frmITTD_OPTTYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_OPTTYPE.ItemCount = Item.ITTD_OPTTYPE.Count
        gridITTD_OPTTYPE.Refresh
        gridITTD_OPTTYPE.RefreshGroups
        gridITTD_OPTTYPE.Refreshsort
        gridITTD_OPTTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_OPTTYPE&quot;
      Else
        Item.ITTD_OPTTYPE.Delete u.ID
        Item.ITTD_OPTTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_OPTTYPEFnd_Click()
  on error resume next
  fndITTD_OPTTYPE.ShowForm
End Sub
Private Sub cmdITTD_OPTTYPERun_Click()
  on error resume next
  gridITTD_OPTTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_OPTTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_OPTTYPE.LoadRow gridITTD_OPTTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_OPTTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_OPTTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_OPTTYPE_DblClick()
  cmdITTD_OPTTYPEEdit_Click
End Sub
Private Sub gridITTD_OPTTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_OPTTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_OPTTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_OPTTYPE.Row And LastRow &gt; 0 Then
  gridITTD_OPTTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_OPTTYPE.GetRowData(gridITTD_OPTTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_OPTTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_OPTTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_OPTTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_OPTTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_OPTTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_OPTTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_OPTTYPE
End If
end sub
private sub mnuITTD_OPTTYPEAdd_click()
   menuActionITTD_OPTTYPE =&quot;ADD&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEEdit_click()
   menuActionITTD_OPTTYPE =&quot;EDIT&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEDelete_click()
   menuActionITTD_OPTTYPE =&quot;DEL&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEOpen_click()
   menuActionITTD_OPTTYPE =&quot;RUN&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPERef_click()
   menuActionITTD_OPTTYPE =&quot;REF&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
  Private Sub mnuITTD_OPTTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_OPTTYPE.Row &gt; 0 Then
     If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_OPTTYPECUT_Click()
    On Error Resume Next
    If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_OPTTYPE.Row &gt; 0 Then
     If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_OPTTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_OPTTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_OPTTYPE.Row &gt; 0 Then
   If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_OPTTYPE.ItemCount = u.parent.Count
      gridITTD_OPTTYPE.RefreshRowIndex gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_OPTTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_OPTTYPEPrn_click()
   menuActionITTD_OPTTYPE =&quot;PRN&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPECfg_click()
   menuActionITTD_OPTTYPE =&quot;CFG&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEFind_click()
   menuActionITTD_OPTTYPE =&quot;FND&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEAcc_click()
   menuActionITTD_OPTTYPE =&quot;ACC&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub menuTimerITTD_OPTTYPE_timer()
   menuTimerITTD_OPTTYPE.enabled = false
   if menuActionITTD_OPTTYPE =&quot;ADD&quot; then cmdITTD_OPTTYPEADD_CLick
   if menuActionITTD_OPTTYPE =&quot;EDIT&quot; then cmdITTD_OPTTYPEEDIT_CLick
   if menuActionITTD_OPTTYPE =&quot;DEL&quot; then cmdITTD_OPTTYPEDEL_CLick
   if menuActionITTD_OPTTYPE =&quot;RUN&quot; then cmdITTD_OPTTYPERUN_CLick
   if menuActionITTD_OPTTYPE =&quot;REF&quot; then cmdITTD_OPTTYPEREF_CLick
   if menuActionITTD_OPTTYPE =&quot;PRN&quot; then cmdITTD_OPTTYPEPRN_CLick
   if menuActionITTD_OPTTYPE =&quot;CFG&quot; then cmdITTD_OPTTYPECFG_CLick
   if menuActionITTD_OPTTYPE =&quot;FND&quot; then cmdITTD_OPTTYPEFND_CLick
   if menuActionITTD_OPTTYPE =&quot;ACC&quot; then cmdITTD_OPTTYPEACC_CLick
   menuActionITTD_OPTTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_OPTTYPEAdd,cmdITTD_OPTTYPEAdd.tag
  LoadBtnPictures cmdITTD_OPTTYPEEdit,cmdITTD_OPTTYPEEdit.tag
  LoadBtnPictures cmdITTD_OPTTYPEDel,cmdITTD_OPTTYPEDel.tag
  LoadBtnPictures cmdITTD_OPTTYPERef,cmdITTD_OPTTYPERef.tag
  LoadBtnPictures cmdITTD_OPTTYPEPrn,cmdITTD_OPTTYPEPrn.tag
  LoadBtnPictures cmdITTD_OPTTYPEFnd,cmdITTD_OPTTYPEFnd.tag
  LoadBtnPictures cmdITTD_OPTTYPERun,cmdITTD_OPTTYPERun.tag
  LoadBtnPictures cmdITTD_OPTTYPEAcc,cmdITTD_OPTTYPEAcc.tag
  LoadBtnPictures cmdITTD_OPTTYPECfg,cmdITTD_OPTTYPECfg.tag
  item.ITTD_OPTTYPE.PrepareGrid gridITTD_OPTTYPE
  LoadGridLayout gridITTD_OPTTYPE
  Set fndITTD_OPTTYPE = Nothing
  On Error Resume Next
  Set fndITTD_OPTTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_OPTTYPE.Init gridITTD_OPTTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_OPTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_OPTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_OPTTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_OPTTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_MOROZ_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_MOROZ" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_MOROZ"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_MOROZ" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_MOROZ"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_MOROZAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_MOROZEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_MOROZDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_MOROZRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_MOROZPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_MOROZCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_MOROZFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_MOROZRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_MOROZRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_MOROZAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_MOROZ" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Параметры выморозки"/><Properties Name="Name" PropValue="mnuPopupITTD_MOROZ"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_MOROZAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_MOROZAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_MOROZEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_MOROZEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_MOROZDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_MOROZDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_MOROZOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_MOROZOpen"/></ControlData><ControlData Name="mnuITTD_MOROZRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_MOROZRef"/></ControlData><ControlData Name="mnuITTD_MOROZS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_MOROZS1"/></ControlData><ControlData Name="mnuITTD_MOROZBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_MOROZBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_MOROZCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_MOROZCOPY"/></ControlData><ControlData Name="mnuITTD_MOROZCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_MOROZCUT"/></ControlData><ControlData Name="mnuITTD_MOROZPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_MOROZPASTE"/></ControlData><ControlData Name="mnuITTD_MOROZCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCHANGE"/></ControlData><ControlData Name="mnuITTD_MOROZCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_MOROZPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_MOROZPrn"/></ControlData><ControlData Name="mnuITTD_MOROZCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCfg"/></ControlData><ControlData Name="mnuITTD_MOROZFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_MOROZFind"/></ControlData><ControlData Name="mnuITTD_MOROZAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_MOROZAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_MOROZ" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_MOROZ"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Параметры выморозки
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_MOROZ as object
private menuActionITTD_MOROZ as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_MOROZCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_MOROZ,&quot;gridITTD_MOROZ&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_MOROZPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_MOROZ,&quot;Параметры выморозки&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_MOROZRef_Click()
  on error resume next
  item.ITTD_MOROZ.Refresh
  gridITTD_MOROZ.itemCount = item.ITTD_MOROZ.count
  gridITTD_MOROZ.Refetch
  gridITTD_MOROZ.Refresh
End Sub
Private Sub cmdITTD_MOROZAcc_Click()
On Error Resume Next
If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
If gridITTD_MOROZ.Row &gt; 0 Then
 If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_MOROZEdit_Click()
  on error resume next
If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
If gridITTD_MOROZ.Row &gt; 0 then
 If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_MOROZ_admi.Item = u
    again: frmITTD_MOROZ_admi.NotFirstTime = False
    frmITTD_MOROZ_admi.OnInit
    frmITTD_MOROZ_admi.Show vbModal
    If frmITTD_MOROZ_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_MOROZ.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_MOROZDel_Click()
  on error resume next
  gridITTD_MOROZ.Delete
End Sub
Private Sub cmdITTD_MOROZAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_MOROZ.Add()

      Set frmITTD_MOROZ_admi.Item = u
      again: frmITTD_MOROZ_admi.NotFirstTime = False
      frmITTD_MOROZ_admi.OnInit
      frmITTD_MOROZ_admi.Show vbModal
      If frmITTD_MOROZ_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_MOROZ.ItemCount = Item.ITTD_MOROZ.Count
        gridITTD_MOROZ.Refresh
        gridITTD_MOROZ.RefreshGroups
        gridITTD_MOROZ.Refreshsort
        gridITTD_MOROZ.MoveToBookmark u.ID &amp; &quot;ITTD_MOROZ&quot;
      Else
        Item.ITTD_MOROZ.Delete u.ID
        Item.ITTD_MOROZ.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_MOROZFnd_Click()
  on error resume next
  fndITTD_MOROZ.ShowForm
End Sub
Private Sub cmdITTD_MOROZRun_Click()
  on error resume next
  gridITTD_MOROZ_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_MOROZ_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_MOROZ.LoadRow gridITTD_MOROZ, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_MOROZ_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_MOROZ&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_MOROZ_DblClick()
  cmdITTD_MOROZEdit_Click
End Sub
Private Sub gridITTD_MOROZ_KeyPress(KeyAscii As Integer)
  If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_MOROZ.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_MOROZ_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_MOROZ.Row And LastRow &gt; 0 Then
  gridITTD_MOROZ.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_MOROZ.GetRowData(gridITTD_MOROZ.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_MOROZPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_MOROZ.Add()
    If GetFromBuffer(u) Then
      gridITTD_MOROZ.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_MOROZ_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_MOROZCfg_Click
        End If
    End If
end sub

private sub gridITTD_MOROZ_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_MOROZ
End If
end sub
private sub mnuITTD_MOROZAdd_click()
   menuActionITTD_MOROZ =&quot;ADD&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZEdit_click()
   menuActionITTD_MOROZ =&quot;EDIT&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZDelete_click()
   menuActionITTD_MOROZ =&quot;DEL&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZOpen_click()
   menuActionITTD_MOROZ =&quot;RUN&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZRef_click()
   menuActionITTD_MOROZ =&quot;REF&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
  Private Sub mnuITTD_MOROZCOPY_Click()
    On Error Resume Next
    If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
    If gridITTD_MOROZ.Row &gt; 0 Then
     If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_MOROZCUT_Click()
    On Error Resume Next
    If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
    If gridITTD_MOROZ.Row &gt; 0 Then
     If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_MOROZ.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_MOROZCHANGE_Click()
  On Error Resume Next
  If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
  If gridITTD_MOROZ.Row &gt; 0 Then
   If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_MOROZ.ItemCount = u.parent.Count
      gridITTD_MOROZ.RefreshRowIndex gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_MOROZCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_MOROZPrn_click()
   menuActionITTD_MOROZ =&quot;PRN&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZCfg_click()
   menuActionITTD_MOROZ =&quot;CFG&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZFind_click()
   menuActionITTD_MOROZ =&quot;FND&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZAcc_click()
   menuActionITTD_MOROZ =&quot;ACC&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub menuTimerITTD_MOROZ_timer()
   menuTimerITTD_MOROZ.enabled = false
   if menuActionITTD_MOROZ =&quot;ADD&quot; then cmdITTD_MOROZADD_CLick
   if menuActionITTD_MOROZ =&quot;EDIT&quot; then cmdITTD_MOROZEDIT_CLick
   if menuActionITTD_MOROZ =&quot;DEL&quot; then cmdITTD_MOROZDEL_CLick
   if menuActionITTD_MOROZ =&quot;RUN&quot; then cmdITTD_MOROZRUN_CLick
   if menuActionITTD_MOROZ =&quot;REF&quot; then cmdITTD_MOROZREF_CLick
   if menuActionITTD_MOROZ =&quot;PRN&quot; then cmdITTD_MOROZPRN_CLick
   if menuActionITTD_MOROZ =&quot;CFG&quot; then cmdITTD_MOROZCFG_CLick
   if menuActionITTD_MOROZ =&quot;FND&quot; then cmdITTD_MOROZFND_CLick
   if menuActionITTD_MOROZ =&quot;ACC&quot; then cmdITTD_MOROZACC_CLick
   menuActionITTD_MOROZ =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_MOROZAdd,cmdITTD_MOROZAdd.tag
  LoadBtnPictures cmdITTD_MOROZEdit,cmdITTD_MOROZEdit.tag
  LoadBtnPictures cmdITTD_MOROZDel,cmdITTD_MOROZDel.tag
  LoadBtnPictures cmdITTD_MOROZRef,cmdITTD_MOROZRef.tag
  LoadBtnPictures cmdITTD_MOROZPrn,cmdITTD_MOROZPrn.tag
  LoadBtnPictures cmdITTD_MOROZFnd,cmdITTD_MOROZFnd.tag
  LoadBtnPictures cmdITTD_MOROZRun,cmdITTD_MOROZRun.tag
  LoadBtnPictures cmdITTD_MOROZAcc,cmdITTD_MOROZAcc.tag
  LoadBtnPictures cmdITTD_MOROZCfg,cmdITTD_MOROZCfg.tag
  item.ITTD_MOROZ.PrepareGrid gridITTD_MOROZ
  LoadGridLayout gridITTD_MOROZ
  Set fndITTD_MOROZ = Nothing
  On Error Resume Next
  Set fndITTD_MOROZ = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_MOROZ.Init gridITTD_MOROZ
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_MOROZ.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_MOROZ.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_MOROZ.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_MOROZ = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_EMAIL_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_EMAIL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_EMAIL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_EMAIL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_EMAIL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_EMAILAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_EMAILEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_EMAILDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_EMAILRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_EMAILPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_EMAILCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_EMAILFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_EMAILRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_EMAILRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_EMAILAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_EMAIL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Почтовые адреса"/><Properties Name="Name" PropValue="mnuPopupITTD_EMAIL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_EMAILAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_EMAILAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_EMAILEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_EMAILEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_EMAILDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_EMAILDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_EMAILOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_EMAILOpen"/></ControlData><ControlData Name="mnuITTD_EMAILRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_EMAILRef"/></ControlData><ControlData Name="mnuITTD_EMAILS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_EMAILS1"/></ControlData><ControlData Name="mnuITTD_EMAILBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_EMAILBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_EMAILCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_EMAILCOPY"/></ControlData><ControlData Name="mnuITTD_EMAILCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_EMAILCUT"/></ControlData><ControlData Name="mnuITTD_EMAILPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_EMAILPASTE"/></ControlData><ControlData Name="mnuITTD_EMAILCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCHANGE"/></ControlData><ControlData Name="mnuITTD_EMAILCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_EMAILPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_EMAILPrn"/></ControlData><ControlData Name="mnuITTD_EMAILCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCfg"/></ControlData><ControlData Name="mnuITTD_EMAILFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_EMAILFind"/></ControlData><ControlData Name="mnuITTD_EMAILAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_EMAILAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_EMAIL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_EMAIL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Адреса получателей информации о выморозке
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_EMAIL as object
private menuActionITTD_EMAIL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_EMAILCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_EMAIL,&quot;gridITTD_EMAIL&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_EMAILPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_EMAIL,&quot;Почтовые адреса&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_EMAILRef_Click()
  on error resume next
  item.ITTD_EMAIL.Refresh
  gridITTD_EMAIL.itemCount = item.ITTD_EMAIL.count
  gridITTD_EMAIL.Refetch
  gridITTD_EMAIL.Refresh
End Sub
Private Sub cmdITTD_EMAILAcc_Click()
On Error Resume Next
If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
If gridITTD_EMAIL.Row &gt; 0 Then
 If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_EMAILEdit_Click()
  on error resume next
If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
If gridITTD_EMAIL.Row &gt; 0 then
 If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_EMAIL_admi.Item = u
    again: frmITTD_EMAIL_admi.NotFirstTime = False
    frmITTD_EMAIL_admi.OnInit
    frmITTD_EMAIL_admi.Show vbModal
    If frmITTD_EMAIL_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_EMAIL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_EMAILDel_Click()
  on error resume next
  gridITTD_EMAIL.Delete
End Sub
Private Sub cmdITTD_EMAILAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_EMAIL.Add()

      Set frmITTD_EMAIL_admi.Item = u
      again: frmITTD_EMAIL_admi.NotFirstTime = False
      frmITTD_EMAIL_admi.OnInit
      frmITTD_EMAIL_admi.Show vbModal
      If frmITTD_EMAIL_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_EMAIL.ItemCount = Item.ITTD_EMAIL.Count
        gridITTD_EMAIL.Refresh
        gridITTD_EMAIL.RefreshGroups
        gridITTD_EMAIL.Refreshsort
        gridITTD_EMAIL.MoveToBookmark u.ID &amp; &quot;ITTD_EMAIL&quot;
      Else
        Item.ITTD_EMAIL.Delete u.ID
        Item.ITTD_EMAIL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_EMAILFnd_Click()
  on error resume next
  fndITTD_EMAIL.ShowForm
End Sub
Private Sub cmdITTD_EMAILRun_Click()
  on error resume next
  gridITTD_EMAIL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_EMAIL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_EMAIL.LoadRow gridITTD_EMAIL, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_EMAIL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_EMAIL&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_EMAIL_DblClick()
  cmdITTD_EMAILEdit_Click
End Sub
Private Sub gridITTD_EMAIL_KeyPress(KeyAscii As Integer)
  If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_EMAIL.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_EMAIL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_EMAIL.Row And LastRow &gt; 0 Then
  gridITTD_EMAIL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_EMAIL.GetRowData(gridITTD_EMAIL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_EMAILPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_EMAIL.Add()
    If GetFromBuffer(u) Then
      gridITTD_EMAIL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_EMAIL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_EMAILCfg_Click
        End If
    End If
end sub

private sub gridITTD_EMAIL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_EMAIL
End If
end sub
private sub mnuITTD_EMAILAdd_click()
   menuActionITTD_EMAIL =&quot;ADD&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILEdit_click()
   menuActionITTD_EMAIL =&quot;EDIT&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILDelete_click()
   menuActionITTD_EMAIL =&quot;DEL&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILOpen_click()
   menuActionITTD_EMAIL =&quot;RUN&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILRef_click()
   menuActionITTD_EMAIL =&quot;REF&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
  Private Sub mnuITTD_EMAILCOPY_Click()
    On Error Resume Next
    If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
    If gridITTD_EMAIL.Row &gt; 0 Then
     If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_EMAILCUT_Click()
    On Error Resume Next
    If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
    If gridITTD_EMAIL.Row &gt; 0 Then
     If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_EMAIL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_EMAILCHANGE_Click()
  On Error Resume Next
  If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
  If gridITTD_EMAIL.Row &gt; 0 Then
   If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_EMAIL.ItemCount = u.parent.Count
      gridITTD_EMAIL.RefreshRowIndex gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_EMAILCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_EMAILPrn_click()
   menuActionITTD_EMAIL =&quot;PRN&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILCfg_click()
   menuActionITTD_EMAIL =&quot;CFG&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILFind_click()
   menuActionITTD_EMAIL =&quot;FND&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILAcc_click()
   menuActionITTD_EMAIL =&quot;ACC&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub menuTimerITTD_EMAIL_timer()
   menuTimerITTD_EMAIL.enabled = false
   if menuActionITTD_EMAIL =&quot;ADD&quot; then cmdITTD_EMAILADD_CLick
   if menuActionITTD_EMAIL =&quot;EDIT&quot; then cmdITTD_EMAILEDIT_CLick
   if menuActionITTD_EMAIL =&quot;DEL&quot; then cmdITTD_EMAILDEL_CLick
   if menuActionITTD_EMAIL =&quot;RUN&quot; then cmdITTD_EMAILRUN_CLick
   if menuActionITTD_EMAIL =&quot;REF&quot; then cmdITTD_EMAILREF_CLick
   if menuActionITTD_EMAIL =&quot;PRN&quot; then cmdITTD_EMAILPRN_CLick
   if menuActionITTD_EMAIL =&quot;CFG&quot; then cmdITTD_EMAILCFG_CLick
   if menuActionITTD_EMAIL =&quot;FND&quot; then cmdITTD_EMAILFND_CLick
   if menuActionITTD_EMAIL =&quot;ACC&quot; then cmdITTD_EMAILACC_CLick
   menuActionITTD_EMAIL =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_EMAILAdd,cmdITTD_EMAILAdd.tag
  LoadBtnPictures cmdITTD_EMAILEdit,cmdITTD_EMAILEdit.tag
  LoadBtnPictures cmdITTD_EMAILDel,cmdITTD_EMAILDel.tag
  LoadBtnPictures cmdITTD_EMAILRef,cmdITTD_EMAILRef.tag
  LoadBtnPictures cmdITTD_EMAILPrn,cmdITTD_EMAILPrn.tag
  LoadBtnPictures cmdITTD_EMAILFnd,cmdITTD_EMAILFnd.tag
  LoadBtnPictures cmdITTD_EMAILRun,cmdITTD_EMAILRun.tag
  LoadBtnPictures cmdITTD_EMAILAcc,cmdITTD_EMAILAcc.tag
  LoadBtnPictures cmdITTD_EMAILCfg,cmdITTD_EMAILCfg.tag
  item.ITTD_EMAIL.PrepareGrid gridITTD_EMAIL
  LoadGridLayout gridITTD_EMAIL
  Set fndITTD_EMAIL = Nothing
  On Error Resume Next
  Set fndITTD_EMAIL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_EMAIL.Init gridITTD_EMAIL
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_EMAIL.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_EMAIL.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_EMAIL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_EMAIL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctladmi_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_GTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_GTYPE_admi"><Properties Name="Name" PropValue="pnlITTD_GTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_ZTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_ZTYPE_admi"><Properties Name="Name" PropValue="pnlITTD_ZTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_PLTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_PLTYPE_admi"><Properties Name="Name" PropValue="pnlITTD_PLTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_QTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_QTYPE_admi"><Properties Name="Name" PropValue="pnlITTD_QTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_ATYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_ATYPE_admi"><Properties Name="Name" PropValue="pnlITTD_ATYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_SRV" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_SRV_admi"><Properties Name="Name" PropValue="pnlITTD_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_PART" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_PART_admi"><Properties Name="Name" PropValue="pnlITTD_PART"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_FACTORY" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_FACTORY_admi"><Properties Name="Name" PropValue="pnlITTD_FACTORY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_KILLPLACE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_KILLPLACE_admi"><Properties Name="Name" PropValue="pnlITTD_KILLPLACE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_COUNTRY" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_COUNTRY_admi"><Properties Name="Name" PropValue="pnlITTD_COUNTRY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_CAMERA" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_CAMERA_admi"><Properties Name="Name" PropValue="pnlITTD_CAMERA"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_RULE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_RULE_admi"><Properties Name="Name" PropValue="pnlITTD_RULE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_OPTTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_OPTTYPE_admi"><Properties Name="Name" PropValue="pnlITTD_OPTTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_MOROZ" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_MOROZ_admi"><Properties Name="Name" PropValue="pnlITTD_MOROZ"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_EMAIL" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_EMAIL_admi"><Properties Name="Name" PropValue="pnlITTD_EMAIL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим admi
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlITTD_GTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_ZTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_PLTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_QTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_ATYPE.IsOK
if IsItOk then IsItOk = pnlITTD_SRV.IsOK
if IsItOk then IsItOk = pnlITTD_PART.IsOK
if IsItOk then IsItOk = pnlITTD_FACTORY.IsOK
if IsItOk then IsItOk = pnlITTD_KILLPLACE.IsOK
if IsItOk then IsItOk = pnlITTD_COUNTRY.IsOK
if IsItOk then IsItOk = pnlITTD_CAMERA.IsOK
if IsItOk then IsItOk = pnlITTD_RULE.IsOK
if IsItOk then IsItOk = pnlITTD_OPTTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_MOROZ.IsOK
if IsItOk then IsItOk = pnlITTD_EMAIL.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlITTD_EMAIL.Visible = False
  pnlITTD_MOROZ.Visible = False
  pnlITTD_OPTTYPE.Visible = False
  pnlITTD_RULE.Visible = False
  pnlITTD_CAMERA.Visible = False
  pnlITTD_COUNTRY.Visible = False
  pnlITTD_KILLPLACE.Visible = False
  pnlITTD_FACTORY.Visible = False
  pnlITTD_PART.Visible = False
  pnlITTD_SRV.Visible = False
  pnlITTD_ATYPE.Visible = False
  pnlITTD_QTYPE.Visible = False
  pnlITTD_PLTYPE.Visible = False
  pnlITTD_ZTYPE.Visible = False
  pnlITTD_GTYPE.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ITTD_GTYPE&quot;
     With pnlITTD_GTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_GTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_ZTYPE&quot;
     With pnlITTD_ZTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_ZTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_PLTYPE&quot;
     With pnlITTD_PLTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_PLTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_QTYPE&quot;
     With pnlITTD_QTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_QTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_ATYPE&quot;
     With pnlITTD_ATYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_ATYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_SRV&quot;
     With pnlITTD_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_SRV.OnClick item,parentform
     End With
   Case &quot;ITTD_PART&quot;
     With pnlITTD_PART
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_PART.OnClick item,parentform
     End With
   Case &quot;ITTD_FACTORY&quot;
     With pnlITTD_FACTORY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_FACTORY.OnClick item,parentform
     End With
   Case &quot;ITTD_KILLPLACE&quot;
     With pnlITTD_KILLPLACE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_KILLPLACE.OnClick item,parentform
     End With
   Case &quot;ITTD_COUNTRY&quot;
     With pnlITTD_COUNTRY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_COUNTRY.OnClick item,parentform
     End With
   Case &quot;ITTD_CAMERA&quot;
     With pnlITTD_CAMERA
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_CAMERA.OnClick item,parentform
     End With
   Case &quot;ITTD_RULE&quot;
     With pnlITTD_RULE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_RULE.OnClick item,parentform
     End With
   Case &quot;ITTD_OPTTYPE&quot;
     With pnlITTD_OPTTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_OPTTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_MOROZ&quot;
     With pnlITTD_MOROZ
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_MOROZ.OnClick item,parentform
     End With
   Case &quot;ITTD_EMAIL&quot;
     With pnlITTD_EMAIL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_EMAIL.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Тип товара&quot;
ts.Tabs.Item(1).key = &quot;ITTD_GTYPE&quot;
pnlITTD_GTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_ZTYPE&quot;, &quot;Тип зоны&quot;)
pnlITTD_ZTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_PLTYPE&quot;, &quot;Тип палеты&quot;)
pnlITTD_PLTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_QTYPE&quot;, &quot;Тип заявки&quot;)
pnlITTD_QTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_ATYPE&quot;, &quot;Тип операции&quot;)
pnlITTD_ATYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_SRV&quot;, &quot;Услуги&quot;)
pnlITTD_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_PART&quot;, &quot;Партия товара&quot;)
pnlITTD_PART.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_FACTORY&quot;, &quot;Завод&quot;)
pnlITTD_FACTORY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_KILLPLACE&quot;, &quot;Бойня&quot;)
pnlITTD_KILLPLACE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_COUNTRY&quot;, &quot;Страна&quot;)
pnlITTD_COUNTRY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_CAMERA&quot;, &quot;Холодильные камеры&quot;)
pnlITTD_CAMERA.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_RULE&quot;, &quot;Правило формирования партии&quot;)
pnlITTD_RULE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_OPTTYPE&quot;, &quot;Тип оптимизации&quot;)
pnlITTD_OPTTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_MOROZ&quot;, &quot;Параметры выморозки&quot;)
pnlITTD_MOROZ.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_EMAIL&quot;, &quot;Почтовые адреса&quot;)
pnlITTD_EMAIL.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ITTD&quot;, &quot;ctladmi_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlITTD_GTYPE.CloseClass
 pnlITTD_ZTYPE.CloseClass
 pnlITTD_PLTYPE.CloseClass
 pnlITTD_QTYPE.CloseClass
 pnlITTD_ATYPE.CloseClass
 pnlITTD_SRV.CloseClass
 pnlITTD_PART.CloseClass
 pnlITTD_FACTORY.CloseClass
 pnlITTD_KILLPLACE.CloseClass
 pnlITTD_COUNTRY.CloseClass
 pnlITTD_CAMERA.CloseClass
 pnlITTD_RULE.CloseClass
 pnlITTD_OPTTYPE.CloseClass
 pnlITTD_MOROZ.CloseClass
 pnlITTD_EMAIL.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlITTD_GTYPE.OnSave
 pnlITTD_ZTYPE.OnSave
 pnlITTD_PLTYPE.OnSave
 pnlITTD_QTYPE.OnSave
 pnlITTD_ATYPE.OnSave
 pnlITTD_SRV.OnSave
 pnlITTD_PART.OnSave
 pnlITTD_FACTORY.OnSave
 pnlITTD_KILLPLACE.OnSave
 pnlITTD_COUNTRY.OnSave
 pnlITTD_CAMERA.OnSave
 pnlITTD_RULE.OnSave
 pnlITTD_OPTTYPE.OnSave
 pnlITTD_MOROZ.OnSave
 pnlITTD_EMAIL.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlITTD_GTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_ZTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_PLTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_QTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_ATYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_PART.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_FACTORY.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_KILLPLACE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_COUNTRY.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_CAMERA.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_RULE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_OPTTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_MOROZ.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_EMAIL.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmadmi_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ITTDGUI.ctladmi_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим admi
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_GTYPE_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_GTYPEread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип товара"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_GTYPE режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot;
  Open s &amp; Me.name &amp; &quot;{7045B935-1B43-4B42-B108-4E8A6F34A707}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_ZTYPE_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_ZTYPEread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип зоны"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_ZTYPE режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot;
  Open s &amp; Me.name &amp; &quot;{9974B0E3-D33B-470B-AE46-4804C705E053}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_PLTYPE_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_PLTYPEread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип палеты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_PLTYPE режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot;
  Open s &amp; Me.name &amp; &quot;{CB440CF3-F9D4-4022-9F1C-1F2E36751A0C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_QTYPE_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_QTYPEread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип заявки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_QTYPE режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot;
  Open s &amp; Me.name &amp; &quot;{7CBD93C0-2884-402B-83B0-8C237267375D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_ATYPE_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_ATYPEread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип операции"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_ATYPE режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot;
  Open s &amp; Me.name &amp; &quot;{8CE147E3-2BF2-47BE-8CE2-AE6E17806D05}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_SRV_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_SRVread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Услуги"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_SRV режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot;
  Open s &amp; Me.name &amp; &quot;{653C9BD5-C4F8-4204-80B2-A4B2BBDCEE4B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_PART_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_PARTread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Партия товара"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_PART режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot;
  Open s &amp; Me.name &amp; &quot;{43FAA002-7280-4F14-8228-D1865CA6DF9E}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_FACTORY_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_FACTORYread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Завод"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_FACTORY режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot;
  Open s &amp; Me.name &amp; &quot;{210E1DFE-ACB0-4602-8249-2C2E422856C7}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_KILLPLACE_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_KILLPLACEread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Бойня"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_KILLPLACE режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot;
  Open s &amp; Me.name &amp; &quot;{24650B35-FC8E-4839-A7CB-60560615FF1D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_COUNTRY_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_COUNTRYread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Страна"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_COUNTRY режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot;
  Open s &amp; Me.name &amp; &quot;{F77A9BFE-C55C-42EC-A08A-69E7D1DB537E}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_CAMERA_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_CAMERAread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Холодильные камеры"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Холодильные камеры"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_CAMERA режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot;
  Open s &amp; Me.name &amp; &quot;{C22EDBF8-3A33-4EF3-AB85-A087E74A31E4}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_RULE_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_RULEread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Правило по которому зполняются обязательные поля и составляется код партии"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Правило формирования партии"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_RULE режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot;
  Open s &amp; Me.name &amp; &quot;{8C9C0759-60E8-4A1E-B0F6-1AD103A5F617}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_OPTTYPE_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_OPTTYPEread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип оптимизации склада"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип оптимизации"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_OPTTYPE режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot;
  Open s &amp; Me.name &amp; &quot;{25980457-66C3-47C0-BA23-C545F891A545}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_MOROZ_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_MOROZread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Параметры выморозки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Параметры выморозки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_MOROZ режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot;
  Open s &amp; Me.name &amp; &quot;{B28B5C71-FF16-499C-B958-156AC33E95F1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmITTD_EMAIL_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ITTDGUI.ITTD_EMAILread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Адреса получателей информации о выморозке"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Почтовые адреса"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела ITTD_EMAIL режим read
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot;
  Open s &amp; Me.name &amp; &quot;{892A1823-AC76-49C8-AD08-CAC411DC745C}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_GTYPE_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_GTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_GTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_GTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_GTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_GTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_GTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_GTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_GTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_GTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_GTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_GTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_GTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_GTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_GTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_GTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип товара"/><Properties Name="Name" PropValue="mnuPopupITTD_GTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_GTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_GTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_GTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_GTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_GTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_GTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_GTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_GTYPEOpen"/></ControlData><ControlData Name="mnuITTD_GTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_GTYPERef"/></ControlData><ControlData Name="mnuITTD_GTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_GTYPES1"/></ControlData><ControlData Name="mnuITTD_GTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_GTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_GTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_GTYPECOPY"/></ControlData><ControlData Name="mnuITTD_GTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_GTYPECUT"/></ControlData><ControlData Name="mnuITTD_GTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_GTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_GTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_GTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_GTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_GTYPEPrn"/></ControlData><ControlData Name="mnuITTD_GTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECfg"/></ControlData><ControlData Name="mnuITTD_GTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_GTYPEFind"/></ControlData><ControlData Name="mnuITTD_GTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_GTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_GTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_GTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_GTYPE as object
private menuActionITTD_GTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_GTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_GTYPE,&quot;gridITTD_GTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_GTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_GTYPE,&quot;Тип товара&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_GTYPERef_Click()
  on error resume next
  item.ITTD_GTYPE.Refresh
  gridITTD_GTYPE.itemCount = item.ITTD_GTYPE.count
  gridITTD_GTYPE.Refetch
  gridITTD_GTYPE.Refresh
End Sub
Private Sub cmdITTD_GTYPEAcc_Click()
On Error Resume Next
If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_GTYPE.Row &gt; 0 Then
 If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_GTYPEEdit_Click()
  on error resume next
If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_GTYPE.Row &gt; 0 then
 If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_GTYPE_read.Item = u
    again: frmITTD_GTYPE_read.NotFirstTime = False
    frmITTD_GTYPE_read.OnInit
    frmITTD_GTYPE_read.Show vbModal
    If frmITTD_GTYPE_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_GTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_GTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_GTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_GTYPE.Add()

      Set frmITTD_GTYPE_read.Item = u
      again: frmITTD_GTYPE_read.NotFirstTime = False
      frmITTD_GTYPE_read.OnInit
      frmITTD_GTYPE_read.Show vbModal
      If frmITTD_GTYPE_read.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_GTYPE.ItemCount = Item.ITTD_GTYPE.Count
        gridITTD_GTYPE.Refresh
        gridITTD_GTYPE.RefreshGroups
        gridITTD_GTYPE.Refreshsort
        gridITTD_GTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_GTYPE&quot;
      Else
        Item.ITTD_GTYPE.Delete u.ID
        Item.ITTD_GTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_GTYPEFnd_Click()
  on error resume next
  fndITTD_GTYPE.ShowForm
End Sub
Private Sub cmdITTD_GTYPERun_Click()
  on error resume next
  gridITTD_GTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_GTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_GTYPE.LoadRow gridITTD_GTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_GTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_GTYPE_DblClick()
  cmdITTD_GTYPEEdit_Click
End Sub
Private Sub gridITTD_GTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_GTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_GTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_GTYPE.Row And LastRow &gt; 0 Then
  gridITTD_GTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_GTYPE.GetRowData(gridITTD_GTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_GTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_GTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_GTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_GTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_GTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_GTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_GTYPE
End If
end sub
private sub mnuITTD_GTYPEAdd_click()
   menuActionITTD_GTYPE =&quot;ADD&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEEdit_click()
   menuActionITTD_GTYPE =&quot;EDIT&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEDelete_click()
   menuActionITTD_GTYPE =&quot;DEL&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEOpen_click()
   menuActionITTD_GTYPE =&quot;RUN&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPERef_click()
   menuActionITTD_GTYPE =&quot;REF&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
  Private Sub mnuITTD_GTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_GTYPE.Row &gt; 0 Then
     If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_GTYPECUT_Click()
    On Error Resume Next
    If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_GTYPE.Row &gt; 0 Then
     If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_GTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_GTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_GTYPE.Row &gt; 0 Then
   If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_GTYPE.ItemCount = u.parent.Count
      gridITTD_GTYPE.RefreshRowIndex gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_GTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_GTYPEPrn_click()
   menuActionITTD_GTYPE =&quot;PRN&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPECfg_click()
   menuActionITTD_GTYPE =&quot;CFG&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEFind_click()
   menuActionITTD_GTYPE =&quot;FND&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEAcc_click()
   menuActionITTD_GTYPE =&quot;ACC&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub menuTimerITTD_GTYPE_timer()
   menuTimerITTD_GTYPE.enabled = false
   if menuActionITTD_GTYPE =&quot;ADD&quot; then cmdITTD_GTYPEADD_CLick
   if menuActionITTD_GTYPE =&quot;EDIT&quot; then cmdITTD_GTYPEEDIT_CLick
   if menuActionITTD_GTYPE =&quot;DEL&quot; then cmdITTD_GTYPEDEL_CLick
   if menuActionITTD_GTYPE =&quot;RUN&quot; then cmdITTD_GTYPERUN_CLick
   if menuActionITTD_GTYPE =&quot;REF&quot; then cmdITTD_GTYPEREF_CLick
   if menuActionITTD_GTYPE =&quot;PRN&quot; then cmdITTD_GTYPEPRN_CLick
   if menuActionITTD_GTYPE =&quot;CFG&quot; then cmdITTD_GTYPECFG_CLick
   if menuActionITTD_GTYPE =&quot;FND&quot; then cmdITTD_GTYPEFND_CLick
   if menuActionITTD_GTYPE =&quot;ACC&quot; then cmdITTD_GTYPEACC_CLick
   menuActionITTD_GTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_GTYPEAdd,cmdITTD_GTYPEAdd.tag
  LoadBtnPictures cmdITTD_GTYPEEdit,cmdITTD_GTYPEEdit.tag
  LoadBtnPictures cmdITTD_GTYPEDel,cmdITTD_GTYPEDel.tag
  LoadBtnPictures cmdITTD_GTYPERef,cmdITTD_GTYPERef.tag
  LoadBtnPictures cmdITTD_GTYPEPrn,cmdITTD_GTYPEPrn.tag
  LoadBtnPictures cmdITTD_GTYPEFnd,cmdITTD_GTYPEFnd.tag
  LoadBtnPictures cmdITTD_GTYPERun,cmdITTD_GTYPERun.tag
  LoadBtnPictures cmdITTD_GTYPEAcc,cmdITTD_GTYPEAcc.tag
  LoadBtnPictures cmdITTD_GTYPECfg,cmdITTD_GTYPECfg.tag
  item.ITTD_GTYPE.PrepareGrid gridITTD_GTYPE
  LoadGridLayout gridITTD_GTYPE
  Set fndITTD_GTYPE = Nothing
  On Error Resume Next
  Set fndITTD_GTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_GTYPE.Init gridITTD_GTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_GTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_GTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_GTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_GTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_ZTYPE_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_ZTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_ZTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_ZTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_ZTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_ZTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ZTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ZTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_ZTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_ZTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_ZTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_ZTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_ZTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_ZTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_ZTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип зоны"/><Properties Name="Name" PropValue="mnuPopupITTD_ZTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_ZTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ZTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ZTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_ZTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEOpen"/></ControlData><ControlData Name="mnuITTD_ZTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPERef"/></ControlData><ControlData Name="mnuITTD_ZTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_ZTYPES1"/></ControlData><ControlData Name="mnuITTD_ZTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_ZTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECOPY"/></ControlData><ControlData Name="mnuITTD_ZTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECUT"/></ControlData><ControlData Name="mnuITTD_ZTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_ZTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_ZTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_ZTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEPrn"/></ControlData><ControlData Name="mnuITTD_ZTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECfg"/></ControlData><ControlData Name="mnuITTD_ZTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEFind"/></ControlData><ControlData Name="mnuITTD_ZTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_ZTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_ZTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_ZTYPE as object
private menuActionITTD_ZTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_ZTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_ZTYPE,&quot;gridITTD_ZTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ZTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_ZTYPE,&quot;Тип зоны&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ZTYPERef_Click()
  on error resume next
  item.ITTD_ZTYPE.Refresh
  gridITTD_ZTYPE.itemCount = item.ITTD_ZTYPE.count
  gridITTD_ZTYPE.Refetch
  gridITTD_ZTYPE.Refresh
End Sub
Private Sub cmdITTD_ZTYPEAcc_Click()
On Error Resume Next
If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ZTYPE.Row &gt; 0 Then
 If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_ZTYPEEdit_Click()
  on error resume next
If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ZTYPE.Row &gt; 0 then
 If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_ZTYPE_read.Item = u
    again: frmITTD_ZTYPE_read.NotFirstTime = False
    frmITTD_ZTYPE_read.OnInit
    frmITTD_ZTYPE_read.Show vbModal
    If frmITTD_ZTYPE_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_ZTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_ZTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_ZTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_ZTYPE.Add()

      Set frmITTD_ZTYPE_read.Item = u
      again: frmITTD_ZTYPE_read.NotFirstTime = False
      frmITTD_ZTYPE_read.OnInit
      frmITTD_ZTYPE_read.Show vbModal
      If frmITTD_ZTYPE_read.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_ZTYPE.ItemCount = Item.ITTD_ZTYPE.Count
        gridITTD_ZTYPE.Refresh
        gridITTD_ZTYPE.RefreshGroups
        gridITTD_ZTYPE.Refreshsort
        gridITTD_ZTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_ZTYPE&quot;
      Else
        Item.ITTD_ZTYPE.Delete u.ID
        Item.ITTD_ZTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_ZTYPEFnd_Click()
  on error resume next
  fndITTD_ZTYPE.ShowForm
End Sub
Private Sub cmdITTD_ZTYPERun_Click()
  on error resume next
  gridITTD_ZTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_ZTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_ZTYPE.LoadRow gridITTD_ZTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_ZTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_ZTYPE_DblClick()
  cmdITTD_ZTYPEEdit_Click
End Sub
Private Sub gridITTD_ZTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_ZTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_ZTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_ZTYPE.Row And LastRow &gt; 0 Then
  gridITTD_ZTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_ZTYPE.GetRowData(gridITTD_ZTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_ZTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_ZTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_ZTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_ZTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_ZTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_ZTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_ZTYPE
End If
end sub
private sub mnuITTD_ZTYPEAdd_click()
   menuActionITTD_ZTYPE =&quot;ADD&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEEdit_click()
   menuActionITTD_ZTYPE =&quot;EDIT&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEDelete_click()
   menuActionITTD_ZTYPE =&quot;DEL&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEOpen_click()
   menuActionITTD_ZTYPE =&quot;RUN&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPERef_click()
   menuActionITTD_ZTYPE =&quot;REF&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
  Private Sub mnuITTD_ZTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ZTYPE.Row &gt; 0 Then
     If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_ZTYPECUT_Click()
    On Error Resume Next
    If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ZTYPE.Row &gt; 0 Then
     If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_ZTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_ZTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_ZTYPE.Row &gt; 0 Then
   If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_ZTYPE.ItemCount = u.parent.Count
      gridITTD_ZTYPE.RefreshRowIndex gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_ZTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_ZTYPEPrn_click()
   menuActionITTD_ZTYPE =&quot;PRN&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPECfg_click()
   menuActionITTD_ZTYPE =&quot;CFG&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEFind_click()
   menuActionITTD_ZTYPE =&quot;FND&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEAcc_click()
   menuActionITTD_ZTYPE =&quot;ACC&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub menuTimerITTD_ZTYPE_timer()
   menuTimerITTD_ZTYPE.enabled = false
   if menuActionITTD_ZTYPE =&quot;ADD&quot; then cmdITTD_ZTYPEADD_CLick
   if menuActionITTD_ZTYPE =&quot;EDIT&quot; then cmdITTD_ZTYPEEDIT_CLick
   if menuActionITTD_ZTYPE =&quot;DEL&quot; then cmdITTD_ZTYPEDEL_CLick
   if menuActionITTD_ZTYPE =&quot;RUN&quot; then cmdITTD_ZTYPERUN_CLick
   if menuActionITTD_ZTYPE =&quot;REF&quot; then cmdITTD_ZTYPEREF_CLick
   if menuActionITTD_ZTYPE =&quot;PRN&quot; then cmdITTD_ZTYPEPRN_CLick
   if menuActionITTD_ZTYPE =&quot;CFG&quot; then cmdITTD_ZTYPECFG_CLick
   if menuActionITTD_ZTYPE =&quot;FND&quot; then cmdITTD_ZTYPEFND_CLick
   if menuActionITTD_ZTYPE =&quot;ACC&quot; then cmdITTD_ZTYPEACC_CLick
   menuActionITTD_ZTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_ZTYPEAdd,cmdITTD_ZTYPEAdd.tag
  LoadBtnPictures cmdITTD_ZTYPEEdit,cmdITTD_ZTYPEEdit.tag
  LoadBtnPictures cmdITTD_ZTYPEDel,cmdITTD_ZTYPEDel.tag
  LoadBtnPictures cmdITTD_ZTYPERef,cmdITTD_ZTYPERef.tag
  LoadBtnPictures cmdITTD_ZTYPEPrn,cmdITTD_ZTYPEPrn.tag
  LoadBtnPictures cmdITTD_ZTYPEFnd,cmdITTD_ZTYPEFnd.tag
  LoadBtnPictures cmdITTD_ZTYPERun,cmdITTD_ZTYPERun.tag
  LoadBtnPictures cmdITTD_ZTYPEAcc,cmdITTD_ZTYPEAcc.tag
  LoadBtnPictures cmdITTD_ZTYPECfg,cmdITTD_ZTYPECfg.tag
  item.ITTD_ZTYPE.PrepareGrid gridITTD_ZTYPE
  LoadGridLayout gridITTD_ZTYPE
  Set fndITTD_ZTYPE = Nothing
  On Error Resume Next
  Set fndITTD_ZTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_ZTYPE.Init gridITTD_ZTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_ZTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_ZTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_ZTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_ZTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_PLTYPE_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_PLTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_PLTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_PLTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_PLTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_PLTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PLTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PLTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_PLTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_PLTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_PLTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_PLTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_PLTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_PLTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_PLTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип палеты"/><Properties Name="Name" PropValue="mnuPopupITTD_PLTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_PLTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PLTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PLTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_PLTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEOpen"/></ControlData><ControlData Name="mnuITTD_PLTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPERef"/></ControlData><ControlData Name="mnuITTD_PLTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_PLTYPES1"/></ControlData><ControlData Name="mnuITTD_PLTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_PLTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECOPY"/></ControlData><ControlData Name="mnuITTD_PLTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECUT"/></ControlData><ControlData Name="mnuITTD_PLTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_PLTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_PLTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_PLTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEPrn"/></ControlData><ControlData Name="mnuITTD_PLTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECfg"/></ControlData><ControlData Name="mnuITTD_PLTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEFind"/></ControlData><ControlData Name="mnuITTD_PLTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_PLTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_PLTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_PLTYPE as object
private menuActionITTD_PLTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_PLTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_PLTYPE,&quot;gridITTD_PLTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PLTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_PLTYPE,&quot;Тип палеты&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PLTYPERef_Click()
  on error resume next
  item.ITTD_PLTYPE.Refresh
  gridITTD_PLTYPE.itemCount = item.ITTD_PLTYPE.count
  gridITTD_PLTYPE.Refetch
  gridITTD_PLTYPE.Refresh
End Sub
Private Sub cmdITTD_PLTYPEAcc_Click()
On Error Resume Next
If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_PLTYPE.Row &gt; 0 Then
 If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_PLTYPEEdit_Click()
  on error resume next
If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_PLTYPE.Row &gt; 0 then
 If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_PLTYPE_read.Item = u
    again: frmITTD_PLTYPE_read.NotFirstTime = False
    frmITTD_PLTYPE_read.OnInit
    frmITTD_PLTYPE_read.Show vbModal
    If frmITTD_PLTYPE_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_PLTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_PLTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_PLTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_PLTYPE.Add()

      Set frmITTD_PLTYPE_read.Item = u
      again: frmITTD_PLTYPE_read.NotFirstTime = False
      frmITTD_PLTYPE_read.OnInit
      frmITTD_PLTYPE_read.Show vbModal
      If frmITTD_PLTYPE_read.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_PLTYPE.ItemCount = Item.ITTD_PLTYPE.Count
        gridITTD_PLTYPE.Refresh
        gridITTD_PLTYPE.RefreshGroups
        gridITTD_PLTYPE.Refreshsort
        gridITTD_PLTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_PLTYPE&quot;
      Else
        Item.ITTD_PLTYPE.Delete u.ID
        Item.ITTD_PLTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_PLTYPEFnd_Click()
  on error resume next
  fndITTD_PLTYPE.ShowForm
End Sub
Private Sub cmdITTD_PLTYPERun_Click()
  on error resume next
  gridITTD_PLTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_PLTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_PLTYPE.LoadRow gridITTD_PLTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_PLTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_PLTYPE_DblClick()
  cmdITTD_PLTYPEEdit_Click
End Sub
Private Sub gridITTD_PLTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_PLTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_PLTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_PLTYPE.Row And LastRow &gt; 0 Then
  gridITTD_PLTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_PLTYPE.GetRowData(gridITTD_PLTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_PLTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_PLTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_PLTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_PLTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_PLTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_PLTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_PLTYPE
End If
end sub
private sub mnuITTD_PLTYPEAdd_click()
   menuActionITTD_PLTYPE =&quot;ADD&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEEdit_click()
   menuActionITTD_PLTYPE =&quot;EDIT&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEDelete_click()
   menuActionITTD_PLTYPE =&quot;DEL&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEOpen_click()
   menuActionITTD_PLTYPE =&quot;RUN&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPERef_click()
   menuActionITTD_PLTYPE =&quot;REF&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
  Private Sub mnuITTD_PLTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_PLTYPE.Row &gt; 0 Then
     If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_PLTYPECUT_Click()
    On Error Resume Next
    If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_PLTYPE.Row &gt; 0 Then
     If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_PLTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_PLTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_PLTYPE.Row &gt; 0 Then
   If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_PLTYPE.ItemCount = u.parent.Count
      gridITTD_PLTYPE.RefreshRowIndex gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_PLTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_PLTYPEPrn_click()
   menuActionITTD_PLTYPE =&quot;PRN&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPECfg_click()
   menuActionITTD_PLTYPE =&quot;CFG&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEFind_click()
   menuActionITTD_PLTYPE =&quot;FND&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEAcc_click()
   menuActionITTD_PLTYPE =&quot;ACC&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub menuTimerITTD_PLTYPE_timer()
   menuTimerITTD_PLTYPE.enabled = false
   if menuActionITTD_PLTYPE =&quot;ADD&quot; then cmdITTD_PLTYPEADD_CLick
   if menuActionITTD_PLTYPE =&quot;EDIT&quot; then cmdITTD_PLTYPEEDIT_CLick
   if menuActionITTD_PLTYPE =&quot;DEL&quot; then cmdITTD_PLTYPEDEL_CLick
   if menuActionITTD_PLTYPE =&quot;RUN&quot; then cmdITTD_PLTYPERUN_CLick
   if menuActionITTD_PLTYPE =&quot;REF&quot; then cmdITTD_PLTYPEREF_CLick
   if menuActionITTD_PLTYPE =&quot;PRN&quot; then cmdITTD_PLTYPEPRN_CLick
   if menuActionITTD_PLTYPE =&quot;CFG&quot; then cmdITTD_PLTYPECFG_CLick
   if menuActionITTD_PLTYPE =&quot;FND&quot; then cmdITTD_PLTYPEFND_CLick
   if menuActionITTD_PLTYPE =&quot;ACC&quot; then cmdITTD_PLTYPEACC_CLick
   menuActionITTD_PLTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_PLTYPEAdd,cmdITTD_PLTYPEAdd.tag
  LoadBtnPictures cmdITTD_PLTYPEEdit,cmdITTD_PLTYPEEdit.tag
  LoadBtnPictures cmdITTD_PLTYPEDel,cmdITTD_PLTYPEDel.tag
  LoadBtnPictures cmdITTD_PLTYPERef,cmdITTD_PLTYPERef.tag
  LoadBtnPictures cmdITTD_PLTYPEPrn,cmdITTD_PLTYPEPrn.tag
  LoadBtnPictures cmdITTD_PLTYPEFnd,cmdITTD_PLTYPEFnd.tag
  LoadBtnPictures cmdITTD_PLTYPERun,cmdITTD_PLTYPERun.tag
  LoadBtnPictures cmdITTD_PLTYPEAcc,cmdITTD_PLTYPEAcc.tag
  LoadBtnPictures cmdITTD_PLTYPECfg,cmdITTD_PLTYPECfg.tag
  item.ITTD_PLTYPE.PrepareGrid gridITTD_PLTYPE
  LoadGridLayout gridITTD_PLTYPE
  Set fndITTD_PLTYPE = Nothing
  On Error Resume Next
  Set fndITTD_PLTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_PLTYPE.Init gridITTD_PLTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_PLTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_PLTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_PLTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_PLTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_QTYPE_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_QTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_QTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_QTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_QTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_QTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_QTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_QTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_QTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_QTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_QTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_QTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_QTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_QTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_QTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_QTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип заявки"/><Properties Name="Name" PropValue="mnuPopupITTD_QTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_QTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_QTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_QTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_QTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_QTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_QTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_QTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_QTYPEOpen"/></ControlData><ControlData Name="mnuITTD_QTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_QTYPERef"/></ControlData><ControlData Name="mnuITTD_QTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_QTYPES1"/></ControlData><ControlData Name="mnuITTD_QTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_QTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_QTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_QTYPECOPY"/></ControlData><ControlData Name="mnuITTD_QTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_QTYPECUT"/></ControlData><ControlData Name="mnuITTD_QTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_QTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_QTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_QTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_QTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_QTYPEPrn"/></ControlData><ControlData Name="mnuITTD_QTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECfg"/></ControlData><ControlData Name="mnuITTD_QTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_QTYPEFind"/></ControlData><ControlData Name="mnuITTD_QTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_QTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_QTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_QTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_QTYPE as object
private menuActionITTD_QTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_QTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_QTYPE,&quot;gridITTD_QTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_QTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_QTYPE,&quot;Тип заявки&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_QTYPERef_Click()
  on error resume next
  item.ITTD_QTYPE.Refresh
  gridITTD_QTYPE.itemCount = item.ITTD_QTYPE.count
  gridITTD_QTYPE.Refetch
  gridITTD_QTYPE.Refresh
End Sub
Private Sub cmdITTD_QTYPEAcc_Click()
On Error Resume Next
If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_QTYPE.Row &gt; 0 Then
 If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_QTYPEEdit_Click()
  on error resume next
If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_QTYPE.Row &gt; 0 then
 If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_QTYPE_read.Item = u
    again: frmITTD_QTYPE_read.NotFirstTime = False
    frmITTD_QTYPE_read.OnInit
    frmITTD_QTYPE_read.Show vbModal
    If frmITTD_QTYPE_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_QTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_QTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_QTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_QTYPE.Add()

      Set frmITTD_QTYPE_read.Item = u
      again: frmITTD_QTYPE_read.NotFirstTime = False
      frmITTD_QTYPE_read.OnInit
      frmITTD_QTYPE_read.Show vbModal
      If frmITTD_QTYPE_read.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_QTYPE.ItemCount = Item.ITTD_QTYPE.Count
        gridITTD_QTYPE.Refresh
        gridITTD_QTYPE.RefreshGroups
        gridITTD_QTYPE.Refreshsort
        gridITTD_QTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_QTYPE&quot;
      Else
        Item.ITTD_QTYPE.Delete u.ID
        Item.ITTD_QTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_QTYPEFnd_Click()
  on error resume next
  fndITTD_QTYPE.ShowForm
End Sub
Private Sub cmdITTD_QTYPERun_Click()
  on error resume next
  gridITTD_QTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_QTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_QTYPE.LoadRow gridITTD_QTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_QTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_QTYPE_DblClick()
  cmdITTD_QTYPEEdit_Click
End Sub
Private Sub gridITTD_QTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_QTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_QTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_QTYPE.Row And LastRow &gt; 0 Then
  gridITTD_QTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_QTYPE.GetRowData(gridITTD_QTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_QTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_QTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_QTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_QTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_QTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_QTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_QTYPE
End If
end sub
private sub mnuITTD_QTYPEAdd_click()
   menuActionITTD_QTYPE =&quot;ADD&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEEdit_click()
   menuActionITTD_QTYPE =&quot;EDIT&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEDelete_click()
   menuActionITTD_QTYPE =&quot;DEL&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEOpen_click()
   menuActionITTD_QTYPE =&quot;RUN&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPERef_click()
   menuActionITTD_QTYPE =&quot;REF&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
  Private Sub mnuITTD_QTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_QTYPE.Row &gt; 0 Then
     If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_QTYPECUT_Click()
    On Error Resume Next
    If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_QTYPE.Row &gt; 0 Then
     If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_QTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_QTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_QTYPE.Row &gt; 0 Then
   If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_QTYPE.ItemCount = u.parent.Count
      gridITTD_QTYPE.RefreshRowIndex gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_QTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_QTYPEPrn_click()
   menuActionITTD_QTYPE =&quot;PRN&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPECfg_click()
   menuActionITTD_QTYPE =&quot;CFG&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEFind_click()
   menuActionITTD_QTYPE =&quot;FND&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEAcc_click()
   menuActionITTD_QTYPE =&quot;ACC&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub menuTimerITTD_QTYPE_timer()
   menuTimerITTD_QTYPE.enabled = false
   if menuActionITTD_QTYPE =&quot;ADD&quot; then cmdITTD_QTYPEADD_CLick
   if menuActionITTD_QTYPE =&quot;EDIT&quot; then cmdITTD_QTYPEEDIT_CLick
   if menuActionITTD_QTYPE =&quot;DEL&quot; then cmdITTD_QTYPEDEL_CLick
   if menuActionITTD_QTYPE =&quot;RUN&quot; then cmdITTD_QTYPERUN_CLick
   if menuActionITTD_QTYPE =&quot;REF&quot; then cmdITTD_QTYPEREF_CLick
   if menuActionITTD_QTYPE =&quot;PRN&quot; then cmdITTD_QTYPEPRN_CLick
   if menuActionITTD_QTYPE =&quot;CFG&quot; then cmdITTD_QTYPECFG_CLick
   if menuActionITTD_QTYPE =&quot;FND&quot; then cmdITTD_QTYPEFND_CLick
   if menuActionITTD_QTYPE =&quot;ACC&quot; then cmdITTD_QTYPEACC_CLick
   menuActionITTD_QTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_QTYPEAdd,cmdITTD_QTYPEAdd.tag
  LoadBtnPictures cmdITTD_QTYPEEdit,cmdITTD_QTYPEEdit.tag
  LoadBtnPictures cmdITTD_QTYPEDel,cmdITTD_QTYPEDel.tag
  LoadBtnPictures cmdITTD_QTYPERef,cmdITTD_QTYPERef.tag
  LoadBtnPictures cmdITTD_QTYPEPrn,cmdITTD_QTYPEPrn.tag
  LoadBtnPictures cmdITTD_QTYPEFnd,cmdITTD_QTYPEFnd.tag
  LoadBtnPictures cmdITTD_QTYPERun,cmdITTD_QTYPERun.tag
  LoadBtnPictures cmdITTD_QTYPEAcc,cmdITTD_QTYPEAcc.tag
  LoadBtnPictures cmdITTD_QTYPECfg,cmdITTD_QTYPECfg.tag
  item.ITTD_QTYPE.PrepareGrid gridITTD_QTYPE
  LoadGridLayout gridITTD_QTYPE
  Set fndITTD_QTYPE = Nothing
  On Error Resume Next
  Set fndITTD_QTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_QTYPE.Init gridITTD_QTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_QTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_QTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_QTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_QTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_ATYPE_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_ATYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_ATYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_ATYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_ATYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_ATYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_ATYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ATYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_ATYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_ATYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_ATYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_ATYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_ATYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_ATYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_ATYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_ATYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип операции"/><Properties Name="Name" PropValue="mnuPopupITTD_ATYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_ATYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_ATYPEAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_ATYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_ATYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ATYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_ATYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_ATYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_ATYPEOpen"/></ControlData><ControlData Name="mnuITTD_ATYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_ATYPERef"/></ControlData><ControlData Name="mnuITTD_ATYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_ATYPES1"/></ControlData><ControlData Name="mnuITTD_ATYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_ATYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_ATYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_ATYPECOPY"/></ControlData><ControlData Name="mnuITTD_ATYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_ATYPECUT"/></ControlData><ControlData Name="mnuITTD_ATYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_ATYPEPASTE"/></ControlData><ControlData Name="mnuITTD_ATYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECHANGE"/></ControlData><ControlData Name="mnuITTD_ATYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_ATYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_ATYPEPrn"/></ControlData><ControlData Name="mnuITTD_ATYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECfg"/></ControlData><ControlData Name="mnuITTD_ATYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_ATYPEFind"/></ControlData><ControlData Name="mnuITTD_ATYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_ATYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_ATYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_ATYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_ATYPE as object
private menuActionITTD_ATYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_ATYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_ATYPE,&quot;gridITTD_ATYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ATYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_ATYPE,&quot;Тип операции&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ATYPERef_Click()
  on error resume next
  item.ITTD_ATYPE.Refresh
  gridITTD_ATYPE.itemCount = item.ITTD_ATYPE.count
  gridITTD_ATYPE.Refetch
  gridITTD_ATYPE.Refresh
End Sub
Private Sub cmdITTD_ATYPEAcc_Click()
On Error Resume Next
If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ATYPE.Row &gt; 0 Then
 If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_ATYPEEdit_Click()
  on error resume next
If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ATYPE.Row &gt; 0 then
 If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_ATYPE_read.Item = u
    again: frmITTD_ATYPE_read.NotFirstTime = False
    frmITTD_ATYPE_read.OnInit
    frmITTD_ATYPE_read.Show vbModal
    If frmITTD_ATYPE_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_ATYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_ATYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_ATYPEAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_ATYPEFnd_Click()
  on error resume next
  fndITTD_ATYPE.ShowForm
End Sub
Private Sub cmdITTD_ATYPERun_Click()
  on error resume next
  gridITTD_ATYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_ATYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_ATYPE.LoadRow gridITTD_ATYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_ATYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_ATYPE_DblClick()
  cmdITTD_ATYPEEdit_Click
End Sub
Private Sub gridITTD_ATYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_ATYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_ATYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_ATYPE.Row And LastRow &gt; 0 Then
  gridITTD_ATYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_ATYPE.GetRowData(gridITTD_ATYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_ATYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_ATYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_ATYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_ATYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_ATYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_ATYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_ATYPE
End If
end sub
private sub mnuITTD_ATYPEAdd_click()
   menuActionITTD_ATYPE =&quot;ADD&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEEdit_click()
   menuActionITTD_ATYPE =&quot;EDIT&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEDelete_click()
   menuActionITTD_ATYPE =&quot;DEL&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEOpen_click()
   menuActionITTD_ATYPE =&quot;RUN&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPERef_click()
   menuActionITTD_ATYPE =&quot;REF&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
  Private Sub mnuITTD_ATYPECOPY_Click()
    On Error Resume Next
    If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ATYPE.Row &gt; 0 Then
     If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_ATYPECUT_Click()
    On Error Resume Next
    If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ATYPE.Row &gt; 0 Then
     If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_ATYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_ATYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_ATYPE.Row &gt; 0 Then
   If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_ATYPE.ItemCount = u.parent.Count
      gridITTD_ATYPE.RefreshRowIndex gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_ATYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_ATYPEPrn_click()
   menuActionITTD_ATYPE =&quot;PRN&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPECfg_click()
   menuActionITTD_ATYPE =&quot;CFG&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEFind_click()
   menuActionITTD_ATYPE =&quot;FND&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEAcc_click()
   menuActionITTD_ATYPE =&quot;ACC&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub menuTimerITTD_ATYPE_timer()
   menuTimerITTD_ATYPE.enabled = false
   if menuActionITTD_ATYPE =&quot;ADD&quot; then cmdITTD_ATYPEADD_CLick
   if menuActionITTD_ATYPE =&quot;EDIT&quot; then cmdITTD_ATYPEEDIT_CLick
   if menuActionITTD_ATYPE =&quot;DEL&quot; then cmdITTD_ATYPEDEL_CLick
   if menuActionITTD_ATYPE =&quot;RUN&quot; then cmdITTD_ATYPERUN_CLick
   if menuActionITTD_ATYPE =&quot;REF&quot; then cmdITTD_ATYPEREF_CLick
   if menuActionITTD_ATYPE =&quot;PRN&quot; then cmdITTD_ATYPEPRN_CLick
   if menuActionITTD_ATYPE =&quot;CFG&quot; then cmdITTD_ATYPECFG_CLick
   if menuActionITTD_ATYPE =&quot;FND&quot; then cmdITTD_ATYPEFND_CLick
   if menuActionITTD_ATYPE =&quot;ACC&quot; then cmdITTD_ATYPEACC_CLick
   menuActionITTD_ATYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_ATYPEAdd,cmdITTD_ATYPEAdd.tag
  LoadBtnPictures cmdITTD_ATYPEEdit,cmdITTD_ATYPEEdit.tag
  LoadBtnPictures cmdITTD_ATYPEDel,cmdITTD_ATYPEDel.tag
  LoadBtnPictures cmdITTD_ATYPERef,cmdITTD_ATYPERef.tag
  LoadBtnPictures cmdITTD_ATYPEPrn,cmdITTD_ATYPEPrn.tag
  LoadBtnPictures cmdITTD_ATYPEFnd,cmdITTD_ATYPEFnd.tag
  LoadBtnPictures cmdITTD_ATYPERun,cmdITTD_ATYPERun.tag
  LoadBtnPictures cmdITTD_ATYPEAcc,cmdITTD_ATYPEAcc.tag
  LoadBtnPictures cmdITTD_ATYPECfg,cmdITTD_ATYPECfg.tag
  item.ITTD_ATYPE.PrepareGrid gridITTD_ATYPE
  LoadGridLayout gridITTD_ATYPE
  Set fndITTD_ATYPE = Nothing
  On Error Resume Next
  Set fndITTD_ATYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_ATYPE.Init gridITTD_ATYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_ATYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_ATYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_ATYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_ATYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_SRV_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Услуги"/><Properties Name="Name" PropValue="mnuPopupITTD_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_SRVDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_SRVOpen"/></ControlData><ControlData Name="mnuITTD_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_SRVRef"/></ControlData><ControlData Name="mnuITTD_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_SRVS1"/></ControlData><ControlData Name="mnuITTD_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_SRVBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_SRVCOPY"/></ControlData><ControlData Name="mnuITTD_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_SRVCUT"/></ControlData><ControlData Name="mnuITTD_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_SRVPASTE"/></ControlData><ControlData Name="mnuITTD_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_SRVCHANGE"/></ControlData><ControlData Name="mnuITTD_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_SRVPrn"/></ControlData><ControlData Name="mnuITTD_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_SRVCfg"/></ControlData><ControlData Name="mnuITTD_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_SRVFind"/></ControlData><ControlData Name="mnuITTD_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_SRV as object
private menuActionITTD_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_SRV,&quot;gridITTD_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_SRV,&quot;Услуги&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_SRVRef_Click()
  on error resume next
  item.ITTD_SRV.Refresh
  gridITTD_SRV.itemCount = item.ITTD_SRV.count
  gridITTD_SRV.Refetch
  gridITTD_SRV.Refresh
End Sub
Private Sub cmdITTD_SRVAcc_Click()
On Error Resume Next
If gridITTD_SRV.ItemCount = 0 Then Exit Sub
If gridITTD_SRV.Row &gt; 0 Then
 If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_SRVEdit_Click()
  on error resume next
If gridITTD_SRV.ItemCount = 0 Then Exit Sub
If gridITTD_SRV.Row &gt; 0 then
 If gridITTD_SRV.RowIndex(gridITTD_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_SRV_read.Item = u
    again: frmITTD_SRV_read.NotFirstTime = False
    frmITTD_SRV_read.OnInit
    frmITTD_SRV_read.Show vbModal
    If frmITTD_SRV_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_SRVDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_SRV.Add()

      Set frmITTD_SRV_read.Item = u
      again: frmITTD_SRV_read.NotFirstTime = False
      frmITTD_SRV_read.OnInit
      frmITTD_SRV_read.Show vbModal
      If frmITTD_SRV_read.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_SRV.ItemCount = Item.ITTD_SRV.Count
        gridITTD_SRV.Refresh
        gridITTD_SRV.RefreshGroups
        gridITTD_SRV.Refreshsort
        gridITTD_SRV.MoveToBookmark u.ID &amp; &quot;ITTD_SRV&quot;
      Else
        Item.ITTD_SRV.Delete u.ID
        Item.ITTD_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_SRVFnd_Click()
  on error resume next
  fndITTD_SRV.ShowForm
End Sub
Private Sub cmdITTD_SRVRun_Click()
  on error resume next
  gridITTD_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_SRV.LoadRow gridITTD_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_SRV_DblClick()
  cmdITTD_SRVEdit_Click
End Sub
Private Sub gridITTD_SRV_KeyPress(KeyAscii As Integer)
  If gridITTD_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_SRV.Row And LastRow &gt; 0 Then
  gridITTD_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_SRV.GetRowData(gridITTD_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_SRV.Add()
    If GetFromBuffer(u) Then
      gridITTD_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_SRVCfg_Click
        End If
    End If
end sub

private sub gridITTD_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_SRV
End If
end sub
private sub mnuITTD_SRVAdd_click()
   menuActionITTD_SRV =&quot;ADD&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVEdit_click()
   menuActionITTD_SRV =&quot;EDIT&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVDelete_click()
   menuActionITTD_SRV =&quot;DEL&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVOpen_click()
   menuActionITTD_SRV =&quot;RUN&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVRef_click()
   menuActionITTD_SRV =&quot;REF&quot;
   menuTimerITTD_SRV.enabled = true
end sub
  Private Sub mnuITTD_SRVCOPY_Click()
    On Error Resume Next
    If gridITTD_SRV.ItemCount = 0 Then Exit Sub
    If gridITTD_SRV.Row &gt; 0 Then
     If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_SRVCUT_Click()
    On Error Resume Next
    If gridITTD_SRV.ItemCount = 0 Then Exit Sub
    If gridITTD_SRV.Row &gt; 0 Then
     If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_SRVCHANGE_Click()
  On Error Resume Next
  If gridITTD_SRV.ItemCount = 0 Then Exit Sub
  If gridITTD_SRV.Row &gt; 0 Then
   If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_SRV.ItemCount = u.parent.Count
      gridITTD_SRV.RefreshRowIndex gridITTD_SRV.RowIndex(gridITTD_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_SRVPrn_click()
   menuActionITTD_SRV =&quot;PRN&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVCfg_click()
   menuActionITTD_SRV =&quot;CFG&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVFind_click()
   menuActionITTD_SRV =&quot;FND&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVAcc_click()
   menuActionITTD_SRV =&quot;ACC&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub menuTimerITTD_SRV_timer()
   menuTimerITTD_SRV.enabled = false
   if menuActionITTD_SRV =&quot;ADD&quot; then cmdITTD_SRVADD_CLick
   if menuActionITTD_SRV =&quot;EDIT&quot; then cmdITTD_SRVEDIT_CLick
   if menuActionITTD_SRV =&quot;DEL&quot; then cmdITTD_SRVDEL_CLick
   if menuActionITTD_SRV =&quot;RUN&quot; then cmdITTD_SRVRUN_CLick
   if menuActionITTD_SRV =&quot;REF&quot; then cmdITTD_SRVREF_CLick
   if menuActionITTD_SRV =&quot;PRN&quot; then cmdITTD_SRVPRN_CLick
   if menuActionITTD_SRV =&quot;CFG&quot; then cmdITTD_SRVCFG_CLick
   if menuActionITTD_SRV =&quot;FND&quot; then cmdITTD_SRVFND_CLick
   if menuActionITTD_SRV =&quot;ACC&quot; then cmdITTD_SRVACC_CLick
   menuActionITTD_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_SRVAdd,cmdITTD_SRVAdd.tag
  LoadBtnPictures cmdITTD_SRVEdit,cmdITTD_SRVEdit.tag
  LoadBtnPictures cmdITTD_SRVDel,cmdITTD_SRVDel.tag
  LoadBtnPictures cmdITTD_SRVRef,cmdITTD_SRVRef.tag
  LoadBtnPictures cmdITTD_SRVPrn,cmdITTD_SRVPrn.tag
  LoadBtnPictures cmdITTD_SRVFnd,cmdITTD_SRVFnd.tag
  LoadBtnPictures cmdITTD_SRVRun,cmdITTD_SRVRun.tag
  LoadBtnPictures cmdITTD_SRVAcc,cmdITTD_SRVAcc.tag
  LoadBtnPictures cmdITTD_SRVCfg,cmdITTD_SRVCfg.tag
  item.ITTD_SRV.PrepareGrid gridITTD_SRV
  LoadGridLayout gridITTD_SRV
  Set fndITTD_SRV = Nothing
  On Error Resume Next
  Set fndITTD_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_SRV.Init gridITTD_SRV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_PART_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_PART" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_PART"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_PART" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_PART"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_PARTAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PARTEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PARTDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_PARTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_PARTPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_PARTCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_PARTFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_PARTRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_PARTRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_PARTAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_PART" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Партия товара"/><Properties Name="Name" PropValue="mnuPopupITTD_PART"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_PARTAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_PARTAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PARTEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_PARTEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PARTDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_PARTDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_PARTOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_PARTOpen"/></ControlData><ControlData Name="mnuITTD_PARTRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_PARTRef"/></ControlData><ControlData Name="mnuITTD_PARTS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_PARTS1"/></ControlData><ControlData Name="mnuITTD_PARTBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_PARTBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_PARTCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_PARTCOPY"/></ControlData><ControlData Name="mnuITTD_PARTCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_PARTCUT"/></ControlData><ControlData Name="mnuITTD_PARTPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_PARTPASTE"/></ControlData><ControlData Name="mnuITTD_PARTCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_PARTCHANGE"/></ControlData><ControlData Name="mnuITTD_PARTCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_PARTCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_PARTPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_PARTPrn"/></ControlData><ControlData Name="mnuITTD_PARTCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_PARTCfg"/></ControlData><ControlData Name="mnuITTD_PARTFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_PARTFind"/></ControlData><ControlData Name="mnuITTD_PARTAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_PARTAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_PART" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_PART"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_PART as object
private menuActionITTD_PART as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_PARTCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_PART,&quot;gridITTD_PART&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PARTPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_PART,&quot;Партия товара&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PARTRef_Click()
  on error resume next
  item.ITTD_PART.Refresh
  gridITTD_PART.itemCount = item.ITTD_PART.count
  gridITTD_PART.Refetch
  gridITTD_PART.Refresh
End Sub
Private Sub cmdITTD_PARTAcc_Click()
On Error Resume Next
If gridITTD_PART.ItemCount = 0 Then Exit Sub
If gridITTD_PART.Row &gt; 0 Then
 If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_PARTEdit_Click()
  on error resume next
If gridITTD_PART.ItemCount = 0 Then Exit Sub
If gridITTD_PART.Row &gt; 0 then
 If gridITTD_PART.RowIndex(gridITTD_PART.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_PART_read.Item = u
    again: frmITTD_PART_read.NotFirstTime = False
    frmITTD_PART_read.OnInit
    frmITTD_PART_read.Show vbModal
    If frmITTD_PART_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_PART.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_PARTDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_PARTAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_PART.Add()

      Set frmITTD_PART_read.Item = u
      again: frmITTD_PART_read.NotFirstTime = False
      frmITTD_PART_read.OnInit
      frmITTD_PART_read.Show vbModal
      If frmITTD_PART_read.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_PART.ItemCount = Item.ITTD_PART.Count
        gridITTD_PART.Refresh
        gridITTD_PART.RefreshGroups
        gridITTD_PART.Refreshsort
        gridITTD_PART.MoveToBookmark u.ID &amp; &quot;ITTD_PART&quot;
      Else
        Item.ITTD_PART.Delete u.ID
        Item.ITTD_PART.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_PARTFnd_Click()
  on error resume next
  fndITTD_PART.ShowForm
End Sub
Private Sub cmdITTD_PARTRun_Click()
  on error resume next
  gridITTD_PART_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_PART_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_PART.LoadRow gridITTD_PART, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_PART_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_PART_DblClick()
  cmdITTD_PARTEdit_Click
End Sub
Private Sub gridITTD_PART_KeyPress(KeyAscii As Integer)
  If gridITTD_PART.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_PART.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_PART_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_PART.Row And LastRow &gt; 0 Then
  gridITTD_PART.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_PART.GetRowData(gridITTD_PART.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_PARTPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_PART.Add()
    If GetFromBuffer(u) Then
      gridITTD_PART.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_PART_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_PARTCfg_Click
        End If
    End If
end sub

private sub gridITTD_PART_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_PART
End If
end sub
private sub mnuITTD_PARTAdd_click()
   menuActionITTD_PART =&quot;ADD&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTEdit_click()
   menuActionITTD_PART =&quot;EDIT&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTDelete_click()
   menuActionITTD_PART =&quot;DEL&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTOpen_click()
   menuActionITTD_PART =&quot;RUN&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTRef_click()
   menuActionITTD_PART =&quot;REF&quot;
   menuTimerITTD_PART.enabled = true
end sub
  Private Sub mnuITTD_PARTCOPY_Click()
    On Error Resume Next
    If gridITTD_PART.ItemCount = 0 Then Exit Sub
    If gridITTD_PART.Row &gt; 0 Then
     If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_PARTCUT_Click()
    On Error Resume Next
    If gridITTD_PART.ItemCount = 0 Then Exit Sub
    If gridITTD_PART.Row &gt; 0 Then
     If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_PART.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_PARTCHANGE_Click()
  On Error Resume Next
  If gridITTD_PART.ItemCount = 0 Then Exit Sub
  If gridITTD_PART.Row &gt; 0 Then
   If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_PART.ItemCount = u.parent.Count
      gridITTD_PART.RefreshRowIndex gridITTD_PART.RowIndex(gridITTD_PART.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_PARTCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_PARTPrn_click()
   menuActionITTD_PART =&quot;PRN&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTCfg_click()
   menuActionITTD_PART =&quot;CFG&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTFind_click()
   menuActionITTD_PART =&quot;FND&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTAcc_click()
   menuActionITTD_PART =&quot;ACC&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub menuTimerITTD_PART_timer()
   menuTimerITTD_PART.enabled = false
   if menuActionITTD_PART =&quot;ADD&quot; then cmdITTD_PARTADD_CLick
   if menuActionITTD_PART =&quot;EDIT&quot; then cmdITTD_PARTEDIT_CLick
   if menuActionITTD_PART =&quot;DEL&quot; then cmdITTD_PARTDEL_CLick
   if menuActionITTD_PART =&quot;RUN&quot; then cmdITTD_PARTRUN_CLick
   if menuActionITTD_PART =&quot;REF&quot; then cmdITTD_PARTREF_CLick
   if menuActionITTD_PART =&quot;PRN&quot; then cmdITTD_PARTPRN_CLick
   if menuActionITTD_PART =&quot;CFG&quot; then cmdITTD_PARTCFG_CLick
   if menuActionITTD_PART =&quot;FND&quot; then cmdITTD_PARTFND_CLick
   if menuActionITTD_PART =&quot;ACC&quot; then cmdITTD_PARTACC_CLick
   menuActionITTD_PART =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_PARTAdd,cmdITTD_PARTAdd.tag
  LoadBtnPictures cmdITTD_PARTEdit,cmdITTD_PARTEdit.tag
  LoadBtnPictures cmdITTD_PARTDel,cmdITTD_PARTDel.tag
  LoadBtnPictures cmdITTD_PARTRef,cmdITTD_PARTRef.tag
  LoadBtnPictures cmdITTD_PARTPrn,cmdITTD_PARTPrn.tag
  LoadBtnPictures cmdITTD_PARTFnd,cmdITTD_PARTFnd.tag
  LoadBtnPictures cmdITTD_PARTRun,cmdITTD_PARTRun.tag
  LoadBtnPictures cmdITTD_PARTAcc,cmdITTD_PARTAcc.tag
  LoadBtnPictures cmdITTD_PARTCfg,cmdITTD_PARTCfg.tag
  item.ITTD_PART.PrepareGrid gridITTD_PART
  LoadGridLayout gridITTD_PART
  Set fndITTD_PART = Nothing
  On Error Resume Next
  Set fndITTD_PART = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_PART.Init gridITTD_PART
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_PART.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PART.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PART.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PART.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_PART.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PART.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PART.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PART.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_PART.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_PART = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_FACTORY_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_FACTORY" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_FACTORY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_FACTORY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_FACTORY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_FACTORYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_FACTORYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_FACTORYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_FACTORYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_FACTORYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_FACTORYCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_FACTORYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_FACTORYRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_FACTORYAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_FACTORY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Завод"/><Properties Name="Name" PropValue="mnuPopupITTD_FACTORY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_FACTORYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_FACTORYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_FACTORYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_FACTORYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_FACTORYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_FACTORYOpen"/></ControlData><ControlData Name="mnuITTD_FACTORYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYRef"/></ControlData><ControlData Name="mnuITTD_FACTORYS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_FACTORYS1"/></ControlData><ControlData Name="mnuITTD_FACTORYBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_FACTORYBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_FACTORYCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCOPY"/></ControlData><ControlData Name="mnuITTD_FACTORYCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCUT"/></ControlData><ControlData Name="mnuITTD_FACTORYPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYPASTE"/></ControlData><ControlData Name="mnuITTD_FACTORYCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCHANGE"/></ControlData><ControlData Name="mnuITTD_FACTORYCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_FACTORYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYPrn"/></ControlData><ControlData Name="mnuITTD_FACTORYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCfg"/></ControlData><ControlData Name="mnuITTD_FACTORYFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_FACTORYFind"/></ControlData><ControlData Name="mnuITTD_FACTORYAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_FACTORYAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_FACTORY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_FACTORY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_FACTORY as object
private menuActionITTD_FACTORY as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_FACTORYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_FACTORY,&quot;gridITTD_FACTORY&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_FACTORYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_FACTORY,&quot;Завод&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_FACTORYRef_Click()
  on error resume next
  item.ITTD_FACTORY.Refresh
  gridITTD_FACTORY.itemCount = item.ITTD_FACTORY.count
  gridITTD_FACTORY.Refetch
  gridITTD_FACTORY.Refresh
End Sub
Private Sub cmdITTD_FACTORYAcc_Click()
On Error Resume Next
If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
If gridITTD_FACTORY.Row &gt; 0 Then
 If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_FACTORYEdit_Click()
  on error resume next
If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
If gridITTD_FACTORY.Row &gt; 0 then
 If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_FACTORY_read.Item = u
    again: frmITTD_FACTORY_read.NotFirstTime = False
    frmITTD_FACTORY_read.OnInit
    frmITTD_FACTORY_read.Show vbModal
    If frmITTD_FACTORY_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_FACTORY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_FACTORYDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_FACTORYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_FACTORY.Add()

      Set frmITTD_FACTORY_read.Item = u
      again: frmITTD_FACTORY_read.NotFirstTime = False
      frmITTD_FACTORY_read.OnInit
      frmITTD_FACTORY_read.Show vbModal
      If frmITTD_FACTORY_read.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_FACTORY.ItemCount = Item.ITTD_FACTORY.Count
        gridITTD_FACTORY.Refresh
        gridITTD_FACTORY.RefreshGroups
        gridITTD_FACTORY.Refreshsort
        gridITTD_FACTORY.MoveToBookmark u.ID &amp; &quot;ITTD_FACTORY&quot;
      Else
        Item.ITTD_FACTORY.Delete u.ID
        Item.ITTD_FACTORY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_FACTORYFnd_Click()
  on error resume next
  fndITTD_FACTORY.ShowForm
End Sub
Private Sub cmdITTD_FACTORYRun_Click()
  on error resume next
  gridITTD_FACTORY_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_FACTORY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_FACTORY.LoadRow gridITTD_FACTORY, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_FACTORY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_FACTORY_DblClick()
  cmdITTD_FACTORYEdit_Click
End Sub
Private Sub gridITTD_FACTORY_KeyPress(KeyAscii As Integer)
  If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_FACTORY.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_FACTORY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_FACTORY.Row And LastRow &gt; 0 Then
  gridITTD_FACTORY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_FACTORY.GetRowData(gridITTD_FACTORY.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_FACTORYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_FACTORY.Add()
    If GetFromBuffer(u) Then
      gridITTD_FACTORY.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_FACTORY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_FACTORYCfg_Click
        End If
    End If
end sub

private sub gridITTD_FACTORY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_FACTORY
End If
end sub
private sub mnuITTD_FACTORYAdd_click()
   menuActionITTD_FACTORY =&quot;ADD&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYEdit_click()
   menuActionITTD_FACTORY =&quot;EDIT&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYDelete_click()
   menuActionITTD_FACTORY =&quot;DEL&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYOpen_click()
   menuActionITTD_FACTORY =&quot;RUN&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYRef_click()
   menuActionITTD_FACTORY =&quot;REF&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
  Private Sub mnuITTD_FACTORYCOPY_Click()
    On Error Resume Next
    If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
    If gridITTD_FACTORY.Row &gt; 0 Then
     If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_FACTORYCUT_Click()
    On Error Resume Next
    If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
    If gridITTD_FACTORY.Row &gt; 0 Then
     If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_FACTORY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_FACTORYCHANGE_Click()
  On Error Resume Next
  If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
  If gridITTD_FACTORY.Row &gt; 0 Then
   If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_FACTORY.ItemCount = u.parent.Count
      gridITTD_FACTORY.RefreshRowIndex gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_FACTORYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_FACTORYPrn_click()
   menuActionITTD_FACTORY =&quot;PRN&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYCfg_click()
   menuActionITTD_FACTORY =&quot;CFG&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYFind_click()
   menuActionITTD_FACTORY =&quot;FND&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYAcc_click()
   menuActionITTD_FACTORY =&quot;ACC&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub menuTimerITTD_FACTORY_timer()
   menuTimerITTD_FACTORY.enabled = false
   if menuActionITTD_FACTORY =&quot;ADD&quot; then cmdITTD_FACTORYADD_CLick
   if menuActionITTD_FACTORY =&quot;EDIT&quot; then cmdITTD_FACTORYEDIT_CLick
   if menuActionITTD_FACTORY =&quot;DEL&quot; then cmdITTD_FACTORYDEL_CLick
   if menuActionITTD_FACTORY =&quot;RUN&quot; then cmdITTD_FACTORYRUN_CLick
   if menuActionITTD_FACTORY =&quot;REF&quot; then cmdITTD_FACTORYREF_CLick
   if menuActionITTD_FACTORY =&quot;PRN&quot; then cmdITTD_FACTORYPRN_CLick
   if menuActionITTD_FACTORY =&quot;CFG&quot; then cmdITTD_FACTORYCFG_CLick
   if menuActionITTD_FACTORY =&quot;FND&quot; then cmdITTD_FACTORYFND_CLick
   if menuActionITTD_FACTORY =&quot;ACC&quot; then cmdITTD_FACTORYACC_CLick
   menuActionITTD_FACTORY =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_FACTORYAdd,cmdITTD_FACTORYAdd.tag
  LoadBtnPictures cmdITTD_FACTORYEdit,cmdITTD_FACTORYEdit.tag
  LoadBtnPictures cmdITTD_FACTORYDel,cmdITTD_FACTORYDel.tag
  LoadBtnPictures cmdITTD_FACTORYRef,cmdITTD_FACTORYRef.tag
  LoadBtnPictures cmdITTD_FACTORYPrn,cmdITTD_FACTORYPrn.tag
  LoadBtnPictures cmdITTD_FACTORYFnd,cmdITTD_FACTORYFnd.tag
  LoadBtnPictures cmdITTD_FACTORYRun,cmdITTD_FACTORYRun.tag
  LoadBtnPictures cmdITTD_FACTORYAcc,cmdITTD_FACTORYAcc.tag
  LoadBtnPictures cmdITTD_FACTORYCfg,cmdITTD_FACTORYCfg.tag
  item.ITTD_FACTORY.PrepareGrid gridITTD_FACTORY
  LoadGridLayout gridITTD_FACTORY
  Set fndITTD_FACTORY = Nothing
  On Error Resume Next
  Set fndITTD_FACTORY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_FACTORY.Init gridITTD_FACTORY
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_FACTORY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_FACTORY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_FACTORY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_FACTORY = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_KILLPLACE_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_KILLPLACE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_KILLPLACE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_KILLPLACE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_KILLPLACEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_KILLPLACEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_KILLPLACEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_KILLPLACERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_KILLPLACEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_KILLPLACECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_KILLPLACEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_KILLPLACERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_KILLPLACEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Бойня"/><Properties Name="Name" PropValue="mnuPopupITTD_KILLPLACE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_KILLPLACEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_KILLPLACEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_KILLPLACEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_KILLPLACEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEOpen"/></ControlData><ControlData Name="mnuITTD_KILLPLACERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACERef"/></ControlData><ControlData Name="mnuITTD_KILLPLACES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACES1"/></ControlData><ControlData Name="mnuITTD_KILLPLACEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_KILLPLACECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECOPY"/></ControlData><ControlData Name="mnuITTD_KILLPLACECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECUT"/></ControlData><ControlData Name="mnuITTD_KILLPLACEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEPASTE"/></ControlData><ControlData Name="mnuITTD_KILLPLACECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECHANGE"/></ControlData><ControlData Name="mnuITTD_KILLPLACECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_KILLPLACEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEPrn"/></ControlData><ControlData Name="mnuITTD_KILLPLACECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECfg"/></ControlData><ControlData Name="mnuITTD_KILLPLACEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEFind"/></ControlData><ControlData Name="mnuITTD_KILLPLACEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_KILLPLACE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_KILLPLACE as object
private menuActionITTD_KILLPLACE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_KILLPLACECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_KILLPLACE,&quot;gridITTD_KILLPLACE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_KILLPLACEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_KILLPLACE,&quot;Бойня&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_KILLPLACERef_Click()
  on error resume next
  item.ITTD_KILLPLACE.Refresh
  gridITTD_KILLPLACE.itemCount = item.ITTD_KILLPLACE.count
  gridITTD_KILLPLACE.Refetch
  gridITTD_KILLPLACE.Refresh
End Sub
Private Sub cmdITTD_KILLPLACEAcc_Click()
On Error Resume Next
If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
If gridITTD_KILLPLACE.Row &gt; 0 Then
 If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_KILLPLACEEdit_Click()
  on error resume next
If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
If gridITTD_KILLPLACE.Row &gt; 0 then
 If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_KILLPLACE_read.Item = u
    again: frmITTD_KILLPLACE_read.NotFirstTime = False
    frmITTD_KILLPLACE_read.OnInit
    frmITTD_KILLPLACE_read.Show vbModal
    If frmITTD_KILLPLACE_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_KILLPLACE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_KILLPLACEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_KILLPLACEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_KILLPLACE.Add()

      Set frmITTD_KILLPLACE_read.Item = u
      again: frmITTD_KILLPLACE_read.NotFirstTime = False
      frmITTD_KILLPLACE_read.OnInit
      frmITTD_KILLPLACE_read.Show vbModal
      If frmITTD_KILLPLACE_read.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_KILLPLACE.ItemCount = Item.ITTD_KILLPLACE.Count
        gridITTD_KILLPLACE.Refresh
        gridITTD_KILLPLACE.RefreshGroups
        gridITTD_KILLPLACE.Refreshsort
        gridITTD_KILLPLACE.MoveToBookmark u.ID &amp; &quot;ITTD_KILLPLACE&quot;
      Else
        Item.ITTD_KILLPLACE.Delete u.ID
        Item.ITTD_KILLPLACE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_KILLPLACEFnd_Click()
  on error resume next
  fndITTD_KILLPLACE.ShowForm
End Sub
Private Sub cmdITTD_KILLPLACERun_Click()
  on error resume next
  gridITTD_KILLPLACE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_KILLPLACE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_KILLPLACE.LoadRow gridITTD_KILLPLACE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_KILLPLACE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_KILLPLACE_DblClick()
  cmdITTD_KILLPLACEEdit_Click
End Sub
Private Sub gridITTD_KILLPLACE_KeyPress(KeyAscii As Integer)
  If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_KILLPLACE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_KILLPLACE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_KILLPLACE.Row And LastRow &gt; 0 Then
  gridITTD_KILLPLACE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_KILLPLACE.GetRowData(gridITTD_KILLPLACE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_KILLPLACEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_KILLPLACE.Add()
    If GetFromBuffer(u) Then
      gridITTD_KILLPLACE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_KILLPLACE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_KILLPLACECfg_Click
        End If
    End If
end sub

private sub gridITTD_KILLPLACE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_KILLPLACE
End If
end sub
private sub mnuITTD_KILLPLACEAdd_click()
   menuActionITTD_KILLPLACE =&quot;ADD&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEEdit_click()
   menuActionITTD_KILLPLACE =&quot;EDIT&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEDelete_click()
   menuActionITTD_KILLPLACE =&quot;DEL&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEOpen_click()
   menuActionITTD_KILLPLACE =&quot;RUN&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACERef_click()
   menuActionITTD_KILLPLACE =&quot;REF&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
  Private Sub mnuITTD_KILLPLACECOPY_Click()
    On Error Resume Next
    If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
    If gridITTD_KILLPLACE.Row &gt; 0 Then
     If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_KILLPLACECUT_Click()
    On Error Resume Next
    If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
    If gridITTD_KILLPLACE.Row &gt; 0 Then
     If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_KILLPLACE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_KILLPLACECHANGE_Click()
  On Error Resume Next
  If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
  If gridITTD_KILLPLACE.Row &gt; 0 Then
   If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_KILLPLACE.ItemCount = u.parent.Count
      gridITTD_KILLPLACE.RefreshRowIndex gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_KILLPLACECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_KILLPLACEPrn_click()
   menuActionITTD_KILLPLACE =&quot;PRN&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACECfg_click()
   menuActionITTD_KILLPLACE =&quot;CFG&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEFind_click()
   menuActionITTD_KILLPLACE =&quot;FND&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEAcc_click()
   menuActionITTD_KILLPLACE =&quot;ACC&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub menuTimerITTD_KILLPLACE_timer()
   menuTimerITTD_KILLPLACE.enabled = false
   if menuActionITTD_KILLPLACE =&quot;ADD&quot; then cmdITTD_KILLPLACEADD_CLick
   if menuActionITTD_KILLPLACE =&quot;EDIT&quot; then cmdITTD_KILLPLACEEDIT_CLick
   if menuActionITTD_KILLPLACE =&quot;DEL&quot; then cmdITTD_KILLPLACEDEL_CLick
   if menuActionITTD_KILLPLACE =&quot;RUN&quot; then cmdITTD_KILLPLACERUN_CLick
   if menuActionITTD_KILLPLACE =&quot;REF&quot; then cmdITTD_KILLPLACEREF_CLick
   if menuActionITTD_KILLPLACE =&quot;PRN&quot; then cmdITTD_KILLPLACEPRN_CLick
   if menuActionITTD_KILLPLACE =&quot;CFG&quot; then cmdITTD_KILLPLACECFG_CLick
   if menuActionITTD_KILLPLACE =&quot;FND&quot; then cmdITTD_KILLPLACEFND_CLick
   if menuActionITTD_KILLPLACE =&quot;ACC&quot; then cmdITTD_KILLPLACEACC_CLick
   menuActionITTD_KILLPLACE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_KILLPLACEAdd,cmdITTD_KILLPLACEAdd.tag
  LoadBtnPictures cmdITTD_KILLPLACEEdit,cmdITTD_KILLPLACEEdit.tag
  LoadBtnPictures cmdITTD_KILLPLACEDel,cmdITTD_KILLPLACEDel.tag
  LoadBtnPictures cmdITTD_KILLPLACERef,cmdITTD_KILLPLACERef.tag
  LoadBtnPictures cmdITTD_KILLPLACEPrn,cmdITTD_KILLPLACEPrn.tag
  LoadBtnPictures cmdITTD_KILLPLACEFnd,cmdITTD_KILLPLACEFnd.tag
  LoadBtnPictures cmdITTD_KILLPLACERun,cmdITTD_KILLPLACERun.tag
  LoadBtnPictures cmdITTD_KILLPLACEAcc,cmdITTD_KILLPLACEAcc.tag
  LoadBtnPictures cmdITTD_KILLPLACECfg,cmdITTD_KILLPLACECfg.tag
  item.ITTD_KILLPLACE.PrepareGrid gridITTD_KILLPLACE
  LoadGridLayout gridITTD_KILLPLACE
  Set fndITTD_KILLPLACE = Nothing
  On Error Resume Next
  Set fndITTD_KILLPLACE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_KILLPLACE.Init gridITTD_KILLPLACE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_KILLPLACE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_KILLPLACE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_KILLPLACE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_KILLPLACE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_COUNTRY_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_COUNTRY" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_COUNTRY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_COUNTRY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_COUNTRY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_COUNTRYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_COUNTRYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_COUNTRYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_COUNTRYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_COUNTRYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_COUNTRYCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_COUNTRYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_COUNTRYRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_COUNTRYAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_COUNTRY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Страна"/><Properties Name="Name" PropValue="mnuPopupITTD_COUNTRY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_COUNTRYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_COUNTRYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_COUNTRYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_COUNTRYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYOpen"/></ControlData><ControlData Name="mnuITTD_COUNTRYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYRef"/></ControlData><ControlData Name="mnuITTD_COUNTRYS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYS1"/></ControlData><ControlData Name="mnuITTD_COUNTRYBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_COUNTRYCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCOPY"/></ControlData><ControlData Name="mnuITTD_COUNTRYCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCUT"/></ControlData><ControlData Name="mnuITTD_COUNTRYPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYPASTE"/></ControlData><ControlData Name="mnuITTD_COUNTRYCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCHANGE"/></ControlData><ControlData Name="mnuITTD_COUNTRYCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_COUNTRYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYPrn"/></ControlData><ControlData Name="mnuITTD_COUNTRYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCfg"/></ControlData><ControlData Name="mnuITTD_COUNTRYFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYFind"/></ControlData><ControlData Name="mnuITTD_COUNTRYAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_COUNTRY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_COUNTRY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_COUNTRY as object
private menuActionITTD_COUNTRY as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_COUNTRYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_COUNTRY,&quot;gridITTD_COUNTRY&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_COUNTRYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_COUNTRY,&quot;Страна&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_COUNTRYRef_Click()
  on error resume next
  item.ITTD_COUNTRY.Refresh
  gridITTD_COUNTRY.itemCount = item.ITTD_COUNTRY.count
  gridITTD_COUNTRY.Refetch
  gridITTD_COUNTRY.Refresh
End Sub
Private Sub cmdITTD_COUNTRYAcc_Click()
On Error Resume Next
If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
If gridITTD_COUNTRY.Row &gt; 0 Then
 If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_COUNTRYEdit_Click()
  on error resume next
If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
If gridITTD_COUNTRY.Row &gt; 0 then
 If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_COUNTRY_read.Item = u
    again: frmITTD_COUNTRY_read.NotFirstTime = False
    frmITTD_COUNTRY_read.OnInit
    frmITTD_COUNTRY_read.Show vbModal
    If frmITTD_COUNTRY_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_COUNTRY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_COUNTRYDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_COUNTRYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_COUNTRY.Add()

      Set frmITTD_COUNTRY_read.Item = u
      again: frmITTD_COUNTRY_read.NotFirstTime = False
      frmITTD_COUNTRY_read.OnInit
      frmITTD_COUNTRY_read.Show vbModal
      If frmITTD_COUNTRY_read.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_COUNTRY.ItemCount = Item.ITTD_COUNTRY.Count
        gridITTD_COUNTRY.Refresh
        gridITTD_COUNTRY.RefreshGroups
        gridITTD_COUNTRY.Refreshsort
        gridITTD_COUNTRY.MoveToBookmark u.ID &amp; &quot;ITTD_COUNTRY&quot;
      Else
        Item.ITTD_COUNTRY.Delete u.ID
        Item.ITTD_COUNTRY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_COUNTRYFnd_Click()
  on error resume next
  fndITTD_COUNTRY.ShowForm
End Sub
Private Sub cmdITTD_COUNTRYRun_Click()
  on error resume next
  gridITTD_COUNTRY_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_COUNTRY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_COUNTRY.LoadRow gridITTD_COUNTRY, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_COUNTRY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_COUNTRY_DblClick()
  cmdITTD_COUNTRYEdit_Click
End Sub
Private Sub gridITTD_COUNTRY_KeyPress(KeyAscii As Integer)
  If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_COUNTRY.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_COUNTRY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_COUNTRY.Row And LastRow &gt; 0 Then
  gridITTD_COUNTRY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_COUNTRY.GetRowData(gridITTD_COUNTRY.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_COUNTRYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_COUNTRY.Add()
    If GetFromBuffer(u) Then
      gridITTD_COUNTRY.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_COUNTRY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_COUNTRYCfg_Click
        End If
    End If
end sub

private sub gridITTD_COUNTRY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_COUNTRY
End If
end sub
private sub mnuITTD_COUNTRYAdd_click()
   menuActionITTD_COUNTRY =&quot;ADD&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYEdit_click()
   menuActionITTD_COUNTRY =&quot;EDIT&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYDelete_click()
   menuActionITTD_COUNTRY =&quot;DEL&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYOpen_click()
   menuActionITTD_COUNTRY =&quot;RUN&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYRef_click()
   menuActionITTD_COUNTRY =&quot;REF&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
  Private Sub mnuITTD_COUNTRYCOPY_Click()
    On Error Resume Next
    If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridITTD_COUNTRY.Row &gt; 0 Then
     If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_COUNTRYCUT_Click()
    On Error Resume Next
    If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridITTD_COUNTRY.Row &gt; 0 Then
     If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_COUNTRY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_COUNTRYCHANGE_Click()
  On Error Resume Next
  If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
  If gridITTD_COUNTRY.Row &gt; 0 Then
   If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_COUNTRY.ItemCount = u.parent.Count
      gridITTD_COUNTRY.RefreshRowIndex gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_COUNTRYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_COUNTRYPrn_click()
   menuActionITTD_COUNTRY =&quot;PRN&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYCfg_click()
   menuActionITTD_COUNTRY =&quot;CFG&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYFind_click()
   menuActionITTD_COUNTRY =&quot;FND&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYAcc_click()
   menuActionITTD_COUNTRY =&quot;ACC&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub menuTimerITTD_COUNTRY_timer()
   menuTimerITTD_COUNTRY.enabled = false
   if menuActionITTD_COUNTRY =&quot;ADD&quot; then cmdITTD_COUNTRYADD_CLick
   if menuActionITTD_COUNTRY =&quot;EDIT&quot; then cmdITTD_COUNTRYEDIT_CLick
   if menuActionITTD_COUNTRY =&quot;DEL&quot; then cmdITTD_COUNTRYDEL_CLick
   if menuActionITTD_COUNTRY =&quot;RUN&quot; then cmdITTD_COUNTRYRUN_CLick
   if menuActionITTD_COUNTRY =&quot;REF&quot; then cmdITTD_COUNTRYREF_CLick
   if menuActionITTD_COUNTRY =&quot;PRN&quot; then cmdITTD_COUNTRYPRN_CLick
   if menuActionITTD_COUNTRY =&quot;CFG&quot; then cmdITTD_COUNTRYCFG_CLick
   if menuActionITTD_COUNTRY =&quot;FND&quot; then cmdITTD_COUNTRYFND_CLick
   if menuActionITTD_COUNTRY =&quot;ACC&quot; then cmdITTD_COUNTRYACC_CLick
   menuActionITTD_COUNTRY =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_COUNTRYAdd,cmdITTD_COUNTRYAdd.tag
  LoadBtnPictures cmdITTD_COUNTRYEdit,cmdITTD_COUNTRYEdit.tag
  LoadBtnPictures cmdITTD_COUNTRYDel,cmdITTD_COUNTRYDel.tag
  LoadBtnPictures cmdITTD_COUNTRYRef,cmdITTD_COUNTRYRef.tag
  LoadBtnPictures cmdITTD_COUNTRYPrn,cmdITTD_COUNTRYPrn.tag
  LoadBtnPictures cmdITTD_COUNTRYFnd,cmdITTD_COUNTRYFnd.tag
  LoadBtnPictures cmdITTD_COUNTRYRun,cmdITTD_COUNTRYRun.tag
  LoadBtnPictures cmdITTD_COUNTRYAcc,cmdITTD_COUNTRYAcc.tag
  LoadBtnPictures cmdITTD_COUNTRYCfg,cmdITTD_COUNTRYCfg.tag
  item.ITTD_COUNTRY.PrepareGrid gridITTD_COUNTRY
  LoadGridLayout gridITTD_COUNTRY
  Set fndITTD_COUNTRY = Nothing
  On Error Resume Next
  Set fndITTD_COUNTRY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_COUNTRY.Init gridITTD_COUNTRY
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_COUNTRY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_COUNTRY = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_CAMERA_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_CAMERA" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_CAMERA"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_CAMERA" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_CAMERA"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_CAMERAAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_CAMERAEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_CAMERADel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERADel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_CAMERARef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERARef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_CAMERAPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_CAMERACfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERACfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_CAMERAFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_CAMERARun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_CAMERARun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_CAMERAAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_CAMERA" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Холодильные камеры"/><Properties Name="Name" PropValue="mnuPopupITTD_CAMERA"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_CAMERAAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_CAMERAAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_CAMERAEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_CAMERAEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_CAMERADelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_CAMERADelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_CAMERAOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_CAMERAOpen"/></ControlData><ControlData Name="mnuITTD_CAMERARef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_CAMERARef"/></ControlData><ControlData Name="mnuITTD_CAMERAS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_CAMERAS1"/></ControlData><ControlData Name="mnuITTD_CAMERABuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_CAMERABuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_CAMERACOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_CAMERACOPY"/></ControlData><ControlData Name="mnuITTD_CAMERACUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_CAMERACUT"/></ControlData><ControlData Name="mnuITTD_CAMERAPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_CAMERAPASTE"/></ControlData><ControlData Name="mnuITTD_CAMERACHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACHANGE"/></ControlData><ControlData Name="mnuITTD_CAMERACLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_CAMERAPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_CAMERAPrn"/></ControlData><ControlData Name="mnuITTD_CAMERACfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACfg"/></ControlData><ControlData Name="mnuITTD_CAMERAFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_CAMERAFind"/></ControlData><ControlData Name="mnuITTD_CAMERAAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_CAMERAAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_CAMERA" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_CAMERA"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Холодильные камеры
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_CAMERA as object
private menuActionITTD_CAMERA as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_CAMERACfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_CAMERA,&quot;gridITTD_CAMERA&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_CAMERAPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_CAMERA,&quot;Холодильные камеры&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_CAMERARef_Click()
  on error resume next
  item.ITTD_CAMERA.Refresh
  gridITTD_CAMERA.itemCount = item.ITTD_CAMERA.count
  gridITTD_CAMERA.Refetch
  gridITTD_CAMERA.Refresh
End Sub
Private Sub cmdITTD_CAMERAAcc_Click()
On Error Resume Next
If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
If gridITTD_CAMERA.Row &gt; 0 Then
 If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_CAMERAEdit_Click()
  on error resume next
If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
If gridITTD_CAMERA.Row &gt; 0 then
 If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_CAMERA_read.Item = u
    again: frmITTD_CAMERA_read.NotFirstTime = False
    frmITTD_CAMERA_read.OnInit
    frmITTD_CAMERA_read.Show vbModal
    If frmITTD_CAMERA_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_CAMERA.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_CAMERADel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_CAMERAAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_CAMERAFnd_Click()
  on error resume next
  fndITTD_CAMERA.ShowForm
End Sub
Private Sub cmdITTD_CAMERARun_Click()
  on error resume next
  gridITTD_CAMERA_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_CAMERA_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_CAMERA.LoadRow gridITTD_CAMERA, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_CAMERA_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_CAMERA_DblClick()
  cmdITTD_CAMERAEdit_Click
End Sub
Private Sub gridITTD_CAMERA_KeyPress(KeyAscii As Integer)
  If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_CAMERA.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_CAMERA_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_CAMERA.Row And LastRow &gt; 0 Then
  gridITTD_CAMERA.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_CAMERA.GetRowData(gridITTD_CAMERA.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_CAMERAPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_CAMERA.Add()
    If GetFromBuffer(u) Then
      gridITTD_CAMERA.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_CAMERA_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_CAMERACfg_Click
        End If
    End If
end sub

private sub gridITTD_CAMERA_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_CAMERA
End If
end sub
private sub mnuITTD_CAMERAAdd_click()
   menuActionITTD_CAMERA =&quot;ADD&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAEdit_click()
   menuActionITTD_CAMERA =&quot;EDIT&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERADelete_click()
   menuActionITTD_CAMERA =&quot;DEL&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAOpen_click()
   menuActionITTD_CAMERA =&quot;RUN&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERARef_click()
   menuActionITTD_CAMERA =&quot;REF&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
  Private Sub mnuITTD_CAMERACOPY_Click()
    On Error Resume Next
    If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
    If gridITTD_CAMERA.Row &gt; 0 Then
     If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_CAMERACUT_Click()
    On Error Resume Next
    If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
    If gridITTD_CAMERA.Row &gt; 0 Then
     If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_CAMERA.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_CAMERACHANGE_Click()
  On Error Resume Next
  If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
  If gridITTD_CAMERA.Row &gt; 0 Then
   If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_CAMERA.ItemCount = u.parent.Count
      gridITTD_CAMERA.RefreshRowIndex gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_CAMERACLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_CAMERAPrn_click()
   menuActionITTD_CAMERA =&quot;PRN&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERACfg_click()
   menuActionITTD_CAMERA =&quot;CFG&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAFind_click()
   menuActionITTD_CAMERA =&quot;FND&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAAcc_click()
   menuActionITTD_CAMERA =&quot;ACC&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub menuTimerITTD_CAMERA_timer()
   menuTimerITTD_CAMERA.enabled = false
   if menuActionITTD_CAMERA =&quot;ADD&quot; then cmdITTD_CAMERAADD_CLick
   if menuActionITTD_CAMERA =&quot;EDIT&quot; then cmdITTD_CAMERAEDIT_CLick
   if menuActionITTD_CAMERA =&quot;DEL&quot; then cmdITTD_CAMERADEL_CLick
   if menuActionITTD_CAMERA =&quot;RUN&quot; then cmdITTD_CAMERARUN_CLick
   if menuActionITTD_CAMERA =&quot;REF&quot; then cmdITTD_CAMERAREF_CLick
   if menuActionITTD_CAMERA =&quot;PRN&quot; then cmdITTD_CAMERAPRN_CLick
   if menuActionITTD_CAMERA =&quot;CFG&quot; then cmdITTD_CAMERACFG_CLick
   if menuActionITTD_CAMERA =&quot;FND&quot; then cmdITTD_CAMERAFND_CLick
   if menuActionITTD_CAMERA =&quot;ACC&quot; then cmdITTD_CAMERAACC_CLick
   menuActionITTD_CAMERA =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_CAMERAAdd,cmdITTD_CAMERAAdd.tag
  LoadBtnPictures cmdITTD_CAMERAEdit,cmdITTD_CAMERAEdit.tag
  LoadBtnPictures cmdITTD_CAMERADel,cmdITTD_CAMERADel.tag
  LoadBtnPictures cmdITTD_CAMERARef,cmdITTD_CAMERARef.tag
  LoadBtnPictures cmdITTD_CAMERAPrn,cmdITTD_CAMERAPrn.tag
  LoadBtnPictures cmdITTD_CAMERAFnd,cmdITTD_CAMERAFnd.tag
  LoadBtnPictures cmdITTD_CAMERARun,cmdITTD_CAMERARun.tag
  LoadBtnPictures cmdITTD_CAMERAAcc,cmdITTD_CAMERAAcc.tag
  LoadBtnPictures cmdITTD_CAMERACfg,cmdITTD_CAMERACfg.tag
  item.ITTD_CAMERA.PrepareGrid gridITTD_CAMERA
  LoadGridLayout gridITTD_CAMERA
  Set fndITTD_CAMERA = Nothing
  On Error Resume Next
  Set fndITTD_CAMERA = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_CAMERA.Init gridITTD_CAMERA
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_CAMERA.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_CAMERA.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_CAMERA.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_CAMERA = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_RULE_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_RULE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_RULE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_RULE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_RULE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_RULEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_RULEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_RULEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_RULERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_RULEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_RULECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_RULEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_RULERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_RULERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_RULEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_RULE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Правило формирования партии"/><Properties Name="Name" PropValue="mnuPopupITTD_RULE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_RULEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_RULEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_RULEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_RULEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_RULEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_RULEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_RULEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_RULEOpen"/></ControlData><ControlData Name="mnuITTD_RULERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_RULERef"/></ControlData><ControlData Name="mnuITTD_RULES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_RULES1"/></ControlData><ControlData Name="mnuITTD_RULEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_RULEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_RULECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_RULECOPY"/></ControlData><ControlData Name="mnuITTD_RULECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_RULECUT"/></ControlData><ControlData Name="mnuITTD_RULEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_RULEPASTE"/></ControlData><ControlData Name="mnuITTD_RULECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_RULECHANGE"/></ControlData><ControlData Name="mnuITTD_RULECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_RULECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_RULEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_RULEPrn"/></ControlData><ControlData Name="mnuITTD_RULECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_RULECfg"/></ControlData><ControlData Name="mnuITTD_RULEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_RULEFind"/></ControlData><ControlData Name="mnuITTD_RULEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_RULEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_RULE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_RULE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Правило по которому зполняются обязательные поля и составляется код партии
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_RULE as object
private menuActionITTD_RULE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_RULECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_RULE,&quot;gridITTD_RULE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_RULEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_RULE,&quot;Правило формирования партии&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_RULERef_Click()
  on error resume next
  item.ITTD_RULE.Refresh
  gridITTD_RULE.itemCount = item.ITTD_RULE.count
  gridITTD_RULE.Refetch
  gridITTD_RULE.Refresh
End Sub
Private Sub cmdITTD_RULEAcc_Click()
On Error Resume Next
If gridITTD_RULE.ItemCount = 0 Then Exit Sub
If gridITTD_RULE.Row &gt; 0 Then
 If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_RULEEdit_Click()
  on error resume next
If gridITTD_RULE.ItemCount = 0 Then Exit Sub
If gridITTD_RULE.Row &gt; 0 then
 If gridITTD_RULE.RowIndex(gridITTD_RULE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_RULE_read.Item = u
    again: frmITTD_RULE_read.NotFirstTime = False
    frmITTD_RULE_read.OnInit
    frmITTD_RULE_read.Show vbModal
    If frmITTD_RULE_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_RULE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_RULEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_RULEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_RULE.Add()

      Set frmITTD_RULE_read.Item = u
      again: frmITTD_RULE_read.NotFirstTime = False
      frmITTD_RULE_read.OnInit
      frmITTD_RULE_read.Show vbModal
      If frmITTD_RULE_read.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_RULE.ItemCount = Item.ITTD_RULE.Count
        gridITTD_RULE.Refresh
        gridITTD_RULE.RefreshGroups
        gridITTD_RULE.Refreshsort
        gridITTD_RULE.MoveToBookmark u.ID &amp; &quot;ITTD_RULE&quot;
      Else
        Item.ITTD_RULE.Delete u.ID
        Item.ITTD_RULE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_RULEFnd_Click()
  on error resume next
  fndITTD_RULE.ShowForm
End Sub
Private Sub cmdITTD_RULERun_Click()
  on error resume next
  gridITTD_RULE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_RULE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_RULE.LoadRow gridITTD_RULE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_RULE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_RULE_DblClick()
  cmdITTD_RULEEdit_Click
End Sub
Private Sub gridITTD_RULE_KeyPress(KeyAscii As Integer)
  If gridITTD_RULE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_RULE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_RULE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_RULE.Row And LastRow &gt; 0 Then
  gridITTD_RULE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_RULE.GetRowData(gridITTD_RULE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_RULEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_RULE.Add()
    If GetFromBuffer(u) Then
      gridITTD_RULE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_RULE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_RULECfg_Click
        End If
    End If
end sub

private sub gridITTD_RULE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_RULE
End If
end sub
private sub mnuITTD_RULEAdd_click()
   menuActionITTD_RULE =&quot;ADD&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEEdit_click()
   menuActionITTD_RULE =&quot;EDIT&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEDelete_click()
   menuActionITTD_RULE =&quot;DEL&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEOpen_click()
   menuActionITTD_RULE =&quot;RUN&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULERef_click()
   menuActionITTD_RULE =&quot;REF&quot;
   menuTimerITTD_RULE.enabled = true
end sub
  Private Sub mnuITTD_RULECOPY_Click()
    On Error Resume Next
    If gridITTD_RULE.ItemCount = 0 Then Exit Sub
    If gridITTD_RULE.Row &gt; 0 Then
     If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_RULECUT_Click()
    On Error Resume Next
    If gridITTD_RULE.ItemCount = 0 Then Exit Sub
    If gridITTD_RULE.Row &gt; 0 Then
     If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_RULE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_RULECHANGE_Click()
  On Error Resume Next
  If gridITTD_RULE.ItemCount = 0 Then Exit Sub
  If gridITTD_RULE.Row &gt; 0 Then
   If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_RULE.ItemCount = u.parent.Count
      gridITTD_RULE.RefreshRowIndex gridITTD_RULE.RowIndex(gridITTD_RULE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_RULECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_RULEPrn_click()
   menuActionITTD_RULE =&quot;PRN&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULECfg_click()
   menuActionITTD_RULE =&quot;CFG&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEFind_click()
   menuActionITTD_RULE =&quot;FND&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEAcc_click()
   menuActionITTD_RULE =&quot;ACC&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub menuTimerITTD_RULE_timer()
   menuTimerITTD_RULE.enabled = false
   if menuActionITTD_RULE =&quot;ADD&quot; then cmdITTD_RULEADD_CLick
   if menuActionITTD_RULE =&quot;EDIT&quot; then cmdITTD_RULEEDIT_CLick
   if menuActionITTD_RULE =&quot;DEL&quot; then cmdITTD_RULEDEL_CLick
   if menuActionITTD_RULE =&quot;RUN&quot; then cmdITTD_RULERUN_CLick
   if menuActionITTD_RULE =&quot;REF&quot; then cmdITTD_RULEREF_CLick
   if menuActionITTD_RULE =&quot;PRN&quot; then cmdITTD_RULEPRN_CLick
   if menuActionITTD_RULE =&quot;CFG&quot; then cmdITTD_RULECFG_CLick
   if menuActionITTD_RULE =&quot;FND&quot; then cmdITTD_RULEFND_CLick
   if menuActionITTD_RULE =&quot;ACC&quot; then cmdITTD_RULEACC_CLick
   menuActionITTD_RULE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_RULEAdd,cmdITTD_RULEAdd.tag
  LoadBtnPictures cmdITTD_RULEEdit,cmdITTD_RULEEdit.tag
  LoadBtnPictures cmdITTD_RULEDel,cmdITTD_RULEDel.tag
  LoadBtnPictures cmdITTD_RULERef,cmdITTD_RULERef.tag
  LoadBtnPictures cmdITTD_RULEPrn,cmdITTD_RULEPrn.tag
  LoadBtnPictures cmdITTD_RULEFnd,cmdITTD_RULEFnd.tag
  LoadBtnPictures cmdITTD_RULERun,cmdITTD_RULERun.tag
  LoadBtnPictures cmdITTD_RULEAcc,cmdITTD_RULEAcc.tag
  LoadBtnPictures cmdITTD_RULECfg,cmdITTD_RULECfg.tag
  item.ITTD_RULE.PrepareGrid gridITTD_RULE
  LoadGridLayout gridITTD_RULE
  Set fndITTD_RULE = Nothing
  On Error Resume Next
  Set fndITTD_RULE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_RULE.Init gridITTD_RULE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_RULE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_RULE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_RULE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_RULE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_RULE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_RULE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_RULE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_RULE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_RULE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_RULE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_OPTTYPE_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_OPTTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_OPTTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_OPTTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_OPTTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_OPTTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_OPTTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_OPTTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_OPTTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_OPTTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_OPTTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_OPTTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_OPTTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип оптимизации"/><Properties Name="Name" PropValue="mnuPopupITTD_OPTTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_OPTTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_OPTTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_OPTTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_OPTTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEOpen"/></ControlData><ControlData Name="mnuITTD_OPTTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPERef"/></ControlData><ControlData Name="mnuITTD_OPTTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPES1"/></ControlData><ControlData Name="mnuITTD_OPTTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_OPTTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECOPY"/></ControlData><ControlData Name="mnuITTD_OPTTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECUT"/></ControlData><ControlData Name="mnuITTD_OPTTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_OPTTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_OPTTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_OPTTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEPrn"/></ControlData><ControlData Name="mnuITTD_OPTTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECfg"/></ControlData><ControlData Name="mnuITTD_OPTTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEFind"/></ControlData><ControlData Name="mnuITTD_OPTTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_OPTTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Тип оптимизации склада
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_OPTTYPE as object
private menuActionITTD_OPTTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_OPTTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_OPTTYPE,&quot;gridITTD_OPTTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_OPTTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_OPTTYPE,&quot;Тип оптимизации&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_OPTTYPERef_Click()
  on error resume next
  item.ITTD_OPTTYPE.Refresh
  gridITTD_OPTTYPE.itemCount = item.ITTD_OPTTYPE.count
  gridITTD_OPTTYPE.Refetch
  gridITTD_OPTTYPE.Refresh
End Sub
Private Sub cmdITTD_OPTTYPEAcc_Click()
On Error Resume Next
If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_OPTTYPE.Row &gt; 0 Then
 If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_OPTTYPEEdit_Click()
  on error resume next
If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_OPTTYPE.Row &gt; 0 then
 If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_OPTTYPE_read.Item = u
    again: frmITTD_OPTTYPE_read.NotFirstTime = False
    frmITTD_OPTTYPE_read.OnInit
    frmITTD_OPTTYPE_read.Show vbModal
    If frmITTD_OPTTYPE_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_OPTTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_OPTTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_OPTTYPEAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_OPTTYPEFnd_Click()
  on error resume next
  fndITTD_OPTTYPE.ShowForm
End Sub
Private Sub cmdITTD_OPTTYPERun_Click()
  on error resume next
  gridITTD_OPTTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_OPTTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_OPTTYPE.LoadRow gridITTD_OPTTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_OPTTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_OPTTYPE_DblClick()
  cmdITTD_OPTTYPEEdit_Click
End Sub
Private Sub gridITTD_OPTTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_OPTTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_OPTTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_OPTTYPE.Row And LastRow &gt; 0 Then
  gridITTD_OPTTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_OPTTYPE.GetRowData(gridITTD_OPTTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_OPTTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_OPTTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_OPTTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_OPTTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_OPTTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_OPTTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_OPTTYPE
End If
end sub
private sub mnuITTD_OPTTYPEAdd_click()
   menuActionITTD_OPTTYPE =&quot;ADD&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEEdit_click()
   menuActionITTD_OPTTYPE =&quot;EDIT&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEDelete_click()
   menuActionITTD_OPTTYPE =&quot;DEL&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEOpen_click()
   menuActionITTD_OPTTYPE =&quot;RUN&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPERef_click()
   menuActionITTD_OPTTYPE =&quot;REF&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
  Private Sub mnuITTD_OPTTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_OPTTYPE.Row &gt; 0 Then
     If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_OPTTYPECUT_Click()
    On Error Resume Next
    If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_OPTTYPE.Row &gt; 0 Then
     If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_OPTTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_OPTTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_OPTTYPE.Row &gt; 0 Then
   If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_OPTTYPE.ItemCount = u.parent.Count
      gridITTD_OPTTYPE.RefreshRowIndex gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_OPTTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_OPTTYPEPrn_click()
   menuActionITTD_OPTTYPE =&quot;PRN&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPECfg_click()
   menuActionITTD_OPTTYPE =&quot;CFG&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEFind_click()
   menuActionITTD_OPTTYPE =&quot;FND&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEAcc_click()
   menuActionITTD_OPTTYPE =&quot;ACC&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub menuTimerITTD_OPTTYPE_timer()
   menuTimerITTD_OPTTYPE.enabled = false
   if menuActionITTD_OPTTYPE =&quot;ADD&quot; then cmdITTD_OPTTYPEADD_CLick
   if menuActionITTD_OPTTYPE =&quot;EDIT&quot; then cmdITTD_OPTTYPEEDIT_CLick
   if menuActionITTD_OPTTYPE =&quot;DEL&quot; then cmdITTD_OPTTYPEDEL_CLick
   if menuActionITTD_OPTTYPE =&quot;RUN&quot; then cmdITTD_OPTTYPERUN_CLick
   if menuActionITTD_OPTTYPE =&quot;REF&quot; then cmdITTD_OPTTYPEREF_CLick
   if menuActionITTD_OPTTYPE =&quot;PRN&quot; then cmdITTD_OPTTYPEPRN_CLick
   if menuActionITTD_OPTTYPE =&quot;CFG&quot; then cmdITTD_OPTTYPECFG_CLick
   if menuActionITTD_OPTTYPE =&quot;FND&quot; then cmdITTD_OPTTYPEFND_CLick
   if menuActionITTD_OPTTYPE =&quot;ACC&quot; then cmdITTD_OPTTYPEACC_CLick
   menuActionITTD_OPTTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_OPTTYPEAdd,cmdITTD_OPTTYPEAdd.tag
  LoadBtnPictures cmdITTD_OPTTYPEEdit,cmdITTD_OPTTYPEEdit.tag
  LoadBtnPictures cmdITTD_OPTTYPEDel,cmdITTD_OPTTYPEDel.tag
  LoadBtnPictures cmdITTD_OPTTYPERef,cmdITTD_OPTTYPERef.tag
  LoadBtnPictures cmdITTD_OPTTYPEPrn,cmdITTD_OPTTYPEPrn.tag
  LoadBtnPictures cmdITTD_OPTTYPEFnd,cmdITTD_OPTTYPEFnd.tag
  LoadBtnPictures cmdITTD_OPTTYPERun,cmdITTD_OPTTYPERun.tag
  LoadBtnPictures cmdITTD_OPTTYPEAcc,cmdITTD_OPTTYPEAcc.tag
  LoadBtnPictures cmdITTD_OPTTYPECfg,cmdITTD_OPTTYPECfg.tag
  item.ITTD_OPTTYPE.PrepareGrid gridITTD_OPTTYPE
  LoadGridLayout gridITTD_OPTTYPE
  Set fndITTD_OPTTYPE = Nothing
  On Error Resume Next
  Set fndITTD_OPTTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_OPTTYPE.Init gridITTD_OPTTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_OPTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_OPTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_OPTTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_OPTTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_MOROZ_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_MOROZ" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_MOROZ"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_MOROZ" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_MOROZ"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_MOROZAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_MOROZEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_MOROZDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_MOROZRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_MOROZPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_MOROZCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_MOROZFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_MOROZRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_MOROZRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_MOROZAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_MOROZ" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Параметры выморозки"/><Properties Name="Name" PropValue="mnuPopupITTD_MOROZ"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_MOROZAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_MOROZAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_MOROZEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_MOROZEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_MOROZDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_MOROZDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_MOROZOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_MOROZOpen"/></ControlData><ControlData Name="mnuITTD_MOROZRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_MOROZRef"/></ControlData><ControlData Name="mnuITTD_MOROZS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_MOROZS1"/></ControlData><ControlData Name="mnuITTD_MOROZBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_MOROZBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_MOROZCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_MOROZCOPY"/></ControlData><ControlData Name="mnuITTD_MOROZCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_MOROZCUT"/></ControlData><ControlData Name="mnuITTD_MOROZPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_MOROZPASTE"/></ControlData><ControlData Name="mnuITTD_MOROZCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCHANGE"/></ControlData><ControlData Name="mnuITTD_MOROZCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_MOROZPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_MOROZPrn"/></ControlData><ControlData Name="mnuITTD_MOROZCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCfg"/></ControlData><ControlData Name="mnuITTD_MOROZFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_MOROZFind"/></ControlData><ControlData Name="mnuITTD_MOROZAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_MOROZAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_MOROZ" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_MOROZ"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Параметры выморозки
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_MOROZ as object
private menuActionITTD_MOROZ as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_MOROZCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_MOROZ,&quot;gridITTD_MOROZ&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_MOROZPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_MOROZ,&quot;Параметры выморозки&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_MOROZRef_Click()
  on error resume next
  item.ITTD_MOROZ.Refresh
  gridITTD_MOROZ.itemCount = item.ITTD_MOROZ.count
  gridITTD_MOROZ.Refetch
  gridITTD_MOROZ.Refresh
End Sub
Private Sub cmdITTD_MOROZAcc_Click()
On Error Resume Next
If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
If gridITTD_MOROZ.Row &gt; 0 Then
 If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_MOROZEdit_Click()
  on error resume next
If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
If gridITTD_MOROZ.Row &gt; 0 then
 If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_MOROZ_read.Item = u
    again: frmITTD_MOROZ_read.NotFirstTime = False
    frmITTD_MOROZ_read.OnInit
    frmITTD_MOROZ_read.Show vbModal
    If frmITTD_MOROZ_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_MOROZ.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_MOROZDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_MOROZAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_MOROZFnd_Click()
  on error resume next
  fndITTD_MOROZ.ShowForm
End Sub
Private Sub cmdITTD_MOROZRun_Click()
  on error resume next
  gridITTD_MOROZ_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_MOROZ_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_MOROZ.LoadRow gridITTD_MOROZ, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_MOROZ_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_MOROZ_DblClick()
  cmdITTD_MOROZEdit_Click
End Sub
Private Sub gridITTD_MOROZ_KeyPress(KeyAscii As Integer)
  If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_MOROZ.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_MOROZ_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_MOROZ.Row And LastRow &gt; 0 Then
  gridITTD_MOROZ.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_MOROZ.GetRowData(gridITTD_MOROZ.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_MOROZPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_MOROZ.Add()
    If GetFromBuffer(u) Then
      gridITTD_MOROZ.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_MOROZ_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_MOROZCfg_Click
        End If
    End If
end sub

private sub gridITTD_MOROZ_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_MOROZ
End If
end sub
private sub mnuITTD_MOROZAdd_click()
   menuActionITTD_MOROZ =&quot;ADD&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZEdit_click()
   menuActionITTD_MOROZ =&quot;EDIT&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZDelete_click()
   menuActionITTD_MOROZ =&quot;DEL&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZOpen_click()
   menuActionITTD_MOROZ =&quot;RUN&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZRef_click()
   menuActionITTD_MOROZ =&quot;REF&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
  Private Sub mnuITTD_MOROZCOPY_Click()
    On Error Resume Next
    If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
    If gridITTD_MOROZ.Row &gt; 0 Then
     If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_MOROZCUT_Click()
    On Error Resume Next
    If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
    If gridITTD_MOROZ.Row &gt; 0 Then
     If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_MOROZ.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_MOROZCHANGE_Click()
  On Error Resume Next
  If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
  If gridITTD_MOROZ.Row &gt; 0 Then
   If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_MOROZ.ItemCount = u.parent.Count
      gridITTD_MOROZ.RefreshRowIndex gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_MOROZCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_MOROZPrn_click()
   menuActionITTD_MOROZ =&quot;PRN&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZCfg_click()
   menuActionITTD_MOROZ =&quot;CFG&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZFind_click()
   menuActionITTD_MOROZ =&quot;FND&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZAcc_click()
   menuActionITTD_MOROZ =&quot;ACC&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub menuTimerITTD_MOROZ_timer()
   menuTimerITTD_MOROZ.enabled = false
   if menuActionITTD_MOROZ =&quot;ADD&quot; then cmdITTD_MOROZADD_CLick
   if menuActionITTD_MOROZ =&quot;EDIT&quot; then cmdITTD_MOROZEDIT_CLick
   if menuActionITTD_MOROZ =&quot;DEL&quot; then cmdITTD_MOROZDEL_CLick
   if menuActionITTD_MOROZ =&quot;RUN&quot; then cmdITTD_MOROZRUN_CLick
   if menuActionITTD_MOROZ =&quot;REF&quot; then cmdITTD_MOROZREF_CLick
   if menuActionITTD_MOROZ =&quot;PRN&quot; then cmdITTD_MOROZPRN_CLick
   if menuActionITTD_MOROZ =&quot;CFG&quot; then cmdITTD_MOROZCFG_CLick
   if menuActionITTD_MOROZ =&quot;FND&quot; then cmdITTD_MOROZFND_CLick
   if menuActionITTD_MOROZ =&quot;ACC&quot; then cmdITTD_MOROZACC_CLick
   menuActionITTD_MOROZ =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_MOROZAdd,cmdITTD_MOROZAdd.tag
  LoadBtnPictures cmdITTD_MOROZEdit,cmdITTD_MOROZEdit.tag
  LoadBtnPictures cmdITTD_MOROZDel,cmdITTD_MOROZDel.tag
  LoadBtnPictures cmdITTD_MOROZRef,cmdITTD_MOROZRef.tag
  LoadBtnPictures cmdITTD_MOROZPrn,cmdITTD_MOROZPrn.tag
  LoadBtnPictures cmdITTD_MOROZFnd,cmdITTD_MOROZFnd.tag
  LoadBtnPictures cmdITTD_MOROZRun,cmdITTD_MOROZRun.tag
  LoadBtnPictures cmdITTD_MOROZAcc,cmdITTD_MOROZAcc.tag
  LoadBtnPictures cmdITTD_MOROZCfg,cmdITTD_MOROZCfg.tag
  item.ITTD_MOROZ.PrepareGrid gridITTD_MOROZ
  LoadGridLayout gridITTD_MOROZ
  Set fndITTD_MOROZ = Nothing
  On Error Resume Next
  Set fndITTD_MOROZ = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_MOROZ.Init gridITTD_MOROZ
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_MOROZ.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_MOROZ.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_MOROZ.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_MOROZ = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_EMAIL_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_EMAIL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_EMAIL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_EMAIL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_EMAIL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_EMAILAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_EMAILEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_EMAILDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdITTD_EMAILRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_EMAILPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_EMAILCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_EMAILFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_EMAILRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_EMAILRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_EMAILAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_EMAIL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Почтовые адреса"/><Properties Name="Name" PropValue="mnuPopupITTD_EMAIL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_EMAILAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_EMAILAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_EMAILEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_EMAILEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_EMAILDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_EMAILDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuITTD_EMAILOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_EMAILOpen"/></ControlData><ControlData Name="mnuITTD_EMAILRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_EMAILRef"/></ControlData><ControlData Name="mnuITTD_EMAILS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_EMAILS1"/></ControlData><ControlData Name="mnuITTD_EMAILBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_EMAILBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_EMAILCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_EMAILCOPY"/></ControlData><ControlData Name="mnuITTD_EMAILCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_EMAILCUT"/></ControlData><ControlData Name="mnuITTD_EMAILPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_EMAILPASTE"/></ControlData><ControlData Name="mnuITTD_EMAILCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCHANGE"/></ControlData><ControlData Name="mnuITTD_EMAILCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_EMAILPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_EMAILPrn"/></ControlData><ControlData Name="mnuITTD_EMAILCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCfg"/></ControlData><ControlData Name="mnuITTD_EMAILFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_EMAILFind"/></ControlData><ControlData Name="mnuITTD_EMAILAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_EMAILAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_EMAIL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_EMAIL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Адреса получателей информации о выморозке
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_EMAIL as object
private menuActionITTD_EMAIL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_EMAILCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_EMAIL,&quot;gridITTD_EMAIL&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_EMAILPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_EMAIL,&quot;Почтовые адреса&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_EMAILRef_Click()
  on error resume next
  item.ITTD_EMAIL.Refresh
  gridITTD_EMAIL.itemCount = item.ITTD_EMAIL.count
  gridITTD_EMAIL.Refetch
  gridITTD_EMAIL.Refresh
End Sub
Private Sub cmdITTD_EMAILAcc_Click()
On Error Resume Next
If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
If gridITTD_EMAIL.Row &gt; 0 Then
 If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_EMAILEdit_Click()
  on error resume next
If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
If gridITTD_EMAIL.Row &gt; 0 then
 If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_EMAIL_read.Item = u
    again: frmITTD_EMAIL_read.NotFirstTime = False
    frmITTD_EMAIL_read.OnInit
    frmITTD_EMAIL_read.Show vbModal
    If frmITTD_EMAIL_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_EMAIL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_EMAILDel_Click()
  on error resume next
End Sub
Private Sub cmdITTD_EMAILAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_EMAILFnd_Click()
  on error resume next
  fndITTD_EMAIL.ShowForm
End Sub
Private Sub cmdITTD_EMAILRun_Click()
  on error resume next
  gridITTD_EMAIL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_EMAIL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_EMAIL.LoadRow gridITTD_EMAIL, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_EMAIL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridITTD_EMAIL_DblClick()
  cmdITTD_EMAILEdit_Click
End Sub
Private Sub gridITTD_EMAIL_KeyPress(KeyAscii As Integer)
  If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_EMAIL.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_EMAIL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_EMAIL.Row And LastRow &gt; 0 Then
  gridITTD_EMAIL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_EMAIL.GetRowData(gridITTD_EMAIL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_EMAILPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_EMAIL.Add()
    If GetFromBuffer(u) Then
      gridITTD_EMAIL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_EMAIL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_EMAILCfg_Click
        End If
    End If
end sub

private sub gridITTD_EMAIL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_EMAIL
End If
end sub
private sub mnuITTD_EMAILAdd_click()
   menuActionITTD_EMAIL =&quot;ADD&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILEdit_click()
   menuActionITTD_EMAIL =&quot;EDIT&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILDelete_click()
   menuActionITTD_EMAIL =&quot;DEL&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILOpen_click()
   menuActionITTD_EMAIL =&quot;RUN&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILRef_click()
   menuActionITTD_EMAIL =&quot;REF&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
  Private Sub mnuITTD_EMAILCOPY_Click()
    On Error Resume Next
    If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
    If gridITTD_EMAIL.Row &gt; 0 Then
     If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_EMAILCUT_Click()
    On Error Resume Next
    If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
    If gridITTD_EMAIL.Row &gt; 0 Then
     If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_EMAIL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_EMAILCHANGE_Click()
  On Error Resume Next
  If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
  If gridITTD_EMAIL.Row &gt; 0 Then
   If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_EMAIL.ItemCount = u.parent.Count
      gridITTD_EMAIL.RefreshRowIndex gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_EMAILCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_EMAILPrn_click()
   menuActionITTD_EMAIL =&quot;PRN&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILCfg_click()
   menuActionITTD_EMAIL =&quot;CFG&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILFind_click()
   menuActionITTD_EMAIL =&quot;FND&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILAcc_click()
   menuActionITTD_EMAIL =&quot;ACC&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub menuTimerITTD_EMAIL_timer()
   menuTimerITTD_EMAIL.enabled = false
   if menuActionITTD_EMAIL =&quot;ADD&quot; then cmdITTD_EMAILADD_CLick
   if menuActionITTD_EMAIL =&quot;EDIT&quot; then cmdITTD_EMAILEDIT_CLick
   if menuActionITTD_EMAIL =&quot;DEL&quot; then cmdITTD_EMAILDEL_CLick
   if menuActionITTD_EMAIL =&quot;RUN&quot; then cmdITTD_EMAILRUN_CLick
   if menuActionITTD_EMAIL =&quot;REF&quot; then cmdITTD_EMAILREF_CLick
   if menuActionITTD_EMAIL =&quot;PRN&quot; then cmdITTD_EMAILPRN_CLick
   if menuActionITTD_EMAIL =&quot;CFG&quot; then cmdITTD_EMAILCFG_CLick
   if menuActionITTD_EMAIL =&quot;FND&quot; then cmdITTD_EMAILFND_CLick
   if menuActionITTD_EMAIL =&quot;ACC&quot; then cmdITTD_EMAILACC_CLick
   menuActionITTD_EMAIL =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_EMAILAdd,cmdITTD_EMAILAdd.tag
  LoadBtnPictures cmdITTD_EMAILEdit,cmdITTD_EMAILEdit.tag
  LoadBtnPictures cmdITTD_EMAILDel,cmdITTD_EMAILDel.tag
  LoadBtnPictures cmdITTD_EMAILRef,cmdITTD_EMAILRef.tag
  LoadBtnPictures cmdITTD_EMAILPrn,cmdITTD_EMAILPrn.tag
  LoadBtnPictures cmdITTD_EMAILFnd,cmdITTD_EMAILFnd.tag
  LoadBtnPictures cmdITTD_EMAILRun,cmdITTD_EMAILRun.tag
  LoadBtnPictures cmdITTD_EMAILAcc,cmdITTD_EMAILAcc.tag
  LoadBtnPictures cmdITTD_EMAILCfg,cmdITTD_EMAILCfg.tag
  item.ITTD_EMAIL.PrepareGrid gridITTD_EMAIL
  LoadGridLayout gridITTD_EMAIL
  Set fndITTD_EMAIL = Nothing
  On Error Resume Next
  Set fndITTD_EMAIL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_EMAIL.Init gridITTD_EMAIL
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_EMAIL.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_EMAIL.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_EMAIL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_EMAIL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlread_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_GTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_GTYPE_read"><Properties Name="Name" PropValue="pnlITTD_GTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_ZTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_ZTYPE_read"><Properties Name="Name" PropValue="pnlITTD_ZTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_PLTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_PLTYPE_read"><Properties Name="Name" PropValue="pnlITTD_PLTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_QTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_QTYPE_read"><Properties Name="Name" PropValue="pnlITTD_QTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_ATYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_ATYPE_read"><Properties Name="Name" PropValue="pnlITTD_ATYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_SRV" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_SRV_read"><Properties Name="Name" PropValue="pnlITTD_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_PART" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_PART_read"><Properties Name="Name" PropValue="pnlITTD_PART"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_FACTORY" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_FACTORY_read"><Properties Name="Name" PropValue="pnlITTD_FACTORY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_KILLPLACE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_KILLPLACE_read"><Properties Name="Name" PropValue="pnlITTD_KILLPLACE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_COUNTRY" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_COUNTRY_read"><Properties Name="Name" PropValue="pnlITTD_COUNTRY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_CAMERA" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_CAMERA_read"><Properties Name="Name" PropValue="pnlITTD_CAMERA"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_RULE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_RULE_read"><Properties Name="Name" PropValue="pnlITTD_RULE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_OPTTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_OPTTYPE_read"><Properties Name="Name" PropValue="pnlITTD_OPTTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_MOROZ" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_MOROZ_read"><Properties Name="Name" PropValue="pnlITTD_MOROZ"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_EMAIL" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_EMAIL_read"><Properties Name="Name" PropValue="pnlITTD_EMAIL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим read
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlITTD_GTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_ZTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_PLTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_QTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_ATYPE.IsOK
if IsItOk then IsItOk = pnlITTD_SRV.IsOK
if IsItOk then IsItOk = pnlITTD_PART.IsOK
if IsItOk then IsItOk = pnlITTD_FACTORY.IsOK
if IsItOk then IsItOk = pnlITTD_KILLPLACE.IsOK
if IsItOk then IsItOk = pnlITTD_COUNTRY.IsOK
if IsItOk then IsItOk = pnlITTD_CAMERA.IsOK
if IsItOk then IsItOk = pnlITTD_RULE.IsOK
if IsItOk then IsItOk = pnlITTD_OPTTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_MOROZ.IsOK
if IsItOk then IsItOk = pnlITTD_EMAIL.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlITTD_EMAIL.Visible = False
  pnlITTD_MOROZ.Visible = False
  pnlITTD_OPTTYPE.Visible = False
  pnlITTD_RULE.Visible = False
  pnlITTD_CAMERA.Visible = False
  pnlITTD_COUNTRY.Visible = False
  pnlITTD_KILLPLACE.Visible = False
  pnlITTD_FACTORY.Visible = False
  pnlITTD_PART.Visible = False
  pnlITTD_SRV.Visible = False
  pnlITTD_ATYPE.Visible = False
  pnlITTD_QTYPE.Visible = False
  pnlITTD_PLTYPE.Visible = False
  pnlITTD_ZTYPE.Visible = False
  pnlITTD_GTYPE.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ITTD_GTYPE&quot;
     With pnlITTD_GTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_GTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_ZTYPE&quot;
     With pnlITTD_ZTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_ZTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_PLTYPE&quot;
     With pnlITTD_PLTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_PLTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_QTYPE&quot;
     With pnlITTD_QTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_QTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_ATYPE&quot;
     With pnlITTD_ATYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_ATYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_SRV&quot;
     With pnlITTD_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_SRV.OnClick item,parentform
     End With
   Case &quot;ITTD_PART&quot;
     With pnlITTD_PART
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_PART.OnClick item,parentform
     End With
   Case &quot;ITTD_FACTORY&quot;
     With pnlITTD_FACTORY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_FACTORY.OnClick item,parentform
     End With
   Case &quot;ITTD_KILLPLACE&quot;
     With pnlITTD_KILLPLACE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_KILLPLACE.OnClick item,parentform
     End With
   Case &quot;ITTD_COUNTRY&quot;
     With pnlITTD_COUNTRY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_COUNTRY.OnClick item,parentform
     End With
   Case &quot;ITTD_CAMERA&quot;
     With pnlITTD_CAMERA
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_CAMERA.OnClick item,parentform
     End With
   Case &quot;ITTD_RULE&quot;
     With pnlITTD_RULE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_RULE.OnClick item,parentform
     End With
   Case &quot;ITTD_OPTTYPE&quot;
     With pnlITTD_OPTTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_OPTTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_MOROZ&quot;
     With pnlITTD_MOROZ
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_MOROZ.OnClick item,parentform
     End With
   Case &quot;ITTD_EMAIL&quot;
     With pnlITTD_EMAIL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_EMAIL.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Тип товара&quot;
ts.Tabs.Item(1).key = &quot;ITTD_GTYPE&quot;
pnlITTD_GTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_ZTYPE&quot;, &quot;Тип зоны&quot;)
pnlITTD_ZTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_PLTYPE&quot;, &quot;Тип палеты&quot;)
pnlITTD_PLTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_QTYPE&quot;, &quot;Тип заявки&quot;)
pnlITTD_QTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_ATYPE&quot;, &quot;Тип операции&quot;)
pnlITTD_ATYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_SRV&quot;, &quot;Услуги&quot;)
pnlITTD_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_PART&quot;, &quot;Партия товара&quot;)
pnlITTD_PART.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_FACTORY&quot;, &quot;Завод&quot;)
pnlITTD_FACTORY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_KILLPLACE&quot;, &quot;Бойня&quot;)
pnlITTD_KILLPLACE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_COUNTRY&quot;, &quot;Страна&quot;)
pnlITTD_COUNTRY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_CAMERA&quot;, &quot;Холодильные камеры&quot;)
pnlITTD_CAMERA.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_RULE&quot;, &quot;Правило формирования партии&quot;)
pnlITTD_RULE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_OPTTYPE&quot;, &quot;Тип оптимизации&quot;)
pnlITTD_OPTTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_MOROZ&quot;, &quot;Параметры выморозки&quot;)
pnlITTD_MOROZ.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_EMAIL&quot;, &quot;Почтовые адреса&quot;)
pnlITTD_EMAIL.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ITTD&quot;, &quot;ctlread_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlITTD_GTYPE.CloseClass
 pnlITTD_ZTYPE.CloseClass
 pnlITTD_PLTYPE.CloseClass
 pnlITTD_QTYPE.CloseClass
 pnlITTD_ATYPE.CloseClass
 pnlITTD_SRV.CloseClass
 pnlITTD_PART.CloseClass
 pnlITTD_FACTORY.CloseClass
 pnlITTD_KILLPLACE.CloseClass
 pnlITTD_COUNTRY.CloseClass
 pnlITTD_CAMERA.CloseClass
 pnlITTD_RULE.CloseClass
 pnlITTD_OPTTYPE.CloseClass
 pnlITTD_MOROZ.CloseClass
 pnlITTD_EMAIL.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlITTD_GTYPE.OnSave
 pnlITTD_ZTYPE.OnSave
 pnlITTD_PLTYPE.OnSave
 pnlITTD_QTYPE.OnSave
 pnlITTD_ATYPE.OnSave
 pnlITTD_SRV.OnSave
 pnlITTD_PART.OnSave
 pnlITTD_FACTORY.OnSave
 pnlITTD_KILLPLACE.OnSave
 pnlITTD_COUNTRY.OnSave
 pnlITTD_CAMERA.OnSave
 pnlITTD_RULE.OnSave
 pnlITTD_OPTTYPE.OnSave
 pnlITTD_MOROZ.OnSave
 pnlITTD_EMAIL.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlITTD_GTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_ZTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_PLTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_QTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_ATYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_PART.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_FACTORY.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_KILLPLACE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_COUNTRY.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_CAMERA.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_RULE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_OPTTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_MOROZ.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_EMAIL.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmread_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ITTDGUI.ctlread_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим read
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;read&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;read&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;read&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;read&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_GTYPE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_GTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_GTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_GTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_GTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_GTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_GTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_GTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_GTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_GTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_GTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_GTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_GTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_GTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_GTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_GTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_GTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип товара"/><Properties Name="Name" PropValue="mnuPopupITTD_GTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_GTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_GTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_GTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_GTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_GTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_GTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_GTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_GTYPEOpen"/></ControlData><ControlData Name="mnuITTD_GTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_GTYPERef"/></ControlData><ControlData Name="mnuITTD_GTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_GTYPES1"/></ControlData><ControlData Name="mnuITTD_GTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_GTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_GTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_GTYPECOPY"/></ControlData><ControlData Name="mnuITTD_GTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_GTYPECUT"/></ControlData><ControlData Name="mnuITTD_GTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_GTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_GTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_GTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_GTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_GTYPEPrn"/></ControlData><ControlData Name="mnuITTD_GTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_GTYPECfg"/></ControlData><ControlData Name="mnuITTD_GTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_GTYPEFind"/></ControlData><ControlData Name="mnuITTD_GTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_GTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_GTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_GTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_GTYPE as object
private menuActionITTD_GTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_GTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_GTYPE,&quot;gridITTD_GTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_GTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_GTYPE,&quot;Тип товара&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_GTYPERef_Click()
  on error resume next
  item.ITTD_GTYPE.Refresh
  gridITTD_GTYPE.itemCount = item.ITTD_GTYPE.count
  gridITTD_GTYPE.Refetch
  gridITTD_GTYPE.Refresh
End Sub
Private Sub cmdITTD_GTYPEAcc_Click()
On Error Resume Next
If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_GTYPE.Row &gt; 0 Then
 If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_GTYPEEdit_Click()
  on error resume next
If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_GTYPE.Row &gt; 0 then
 If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_GTYPE_.Item = u
    again: frmITTD_GTYPE_.NotFirstTime = False
    frmITTD_GTYPE_.OnInit
    frmITTD_GTYPE_.Show vbModal
    If frmITTD_GTYPE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_GTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_GTYPEDel_Click()
  on error resume next
  gridITTD_GTYPE.Delete
End Sub
Private Sub cmdITTD_GTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_GTYPE.Add()

      Set frmITTD_GTYPE_.Item = u
      again: frmITTD_GTYPE_.NotFirstTime = False
      frmITTD_GTYPE_.OnInit
      frmITTD_GTYPE_.Show vbModal
      If frmITTD_GTYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_GTYPE.ItemCount = Item.ITTD_GTYPE.Count
        gridITTD_GTYPE.Refresh
        gridITTD_GTYPE.RefreshGroups
        gridITTD_GTYPE.Refreshsort
        gridITTD_GTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_GTYPE&quot;
      Else
        Item.ITTD_GTYPE.Delete u.ID
        Item.ITTD_GTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_GTYPEFnd_Click()
  on error resume next
  fndITTD_GTYPE.ShowForm
End Sub
Private Sub cmdITTD_GTYPERun_Click()
  on error resume next
  gridITTD_GTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_GTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_GTYPE.LoadRow gridITTD_GTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_GTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_GTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_GTYPE_DblClick()
  cmdITTD_GTYPEEdit_Click
End Sub
Private Sub gridITTD_GTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_GTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_GTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_GTYPE.Row And LastRow &gt; 0 Then
  gridITTD_GTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_GTYPE.GetRowData(gridITTD_GTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_GTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_GTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_GTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_GTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_GTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_GTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_GTYPE
End If
end sub
private sub mnuITTD_GTYPEAdd_click()
   menuActionITTD_GTYPE =&quot;ADD&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEEdit_click()
   menuActionITTD_GTYPE =&quot;EDIT&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEDelete_click()
   menuActionITTD_GTYPE =&quot;DEL&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEOpen_click()
   menuActionITTD_GTYPE =&quot;RUN&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPERef_click()
   menuActionITTD_GTYPE =&quot;REF&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
  Private Sub mnuITTD_GTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_GTYPE.Row &gt; 0 Then
     If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_GTYPECUT_Click()
    On Error Resume Next
    If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_GTYPE.Row &gt; 0 Then
     If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_GTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_GTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_GTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_GTYPE.Row &gt; 0 Then
   If gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_GTYPE.RowBookmark(gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_GTYPE.ItemCount = u.parent.Count
      gridITTD_GTYPE.RefreshRowIndex gridITTD_GTYPE.RowIndex(gridITTD_GTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_GTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_GTYPEPrn_click()
   menuActionITTD_GTYPE =&quot;PRN&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPECfg_click()
   menuActionITTD_GTYPE =&quot;CFG&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEFind_click()
   menuActionITTD_GTYPE =&quot;FND&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub mnuITTD_GTYPEAcc_click()
   menuActionITTD_GTYPE =&quot;ACC&quot;
   menuTimerITTD_GTYPE.enabled = true
end sub
private sub menuTimerITTD_GTYPE_timer()
   menuTimerITTD_GTYPE.enabled = false
   if menuActionITTD_GTYPE =&quot;ADD&quot; then cmdITTD_GTYPEADD_CLick
   if menuActionITTD_GTYPE =&quot;EDIT&quot; then cmdITTD_GTYPEEDIT_CLick
   if menuActionITTD_GTYPE =&quot;DEL&quot; then cmdITTD_GTYPEDEL_CLick
   if menuActionITTD_GTYPE =&quot;RUN&quot; then cmdITTD_GTYPERUN_CLick
   if menuActionITTD_GTYPE =&quot;REF&quot; then cmdITTD_GTYPEREF_CLick
   if menuActionITTD_GTYPE =&quot;PRN&quot; then cmdITTD_GTYPEPRN_CLick
   if menuActionITTD_GTYPE =&quot;CFG&quot; then cmdITTD_GTYPECFG_CLick
   if menuActionITTD_GTYPE =&quot;FND&quot; then cmdITTD_GTYPEFND_CLick
   if menuActionITTD_GTYPE =&quot;ACC&quot; then cmdITTD_GTYPEACC_CLick
   menuActionITTD_GTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_GTYPEAdd,cmdITTD_GTYPEAdd.tag
  LoadBtnPictures cmdITTD_GTYPEEdit,cmdITTD_GTYPEEdit.tag
  LoadBtnPictures cmdITTD_GTYPEDel,cmdITTD_GTYPEDel.tag
  LoadBtnPictures cmdITTD_GTYPERef,cmdITTD_GTYPERef.tag
  LoadBtnPictures cmdITTD_GTYPEPrn,cmdITTD_GTYPEPrn.tag
  LoadBtnPictures cmdITTD_GTYPEFnd,cmdITTD_GTYPEFnd.tag
  LoadBtnPictures cmdITTD_GTYPERun,cmdITTD_GTYPERun.tag
  LoadBtnPictures cmdITTD_GTYPEAcc,cmdITTD_GTYPEAcc.tag
  LoadBtnPictures cmdITTD_GTYPECfg,cmdITTD_GTYPECfg.tag
  item.ITTD_GTYPE.PrepareGrid gridITTD_GTYPE
  LoadGridLayout gridITTD_GTYPE
  Set fndITTD_GTYPE = Nothing
  On Error Resume Next
  Set fndITTD_GTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_GTYPE.Init gridITTD_GTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_GTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_GTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_GTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_GTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_GTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_ZTYPE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_ZTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_ZTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_ZTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_ZTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_ZTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ZTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ZTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ZTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_ZTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_ZTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_ZTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_ZTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_ZTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ZTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_ZTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип зоны"/><Properties Name="Name" PropValue="mnuPopupITTD_ZTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_ZTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ZTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ZTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ZTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEOpen"/></ControlData><ControlData Name="mnuITTD_ZTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPERef"/></ControlData><ControlData Name="mnuITTD_ZTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_ZTYPES1"/></ControlData><ControlData Name="mnuITTD_ZTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_ZTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECOPY"/></ControlData><ControlData Name="mnuITTD_ZTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECUT"/></ControlData><ControlData Name="mnuITTD_ZTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_ZTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_ZTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_ZTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEPrn"/></ControlData><ControlData Name="mnuITTD_ZTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_ZTYPECfg"/></ControlData><ControlData Name="mnuITTD_ZTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEFind"/></ControlData><ControlData Name="mnuITTD_ZTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_ZTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_ZTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_ZTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_ZTYPE as object
private menuActionITTD_ZTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_ZTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_ZTYPE,&quot;gridITTD_ZTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ZTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_ZTYPE,&quot;Тип зоны&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ZTYPERef_Click()
  on error resume next
  item.ITTD_ZTYPE.Refresh
  gridITTD_ZTYPE.itemCount = item.ITTD_ZTYPE.count
  gridITTD_ZTYPE.Refetch
  gridITTD_ZTYPE.Refresh
End Sub
Private Sub cmdITTD_ZTYPEAcc_Click()
On Error Resume Next
If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ZTYPE.Row &gt; 0 Then
 If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_ZTYPEEdit_Click()
  on error resume next
If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ZTYPE.Row &gt; 0 then
 If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_ZTYPE_.Item = u
    again: frmITTD_ZTYPE_.NotFirstTime = False
    frmITTD_ZTYPE_.OnInit
    frmITTD_ZTYPE_.Show vbModal
    If frmITTD_ZTYPE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_ZTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_ZTYPEDel_Click()
  on error resume next
  gridITTD_ZTYPE.Delete
End Sub
Private Sub cmdITTD_ZTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_ZTYPE.Add()

      Set frmITTD_ZTYPE_.Item = u
      again: frmITTD_ZTYPE_.NotFirstTime = False
      frmITTD_ZTYPE_.OnInit
      frmITTD_ZTYPE_.Show vbModal
      If frmITTD_ZTYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_ZTYPE.ItemCount = Item.ITTD_ZTYPE.Count
        gridITTD_ZTYPE.Refresh
        gridITTD_ZTYPE.RefreshGroups
        gridITTD_ZTYPE.Refreshsort
        gridITTD_ZTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_ZTYPE&quot;
      Else
        Item.ITTD_ZTYPE.Delete u.ID
        Item.ITTD_ZTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_ZTYPEFnd_Click()
  on error resume next
  fndITTD_ZTYPE.ShowForm
End Sub
Private Sub cmdITTD_ZTYPERun_Click()
  on error resume next
  gridITTD_ZTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_ZTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_ZTYPE.LoadRow gridITTD_ZTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_ZTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_ZTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_ZTYPE_DblClick()
  cmdITTD_ZTYPEEdit_Click
End Sub
Private Sub gridITTD_ZTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_ZTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_ZTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_ZTYPE.Row And LastRow &gt; 0 Then
  gridITTD_ZTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_ZTYPE.GetRowData(gridITTD_ZTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_ZTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_ZTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_ZTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_ZTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_ZTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_ZTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_ZTYPE
End If
end sub
private sub mnuITTD_ZTYPEAdd_click()
   menuActionITTD_ZTYPE =&quot;ADD&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEEdit_click()
   menuActionITTD_ZTYPE =&quot;EDIT&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEDelete_click()
   menuActionITTD_ZTYPE =&quot;DEL&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEOpen_click()
   menuActionITTD_ZTYPE =&quot;RUN&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPERef_click()
   menuActionITTD_ZTYPE =&quot;REF&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
  Private Sub mnuITTD_ZTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ZTYPE.Row &gt; 0 Then
     If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_ZTYPECUT_Click()
    On Error Resume Next
    If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ZTYPE.Row &gt; 0 Then
     If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_ZTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_ZTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_ZTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_ZTYPE.Row &gt; 0 Then
   If gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ZTYPE.RowBookmark(gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_ZTYPE.ItemCount = u.parent.Count
      gridITTD_ZTYPE.RefreshRowIndex gridITTD_ZTYPE.RowIndex(gridITTD_ZTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_ZTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_ZTYPEPrn_click()
   menuActionITTD_ZTYPE =&quot;PRN&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPECfg_click()
   menuActionITTD_ZTYPE =&quot;CFG&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEFind_click()
   menuActionITTD_ZTYPE =&quot;FND&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub mnuITTD_ZTYPEAcc_click()
   menuActionITTD_ZTYPE =&quot;ACC&quot;
   menuTimerITTD_ZTYPE.enabled = true
end sub
private sub menuTimerITTD_ZTYPE_timer()
   menuTimerITTD_ZTYPE.enabled = false
   if menuActionITTD_ZTYPE =&quot;ADD&quot; then cmdITTD_ZTYPEADD_CLick
   if menuActionITTD_ZTYPE =&quot;EDIT&quot; then cmdITTD_ZTYPEEDIT_CLick
   if menuActionITTD_ZTYPE =&quot;DEL&quot; then cmdITTD_ZTYPEDEL_CLick
   if menuActionITTD_ZTYPE =&quot;RUN&quot; then cmdITTD_ZTYPERUN_CLick
   if menuActionITTD_ZTYPE =&quot;REF&quot; then cmdITTD_ZTYPEREF_CLick
   if menuActionITTD_ZTYPE =&quot;PRN&quot; then cmdITTD_ZTYPEPRN_CLick
   if menuActionITTD_ZTYPE =&quot;CFG&quot; then cmdITTD_ZTYPECFG_CLick
   if menuActionITTD_ZTYPE =&quot;FND&quot; then cmdITTD_ZTYPEFND_CLick
   if menuActionITTD_ZTYPE =&quot;ACC&quot; then cmdITTD_ZTYPEACC_CLick
   menuActionITTD_ZTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_ZTYPEAdd,cmdITTD_ZTYPEAdd.tag
  LoadBtnPictures cmdITTD_ZTYPEEdit,cmdITTD_ZTYPEEdit.tag
  LoadBtnPictures cmdITTD_ZTYPEDel,cmdITTD_ZTYPEDel.tag
  LoadBtnPictures cmdITTD_ZTYPERef,cmdITTD_ZTYPERef.tag
  LoadBtnPictures cmdITTD_ZTYPEPrn,cmdITTD_ZTYPEPrn.tag
  LoadBtnPictures cmdITTD_ZTYPEFnd,cmdITTD_ZTYPEFnd.tag
  LoadBtnPictures cmdITTD_ZTYPERun,cmdITTD_ZTYPERun.tag
  LoadBtnPictures cmdITTD_ZTYPEAcc,cmdITTD_ZTYPEAcc.tag
  LoadBtnPictures cmdITTD_ZTYPECfg,cmdITTD_ZTYPECfg.tag
  item.ITTD_ZTYPE.PrepareGrid gridITTD_ZTYPE
  LoadGridLayout gridITTD_ZTYPE
  Set fndITTD_ZTYPE = Nothing
  On Error Resume Next
  Set fndITTD_ZTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_ZTYPE.Init gridITTD_ZTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_ZTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_ZTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ZTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_ZTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_ZTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_PLTYPE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_PLTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_PLTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_PLTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_PLTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_PLTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PLTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PLTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PLTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_PLTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_PLTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_PLTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_PLTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_PLTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PLTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_PLTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип палеты"/><Properties Name="Name" PropValue="mnuPopupITTD_PLTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_PLTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PLTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PLTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PLTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEOpen"/></ControlData><ControlData Name="mnuITTD_PLTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPERef"/></ControlData><ControlData Name="mnuITTD_PLTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_PLTYPES1"/></ControlData><ControlData Name="mnuITTD_PLTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_PLTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECOPY"/></ControlData><ControlData Name="mnuITTD_PLTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECUT"/></ControlData><ControlData Name="mnuITTD_PLTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_PLTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_PLTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_PLTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEPrn"/></ControlData><ControlData Name="mnuITTD_PLTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_PLTYPECfg"/></ControlData><ControlData Name="mnuITTD_PLTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEFind"/></ControlData><ControlData Name="mnuITTD_PLTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_PLTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_PLTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_PLTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_PLTYPE as object
private menuActionITTD_PLTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_PLTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_PLTYPE,&quot;gridITTD_PLTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PLTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_PLTYPE,&quot;Тип палеты&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PLTYPERef_Click()
  on error resume next
  item.ITTD_PLTYPE.Refresh
  gridITTD_PLTYPE.itemCount = item.ITTD_PLTYPE.count
  gridITTD_PLTYPE.Refetch
  gridITTD_PLTYPE.Refresh
End Sub
Private Sub cmdITTD_PLTYPEAcc_Click()
On Error Resume Next
If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_PLTYPE.Row &gt; 0 Then
 If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_PLTYPEEdit_Click()
  on error resume next
If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_PLTYPE.Row &gt; 0 then
 If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_PLTYPE_.Item = u
    again: frmITTD_PLTYPE_.NotFirstTime = False
    frmITTD_PLTYPE_.OnInit
    frmITTD_PLTYPE_.Show vbModal
    If frmITTD_PLTYPE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_PLTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_PLTYPEDel_Click()
  on error resume next
  gridITTD_PLTYPE.Delete
End Sub
Private Sub cmdITTD_PLTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_PLTYPE.Add()

      Set frmITTD_PLTYPE_.Item = u
      again: frmITTD_PLTYPE_.NotFirstTime = False
      frmITTD_PLTYPE_.OnInit
      frmITTD_PLTYPE_.Show vbModal
      If frmITTD_PLTYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_PLTYPE.ItemCount = Item.ITTD_PLTYPE.Count
        gridITTD_PLTYPE.Refresh
        gridITTD_PLTYPE.RefreshGroups
        gridITTD_PLTYPE.Refreshsort
        gridITTD_PLTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_PLTYPE&quot;
      Else
        Item.ITTD_PLTYPE.Delete u.ID
        Item.ITTD_PLTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_PLTYPEFnd_Click()
  on error resume next
  fndITTD_PLTYPE.ShowForm
End Sub
Private Sub cmdITTD_PLTYPERun_Click()
  on error resume next
  gridITTD_PLTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_PLTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_PLTYPE.LoadRow gridITTD_PLTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_PLTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_PLTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_PLTYPE_DblClick()
  cmdITTD_PLTYPEEdit_Click
End Sub
Private Sub gridITTD_PLTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_PLTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_PLTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_PLTYPE.Row And LastRow &gt; 0 Then
  gridITTD_PLTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_PLTYPE.GetRowData(gridITTD_PLTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_PLTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_PLTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_PLTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_PLTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_PLTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_PLTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_PLTYPE
End If
end sub
private sub mnuITTD_PLTYPEAdd_click()
   menuActionITTD_PLTYPE =&quot;ADD&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEEdit_click()
   menuActionITTD_PLTYPE =&quot;EDIT&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEDelete_click()
   menuActionITTD_PLTYPE =&quot;DEL&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEOpen_click()
   menuActionITTD_PLTYPE =&quot;RUN&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPERef_click()
   menuActionITTD_PLTYPE =&quot;REF&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
  Private Sub mnuITTD_PLTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_PLTYPE.Row &gt; 0 Then
     If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_PLTYPECUT_Click()
    On Error Resume Next
    If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_PLTYPE.Row &gt; 0 Then
     If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_PLTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_PLTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_PLTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_PLTYPE.Row &gt; 0 Then
   If gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PLTYPE.RowBookmark(gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_PLTYPE.ItemCount = u.parent.Count
      gridITTD_PLTYPE.RefreshRowIndex gridITTD_PLTYPE.RowIndex(gridITTD_PLTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_PLTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_PLTYPEPrn_click()
   menuActionITTD_PLTYPE =&quot;PRN&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPECfg_click()
   menuActionITTD_PLTYPE =&quot;CFG&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEFind_click()
   menuActionITTD_PLTYPE =&quot;FND&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub mnuITTD_PLTYPEAcc_click()
   menuActionITTD_PLTYPE =&quot;ACC&quot;
   menuTimerITTD_PLTYPE.enabled = true
end sub
private sub menuTimerITTD_PLTYPE_timer()
   menuTimerITTD_PLTYPE.enabled = false
   if menuActionITTD_PLTYPE =&quot;ADD&quot; then cmdITTD_PLTYPEADD_CLick
   if menuActionITTD_PLTYPE =&quot;EDIT&quot; then cmdITTD_PLTYPEEDIT_CLick
   if menuActionITTD_PLTYPE =&quot;DEL&quot; then cmdITTD_PLTYPEDEL_CLick
   if menuActionITTD_PLTYPE =&quot;RUN&quot; then cmdITTD_PLTYPERUN_CLick
   if menuActionITTD_PLTYPE =&quot;REF&quot; then cmdITTD_PLTYPEREF_CLick
   if menuActionITTD_PLTYPE =&quot;PRN&quot; then cmdITTD_PLTYPEPRN_CLick
   if menuActionITTD_PLTYPE =&quot;CFG&quot; then cmdITTD_PLTYPECFG_CLick
   if menuActionITTD_PLTYPE =&quot;FND&quot; then cmdITTD_PLTYPEFND_CLick
   if menuActionITTD_PLTYPE =&quot;ACC&quot; then cmdITTD_PLTYPEACC_CLick
   menuActionITTD_PLTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_PLTYPEAdd,cmdITTD_PLTYPEAdd.tag
  LoadBtnPictures cmdITTD_PLTYPEEdit,cmdITTD_PLTYPEEdit.tag
  LoadBtnPictures cmdITTD_PLTYPEDel,cmdITTD_PLTYPEDel.tag
  LoadBtnPictures cmdITTD_PLTYPERef,cmdITTD_PLTYPERef.tag
  LoadBtnPictures cmdITTD_PLTYPEPrn,cmdITTD_PLTYPEPrn.tag
  LoadBtnPictures cmdITTD_PLTYPEFnd,cmdITTD_PLTYPEFnd.tag
  LoadBtnPictures cmdITTD_PLTYPERun,cmdITTD_PLTYPERun.tag
  LoadBtnPictures cmdITTD_PLTYPEAcc,cmdITTD_PLTYPEAcc.tag
  LoadBtnPictures cmdITTD_PLTYPECfg,cmdITTD_PLTYPECfg.tag
  item.ITTD_PLTYPE.PrepareGrid gridITTD_PLTYPE
  LoadGridLayout gridITTD_PLTYPE
  Set fndITTD_PLTYPE = Nothing
  On Error Resume Next
  Set fndITTD_PLTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_PLTYPE.Init gridITTD_PLTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_PLTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_PLTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PLTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_PLTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_PLTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_QTYPE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_QTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_QTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_QTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_QTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_QTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_QTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_QTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_QTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_QTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_QTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_QTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_QTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_QTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_QTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_QTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_QTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип заявки"/><Properties Name="Name" PropValue="mnuPopupITTD_QTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_QTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_QTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_QTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_QTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_QTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_QTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_QTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_QTYPEOpen"/></ControlData><ControlData Name="mnuITTD_QTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_QTYPERef"/></ControlData><ControlData Name="mnuITTD_QTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_QTYPES1"/></ControlData><ControlData Name="mnuITTD_QTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_QTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_QTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_QTYPECOPY"/></ControlData><ControlData Name="mnuITTD_QTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_QTYPECUT"/></ControlData><ControlData Name="mnuITTD_QTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_QTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_QTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_QTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_QTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_QTYPEPrn"/></ControlData><ControlData Name="mnuITTD_QTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_QTYPECfg"/></ControlData><ControlData Name="mnuITTD_QTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_QTYPEFind"/></ControlData><ControlData Name="mnuITTD_QTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_QTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_QTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_QTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_QTYPE as object
private menuActionITTD_QTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_QTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_QTYPE,&quot;gridITTD_QTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_QTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_QTYPE,&quot;Тип заявки&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_QTYPERef_Click()
  on error resume next
  item.ITTD_QTYPE.Refresh
  gridITTD_QTYPE.itemCount = item.ITTD_QTYPE.count
  gridITTD_QTYPE.Refetch
  gridITTD_QTYPE.Refresh
End Sub
Private Sub cmdITTD_QTYPEAcc_Click()
On Error Resume Next
If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_QTYPE.Row &gt; 0 Then
 If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_QTYPEEdit_Click()
  on error resume next
If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_QTYPE.Row &gt; 0 then
 If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_QTYPE_.Item = u
    again: frmITTD_QTYPE_.NotFirstTime = False
    frmITTD_QTYPE_.OnInit
    frmITTD_QTYPE_.Show vbModal
    If frmITTD_QTYPE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_QTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_QTYPEDel_Click()
  on error resume next
  gridITTD_QTYPE.Delete
End Sub
Private Sub cmdITTD_QTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_QTYPE.Add()

      Set frmITTD_QTYPE_.Item = u
      again: frmITTD_QTYPE_.NotFirstTime = False
      frmITTD_QTYPE_.OnInit
      frmITTD_QTYPE_.Show vbModal
      If frmITTD_QTYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_QTYPE.ItemCount = Item.ITTD_QTYPE.Count
        gridITTD_QTYPE.Refresh
        gridITTD_QTYPE.RefreshGroups
        gridITTD_QTYPE.Refreshsort
        gridITTD_QTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_QTYPE&quot;
      Else
        Item.ITTD_QTYPE.Delete u.ID
        Item.ITTD_QTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_QTYPEFnd_Click()
  on error resume next
  fndITTD_QTYPE.ShowForm
End Sub
Private Sub cmdITTD_QTYPERun_Click()
  on error resume next
  gridITTD_QTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_QTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_QTYPE.LoadRow gridITTD_QTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_QTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_QTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_QTYPE_DblClick()
  cmdITTD_QTYPEEdit_Click
End Sub
Private Sub gridITTD_QTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_QTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_QTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_QTYPE.Row And LastRow &gt; 0 Then
  gridITTD_QTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_QTYPE.GetRowData(gridITTD_QTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_QTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_QTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_QTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_QTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_QTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_QTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_QTYPE
End If
end sub
private sub mnuITTD_QTYPEAdd_click()
   menuActionITTD_QTYPE =&quot;ADD&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEEdit_click()
   menuActionITTD_QTYPE =&quot;EDIT&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEDelete_click()
   menuActionITTD_QTYPE =&quot;DEL&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEOpen_click()
   menuActionITTD_QTYPE =&quot;RUN&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPERef_click()
   menuActionITTD_QTYPE =&quot;REF&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
  Private Sub mnuITTD_QTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_QTYPE.Row &gt; 0 Then
     If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_QTYPECUT_Click()
    On Error Resume Next
    If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_QTYPE.Row &gt; 0 Then
     If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_QTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_QTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_QTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_QTYPE.Row &gt; 0 Then
   If gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_QTYPE.RowBookmark(gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_QTYPE.ItemCount = u.parent.Count
      gridITTD_QTYPE.RefreshRowIndex gridITTD_QTYPE.RowIndex(gridITTD_QTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_QTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_QTYPEPrn_click()
   menuActionITTD_QTYPE =&quot;PRN&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPECfg_click()
   menuActionITTD_QTYPE =&quot;CFG&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEFind_click()
   menuActionITTD_QTYPE =&quot;FND&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub mnuITTD_QTYPEAcc_click()
   menuActionITTD_QTYPE =&quot;ACC&quot;
   menuTimerITTD_QTYPE.enabled = true
end sub
private sub menuTimerITTD_QTYPE_timer()
   menuTimerITTD_QTYPE.enabled = false
   if menuActionITTD_QTYPE =&quot;ADD&quot; then cmdITTD_QTYPEADD_CLick
   if menuActionITTD_QTYPE =&quot;EDIT&quot; then cmdITTD_QTYPEEDIT_CLick
   if menuActionITTD_QTYPE =&quot;DEL&quot; then cmdITTD_QTYPEDEL_CLick
   if menuActionITTD_QTYPE =&quot;RUN&quot; then cmdITTD_QTYPERUN_CLick
   if menuActionITTD_QTYPE =&quot;REF&quot; then cmdITTD_QTYPEREF_CLick
   if menuActionITTD_QTYPE =&quot;PRN&quot; then cmdITTD_QTYPEPRN_CLick
   if menuActionITTD_QTYPE =&quot;CFG&quot; then cmdITTD_QTYPECFG_CLick
   if menuActionITTD_QTYPE =&quot;FND&quot; then cmdITTD_QTYPEFND_CLick
   if menuActionITTD_QTYPE =&quot;ACC&quot; then cmdITTD_QTYPEACC_CLick
   menuActionITTD_QTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_QTYPEAdd,cmdITTD_QTYPEAdd.tag
  LoadBtnPictures cmdITTD_QTYPEEdit,cmdITTD_QTYPEEdit.tag
  LoadBtnPictures cmdITTD_QTYPEDel,cmdITTD_QTYPEDel.tag
  LoadBtnPictures cmdITTD_QTYPERef,cmdITTD_QTYPERef.tag
  LoadBtnPictures cmdITTD_QTYPEPrn,cmdITTD_QTYPEPrn.tag
  LoadBtnPictures cmdITTD_QTYPEFnd,cmdITTD_QTYPEFnd.tag
  LoadBtnPictures cmdITTD_QTYPERun,cmdITTD_QTYPERun.tag
  LoadBtnPictures cmdITTD_QTYPEAcc,cmdITTD_QTYPEAcc.tag
  LoadBtnPictures cmdITTD_QTYPECfg,cmdITTD_QTYPECfg.tag
  item.ITTD_QTYPE.PrepareGrid gridITTD_QTYPE
  LoadGridLayout gridITTD_QTYPE
  Set fndITTD_QTYPE = Nothing
  On Error Resume Next
  Set fndITTD_QTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_QTYPE.Init gridITTD_QTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_QTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_QTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_QTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_QTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_QTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_ATYPE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_ATYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_ATYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_ATYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_ATYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_ATYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ATYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ATYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_ATYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_ATYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_ATYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_ATYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_ATYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_ATYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_ATYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_ATYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_ATYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип операции"/><Properties Name="Name" PropValue="mnuPopupITTD_ATYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_ATYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_ATYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ATYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_ATYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ATYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_ATYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_ATYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_ATYPEOpen"/></ControlData><ControlData Name="mnuITTD_ATYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_ATYPERef"/></ControlData><ControlData Name="mnuITTD_ATYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_ATYPES1"/></ControlData><ControlData Name="mnuITTD_ATYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_ATYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_ATYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_ATYPECOPY"/></ControlData><ControlData Name="mnuITTD_ATYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_ATYPECUT"/></ControlData><ControlData Name="mnuITTD_ATYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_ATYPEPASTE"/></ControlData><ControlData Name="mnuITTD_ATYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECHANGE"/></ControlData><ControlData Name="mnuITTD_ATYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_ATYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_ATYPEPrn"/></ControlData><ControlData Name="mnuITTD_ATYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_ATYPECfg"/></ControlData><ControlData Name="mnuITTD_ATYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_ATYPEFind"/></ControlData><ControlData Name="mnuITTD_ATYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_ATYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_ATYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_ATYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_ATYPE as object
private menuActionITTD_ATYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_ATYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_ATYPE,&quot;gridITTD_ATYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ATYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_ATYPE,&quot;Тип операции&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_ATYPERef_Click()
  on error resume next
  item.ITTD_ATYPE.Refresh
  gridITTD_ATYPE.itemCount = item.ITTD_ATYPE.count
  gridITTD_ATYPE.Refetch
  gridITTD_ATYPE.Refresh
End Sub
Private Sub cmdITTD_ATYPEAcc_Click()
On Error Resume Next
If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ATYPE.Row &gt; 0 Then
 If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_ATYPEEdit_Click()
  on error resume next
If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
If gridITTD_ATYPE.Row &gt; 0 then
 If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_ATYPE_.Item = u
    again: frmITTD_ATYPE_.NotFirstTime = False
    frmITTD_ATYPE_.OnInit
    frmITTD_ATYPE_.Show vbModal
    If frmITTD_ATYPE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_ATYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_ATYPEDel_Click()
  on error resume next
  gridITTD_ATYPE.Delete
End Sub
Private Sub cmdITTD_ATYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_ATYPE.Add()

      Set frmITTD_ATYPE_.Item = u
      again: frmITTD_ATYPE_.NotFirstTime = False
      frmITTD_ATYPE_.OnInit
      frmITTD_ATYPE_.Show vbModal
      If frmITTD_ATYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_ATYPE.ItemCount = Item.ITTD_ATYPE.Count
        gridITTD_ATYPE.Refresh
        gridITTD_ATYPE.RefreshGroups
        gridITTD_ATYPE.Refreshsort
        gridITTD_ATYPE.MoveToBookmark u.ID &amp; &quot;ITTD_ATYPE&quot;
      Else
        Item.ITTD_ATYPE.Delete u.ID
        Item.ITTD_ATYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_ATYPEFnd_Click()
  on error resume next
  fndITTD_ATYPE.ShowForm
End Sub
Private Sub cmdITTD_ATYPERun_Click()
  on error resume next
  gridITTD_ATYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_ATYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_ATYPE.LoadRow gridITTD_ATYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_ATYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_ATYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_ATYPE_DblClick()
  cmdITTD_ATYPEEdit_Click
End Sub
Private Sub gridITTD_ATYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_ATYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_ATYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_ATYPE.Row And LastRow &gt; 0 Then
  gridITTD_ATYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_ATYPE.GetRowData(gridITTD_ATYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_ATYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_ATYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_ATYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_ATYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_ATYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_ATYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_ATYPE
End If
end sub
private sub mnuITTD_ATYPEAdd_click()
   menuActionITTD_ATYPE =&quot;ADD&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEEdit_click()
   menuActionITTD_ATYPE =&quot;EDIT&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEDelete_click()
   menuActionITTD_ATYPE =&quot;DEL&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEOpen_click()
   menuActionITTD_ATYPE =&quot;RUN&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPERef_click()
   menuActionITTD_ATYPE =&quot;REF&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
  Private Sub mnuITTD_ATYPECOPY_Click()
    On Error Resume Next
    If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ATYPE.Row &gt; 0 Then
     If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_ATYPECUT_Click()
    On Error Resume Next
    If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_ATYPE.Row &gt; 0 Then
     If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_ATYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_ATYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_ATYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_ATYPE.Row &gt; 0 Then
   If gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_ATYPE.RowBookmark(gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_ATYPE.ItemCount = u.parent.Count
      gridITTD_ATYPE.RefreshRowIndex gridITTD_ATYPE.RowIndex(gridITTD_ATYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_ATYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_ATYPEPrn_click()
   menuActionITTD_ATYPE =&quot;PRN&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPECfg_click()
   menuActionITTD_ATYPE =&quot;CFG&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEFind_click()
   menuActionITTD_ATYPE =&quot;FND&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub mnuITTD_ATYPEAcc_click()
   menuActionITTD_ATYPE =&quot;ACC&quot;
   menuTimerITTD_ATYPE.enabled = true
end sub
private sub menuTimerITTD_ATYPE_timer()
   menuTimerITTD_ATYPE.enabled = false
   if menuActionITTD_ATYPE =&quot;ADD&quot; then cmdITTD_ATYPEADD_CLick
   if menuActionITTD_ATYPE =&quot;EDIT&quot; then cmdITTD_ATYPEEDIT_CLick
   if menuActionITTD_ATYPE =&quot;DEL&quot; then cmdITTD_ATYPEDEL_CLick
   if menuActionITTD_ATYPE =&quot;RUN&quot; then cmdITTD_ATYPERUN_CLick
   if menuActionITTD_ATYPE =&quot;REF&quot; then cmdITTD_ATYPEREF_CLick
   if menuActionITTD_ATYPE =&quot;PRN&quot; then cmdITTD_ATYPEPRN_CLick
   if menuActionITTD_ATYPE =&quot;CFG&quot; then cmdITTD_ATYPECFG_CLick
   if menuActionITTD_ATYPE =&quot;FND&quot; then cmdITTD_ATYPEFND_CLick
   if menuActionITTD_ATYPE =&quot;ACC&quot; then cmdITTD_ATYPEACC_CLick
   menuActionITTD_ATYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_ATYPEAdd,cmdITTD_ATYPEAdd.tag
  LoadBtnPictures cmdITTD_ATYPEEdit,cmdITTD_ATYPEEdit.tag
  LoadBtnPictures cmdITTD_ATYPEDel,cmdITTD_ATYPEDel.tag
  LoadBtnPictures cmdITTD_ATYPERef,cmdITTD_ATYPERef.tag
  LoadBtnPictures cmdITTD_ATYPEPrn,cmdITTD_ATYPEPrn.tag
  LoadBtnPictures cmdITTD_ATYPEFnd,cmdITTD_ATYPEFnd.tag
  LoadBtnPictures cmdITTD_ATYPERun,cmdITTD_ATYPERun.tag
  LoadBtnPictures cmdITTD_ATYPEAcc,cmdITTD_ATYPEAcc.tag
  LoadBtnPictures cmdITTD_ATYPECfg,cmdITTD_ATYPECfg.tag
  item.ITTD_ATYPE.PrepareGrid gridITTD_ATYPE
  LoadGridLayout gridITTD_ATYPE
  Set fndITTD_ATYPE = Nothing
  On Error Resume Next
  Set fndITTD_ATYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_ATYPE.Init gridITTD_ATYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_ATYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_ATYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_ATYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_ATYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_ATYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_SRV_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Услуги"/><Properties Name="Name" PropValue="mnuPopupITTD_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_SRVDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_SRVOpen"/></ControlData><ControlData Name="mnuITTD_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_SRVRef"/></ControlData><ControlData Name="mnuITTD_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_SRVS1"/></ControlData><ControlData Name="mnuITTD_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_SRVBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_SRVCOPY"/></ControlData><ControlData Name="mnuITTD_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_SRVCUT"/></ControlData><ControlData Name="mnuITTD_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_SRVPASTE"/></ControlData><ControlData Name="mnuITTD_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_SRVCHANGE"/></ControlData><ControlData Name="mnuITTD_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_SRVPrn"/></ControlData><ControlData Name="mnuITTD_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_SRVCfg"/></ControlData><ControlData Name="mnuITTD_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_SRVFind"/></ControlData><ControlData Name="mnuITTD_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_SRV as object
private menuActionITTD_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_SRV,&quot;gridITTD_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_SRV,&quot;Услуги&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_SRVRef_Click()
  on error resume next
  item.ITTD_SRV.Refresh
  gridITTD_SRV.itemCount = item.ITTD_SRV.count
  gridITTD_SRV.Refetch
  gridITTD_SRV.Refresh
End Sub
Private Sub cmdITTD_SRVAcc_Click()
On Error Resume Next
If gridITTD_SRV.ItemCount = 0 Then Exit Sub
If gridITTD_SRV.Row &gt; 0 Then
 If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_SRVEdit_Click()
  on error resume next
If gridITTD_SRV.ItemCount = 0 Then Exit Sub
If gridITTD_SRV.Row &gt; 0 then
 If gridITTD_SRV.RowIndex(gridITTD_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_SRV_.Item = u
    again: frmITTD_SRV_.NotFirstTime = False
    frmITTD_SRV_.OnInit
    frmITTD_SRV_.Show vbModal
    If frmITTD_SRV_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_SRVDel_Click()
  on error resume next
  gridITTD_SRV.Delete
End Sub
Private Sub cmdITTD_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_SRV.Add()

      Set frmITTD_SRV_.Item = u
      again: frmITTD_SRV_.NotFirstTime = False
      frmITTD_SRV_.OnInit
      frmITTD_SRV_.Show vbModal
      If frmITTD_SRV_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_SRV.ItemCount = Item.ITTD_SRV.Count
        gridITTD_SRV.Refresh
        gridITTD_SRV.RefreshGroups
        gridITTD_SRV.Refreshsort
        gridITTD_SRV.MoveToBookmark u.ID &amp; &quot;ITTD_SRV&quot;
      Else
        Item.ITTD_SRV.Delete u.ID
        Item.ITTD_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_SRVFnd_Click()
  on error resume next
  fndITTD_SRV.ShowForm
End Sub
Private Sub cmdITTD_SRVRun_Click()
  on error resume next
  gridITTD_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_SRV.LoadRow gridITTD_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_SRV.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_SRV&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_SRV_DblClick()
  cmdITTD_SRVEdit_Click
End Sub
Private Sub gridITTD_SRV_KeyPress(KeyAscii As Integer)
  If gridITTD_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_SRV.Row And LastRow &gt; 0 Then
  gridITTD_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_SRV.GetRowData(gridITTD_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_SRV.Add()
    If GetFromBuffer(u) Then
      gridITTD_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_SRVCfg_Click
        End If
    End If
end sub

private sub gridITTD_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_SRV
End If
end sub
private sub mnuITTD_SRVAdd_click()
   menuActionITTD_SRV =&quot;ADD&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVEdit_click()
   menuActionITTD_SRV =&quot;EDIT&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVDelete_click()
   menuActionITTD_SRV =&quot;DEL&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVOpen_click()
   menuActionITTD_SRV =&quot;RUN&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVRef_click()
   menuActionITTD_SRV =&quot;REF&quot;
   menuTimerITTD_SRV.enabled = true
end sub
  Private Sub mnuITTD_SRVCOPY_Click()
    On Error Resume Next
    If gridITTD_SRV.ItemCount = 0 Then Exit Sub
    If gridITTD_SRV.Row &gt; 0 Then
     If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_SRVCUT_Click()
    On Error Resume Next
    If gridITTD_SRV.ItemCount = 0 Then Exit Sub
    If gridITTD_SRV.Row &gt; 0 Then
     If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_SRVCHANGE_Click()
  On Error Resume Next
  If gridITTD_SRV.ItemCount = 0 Then Exit Sub
  If gridITTD_SRV.Row &gt; 0 Then
   If gridITTD_SRV.RowIndex(gridITTD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_SRV.RowBookmark(gridITTD_SRV.RowIndex(gridITTD_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_SRV.ItemCount = u.parent.Count
      gridITTD_SRV.RefreshRowIndex gridITTD_SRV.RowIndex(gridITTD_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_SRVPrn_click()
   menuActionITTD_SRV =&quot;PRN&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVCfg_click()
   menuActionITTD_SRV =&quot;CFG&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVFind_click()
   menuActionITTD_SRV =&quot;FND&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub mnuITTD_SRVAcc_click()
   menuActionITTD_SRV =&quot;ACC&quot;
   menuTimerITTD_SRV.enabled = true
end sub
private sub menuTimerITTD_SRV_timer()
   menuTimerITTD_SRV.enabled = false
   if menuActionITTD_SRV =&quot;ADD&quot; then cmdITTD_SRVADD_CLick
   if menuActionITTD_SRV =&quot;EDIT&quot; then cmdITTD_SRVEDIT_CLick
   if menuActionITTD_SRV =&quot;DEL&quot; then cmdITTD_SRVDEL_CLick
   if menuActionITTD_SRV =&quot;RUN&quot; then cmdITTD_SRVRUN_CLick
   if menuActionITTD_SRV =&quot;REF&quot; then cmdITTD_SRVREF_CLick
   if menuActionITTD_SRV =&quot;PRN&quot; then cmdITTD_SRVPRN_CLick
   if menuActionITTD_SRV =&quot;CFG&quot; then cmdITTD_SRVCFG_CLick
   if menuActionITTD_SRV =&quot;FND&quot; then cmdITTD_SRVFND_CLick
   if menuActionITTD_SRV =&quot;ACC&quot; then cmdITTD_SRVACC_CLick
   menuActionITTD_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_SRVAdd,cmdITTD_SRVAdd.tag
  LoadBtnPictures cmdITTD_SRVEdit,cmdITTD_SRVEdit.tag
  LoadBtnPictures cmdITTD_SRVDel,cmdITTD_SRVDel.tag
  LoadBtnPictures cmdITTD_SRVRef,cmdITTD_SRVRef.tag
  LoadBtnPictures cmdITTD_SRVPrn,cmdITTD_SRVPrn.tag
  LoadBtnPictures cmdITTD_SRVFnd,cmdITTD_SRVFnd.tag
  LoadBtnPictures cmdITTD_SRVRun,cmdITTD_SRVRun.tag
  LoadBtnPictures cmdITTD_SRVAcc,cmdITTD_SRVAcc.tag
  LoadBtnPictures cmdITTD_SRVCfg,cmdITTD_SRVCfg.tag
  item.ITTD_SRV.PrepareGrid gridITTD_SRV
  LoadGridLayout gridITTD_SRV
  Set fndITTD_SRV = Nothing
  On Error Resume Next
  Set fndITTD_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_SRV.Init gridITTD_SRV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_PART_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_PART" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_PART"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_PART" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_PART"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_PARTAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PARTEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PARTDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_PARTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_PARTPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_PARTCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_PARTFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_PARTRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_PARTRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_PARTAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_PARTAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_PART" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Партия товара"/><Properties Name="Name" PropValue="mnuPopupITTD_PART"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_PARTAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_PARTAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PARTEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_PARTEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PARTDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_PARTDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_PARTOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_PARTOpen"/></ControlData><ControlData Name="mnuITTD_PARTRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_PARTRef"/></ControlData><ControlData Name="mnuITTD_PARTS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_PARTS1"/></ControlData><ControlData Name="mnuITTD_PARTBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_PARTBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_PARTCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_PARTCOPY"/></ControlData><ControlData Name="mnuITTD_PARTCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_PARTCUT"/></ControlData><ControlData Name="mnuITTD_PARTPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_PARTPASTE"/></ControlData><ControlData Name="mnuITTD_PARTCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_PARTCHANGE"/></ControlData><ControlData Name="mnuITTD_PARTCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_PARTCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_PARTPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_PARTPrn"/></ControlData><ControlData Name="mnuITTD_PARTCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_PARTCfg"/></ControlData><ControlData Name="mnuITTD_PARTFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_PARTFind"/></ControlData><ControlData Name="mnuITTD_PARTAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_PARTAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_PART" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_PART"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_PART as object
private menuActionITTD_PART as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_PARTCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_PART,&quot;gridITTD_PART&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PARTPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_PART,&quot;Партия товара&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_PARTRef_Click()
  on error resume next
  item.ITTD_PART.Refresh
  gridITTD_PART.itemCount = item.ITTD_PART.count
  gridITTD_PART.Refetch
  gridITTD_PART.Refresh
End Sub
Private Sub cmdITTD_PARTAcc_Click()
On Error Resume Next
If gridITTD_PART.ItemCount = 0 Then Exit Sub
If gridITTD_PART.Row &gt; 0 Then
 If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_PARTEdit_Click()
  on error resume next
If gridITTD_PART.ItemCount = 0 Then Exit Sub
If gridITTD_PART.Row &gt; 0 then
 If gridITTD_PART.RowIndex(gridITTD_PART.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_PART_.Item = u
    again: frmITTD_PART_.NotFirstTime = False
    frmITTD_PART_.OnInit
    frmITTD_PART_.Show vbModal
    If frmITTD_PART_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_PART.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_PARTDel_Click()
  on error resume next
  gridITTD_PART.Delete
End Sub
Private Sub cmdITTD_PARTAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_PART.Add()

      Set frmITTD_PART_.Item = u
      again: frmITTD_PART_.NotFirstTime = False
      frmITTD_PART_.OnInit
      frmITTD_PART_.Show vbModal
      If frmITTD_PART_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_PART.ItemCount = Item.ITTD_PART.Count
        gridITTD_PART.Refresh
        gridITTD_PART.RefreshGroups
        gridITTD_PART.Refreshsort
        gridITTD_PART.MoveToBookmark u.ID &amp; &quot;ITTD_PART&quot;
      Else
        Item.ITTD_PART.Delete u.ID
        Item.ITTD_PART.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_PARTFnd_Click()
  on error resume next
  fndITTD_PART.ShowForm
End Sub
Private Sub cmdITTD_PARTRun_Click()
  on error resume next
  gridITTD_PART_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_PART_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_PART.LoadRow gridITTD_PART, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_PART_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_PART.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_PART&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_PART_DblClick()
  cmdITTD_PARTEdit_Click
End Sub
Private Sub gridITTD_PART_KeyPress(KeyAscii As Integer)
  If gridITTD_PART.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_PART.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_PART_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_PART.Row And LastRow &gt; 0 Then
  gridITTD_PART.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_PART.GetRowData(gridITTD_PART.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_PARTPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_PART.Add()
    If GetFromBuffer(u) Then
      gridITTD_PART.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_PART_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_PARTCfg_Click
        End If
    End If
end sub

private sub gridITTD_PART_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_PART
End If
end sub
private sub mnuITTD_PARTAdd_click()
   menuActionITTD_PART =&quot;ADD&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTEdit_click()
   menuActionITTD_PART =&quot;EDIT&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTDelete_click()
   menuActionITTD_PART =&quot;DEL&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTOpen_click()
   menuActionITTD_PART =&quot;RUN&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTRef_click()
   menuActionITTD_PART =&quot;REF&quot;
   menuTimerITTD_PART.enabled = true
end sub
  Private Sub mnuITTD_PARTCOPY_Click()
    On Error Resume Next
    If gridITTD_PART.ItemCount = 0 Then Exit Sub
    If gridITTD_PART.Row &gt; 0 Then
     If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_PARTCUT_Click()
    On Error Resume Next
    If gridITTD_PART.ItemCount = 0 Then Exit Sub
    If gridITTD_PART.Row &gt; 0 Then
     If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_PART.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_PARTCHANGE_Click()
  On Error Resume Next
  If gridITTD_PART.ItemCount = 0 Then Exit Sub
  If gridITTD_PART.Row &gt; 0 Then
   If gridITTD_PART.RowIndex(gridITTD_PART.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_PART.RowBookmark(gridITTD_PART.RowIndex(gridITTD_PART.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_PART.ItemCount = u.parent.Count
      gridITTD_PART.RefreshRowIndex gridITTD_PART.RowIndex(gridITTD_PART.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_PARTCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_PARTPrn_click()
   menuActionITTD_PART =&quot;PRN&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTCfg_click()
   menuActionITTD_PART =&quot;CFG&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTFind_click()
   menuActionITTD_PART =&quot;FND&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub mnuITTD_PARTAcc_click()
   menuActionITTD_PART =&quot;ACC&quot;
   menuTimerITTD_PART.enabled = true
end sub
private sub menuTimerITTD_PART_timer()
   menuTimerITTD_PART.enabled = false
   if menuActionITTD_PART =&quot;ADD&quot; then cmdITTD_PARTADD_CLick
   if menuActionITTD_PART =&quot;EDIT&quot; then cmdITTD_PARTEDIT_CLick
   if menuActionITTD_PART =&quot;DEL&quot; then cmdITTD_PARTDEL_CLick
   if menuActionITTD_PART =&quot;RUN&quot; then cmdITTD_PARTRUN_CLick
   if menuActionITTD_PART =&quot;REF&quot; then cmdITTD_PARTREF_CLick
   if menuActionITTD_PART =&quot;PRN&quot; then cmdITTD_PARTPRN_CLick
   if menuActionITTD_PART =&quot;CFG&quot; then cmdITTD_PARTCFG_CLick
   if menuActionITTD_PART =&quot;FND&quot; then cmdITTD_PARTFND_CLick
   if menuActionITTD_PART =&quot;ACC&quot; then cmdITTD_PARTACC_CLick
   menuActionITTD_PART =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_PARTAdd,cmdITTD_PARTAdd.tag
  LoadBtnPictures cmdITTD_PARTEdit,cmdITTD_PARTEdit.tag
  LoadBtnPictures cmdITTD_PARTDel,cmdITTD_PARTDel.tag
  LoadBtnPictures cmdITTD_PARTRef,cmdITTD_PARTRef.tag
  LoadBtnPictures cmdITTD_PARTPrn,cmdITTD_PARTPrn.tag
  LoadBtnPictures cmdITTD_PARTFnd,cmdITTD_PARTFnd.tag
  LoadBtnPictures cmdITTD_PARTRun,cmdITTD_PARTRun.tag
  LoadBtnPictures cmdITTD_PARTAcc,cmdITTD_PARTAcc.tag
  LoadBtnPictures cmdITTD_PARTCfg,cmdITTD_PARTCfg.tag
  item.ITTD_PART.PrepareGrid gridITTD_PART
  LoadGridLayout gridITTD_PART
  Set fndITTD_PART = Nothing
  On Error Resume Next
  Set fndITTD_PART = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_PART.Init gridITTD_PART
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_PART.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PART.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PART.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PART.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_PART.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_PART.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_PART.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_PART.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_PART.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_PART = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_FACTORY_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_FACTORY" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_FACTORY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_FACTORY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_FACTORY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_FACTORYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_FACTORYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_FACTORYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_FACTORYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_FACTORYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_FACTORYCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_FACTORYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_FACTORYRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_FACTORYAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_FACTORYAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_FACTORY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Завод"/><Properties Name="Name" PropValue="mnuPopupITTD_FACTORY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_FACTORYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_FACTORYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_FACTORYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_FACTORYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_FACTORYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_FACTORYOpen"/></ControlData><ControlData Name="mnuITTD_FACTORYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYRef"/></ControlData><ControlData Name="mnuITTD_FACTORYS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_FACTORYS1"/></ControlData><ControlData Name="mnuITTD_FACTORYBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_FACTORYBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_FACTORYCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCOPY"/></ControlData><ControlData Name="mnuITTD_FACTORYCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCUT"/></ControlData><ControlData Name="mnuITTD_FACTORYPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYPASTE"/></ControlData><ControlData Name="mnuITTD_FACTORYCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCHANGE"/></ControlData><ControlData Name="mnuITTD_FACTORYCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_FACTORYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_FACTORYPrn"/></ControlData><ControlData Name="mnuITTD_FACTORYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_FACTORYCfg"/></ControlData><ControlData Name="mnuITTD_FACTORYFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_FACTORYFind"/></ControlData><ControlData Name="mnuITTD_FACTORYAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_FACTORYAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_FACTORY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_FACTORY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_FACTORY as object
private menuActionITTD_FACTORY as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_FACTORYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_FACTORY,&quot;gridITTD_FACTORY&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_FACTORYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_FACTORY,&quot;Завод&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_FACTORYRef_Click()
  on error resume next
  item.ITTD_FACTORY.Refresh
  gridITTD_FACTORY.itemCount = item.ITTD_FACTORY.count
  gridITTD_FACTORY.Refetch
  gridITTD_FACTORY.Refresh
End Sub
Private Sub cmdITTD_FACTORYAcc_Click()
On Error Resume Next
If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
If gridITTD_FACTORY.Row &gt; 0 Then
 If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_FACTORYEdit_Click()
  on error resume next
If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
If gridITTD_FACTORY.Row &gt; 0 then
 If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_FACTORY_.Item = u
    again: frmITTD_FACTORY_.NotFirstTime = False
    frmITTD_FACTORY_.OnInit
    frmITTD_FACTORY_.Show vbModal
    If frmITTD_FACTORY_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_FACTORY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_FACTORYDel_Click()
  on error resume next
  gridITTD_FACTORY.Delete
End Sub
Private Sub cmdITTD_FACTORYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_FACTORY.Add()

      Set frmITTD_FACTORY_.Item = u
      again: frmITTD_FACTORY_.NotFirstTime = False
      frmITTD_FACTORY_.OnInit
      frmITTD_FACTORY_.Show vbModal
      If frmITTD_FACTORY_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_FACTORY.ItemCount = Item.ITTD_FACTORY.Count
        gridITTD_FACTORY.Refresh
        gridITTD_FACTORY.RefreshGroups
        gridITTD_FACTORY.Refreshsort
        gridITTD_FACTORY.MoveToBookmark u.ID &amp; &quot;ITTD_FACTORY&quot;
      Else
        Item.ITTD_FACTORY.Delete u.ID
        Item.ITTD_FACTORY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_FACTORYFnd_Click()
  on error resume next
  fndITTD_FACTORY.ShowForm
End Sub
Private Sub cmdITTD_FACTORYRun_Click()
  on error resume next
  gridITTD_FACTORY_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_FACTORY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_FACTORY.LoadRow gridITTD_FACTORY, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_FACTORY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_FACTORY&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_FACTORY_DblClick()
  cmdITTD_FACTORYEdit_Click
End Sub
Private Sub gridITTD_FACTORY_KeyPress(KeyAscii As Integer)
  If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_FACTORY.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_FACTORY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_FACTORY.Row And LastRow &gt; 0 Then
  gridITTD_FACTORY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_FACTORY.GetRowData(gridITTD_FACTORY.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_FACTORYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_FACTORY.Add()
    If GetFromBuffer(u) Then
      gridITTD_FACTORY.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_FACTORY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_FACTORYCfg_Click
        End If
    End If
end sub

private sub gridITTD_FACTORY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_FACTORY
End If
end sub
private sub mnuITTD_FACTORYAdd_click()
   menuActionITTD_FACTORY =&quot;ADD&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYEdit_click()
   menuActionITTD_FACTORY =&quot;EDIT&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYDelete_click()
   menuActionITTD_FACTORY =&quot;DEL&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYOpen_click()
   menuActionITTD_FACTORY =&quot;RUN&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYRef_click()
   menuActionITTD_FACTORY =&quot;REF&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
  Private Sub mnuITTD_FACTORYCOPY_Click()
    On Error Resume Next
    If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
    If gridITTD_FACTORY.Row &gt; 0 Then
     If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_FACTORYCUT_Click()
    On Error Resume Next
    If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
    If gridITTD_FACTORY.Row &gt; 0 Then
     If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_FACTORY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_FACTORYCHANGE_Click()
  On Error Resume Next
  If gridITTD_FACTORY.ItemCount = 0 Then Exit Sub
  If gridITTD_FACTORY.Row &gt; 0 Then
   If gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_FACTORY.RowBookmark(gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_FACTORY.ItemCount = u.parent.Count
      gridITTD_FACTORY.RefreshRowIndex gridITTD_FACTORY.RowIndex(gridITTD_FACTORY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_FACTORYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_FACTORYPrn_click()
   menuActionITTD_FACTORY =&quot;PRN&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYCfg_click()
   menuActionITTD_FACTORY =&quot;CFG&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYFind_click()
   menuActionITTD_FACTORY =&quot;FND&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub mnuITTD_FACTORYAcc_click()
   menuActionITTD_FACTORY =&quot;ACC&quot;
   menuTimerITTD_FACTORY.enabled = true
end sub
private sub menuTimerITTD_FACTORY_timer()
   menuTimerITTD_FACTORY.enabled = false
   if menuActionITTD_FACTORY =&quot;ADD&quot; then cmdITTD_FACTORYADD_CLick
   if menuActionITTD_FACTORY =&quot;EDIT&quot; then cmdITTD_FACTORYEDIT_CLick
   if menuActionITTD_FACTORY =&quot;DEL&quot; then cmdITTD_FACTORYDEL_CLick
   if menuActionITTD_FACTORY =&quot;RUN&quot; then cmdITTD_FACTORYRUN_CLick
   if menuActionITTD_FACTORY =&quot;REF&quot; then cmdITTD_FACTORYREF_CLick
   if menuActionITTD_FACTORY =&quot;PRN&quot; then cmdITTD_FACTORYPRN_CLick
   if menuActionITTD_FACTORY =&quot;CFG&quot; then cmdITTD_FACTORYCFG_CLick
   if menuActionITTD_FACTORY =&quot;FND&quot; then cmdITTD_FACTORYFND_CLick
   if menuActionITTD_FACTORY =&quot;ACC&quot; then cmdITTD_FACTORYACC_CLick
   menuActionITTD_FACTORY =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_FACTORYAdd,cmdITTD_FACTORYAdd.tag
  LoadBtnPictures cmdITTD_FACTORYEdit,cmdITTD_FACTORYEdit.tag
  LoadBtnPictures cmdITTD_FACTORYDel,cmdITTD_FACTORYDel.tag
  LoadBtnPictures cmdITTD_FACTORYRef,cmdITTD_FACTORYRef.tag
  LoadBtnPictures cmdITTD_FACTORYPrn,cmdITTD_FACTORYPrn.tag
  LoadBtnPictures cmdITTD_FACTORYFnd,cmdITTD_FACTORYFnd.tag
  LoadBtnPictures cmdITTD_FACTORYRun,cmdITTD_FACTORYRun.tag
  LoadBtnPictures cmdITTD_FACTORYAcc,cmdITTD_FACTORYAcc.tag
  LoadBtnPictures cmdITTD_FACTORYCfg,cmdITTD_FACTORYCfg.tag
  item.ITTD_FACTORY.PrepareGrid gridITTD_FACTORY
  LoadGridLayout gridITTD_FACTORY
  Set fndITTD_FACTORY = Nothing
  On Error Resume Next
  Set fndITTD_FACTORY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_FACTORY.Init gridITTD_FACTORY
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_FACTORY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_FACTORY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_FACTORY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_FACTORY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_FACTORY = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_KILLPLACE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_KILLPLACE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_KILLPLACE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_KILLPLACE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_KILLPLACEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_KILLPLACEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_KILLPLACEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_KILLPLACERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_KILLPLACEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_KILLPLACECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_KILLPLACEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_KILLPLACERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_KILLPLACEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_KILLPLACEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Бойня"/><Properties Name="Name" PropValue="mnuPopupITTD_KILLPLACE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_KILLPLACEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_KILLPLACEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_KILLPLACEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_KILLPLACEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEOpen"/></ControlData><ControlData Name="mnuITTD_KILLPLACERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACERef"/></ControlData><ControlData Name="mnuITTD_KILLPLACES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACES1"/></ControlData><ControlData Name="mnuITTD_KILLPLACEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_KILLPLACECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECOPY"/></ControlData><ControlData Name="mnuITTD_KILLPLACECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECUT"/></ControlData><ControlData Name="mnuITTD_KILLPLACEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEPASTE"/></ControlData><ControlData Name="mnuITTD_KILLPLACECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECHANGE"/></ControlData><ControlData Name="mnuITTD_KILLPLACECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_KILLPLACEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEPrn"/></ControlData><ControlData Name="mnuITTD_KILLPLACECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACECfg"/></ControlData><ControlData Name="mnuITTD_KILLPLACEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEFind"/></ControlData><ControlData Name="mnuITTD_KILLPLACEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_KILLPLACEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_KILLPLACE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_KILLPLACE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_KILLPLACE as object
private menuActionITTD_KILLPLACE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_KILLPLACECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_KILLPLACE,&quot;gridITTD_KILLPLACE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_KILLPLACEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_KILLPLACE,&quot;Бойня&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_KILLPLACERef_Click()
  on error resume next
  item.ITTD_KILLPLACE.Refresh
  gridITTD_KILLPLACE.itemCount = item.ITTD_KILLPLACE.count
  gridITTD_KILLPLACE.Refetch
  gridITTD_KILLPLACE.Refresh
End Sub
Private Sub cmdITTD_KILLPLACEAcc_Click()
On Error Resume Next
If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
If gridITTD_KILLPLACE.Row &gt; 0 Then
 If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_KILLPLACEEdit_Click()
  on error resume next
If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
If gridITTD_KILLPLACE.Row &gt; 0 then
 If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_KILLPLACE_.Item = u
    again: frmITTD_KILLPLACE_.NotFirstTime = False
    frmITTD_KILLPLACE_.OnInit
    frmITTD_KILLPLACE_.Show vbModal
    If frmITTD_KILLPLACE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_KILLPLACE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_KILLPLACEDel_Click()
  on error resume next
  gridITTD_KILLPLACE.Delete
End Sub
Private Sub cmdITTD_KILLPLACEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_KILLPLACE.Add()

      Set frmITTD_KILLPLACE_.Item = u
      again: frmITTD_KILLPLACE_.NotFirstTime = False
      frmITTD_KILLPLACE_.OnInit
      frmITTD_KILLPLACE_.Show vbModal
      If frmITTD_KILLPLACE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_KILLPLACE.ItemCount = Item.ITTD_KILLPLACE.Count
        gridITTD_KILLPLACE.Refresh
        gridITTD_KILLPLACE.RefreshGroups
        gridITTD_KILLPLACE.Refreshsort
        gridITTD_KILLPLACE.MoveToBookmark u.ID &amp; &quot;ITTD_KILLPLACE&quot;
      Else
        Item.ITTD_KILLPLACE.Delete u.ID
        Item.ITTD_KILLPLACE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_KILLPLACEFnd_Click()
  on error resume next
  fndITTD_KILLPLACE.ShowForm
End Sub
Private Sub cmdITTD_KILLPLACERun_Click()
  on error resume next
  gridITTD_KILLPLACE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_KILLPLACE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_KILLPLACE.LoadRow gridITTD_KILLPLACE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_KILLPLACE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_KILLPLACE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_KILLPLACE_DblClick()
  cmdITTD_KILLPLACEEdit_Click
End Sub
Private Sub gridITTD_KILLPLACE_KeyPress(KeyAscii As Integer)
  If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_KILLPLACE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_KILLPLACE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_KILLPLACE.Row And LastRow &gt; 0 Then
  gridITTD_KILLPLACE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_KILLPLACE.GetRowData(gridITTD_KILLPLACE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_KILLPLACEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_KILLPLACE.Add()
    If GetFromBuffer(u) Then
      gridITTD_KILLPLACE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_KILLPLACE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_KILLPLACECfg_Click
        End If
    End If
end sub

private sub gridITTD_KILLPLACE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_KILLPLACE
End If
end sub
private sub mnuITTD_KILLPLACEAdd_click()
   menuActionITTD_KILLPLACE =&quot;ADD&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEEdit_click()
   menuActionITTD_KILLPLACE =&quot;EDIT&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEDelete_click()
   menuActionITTD_KILLPLACE =&quot;DEL&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEOpen_click()
   menuActionITTD_KILLPLACE =&quot;RUN&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACERef_click()
   menuActionITTD_KILLPLACE =&quot;REF&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
  Private Sub mnuITTD_KILLPLACECOPY_Click()
    On Error Resume Next
    If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
    If gridITTD_KILLPLACE.Row &gt; 0 Then
     If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_KILLPLACECUT_Click()
    On Error Resume Next
    If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
    If gridITTD_KILLPLACE.Row &gt; 0 Then
     If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_KILLPLACE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_KILLPLACECHANGE_Click()
  On Error Resume Next
  If gridITTD_KILLPLACE.ItemCount = 0 Then Exit Sub
  If gridITTD_KILLPLACE.Row &gt; 0 Then
   If gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_KILLPLACE.RowBookmark(gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_KILLPLACE.ItemCount = u.parent.Count
      gridITTD_KILLPLACE.RefreshRowIndex gridITTD_KILLPLACE.RowIndex(gridITTD_KILLPLACE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_KILLPLACECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_KILLPLACEPrn_click()
   menuActionITTD_KILLPLACE =&quot;PRN&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACECfg_click()
   menuActionITTD_KILLPLACE =&quot;CFG&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEFind_click()
   menuActionITTD_KILLPLACE =&quot;FND&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub mnuITTD_KILLPLACEAcc_click()
   menuActionITTD_KILLPLACE =&quot;ACC&quot;
   menuTimerITTD_KILLPLACE.enabled = true
end sub
private sub menuTimerITTD_KILLPLACE_timer()
   menuTimerITTD_KILLPLACE.enabled = false
   if menuActionITTD_KILLPLACE =&quot;ADD&quot; then cmdITTD_KILLPLACEADD_CLick
   if menuActionITTD_KILLPLACE =&quot;EDIT&quot; then cmdITTD_KILLPLACEEDIT_CLick
   if menuActionITTD_KILLPLACE =&quot;DEL&quot; then cmdITTD_KILLPLACEDEL_CLick
   if menuActionITTD_KILLPLACE =&quot;RUN&quot; then cmdITTD_KILLPLACERUN_CLick
   if menuActionITTD_KILLPLACE =&quot;REF&quot; then cmdITTD_KILLPLACEREF_CLick
   if menuActionITTD_KILLPLACE =&quot;PRN&quot; then cmdITTD_KILLPLACEPRN_CLick
   if menuActionITTD_KILLPLACE =&quot;CFG&quot; then cmdITTD_KILLPLACECFG_CLick
   if menuActionITTD_KILLPLACE =&quot;FND&quot; then cmdITTD_KILLPLACEFND_CLick
   if menuActionITTD_KILLPLACE =&quot;ACC&quot; then cmdITTD_KILLPLACEACC_CLick
   menuActionITTD_KILLPLACE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_KILLPLACEAdd,cmdITTD_KILLPLACEAdd.tag
  LoadBtnPictures cmdITTD_KILLPLACEEdit,cmdITTD_KILLPLACEEdit.tag
  LoadBtnPictures cmdITTD_KILLPLACEDel,cmdITTD_KILLPLACEDel.tag
  LoadBtnPictures cmdITTD_KILLPLACERef,cmdITTD_KILLPLACERef.tag
  LoadBtnPictures cmdITTD_KILLPLACEPrn,cmdITTD_KILLPLACEPrn.tag
  LoadBtnPictures cmdITTD_KILLPLACEFnd,cmdITTD_KILLPLACEFnd.tag
  LoadBtnPictures cmdITTD_KILLPLACERun,cmdITTD_KILLPLACERun.tag
  LoadBtnPictures cmdITTD_KILLPLACEAcc,cmdITTD_KILLPLACEAcc.tag
  LoadBtnPictures cmdITTD_KILLPLACECfg,cmdITTD_KILLPLACECfg.tag
  item.ITTD_KILLPLACE.PrepareGrid gridITTD_KILLPLACE
  LoadGridLayout gridITTD_KILLPLACE
  Set fndITTD_KILLPLACE = Nothing
  On Error Resume Next
  Set fndITTD_KILLPLACE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_KILLPLACE.Init gridITTD_KILLPLACE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_KILLPLACE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_KILLPLACE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_KILLPLACE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_KILLPLACE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_KILLPLACE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_COUNTRY_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_COUNTRY" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_COUNTRY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_COUNTRY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_COUNTRY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_COUNTRYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_COUNTRYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_COUNTRYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_COUNTRYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_COUNTRYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_COUNTRYCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_COUNTRYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_COUNTRYRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_COUNTRYAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_COUNTRYAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_COUNTRY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Страна"/><Properties Name="Name" PropValue="mnuPopupITTD_COUNTRY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_COUNTRYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_COUNTRYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_COUNTRYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_COUNTRYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYOpen"/></ControlData><ControlData Name="mnuITTD_COUNTRYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYRef"/></ControlData><ControlData Name="mnuITTD_COUNTRYS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYS1"/></ControlData><ControlData Name="mnuITTD_COUNTRYBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_COUNTRYCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCOPY"/></ControlData><ControlData Name="mnuITTD_COUNTRYCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCUT"/></ControlData><ControlData Name="mnuITTD_COUNTRYPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYPASTE"/></ControlData><ControlData Name="mnuITTD_COUNTRYCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCHANGE"/></ControlData><ControlData Name="mnuITTD_COUNTRYCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_COUNTRYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYPrn"/></ControlData><ControlData Name="mnuITTD_COUNTRYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYCfg"/></ControlData><ControlData Name="mnuITTD_COUNTRYFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYFind"/></ControlData><ControlData Name="mnuITTD_COUNTRYAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_COUNTRYAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_COUNTRY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_COUNTRY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_COUNTRY as object
private menuActionITTD_COUNTRY as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_COUNTRYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_COUNTRY,&quot;gridITTD_COUNTRY&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_COUNTRYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_COUNTRY,&quot;Страна&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_COUNTRYRef_Click()
  on error resume next
  item.ITTD_COUNTRY.Refresh
  gridITTD_COUNTRY.itemCount = item.ITTD_COUNTRY.count
  gridITTD_COUNTRY.Refetch
  gridITTD_COUNTRY.Refresh
End Sub
Private Sub cmdITTD_COUNTRYAcc_Click()
On Error Resume Next
If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
If gridITTD_COUNTRY.Row &gt; 0 Then
 If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_COUNTRYEdit_Click()
  on error resume next
If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
If gridITTD_COUNTRY.Row &gt; 0 then
 If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_COUNTRY_.Item = u
    again: frmITTD_COUNTRY_.NotFirstTime = False
    frmITTD_COUNTRY_.OnInit
    frmITTD_COUNTRY_.Show vbModal
    If frmITTD_COUNTRY_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_COUNTRY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_COUNTRYDel_Click()
  on error resume next
  gridITTD_COUNTRY.Delete
End Sub
Private Sub cmdITTD_COUNTRYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_COUNTRY.Add()

      Set frmITTD_COUNTRY_.Item = u
      again: frmITTD_COUNTRY_.NotFirstTime = False
      frmITTD_COUNTRY_.OnInit
      frmITTD_COUNTRY_.Show vbModal
      If frmITTD_COUNTRY_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_COUNTRY.ItemCount = Item.ITTD_COUNTRY.Count
        gridITTD_COUNTRY.Refresh
        gridITTD_COUNTRY.RefreshGroups
        gridITTD_COUNTRY.Refreshsort
        gridITTD_COUNTRY.MoveToBookmark u.ID &amp; &quot;ITTD_COUNTRY&quot;
      Else
        Item.ITTD_COUNTRY.Delete u.ID
        Item.ITTD_COUNTRY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_COUNTRYFnd_Click()
  on error resume next
  fndITTD_COUNTRY.ShowForm
End Sub
Private Sub cmdITTD_COUNTRYRun_Click()
  on error resume next
  gridITTD_COUNTRY_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_COUNTRY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_COUNTRY.LoadRow gridITTD_COUNTRY, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_COUNTRY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_COUNTRY&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_COUNTRY_DblClick()
  cmdITTD_COUNTRYEdit_Click
End Sub
Private Sub gridITTD_COUNTRY_KeyPress(KeyAscii As Integer)
  If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_COUNTRY.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_COUNTRY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_COUNTRY.Row And LastRow &gt; 0 Then
  gridITTD_COUNTRY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_COUNTRY.GetRowData(gridITTD_COUNTRY.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_COUNTRYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_COUNTRY.Add()
    If GetFromBuffer(u) Then
      gridITTD_COUNTRY.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_COUNTRY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_COUNTRYCfg_Click
        End If
    End If
end sub

private sub gridITTD_COUNTRY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_COUNTRY
End If
end sub
private sub mnuITTD_COUNTRYAdd_click()
   menuActionITTD_COUNTRY =&quot;ADD&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYEdit_click()
   menuActionITTD_COUNTRY =&quot;EDIT&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYDelete_click()
   menuActionITTD_COUNTRY =&quot;DEL&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYOpen_click()
   menuActionITTD_COUNTRY =&quot;RUN&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYRef_click()
   menuActionITTD_COUNTRY =&quot;REF&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
  Private Sub mnuITTD_COUNTRYCOPY_Click()
    On Error Resume Next
    If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridITTD_COUNTRY.Row &gt; 0 Then
     If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_COUNTRYCUT_Click()
    On Error Resume Next
    If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridITTD_COUNTRY.Row &gt; 0 Then
     If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_COUNTRY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_COUNTRYCHANGE_Click()
  On Error Resume Next
  If gridITTD_COUNTRY.ItemCount = 0 Then Exit Sub
  If gridITTD_COUNTRY.Row &gt; 0 Then
   If gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_COUNTRY.RowBookmark(gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_COUNTRY.ItemCount = u.parent.Count
      gridITTD_COUNTRY.RefreshRowIndex gridITTD_COUNTRY.RowIndex(gridITTD_COUNTRY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_COUNTRYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_COUNTRYPrn_click()
   menuActionITTD_COUNTRY =&quot;PRN&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYCfg_click()
   menuActionITTD_COUNTRY =&quot;CFG&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYFind_click()
   menuActionITTD_COUNTRY =&quot;FND&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub mnuITTD_COUNTRYAcc_click()
   menuActionITTD_COUNTRY =&quot;ACC&quot;
   menuTimerITTD_COUNTRY.enabled = true
end sub
private sub menuTimerITTD_COUNTRY_timer()
   menuTimerITTD_COUNTRY.enabled = false
   if menuActionITTD_COUNTRY =&quot;ADD&quot; then cmdITTD_COUNTRYADD_CLick
   if menuActionITTD_COUNTRY =&quot;EDIT&quot; then cmdITTD_COUNTRYEDIT_CLick
   if menuActionITTD_COUNTRY =&quot;DEL&quot; then cmdITTD_COUNTRYDEL_CLick
   if menuActionITTD_COUNTRY =&quot;RUN&quot; then cmdITTD_COUNTRYRUN_CLick
   if menuActionITTD_COUNTRY =&quot;REF&quot; then cmdITTD_COUNTRYREF_CLick
   if menuActionITTD_COUNTRY =&quot;PRN&quot; then cmdITTD_COUNTRYPRN_CLick
   if menuActionITTD_COUNTRY =&quot;CFG&quot; then cmdITTD_COUNTRYCFG_CLick
   if menuActionITTD_COUNTRY =&quot;FND&quot; then cmdITTD_COUNTRYFND_CLick
   if menuActionITTD_COUNTRY =&quot;ACC&quot; then cmdITTD_COUNTRYACC_CLick
   menuActionITTD_COUNTRY =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_COUNTRYAdd,cmdITTD_COUNTRYAdd.tag
  LoadBtnPictures cmdITTD_COUNTRYEdit,cmdITTD_COUNTRYEdit.tag
  LoadBtnPictures cmdITTD_COUNTRYDel,cmdITTD_COUNTRYDel.tag
  LoadBtnPictures cmdITTD_COUNTRYRef,cmdITTD_COUNTRYRef.tag
  LoadBtnPictures cmdITTD_COUNTRYPrn,cmdITTD_COUNTRYPrn.tag
  LoadBtnPictures cmdITTD_COUNTRYFnd,cmdITTD_COUNTRYFnd.tag
  LoadBtnPictures cmdITTD_COUNTRYRun,cmdITTD_COUNTRYRun.tag
  LoadBtnPictures cmdITTD_COUNTRYAcc,cmdITTD_COUNTRYAcc.tag
  LoadBtnPictures cmdITTD_COUNTRYCfg,cmdITTD_COUNTRYCfg.tag
  item.ITTD_COUNTRY.PrepareGrid gridITTD_COUNTRY
  LoadGridLayout gridITTD_COUNTRY
  Set fndITTD_COUNTRY = Nothing
  On Error Resume Next
  Set fndITTD_COUNTRY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_COUNTRY.Init gridITTD_COUNTRY
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_COUNTRY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_COUNTRY = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_CAMERA_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_CAMERA" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_CAMERA"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_CAMERA" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_CAMERA"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_CAMERAAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_CAMERAEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_CAMERADel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERADel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_CAMERARef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERARef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_CAMERAPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_CAMERACfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERACfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_CAMERAFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_CAMERARun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_CAMERARun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_CAMERAAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_CAMERAAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_CAMERA" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Холодильные камеры"/><Properties Name="Name" PropValue="mnuPopupITTD_CAMERA"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_CAMERAAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_CAMERAAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_CAMERAEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_CAMERAEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_CAMERADelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_CAMERADelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_CAMERAOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_CAMERAOpen"/></ControlData><ControlData Name="mnuITTD_CAMERARef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_CAMERARef"/></ControlData><ControlData Name="mnuITTD_CAMERAS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_CAMERAS1"/></ControlData><ControlData Name="mnuITTD_CAMERABuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_CAMERABuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_CAMERACOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_CAMERACOPY"/></ControlData><ControlData Name="mnuITTD_CAMERACUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_CAMERACUT"/></ControlData><ControlData Name="mnuITTD_CAMERAPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_CAMERAPASTE"/></ControlData><ControlData Name="mnuITTD_CAMERACHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACHANGE"/></ControlData><ControlData Name="mnuITTD_CAMERACLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_CAMERAPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_CAMERAPrn"/></ControlData><ControlData Name="mnuITTD_CAMERACfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_CAMERACfg"/></ControlData><ControlData Name="mnuITTD_CAMERAFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_CAMERAFind"/></ControlData><ControlData Name="mnuITTD_CAMERAAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_CAMERAAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_CAMERA" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_CAMERA"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Холодильные камеры
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_CAMERA as object
private menuActionITTD_CAMERA as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_CAMERACfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_CAMERA,&quot;gridITTD_CAMERA&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_CAMERAPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_CAMERA,&quot;Холодильные камеры&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_CAMERARef_Click()
  on error resume next
  item.ITTD_CAMERA.Refresh
  gridITTD_CAMERA.itemCount = item.ITTD_CAMERA.count
  gridITTD_CAMERA.Refetch
  gridITTD_CAMERA.Refresh
End Sub
Private Sub cmdITTD_CAMERAAcc_Click()
On Error Resume Next
If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
If gridITTD_CAMERA.Row &gt; 0 Then
 If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_CAMERAEdit_Click()
  on error resume next
If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
If gridITTD_CAMERA.Row &gt; 0 then
 If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_CAMERA_.Item = u
    again: frmITTD_CAMERA_.NotFirstTime = False
    frmITTD_CAMERA_.OnInit
    frmITTD_CAMERA_.Show vbModal
    If frmITTD_CAMERA_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_CAMERA.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_CAMERADel_Click()
  on error resume next
  gridITTD_CAMERA.Delete
End Sub
Private Sub cmdITTD_CAMERAAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_CAMERA.Add()

      Set frmITTD_CAMERA_.Item = u
      again: frmITTD_CAMERA_.NotFirstTime = False
      frmITTD_CAMERA_.OnInit
      frmITTD_CAMERA_.Show vbModal
      If frmITTD_CAMERA_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_CAMERA.ItemCount = Item.ITTD_CAMERA.Count
        gridITTD_CAMERA.Refresh
        gridITTD_CAMERA.RefreshGroups
        gridITTD_CAMERA.Refreshsort
        gridITTD_CAMERA.MoveToBookmark u.ID &amp; &quot;ITTD_CAMERA&quot;
      Else
        Item.ITTD_CAMERA.Delete u.ID
        Item.ITTD_CAMERA.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_CAMERAFnd_Click()
  on error resume next
  fndITTD_CAMERA.ShowForm
End Sub
Private Sub cmdITTD_CAMERARun_Click()
  on error resume next
  gridITTD_CAMERA_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_CAMERA_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_CAMERA.LoadRow gridITTD_CAMERA, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_CAMERA_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_CAMERA&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_CAMERA_DblClick()
  cmdITTD_CAMERAEdit_Click
End Sub
Private Sub gridITTD_CAMERA_KeyPress(KeyAscii As Integer)
  If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_CAMERA.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_CAMERA_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_CAMERA.Row And LastRow &gt; 0 Then
  gridITTD_CAMERA.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_CAMERA.GetRowData(gridITTD_CAMERA.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_CAMERAPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_CAMERA.Add()
    If GetFromBuffer(u) Then
      gridITTD_CAMERA.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_CAMERA_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_CAMERACfg_Click
        End If
    End If
end sub

private sub gridITTD_CAMERA_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_CAMERA
End If
end sub
private sub mnuITTD_CAMERAAdd_click()
   menuActionITTD_CAMERA =&quot;ADD&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAEdit_click()
   menuActionITTD_CAMERA =&quot;EDIT&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERADelete_click()
   menuActionITTD_CAMERA =&quot;DEL&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAOpen_click()
   menuActionITTD_CAMERA =&quot;RUN&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERARef_click()
   menuActionITTD_CAMERA =&quot;REF&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
  Private Sub mnuITTD_CAMERACOPY_Click()
    On Error Resume Next
    If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
    If gridITTD_CAMERA.Row &gt; 0 Then
     If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_CAMERACUT_Click()
    On Error Resume Next
    If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
    If gridITTD_CAMERA.Row &gt; 0 Then
     If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_CAMERA.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_CAMERACHANGE_Click()
  On Error Resume Next
  If gridITTD_CAMERA.ItemCount = 0 Then Exit Sub
  If gridITTD_CAMERA.Row &gt; 0 Then
   If gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_CAMERA.RowBookmark(gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_CAMERA.ItemCount = u.parent.Count
      gridITTD_CAMERA.RefreshRowIndex gridITTD_CAMERA.RowIndex(gridITTD_CAMERA.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_CAMERACLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_CAMERAPrn_click()
   menuActionITTD_CAMERA =&quot;PRN&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERACfg_click()
   menuActionITTD_CAMERA =&quot;CFG&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAFind_click()
   menuActionITTD_CAMERA =&quot;FND&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub mnuITTD_CAMERAAcc_click()
   menuActionITTD_CAMERA =&quot;ACC&quot;
   menuTimerITTD_CAMERA.enabled = true
end sub
private sub menuTimerITTD_CAMERA_timer()
   menuTimerITTD_CAMERA.enabled = false
   if menuActionITTD_CAMERA =&quot;ADD&quot; then cmdITTD_CAMERAADD_CLick
   if menuActionITTD_CAMERA =&quot;EDIT&quot; then cmdITTD_CAMERAEDIT_CLick
   if menuActionITTD_CAMERA =&quot;DEL&quot; then cmdITTD_CAMERADEL_CLick
   if menuActionITTD_CAMERA =&quot;RUN&quot; then cmdITTD_CAMERARUN_CLick
   if menuActionITTD_CAMERA =&quot;REF&quot; then cmdITTD_CAMERAREF_CLick
   if menuActionITTD_CAMERA =&quot;PRN&quot; then cmdITTD_CAMERAPRN_CLick
   if menuActionITTD_CAMERA =&quot;CFG&quot; then cmdITTD_CAMERACFG_CLick
   if menuActionITTD_CAMERA =&quot;FND&quot; then cmdITTD_CAMERAFND_CLick
   if menuActionITTD_CAMERA =&quot;ACC&quot; then cmdITTD_CAMERAACC_CLick
   menuActionITTD_CAMERA =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_CAMERAAdd,cmdITTD_CAMERAAdd.tag
  LoadBtnPictures cmdITTD_CAMERAEdit,cmdITTD_CAMERAEdit.tag
  LoadBtnPictures cmdITTD_CAMERADel,cmdITTD_CAMERADel.tag
  LoadBtnPictures cmdITTD_CAMERARef,cmdITTD_CAMERARef.tag
  LoadBtnPictures cmdITTD_CAMERAPrn,cmdITTD_CAMERAPrn.tag
  LoadBtnPictures cmdITTD_CAMERAFnd,cmdITTD_CAMERAFnd.tag
  LoadBtnPictures cmdITTD_CAMERARun,cmdITTD_CAMERARun.tag
  LoadBtnPictures cmdITTD_CAMERAAcc,cmdITTD_CAMERAAcc.tag
  LoadBtnPictures cmdITTD_CAMERACfg,cmdITTD_CAMERACfg.tag
  item.ITTD_CAMERA.PrepareGrid gridITTD_CAMERA
  LoadGridLayout gridITTD_CAMERA
  Set fndITTD_CAMERA = Nothing
  On Error Resume Next
  Set fndITTD_CAMERA = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_CAMERA.Init gridITTD_CAMERA
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_CAMERA.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_CAMERA.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_CAMERA.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_CAMERA.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_CAMERA = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_RULE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_RULE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_RULE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_RULE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_RULE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_RULEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_RULEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_RULEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_RULERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_RULEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_RULECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_RULEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_RULERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_RULERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_RULEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_RULEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_RULE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Правило формирования партии"/><Properties Name="Name" PropValue="mnuPopupITTD_RULE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_RULEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_RULEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_RULEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_RULEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_RULEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_RULEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_RULEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_RULEOpen"/></ControlData><ControlData Name="mnuITTD_RULERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_RULERef"/></ControlData><ControlData Name="mnuITTD_RULES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_RULES1"/></ControlData><ControlData Name="mnuITTD_RULEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_RULEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_RULECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_RULECOPY"/></ControlData><ControlData Name="mnuITTD_RULECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_RULECUT"/></ControlData><ControlData Name="mnuITTD_RULEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_RULEPASTE"/></ControlData><ControlData Name="mnuITTD_RULECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_RULECHANGE"/></ControlData><ControlData Name="mnuITTD_RULECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_RULECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_RULEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_RULEPrn"/></ControlData><ControlData Name="mnuITTD_RULECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_RULECfg"/></ControlData><ControlData Name="mnuITTD_RULEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_RULEFind"/></ControlData><ControlData Name="mnuITTD_RULEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_RULEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_RULE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_RULE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Правило по которому зполняются обязательные поля и составляется код партии
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_RULE as object
private menuActionITTD_RULE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_RULECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_RULE,&quot;gridITTD_RULE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_RULEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_RULE,&quot;Правило формирования партии&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_RULERef_Click()
  on error resume next
  item.ITTD_RULE.Refresh
  gridITTD_RULE.itemCount = item.ITTD_RULE.count
  gridITTD_RULE.Refetch
  gridITTD_RULE.Refresh
End Sub
Private Sub cmdITTD_RULEAcc_Click()
On Error Resume Next
If gridITTD_RULE.ItemCount = 0 Then Exit Sub
If gridITTD_RULE.Row &gt; 0 Then
 If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_RULEEdit_Click()
  on error resume next
If gridITTD_RULE.ItemCount = 0 Then Exit Sub
If gridITTD_RULE.Row &gt; 0 then
 If gridITTD_RULE.RowIndex(gridITTD_RULE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_RULE_.Item = u
    again: frmITTD_RULE_.NotFirstTime = False
    frmITTD_RULE_.OnInit
    frmITTD_RULE_.Show vbModal
    If frmITTD_RULE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_RULE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_RULEDel_Click()
  on error resume next
  gridITTD_RULE.Delete
End Sub
Private Sub cmdITTD_RULEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_RULE.Add()

      Set frmITTD_RULE_.Item = u
      again: frmITTD_RULE_.NotFirstTime = False
      frmITTD_RULE_.OnInit
      frmITTD_RULE_.Show vbModal
      If frmITTD_RULE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_RULE.ItemCount = Item.ITTD_RULE.Count
        gridITTD_RULE.Refresh
        gridITTD_RULE.RefreshGroups
        gridITTD_RULE.Refreshsort
        gridITTD_RULE.MoveToBookmark u.ID &amp; &quot;ITTD_RULE&quot;
      Else
        Item.ITTD_RULE.Delete u.ID
        Item.ITTD_RULE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_RULEFnd_Click()
  on error resume next
  fndITTD_RULE.ShowForm
End Sub
Private Sub cmdITTD_RULERun_Click()
  on error resume next
  gridITTD_RULE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_RULE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_RULE.LoadRow gridITTD_RULE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_RULE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_RULE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_RULE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_RULE_DblClick()
  cmdITTD_RULEEdit_Click
End Sub
Private Sub gridITTD_RULE_KeyPress(KeyAscii As Integer)
  If gridITTD_RULE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_RULE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_RULE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_RULE.Row And LastRow &gt; 0 Then
  gridITTD_RULE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_RULE.GetRowData(gridITTD_RULE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_RULEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_RULE.Add()
    If GetFromBuffer(u) Then
      gridITTD_RULE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_RULE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_RULECfg_Click
        End If
    End If
end sub

private sub gridITTD_RULE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_RULE
End If
end sub
private sub mnuITTD_RULEAdd_click()
   menuActionITTD_RULE =&quot;ADD&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEEdit_click()
   menuActionITTD_RULE =&quot;EDIT&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEDelete_click()
   menuActionITTD_RULE =&quot;DEL&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEOpen_click()
   menuActionITTD_RULE =&quot;RUN&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULERef_click()
   menuActionITTD_RULE =&quot;REF&quot;
   menuTimerITTD_RULE.enabled = true
end sub
  Private Sub mnuITTD_RULECOPY_Click()
    On Error Resume Next
    If gridITTD_RULE.ItemCount = 0 Then Exit Sub
    If gridITTD_RULE.Row &gt; 0 Then
     If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_RULECUT_Click()
    On Error Resume Next
    If gridITTD_RULE.ItemCount = 0 Then Exit Sub
    If gridITTD_RULE.Row &gt; 0 Then
     If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_RULE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_RULECHANGE_Click()
  On Error Resume Next
  If gridITTD_RULE.ItemCount = 0 Then Exit Sub
  If gridITTD_RULE.Row &gt; 0 Then
   If gridITTD_RULE.RowIndex(gridITTD_RULE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_RULE.RowBookmark(gridITTD_RULE.RowIndex(gridITTD_RULE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_RULE.ItemCount = u.parent.Count
      gridITTD_RULE.RefreshRowIndex gridITTD_RULE.RowIndex(gridITTD_RULE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_RULECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_RULEPrn_click()
   menuActionITTD_RULE =&quot;PRN&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULECfg_click()
   menuActionITTD_RULE =&quot;CFG&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEFind_click()
   menuActionITTD_RULE =&quot;FND&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub mnuITTD_RULEAcc_click()
   menuActionITTD_RULE =&quot;ACC&quot;
   menuTimerITTD_RULE.enabled = true
end sub
private sub menuTimerITTD_RULE_timer()
   menuTimerITTD_RULE.enabled = false
   if menuActionITTD_RULE =&quot;ADD&quot; then cmdITTD_RULEADD_CLick
   if menuActionITTD_RULE =&quot;EDIT&quot; then cmdITTD_RULEEDIT_CLick
   if menuActionITTD_RULE =&quot;DEL&quot; then cmdITTD_RULEDEL_CLick
   if menuActionITTD_RULE =&quot;RUN&quot; then cmdITTD_RULERUN_CLick
   if menuActionITTD_RULE =&quot;REF&quot; then cmdITTD_RULEREF_CLick
   if menuActionITTD_RULE =&quot;PRN&quot; then cmdITTD_RULEPRN_CLick
   if menuActionITTD_RULE =&quot;CFG&quot; then cmdITTD_RULECFG_CLick
   if menuActionITTD_RULE =&quot;FND&quot; then cmdITTD_RULEFND_CLick
   if menuActionITTD_RULE =&quot;ACC&quot; then cmdITTD_RULEACC_CLick
   menuActionITTD_RULE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_RULEAdd,cmdITTD_RULEAdd.tag
  LoadBtnPictures cmdITTD_RULEEdit,cmdITTD_RULEEdit.tag
  LoadBtnPictures cmdITTD_RULEDel,cmdITTD_RULEDel.tag
  LoadBtnPictures cmdITTD_RULERef,cmdITTD_RULERef.tag
  LoadBtnPictures cmdITTD_RULEPrn,cmdITTD_RULEPrn.tag
  LoadBtnPictures cmdITTD_RULEFnd,cmdITTD_RULEFnd.tag
  LoadBtnPictures cmdITTD_RULERun,cmdITTD_RULERun.tag
  LoadBtnPictures cmdITTD_RULEAcc,cmdITTD_RULEAcc.tag
  LoadBtnPictures cmdITTD_RULECfg,cmdITTD_RULECfg.tag
  item.ITTD_RULE.PrepareGrid gridITTD_RULE
  LoadGridLayout gridITTD_RULE
  Set fndITTD_RULE = Nothing
  On Error Resume Next
  Set fndITTD_RULE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_RULE.Init gridITTD_RULE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_RULE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_RULE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_RULE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_RULE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_RULE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_RULE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_RULE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_RULE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_RULE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_RULE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_OPTTYPE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_OPTTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_OPTTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_OPTTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_OPTTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_OPTTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_OPTTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_OPTTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_OPTTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_OPTTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_OPTTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_OPTTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_OPTTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_OPTTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип оптимизации"/><Properties Name="Name" PropValue="mnuPopupITTD_OPTTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_OPTTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_OPTTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_OPTTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_OPTTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEOpen"/></ControlData><ControlData Name="mnuITTD_OPTTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPERef"/></ControlData><ControlData Name="mnuITTD_OPTTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPES1"/></ControlData><ControlData Name="mnuITTD_OPTTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_OPTTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECOPY"/></ControlData><ControlData Name="mnuITTD_OPTTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECUT"/></ControlData><ControlData Name="mnuITTD_OPTTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEPASTE"/></ControlData><ControlData Name="mnuITTD_OPTTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECHANGE"/></ControlData><ControlData Name="mnuITTD_OPTTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_OPTTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEPrn"/></ControlData><ControlData Name="mnuITTD_OPTTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPECfg"/></ControlData><ControlData Name="mnuITTD_OPTTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEFind"/></ControlData><ControlData Name="mnuITTD_OPTTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_OPTTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_OPTTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_OPTTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Тип оптимизации склада
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_OPTTYPE as object
private menuActionITTD_OPTTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_OPTTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_OPTTYPE,&quot;gridITTD_OPTTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_OPTTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_OPTTYPE,&quot;Тип оптимизации&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_OPTTYPERef_Click()
  on error resume next
  item.ITTD_OPTTYPE.Refresh
  gridITTD_OPTTYPE.itemCount = item.ITTD_OPTTYPE.count
  gridITTD_OPTTYPE.Refetch
  gridITTD_OPTTYPE.Refresh
End Sub
Private Sub cmdITTD_OPTTYPEAcc_Click()
On Error Resume Next
If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_OPTTYPE.Row &gt; 0 Then
 If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_OPTTYPEEdit_Click()
  on error resume next
If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
If gridITTD_OPTTYPE.Row &gt; 0 then
 If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_OPTTYPE_.Item = u
    again: frmITTD_OPTTYPE_.NotFirstTime = False
    frmITTD_OPTTYPE_.OnInit
    frmITTD_OPTTYPE_.Show vbModal
    If frmITTD_OPTTYPE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_OPTTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_OPTTYPEDel_Click()
  on error resume next
  gridITTD_OPTTYPE.Delete
End Sub
Private Sub cmdITTD_OPTTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_OPTTYPE.Add()

      Set frmITTD_OPTTYPE_.Item = u
      again: frmITTD_OPTTYPE_.NotFirstTime = False
      frmITTD_OPTTYPE_.OnInit
      frmITTD_OPTTYPE_.Show vbModal
      If frmITTD_OPTTYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_OPTTYPE.ItemCount = Item.ITTD_OPTTYPE.Count
        gridITTD_OPTTYPE.Refresh
        gridITTD_OPTTYPE.RefreshGroups
        gridITTD_OPTTYPE.Refreshsort
        gridITTD_OPTTYPE.MoveToBookmark u.ID &amp; &quot;ITTD_OPTTYPE&quot;
      Else
        Item.ITTD_OPTTYPE.Delete u.ID
        Item.ITTD_OPTTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_OPTTYPEFnd_Click()
  on error resume next
  fndITTD_OPTTYPE.ShowForm
End Sub
Private Sub cmdITTD_OPTTYPERun_Click()
  on error resume next
  gridITTD_OPTTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_OPTTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_OPTTYPE.LoadRow gridITTD_OPTTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_OPTTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_OPTTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_OPTTYPE_DblClick()
  cmdITTD_OPTTYPEEdit_Click
End Sub
Private Sub gridITTD_OPTTYPE_KeyPress(KeyAscii As Integer)
  If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_OPTTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_OPTTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_OPTTYPE.Row And LastRow &gt; 0 Then
  gridITTD_OPTTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_OPTTYPE.GetRowData(gridITTD_OPTTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_OPTTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_OPTTYPE.Add()
    If GetFromBuffer(u) Then
      gridITTD_OPTTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_OPTTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_OPTTYPECfg_Click
        End If
    End If
end sub

private sub gridITTD_OPTTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_OPTTYPE
End If
end sub
private sub mnuITTD_OPTTYPEAdd_click()
   menuActionITTD_OPTTYPE =&quot;ADD&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEEdit_click()
   menuActionITTD_OPTTYPE =&quot;EDIT&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEDelete_click()
   menuActionITTD_OPTTYPE =&quot;DEL&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEOpen_click()
   menuActionITTD_OPTTYPE =&quot;RUN&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPERef_click()
   menuActionITTD_OPTTYPE =&quot;REF&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
  Private Sub mnuITTD_OPTTYPECOPY_Click()
    On Error Resume Next
    If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_OPTTYPE.Row &gt; 0 Then
     If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_OPTTYPECUT_Click()
    On Error Resume Next
    If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
    If gridITTD_OPTTYPE.Row &gt; 0 Then
     If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_OPTTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_OPTTYPECHANGE_Click()
  On Error Resume Next
  If gridITTD_OPTTYPE.ItemCount = 0 Then Exit Sub
  If gridITTD_OPTTYPE.Row &gt; 0 Then
   If gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_OPTTYPE.RowBookmark(gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_OPTTYPE.ItemCount = u.parent.Count
      gridITTD_OPTTYPE.RefreshRowIndex gridITTD_OPTTYPE.RowIndex(gridITTD_OPTTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_OPTTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_OPTTYPEPrn_click()
   menuActionITTD_OPTTYPE =&quot;PRN&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPECfg_click()
   menuActionITTD_OPTTYPE =&quot;CFG&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEFind_click()
   menuActionITTD_OPTTYPE =&quot;FND&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub mnuITTD_OPTTYPEAcc_click()
   menuActionITTD_OPTTYPE =&quot;ACC&quot;
   menuTimerITTD_OPTTYPE.enabled = true
end sub
private sub menuTimerITTD_OPTTYPE_timer()
   menuTimerITTD_OPTTYPE.enabled = false
   if menuActionITTD_OPTTYPE =&quot;ADD&quot; then cmdITTD_OPTTYPEADD_CLick
   if menuActionITTD_OPTTYPE =&quot;EDIT&quot; then cmdITTD_OPTTYPEEDIT_CLick
   if menuActionITTD_OPTTYPE =&quot;DEL&quot; then cmdITTD_OPTTYPEDEL_CLick
   if menuActionITTD_OPTTYPE =&quot;RUN&quot; then cmdITTD_OPTTYPERUN_CLick
   if menuActionITTD_OPTTYPE =&quot;REF&quot; then cmdITTD_OPTTYPEREF_CLick
   if menuActionITTD_OPTTYPE =&quot;PRN&quot; then cmdITTD_OPTTYPEPRN_CLick
   if menuActionITTD_OPTTYPE =&quot;CFG&quot; then cmdITTD_OPTTYPECFG_CLick
   if menuActionITTD_OPTTYPE =&quot;FND&quot; then cmdITTD_OPTTYPEFND_CLick
   if menuActionITTD_OPTTYPE =&quot;ACC&quot; then cmdITTD_OPTTYPEACC_CLick
   menuActionITTD_OPTTYPE =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_OPTTYPEAdd,cmdITTD_OPTTYPEAdd.tag
  LoadBtnPictures cmdITTD_OPTTYPEEdit,cmdITTD_OPTTYPEEdit.tag
  LoadBtnPictures cmdITTD_OPTTYPEDel,cmdITTD_OPTTYPEDel.tag
  LoadBtnPictures cmdITTD_OPTTYPERef,cmdITTD_OPTTYPERef.tag
  LoadBtnPictures cmdITTD_OPTTYPEPrn,cmdITTD_OPTTYPEPrn.tag
  LoadBtnPictures cmdITTD_OPTTYPEFnd,cmdITTD_OPTTYPEFnd.tag
  LoadBtnPictures cmdITTD_OPTTYPERun,cmdITTD_OPTTYPERun.tag
  LoadBtnPictures cmdITTD_OPTTYPEAcc,cmdITTD_OPTTYPEAcc.tag
  LoadBtnPictures cmdITTD_OPTTYPECfg,cmdITTD_OPTTYPECfg.tag
  item.ITTD_OPTTYPE.PrepareGrid gridITTD_OPTTYPE
  LoadGridLayout gridITTD_OPTTYPE
  Set fndITTD_OPTTYPE = Nothing
  On Error Resume Next
  Set fndITTD_OPTTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_OPTTYPE.Init gridITTD_OPTTYPE
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_OPTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_OPTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_OPTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_OPTTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_OPTTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_MOROZ_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_MOROZ" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_MOROZ"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_MOROZ" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_MOROZ"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_MOROZAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_MOROZEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_MOROZDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_MOROZRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_MOROZPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_MOROZCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_MOROZFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_MOROZRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_MOROZRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_MOROZAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_MOROZAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_MOROZ" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Параметры выморозки"/><Properties Name="Name" PropValue="mnuPopupITTD_MOROZ"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_MOROZAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_MOROZAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_MOROZEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_MOROZEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_MOROZDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_MOROZDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_MOROZOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_MOROZOpen"/></ControlData><ControlData Name="mnuITTD_MOROZRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_MOROZRef"/></ControlData><ControlData Name="mnuITTD_MOROZS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_MOROZS1"/></ControlData><ControlData Name="mnuITTD_MOROZBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_MOROZBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_MOROZCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_MOROZCOPY"/></ControlData><ControlData Name="mnuITTD_MOROZCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_MOROZCUT"/></ControlData><ControlData Name="mnuITTD_MOROZPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_MOROZPASTE"/></ControlData><ControlData Name="mnuITTD_MOROZCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCHANGE"/></ControlData><ControlData Name="mnuITTD_MOROZCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_MOROZPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_MOROZPrn"/></ControlData><ControlData Name="mnuITTD_MOROZCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_MOROZCfg"/></ControlData><ControlData Name="mnuITTD_MOROZFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_MOROZFind"/></ControlData><ControlData Name="mnuITTD_MOROZAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_MOROZAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_MOROZ" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_MOROZ"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Параметры выморозки
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_MOROZ as object
private menuActionITTD_MOROZ as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_MOROZCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_MOROZ,&quot;gridITTD_MOROZ&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_MOROZPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_MOROZ,&quot;Параметры выморозки&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_MOROZRef_Click()
  on error resume next
  item.ITTD_MOROZ.Refresh
  gridITTD_MOROZ.itemCount = item.ITTD_MOROZ.count
  gridITTD_MOROZ.Refetch
  gridITTD_MOROZ.Refresh
End Sub
Private Sub cmdITTD_MOROZAcc_Click()
On Error Resume Next
If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
If gridITTD_MOROZ.Row &gt; 0 Then
 If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_MOROZEdit_Click()
  on error resume next
If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
If gridITTD_MOROZ.Row &gt; 0 then
 If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_MOROZ_.Item = u
    again: frmITTD_MOROZ_.NotFirstTime = False
    frmITTD_MOROZ_.OnInit
    frmITTD_MOROZ_.Show vbModal
    If frmITTD_MOROZ_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_MOROZ.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_MOROZDel_Click()
  on error resume next
  gridITTD_MOROZ.Delete
End Sub
Private Sub cmdITTD_MOROZAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_MOROZ.Add()

      Set frmITTD_MOROZ_.Item = u
      again: frmITTD_MOROZ_.NotFirstTime = False
      frmITTD_MOROZ_.OnInit
      frmITTD_MOROZ_.Show vbModal
      If frmITTD_MOROZ_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_MOROZ.ItemCount = Item.ITTD_MOROZ.Count
        gridITTD_MOROZ.Refresh
        gridITTD_MOROZ.RefreshGroups
        gridITTD_MOROZ.Refreshsort
        gridITTD_MOROZ.MoveToBookmark u.ID &amp; &quot;ITTD_MOROZ&quot;
      Else
        Item.ITTD_MOROZ.Delete u.ID
        Item.ITTD_MOROZ.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_MOROZFnd_Click()
  on error resume next
  fndITTD_MOROZ.ShowForm
End Sub
Private Sub cmdITTD_MOROZRun_Click()
  on error resume next
  gridITTD_MOROZ_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_MOROZ_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_MOROZ.LoadRow gridITTD_MOROZ, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_MOROZ_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_MOROZ&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_MOROZ_DblClick()
  cmdITTD_MOROZEdit_Click
End Sub
Private Sub gridITTD_MOROZ_KeyPress(KeyAscii As Integer)
  If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_MOROZ.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_MOROZ_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_MOROZ.Row And LastRow &gt; 0 Then
  gridITTD_MOROZ.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_MOROZ.GetRowData(gridITTD_MOROZ.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_MOROZPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_MOROZ.Add()
    If GetFromBuffer(u) Then
      gridITTD_MOROZ.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_MOROZ_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_MOROZCfg_Click
        End If
    End If
end sub

private sub gridITTD_MOROZ_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_MOROZ
End If
end sub
private sub mnuITTD_MOROZAdd_click()
   menuActionITTD_MOROZ =&quot;ADD&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZEdit_click()
   menuActionITTD_MOROZ =&quot;EDIT&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZDelete_click()
   menuActionITTD_MOROZ =&quot;DEL&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZOpen_click()
   menuActionITTD_MOROZ =&quot;RUN&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZRef_click()
   menuActionITTD_MOROZ =&quot;REF&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
  Private Sub mnuITTD_MOROZCOPY_Click()
    On Error Resume Next
    If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
    If gridITTD_MOROZ.Row &gt; 0 Then
     If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_MOROZCUT_Click()
    On Error Resume Next
    If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
    If gridITTD_MOROZ.Row &gt; 0 Then
     If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_MOROZ.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_MOROZCHANGE_Click()
  On Error Resume Next
  If gridITTD_MOROZ.ItemCount = 0 Then Exit Sub
  If gridITTD_MOROZ.Row &gt; 0 Then
   If gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_MOROZ.RowBookmark(gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_MOROZ.ItemCount = u.parent.Count
      gridITTD_MOROZ.RefreshRowIndex gridITTD_MOROZ.RowIndex(gridITTD_MOROZ.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_MOROZCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_MOROZPrn_click()
   menuActionITTD_MOROZ =&quot;PRN&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZCfg_click()
   menuActionITTD_MOROZ =&quot;CFG&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZFind_click()
   menuActionITTD_MOROZ =&quot;FND&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub mnuITTD_MOROZAcc_click()
   menuActionITTD_MOROZ =&quot;ACC&quot;
   menuTimerITTD_MOROZ.enabled = true
end sub
private sub menuTimerITTD_MOROZ_timer()
   menuTimerITTD_MOROZ.enabled = false
   if menuActionITTD_MOROZ =&quot;ADD&quot; then cmdITTD_MOROZADD_CLick
   if menuActionITTD_MOROZ =&quot;EDIT&quot; then cmdITTD_MOROZEDIT_CLick
   if menuActionITTD_MOROZ =&quot;DEL&quot; then cmdITTD_MOROZDEL_CLick
   if menuActionITTD_MOROZ =&quot;RUN&quot; then cmdITTD_MOROZRUN_CLick
   if menuActionITTD_MOROZ =&quot;REF&quot; then cmdITTD_MOROZREF_CLick
   if menuActionITTD_MOROZ =&quot;PRN&quot; then cmdITTD_MOROZPRN_CLick
   if menuActionITTD_MOROZ =&quot;CFG&quot; then cmdITTD_MOROZCFG_CLick
   if menuActionITTD_MOROZ =&quot;FND&quot; then cmdITTD_MOROZFND_CLick
   if menuActionITTD_MOROZ =&quot;ACC&quot; then cmdITTD_MOROZACC_CLick
   menuActionITTD_MOROZ =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_MOROZAdd,cmdITTD_MOROZAdd.tag
  LoadBtnPictures cmdITTD_MOROZEdit,cmdITTD_MOROZEdit.tag
  LoadBtnPictures cmdITTD_MOROZDel,cmdITTD_MOROZDel.tag
  LoadBtnPictures cmdITTD_MOROZRef,cmdITTD_MOROZRef.tag
  LoadBtnPictures cmdITTD_MOROZPrn,cmdITTD_MOROZPrn.tag
  LoadBtnPictures cmdITTD_MOROZFnd,cmdITTD_MOROZFnd.tag
  LoadBtnPictures cmdITTD_MOROZRun,cmdITTD_MOROZRun.tag
  LoadBtnPictures cmdITTD_MOROZAcc,cmdITTD_MOROZAcc.tag
  LoadBtnPictures cmdITTD_MOROZCfg,cmdITTD_MOROZCfg.tag
  item.ITTD_MOROZ.PrepareGrid gridITTD_MOROZ
  LoadGridLayout gridITTD_MOROZ
  Set fndITTD_MOROZ = Nothing
  On Error Resume Next
  Set fndITTD_MOROZ = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_MOROZ.Init gridITTD_MOROZ
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_MOROZ.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_MOROZ.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_MOROZ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_MOROZ.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_MOROZ = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnITTD_EMAIL_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlITTD_EMAIL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlITTD_EMAIL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridITTD_EMAIL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridITTD_EMAIL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdITTD_EMAILAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_EMAILEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_EMAILDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdITTD_EMAILRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdITTD_EMAILPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdITTD_EMAILCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdITTD_EMAILFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdITTD_EMAILRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdITTD_EMAILRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdITTD_EMAILAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdITTD_EMAILAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupITTD_EMAIL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Почтовые адреса"/><Properties Name="Name" PropValue="mnuPopupITTD_EMAIL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuITTD_EMAILAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuITTD_EMAILAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_EMAILEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuITTD_EMAILEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_EMAILDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuITTD_EMAILDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuITTD_EMAILOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuITTD_EMAILOpen"/></ControlData><ControlData Name="mnuITTD_EMAILRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuITTD_EMAILRef"/></ControlData><ControlData Name="mnuITTD_EMAILS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuITTD_EMAILS1"/></ControlData><ControlData Name="mnuITTD_EMAILBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuITTD_EMAILBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuITTD_EMAILCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuITTD_EMAILCOPY"/></ControlData><ControlData Name="mnuITTD_EMAILCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuITTD_EMAILCUT"/></ControlData><ControlData Name="mnuITTD_EMAILPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuITTD_EMAILPASTE"/></ControlData><ControlData Name="mnuITTD_EMAILCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCHANGE"/></ControlData><ControlData Name="mnuITTD_EMAILCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCLEAN"/></ControlData></ControlData><ControlData Name="mnuITTD_EMAILPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuITTD_EMAILPrn"/></ControlData><ControlData Name="mnuITTD_EMAILCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuITTD_EMAILCfg"/></ControlData><ControlData Name="mnuITTD_EMAILFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuITTD_EMAILFind"/></ControlData><ControlData Name="mnuITTD_EMAILAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuITTD_EMAILAcc"/></ControlData></ControlData><ControlData Name="menuTimerITTD_EMAIL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerITTD_EMAIL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Адреса получателей информации о выморозке
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndITTD_EMAIL as object
private menuActionITTD_EMAIL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdITTD_EMAILCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridITTD_EMAIL,&quot;gridITTD_EMAIL&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_EMAILPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridITTD_EMAIL,&quot;Почтовые адреса&quot;
Set jset = Nothing
End Sub

Private Sub cmdITTD_EMAILRef_Click()
  on error resume next
  item.ITTD_EMAIL.Refresh
  gridITTD_EMAIL.itemCount = item.ITTD_EMAIL.count
  gridITTD_EMAIL.Refetch
  gridITTD_EMAIL.Refresh
End Sub
Private Sub cmdITTD_EMAILAcc_Click()
On Error Resume Next
If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
If gridITTD_EMAIL.Row &gt; 0 Then
 If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdITTD_EMAILEdit_Click()
  on error resume next
If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
If gridITTD_EMAIL.Row &gt; 0 then
 If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmITTD_EMAIL_.Item = u
    again: frmITTD_EMAIL_.NotFirstTime = False
    frmITTD_EMAIL_.OnInit
    frmITTD_EMAIL_.Show vbModal
    If frmITTD_EMAIL_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridITTD_EMAIL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdITTD_EMAILDel_Click()
  on error resume next
  gridITTD_EMAIL.Delete
End Sub
Private Sub cmdITTD_EMAILAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ITTD_EMAIL.Add()

      Set frmITTD_EMAIL_.Item = u
      again: frmITTD_EMAIL_.NotFirstTime = False
      frmITTD_EMAIL_.OnInit
      frmITTD_EMAIL_.Show vbModal
      If frmITTD_EMAIL_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridITTD_EMAIL.ItemCount = Item.ITTD_EMAIL.Count
        gridITTD_EMAIL.Refresh
        gridITTD_EMAIL.RefreshGroups
        gridITTD_EMAIL.Refreshsort
        gridITTD_EMAIL.MoveToBookmark u.ID &amp; &quot;ITTD_EMAIL&quot;
      Else
        Item.ITTD_EMAIL.Delete u.ID
        Item.ITTD_EMAIL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdITTD_EMAILFnd_Click()
  on error resume next
  fndITTD_EMAIL.ShowForm
End Sub
Private Sub cmdITTD_EMAILRun_Click()
  on error resume next
  gridITTD_EMAIL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridITTD_EMAIL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ITTD_EMAIL.LoadRow gridITTD_EMAIL, RowIndex, Bookmark, Values
End Sub
Private Sub gridITTD_EMAIL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ITTD_EMAIL&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridITTD_EMAIL_DblClick()
  cmdITTD_EMAILEdit_Click
End Sub
Private Sub gridITTD_EMAIL_KeyPress(KeyAscii As Integer)
  If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndITTD_EMAIL.FindOnPress KeyAscii
End Sub

Private Sub gridITTD_EMAIL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridITTD_EMAIL.Row And LastRow &gt; 0 Then
  gridITTD_EMAIL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridITTD_EMAIL.GetRowData(gridITTD_EMAIL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuITTD_EMAILPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ITTD_EMAIL.Add()
    If GetFromBuffer(u) Then
      gridITTD_EMAIL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridITTD_EMAIL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdITTD_EMAILCfg_Click
        End If
    End If
end sub

private sub gridITTD_EMAIL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupITTD_EMAIL
End If
end sub
private sub mnuITTD_EMAILAdd_click()
   menuActionITTD_EMAIL =&quot;ADD&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILEdit_click()
   menuActionITTD_EMAIL =&quot;EDIT&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILDelete_click()
   menuActionITTD_EMAIL =&quot;DEL&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILOpen_click()
   menuActionITTD_EMAIL =&quot;RUN&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILRef_click()
   menuActionITTD_EMAIL =&quot;REF&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
  Private Sub mnuITTD_EMAILCOPY_Click()
    On Error Resume Next
    If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
    If gridITTD_EMAIL.Row &gt; 0 Then
     If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuITTD_EMAILCUT_Click()
    On Error Resume Next
    If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
    If gridITTD_EMAIL.Row &gt; 0 Then
     If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridITTD_EMAIL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuITTD_EMAILCHANGE_Click()
  On Error Resume Next
  If gridITTD_EMAIL.ItemCount = 0 Then Exit Sub
  If gridITTD_EMAIL.Row &gt; 0 Then
   If gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridITTD_EMAIL.RowBookmark(gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridITTD_EMAIL.ItemCount = u.parent.Count
      gridITTD_EMAIL.RefreshRowIndex gridITTD_EMAIL.RowIndex(gridITTD_EMAIL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuITTD_EMAILCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuITTD_EMAILPrn_click()
   menuActionITTD_EMAIL =&quot;PRN&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILCfg_click()
   menuActionITTD_EMAIL =&quot;CFG&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILFind_click()
   menuActionITTD_EMAIL =&quot;FND&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub mnuITTD_EMAILAcc_click()
   menuActionITTD_EMAIL =&quot;ACC&quot;
   menuTimerITTD_EMAIL.enabled = true
end sub
private sub menuTimerITTD_EMAIL_timer()
   menuTimerITTD_EMAIL.enabled = false
   if menuActionITTD_EMAIL =&quot;ADD&quot; then cmdITTD_EMAILADD_CLick
   if menuActionITTD_EMAIL =&quot;EDIT&quot; then cmdITTD_EMAILEDIT_CLick
   if menuActionITTD_EMAIL =&quot;DEL&quot; then cmdITTD_EMAILDEL_CLick
   if menuActionITTD_EMAIL =&quot;RUN&quot; then cmdITTD_EMAILRUN_CLick
   if menuActionITTD_EMAIL =&quot;REF&quot; then cmdITTD_EMAILREF_CLick
   if menuActionITTD_EMAIL =&quot;PRN&quot; then cmdITTD_EMAILPRN_CLick
   if menuActionITTD_EMAIL =&quot;CFG&quot; then cmdITTD_EMAILCFG_CLick
   if menuActionITTD_EMAIL =&quot;FND&quot; then cmdITTD_EMAILFND_CLick
   if menuActionITTD_EMAIL =&quot;ACC&quot; then cmdITTD_EMAILACC_CLick
   menuActionITTD_EMAIL =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdITTD_EMAILAdd,cmdITTD_EMAILAdd.tag
  LoadBtnPictures cmdITTD_EMAILEdit,cmdITTD_EMAILEdit.tag
  LoadBtnPictures cmdITTD_EMAILDel,cmdITTD_EMAILDel.tag
  LoadBtnPictures cmdITTD_EMAILRef,cmdITTD_EMAILRef.tag
  LoadBtnPictures cmdITTD_EMAILPrn,cmdITTD_EMAILPrn.tag
  LoadBtnPictures cmdITTD_EMAILFnd,cmdITTD_EMAILFnd.tag
  LoadBtnPictures cmdITTD_EMAILRun,cmdITTD_EMAILRun.tag
  LoadBtnPictures cmdITTD_EMAILAcc,cmdITTD_EMAILAcc.tag
  LoadBtnPictures cmdITTD_EMAILCfg,cmdITTD_EMAILCfg.tag
  item.ITTD_EMAIL.PrepareGrid gridITTD_EMAIL
  LoadGridLayout gridITTD_EMAIL
  Set fndITTD_EMAIL = Nothing
  On Error Resume Next
  Set fndITTD_EMAIL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndITTD_EMAIL.Init gridITTD_EMAIL
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridITTD_EMAIL.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridITTD_EMAIL.Top = 40 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Left = 5 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridITTD_EMAIL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlITTD_EMAIL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndITTD_EMAIL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_GTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_GTYPE_"><Properties Name="Name" PropValue="pnlITTD_GTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_ZTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_ZTYPE_"><Properties Name="Name" PropValue="pnlITTD_ZTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_PLTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_PLTYPE_"><Properties Name="Name" PropValue="pnlITTD_PLTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_QTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_QTYPE_"><Properties Name="Name" PropValue="pnlITTD_QTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_ATYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_ATYPE_"><Properties Name="Name" PropValue="pnlITTD_ATYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_SRV" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_SRV_"><Properties Name="Name" PropValue="pnlITTD_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_PART" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_PART_"><Properties Name="Name" PropValue="pnlITTD_PART"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_FACTORY" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_FACTORY_"><Properties Name="Name" PropValue="pnlITTD_FACTORY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_KILLPLACE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_KILLPLACE_"><Properties Name="Name" PropValue="pnlITTD_KILLPLACE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_COUNTRY" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_COUNTRY_"><Properties Name="Name" PropValue="pnlITTD_COUNTRY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_CAMERA" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_CAMERA_"><Properties Name="Name" PropValue="pnlITTD_CAMERA"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_RULE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_RULE_"><Properties Name="Name" PropValue="pnlITTD_RULE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_OPTTYPE" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_OPTTYPE_"><Properties Name="Name" PropValue="pnlITTD_OPTTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_MOROZ" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_MOROZ_"><Properties Name="Name" PropValue="pnlITTD_MOROZ"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlITTD_EMAIL" ControlIndex="0" PROGID="ITTDGUI.vpnITTD_EMAIL_"><Properties Name="Name" PropValue="pnlITTD_EMAIL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим 
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlITTD_GTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_ZTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_PLTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_QTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_ATYPE.IsOK
if IsItOk then IsItOk = pnlITTD_SRV.IsOK
if IsItOk then IsItOk = pnlITTD_PART.IsOK
if IsItOk then IsItOk = pnlITTD_FACTORY.IsOK
if IsItOk then IsItOk = pnlITTD_KILLPLACE.IsOK
if IsItOk then IsItOk = pnlITTD_COUNTRY.IsOK
if IsItOk then IsItOk = pnlITTD_CAMERA.IsOK
if IsItOk then IsItOk = pnlITTD_RULE.IsOK
if IsItOk then IsItOk = pnlITTD_OPTTYPE.IsOK
if IsItOk then IsItOk = pnlITTD_MOROZ.IsOK
if IsItOk then IsItOk = pnlITTD_EMAIL.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlITTD_EMAIL.Visible = False
  pnlITTD_MOROZ.Visible = False
  pnlITTD_OPTTYPE.Visible = False
  pnlITTD_RULE.Visible = False
  pnlITTD_CAMERA.Visible = False
  pnlITTD_COUNTRY.Visible = False
  pnlITTD_KILLPLACE.Visible = False
  pnlITTD_FACTORY.Visible = False
  pnlITTD_PART.Visible = False
  pnlITTD_SRV.Visible = False
  pnlITTD_ATYPE.Visible = False
  pnlITTD_QTYPE.Visible = False
  pnlITTD_PLTYPE.Visible = False
  pnlITTD_ZTYPE.Visible = False
  pnlITTD_GTYPE.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ITTD_GTYPE&quot;
     With pnlITTD_GTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_GTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_ZTYPE&quot;
     With pnlITTD_ZTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_ZTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_PLTYPE&quot;
     With pnlITTD_PLTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_PLTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_QTYPE&quot;
     With pnlITTD_QTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_QTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_ATYPE&quot;
     With pnlITTD_ATYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_ATYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_SRV&quot;
     With pnlITTD_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_SRV.OnClick item,parentform
     End With
   Case &quot;ITTD_PART&quot;
     With pnlITTD_PART
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_PART.OnClick item,parentform
     End With
   Case &quot;ITTD_FACTORY&quot;
     With pnlITTD_FACTORY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_FACTORY.OnClick item,parentform
     End With
   Case &quot;ITTD_KILLPLACE&quot;
     With pnlITTD_KILLPLACE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_KILLPLACE.OnClick item,parentform
     End With
   Case &quot;ITTD_COUNTRY&quot;
     With pnlITTD_COUNTRY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_COUNTRY.OnClick item,parentform
     End With
   Case &quot;ITTD_CAMERA&quot;
     With pnlITTD_CAMERA
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_CAMERA.OnClick item,parentform
     End With
   Case &quot;ITTD_RULE&quot;
     With pnlITTD_RULE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_RULE.OnClick item,parentform
     End With
   Case &quot;ITTD_OPTTYPE&quot;
     With pnlITTD_OPTTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_OPTTYPE.OnClick item,parentform
     End With
   Case &quot;ITTD_MOROZ&quot;
     With pnlITTD_MOROZ
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_MOROZ.OnClick item,parentform
     End With
   Case &quot;ITTD_EMAIL&quot;
     With pnlITTD_EMAIL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlITTD_EMAIL.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Тип товара&quot;
ts.Tabs.Item(1).key = &quot;ITTD_GTYPE&quot;
pnlITTD_GTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_ZTYPE&quot;, &quot;Тип зоны&quot;)
pnlITTD_ZTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_PLTYPE&quot;, &quot;Тип палеты&quot;)
pnlITTD_PLTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_QTYPE&quot;, &quot;Тип заявки&quot;)
pnlITTD_QTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_ATYPE&quot;, &quot;Тип операции&quot;)
pnlITTD_ATYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_SRV&quot;, &quot;Услуги&quot;)
pnlITTD_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_PART&quot;, &quot;Партия товара&quot;)
pnlITTD_PART.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_FACTORY&quot;, &quot;Завод&quot;)
pnlITTD_FACTORY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_KILLPLACE&quot;, &quot;Бойня&quot;)
pnlITTD_KILLPLACE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_COUNTRY&quot;, &quot;Страна&quot;)
pnlITTD_COUNTRY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_CAMERA&quot;, &quot;Холодильные камеры&quot;)
pnlITTD_CAMERA.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_RULE&quot;, &quot;Правило формирования партии&quot;)
pnlITTD_RULE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_OPTTYPE&quot;, &quot;Тип оптимизации&quot;)
pnlITTD_OPTTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_MOROZ&quot;, &quot;Параметры выморозки&quot;)
pnlITTD_MOROZ.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ITTD_EMAIL&quot;, &quot;Почтовые адреса&quot;)
pnlITTD_EMAIL.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ITTD&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlITTD_GTYPE.CloseClass
 pnlITTD_ZTYPE.CloseClass
 pnlITTD_PLTYPE.CloseClass
 pnlITTD_QTYPE.CloseClass
 pnlITTD_ATYPE.CloseClass
 pnlITTD_SRV.CloseClass
 pnlITTD_PART.CloseClass
 pnlITTD_FACTORY.CloseClass
 pnlITTD_KILLPLACE.CloseClass
 pnlITTD_COUNTRY.CloseClass
 pnlITTD_CAMERA.CloseClass
 pnlITTD_RULE.CloseClass
 pnlITTD_OPTTYPE.CloseClass
 pnlITTD_MOROZ.CloseClass
 pnlITTD_EMAIL.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlITTD_GTYPE.OnSave
 pnlITTD_ZTYPE.OnSave
 pnlITTD_PLTYPE.OnSave
 pnlITTD_QTYPE.OnSave
 pnlITTD_ATYPE.OnSave
 pnlITTD_SRV.OnSave
 pnlITTD_PART.OnSave
 pnlITTD_FACTORY.OnSave
 pnlITTD_KILLPLACE.OnSave
 pnlITTD_COUNTRY.OnSave
 pnlITTD_CAMERA.OnSave
 pnlITTD_RULE.OnSave
 pnlITTD_OPTTYPE.OnSave
 pnlITTD_MOROZ.OnSave
 pnlITTD_EMAIL.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlITTD_GTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_ZTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_PLTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_QTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_ATYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_PART.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_FACTORY.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_KILLPLACE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_COUNTRY.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_CAMERA.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_RULE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_OPTTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_MOROZ.IsChanged
m_IsChanged = m_IsChanged or pnlITTD_EMAIL.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ITTDGUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим 
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ITTD&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="' модуль общих функций



"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Найти форму по имени
'Parameters:
'[IN]   Name , тип параметра: string, 
'[IN]   Mode , тип параметра: string =&quot;&quot;   - ...
'Returns:
'  объект класса form
'  ,или Nothing
'See Also:
'Example:
' dim variable as form
' Set variable = me.FormByName(...параметры...)
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;main&quot; then

if Name=&quot;ITTD_GTYPE&quot; then 
 set FormByName = new frmITTD_GTYPE_main
 exit function
end if

if Name=&quot;ITTD_ZTYPE&quot; then 
 set FormByName = new frmITTD_ZTYPE_main
 exit function
end if

if Name=&quot;ITTD_PLTYPE&quot; then 
 set FormByName = new frmITTD_PLTYPE_main
 exit function
end if

if Name=&quot;ITTD_QTYPE&quot; then 
 set FormByName = new frmITTD_QTYPE_main
 exit function
end if

if Name=&quot;ITTD_ATYPE&quot; then 
 set FormByName = new frmITTD_ATYPE_main
 exit function
end if

if Name=&quot;ITTD_SRV&quot; then 
 set FormByName = new frmITTD_SRV_main
 exit function
end if

if Name=&quot;ITTD_PART&quot; then 
 set FormByName = new frmITTD_PART_main
 exit function
end if

if Name=&quot;ITTD_FACTORY&quot; then 
 set FormByName = new frmITTD_FACTORY_main
 exit function
end if

if Name=&quot;ITTD_KILLPLACE&quot; then 
 set FormByName = new frmITTD_KILLPLACE_main
 exit function
end if

if Name=&quot;ITTD_COUNTRY&quot; then 
 set FormByName = new frmITTD_COUNTRY_main
 exit function
end if

if Name=&quot;ITTD_CAMERA&quot; then 
 set FormByName = new frmITTD_CAMERA_main
 exit function
end if

if Name=&quot;ITTD_RULE&quot; then 
 set FormByName = new frmITTD_RULE_main
 exit function
end if

if Name=&quot;ITTD_OPTTYPE&quot; then 
 set FormByName = new frmITTD_OPTTYPE_main
 exit function
end if

if Name=&quot;ITTD_MOROZ&quot; then 
 set FormByName = new frmITTD_MOROZ_main
 exit function
end if

if Name=&quot;ITTD_EMAIL&quot; then 
 set FormByName = new frmITTD_EMAIL_main
 exit function
end if

end if
if Mode=&quot;admi&quot; then

if Name=&quot;ITTD_GTYPE&quot; then 
 set FormByName = new frmITTD_GTYPE_admi
 exit function
end if

if Name=&quot;ITTD_ZTYPE&quot; then 
 set FormByName = new frmITTD_ZTYPE_admi
 exit function
end if

if Name=&quot;ITTD_PLTYPE&quot; then 
 set FormByName = new frmITTD_PLTYPE_admi
 exit function
end if

if Name=&quot;ITTD_QTYPE&quot; then 
 set FormByName = new frmITTD_QTYPE_admi
 exit function
end if

if Name=&quot;ITTD_ATYPE&quot; then 
 set FormByName = new frmITTD_ATYPE_admi
 exit function
end if

if Name=&quot;ITTD_SRV&quot; then 
 set FormByName = new frmITTD_SRV_admi
 exit function
end if

if Name=&quot;ITTD_PART&quot; then 
 set FormByName = new frmITTD_PART_admi
 exit function
end if

if Name=&quot;ITTD_FACTORY&quot; then 
 set FormByName = new frmITTD_FACTORY_admi
 exit function
end if

if Name=&quot;ITTD_KILLPLACE&quot; then 
 set FormByName = new frmITTD_KILLPLACE_admi
 exit function
end if

if Name=&quot;ITTD_COUNTRY&quot; then 
 set FormByName = new frmITTD_COUNTRY_admi
 exit function
end if

if Name=&quot;ITTD_CAMERA&quot; then 
 set FormByName = new frmITTD_CAMERA_admi
 exit function
end if

if Name=&quot;ITTD_RULE&quot; then 
 set FormByName = new frmITTD_RULE_admi
 exit function
end if

if Name=&quot;ITTD_OPTTYPE&quot; then 
 set FormByName = new frmITTD_OPTTYPE_admi
 exit function
end if

if Name=&quot;ITTD_MOROZ&quot; then 
 set FormByName = new frmITTD_MOROZ_admi
 exit function
end if

if Name=&quot;ITTD_EMAIL&quot; then 
 set FormByName = new frmITTD_EMAIL_admi
 exit function
end if

end if
if Mode=&quot;read&quot; then

if Name=&quot;ITTD_GTYPE&quot; then 
 set FormByName = new frmITTD_GTYPE_read
 exit function
end if

if Name=&quot;ITTD_ZTYPE&quot; then 
 set FormByName = new frmITTD_ZTYPE_read
 exit function
end if

if Name=&quot;ITTD_PLTYPE&quot; then 
 set FormByName = new frmITTD_PLTYPE_read
 exit function
end if

if Name=&quot;ITTD_QTYPE&quot; then 
 set FormByName = new frmITTD_QTYPE_read
 exit function
end if

if Name=&quot;ITTD_ATYPE&quot; then 
 set FormByName = new frmITTD_ATYPE_read
 exit function
end if

if Name=&quot;ITTD_SRV&quot; then 
 set FormByName = new frmITTD_SRV_read
 exit function
end if

if Name=&quot;ITTD_PART&quot; then 
 set FormByName = new frmITTD_PART_read
 exit function
end if

if Name=&quot;ITTD_FACTORY&quot; then 
 set FormByName = new frmITTD_FACTORY_read
 exit function
end if

if Name=&quot;ITTD_KILLPLACE&quot; then 
 set FormByName = new frmITTD_KILLPLACE_read
 exit function
end if

if Name=&quot;ITTD_COUNTRY&quot; then 
 set FormByName = new frmITTD_COUNTRY_read
 exit function
end if

if Name=&quot;ITTD_CAMERA&quot; then 
 set FormByName = new frmITTD_CAMERA_read
 exit function
end if

if Name=&quot;ITTD_RULE&quot; then 
 set FormByName = new frmITTD_RULE_read
 exit function
end if

if Name=&quot;ITTD_OPTTYPE&quot; then 
 set FormByName = new frmITTD_OPTTYPE_read
 exit function
end if

if Name=&quot;ITTD_MOROZ&quot; then 
 set FormByName = new frmITTD_MOROZ_read
 exit function
end if

if Name=&quot;ITTD_EMAIL&quot; then 
 set FormByName = new frmITTD_EMAIL_read
 exit function
end if

end if
if Mode=&quot;&quot; then

if Name=&quot;ITTD_GTYPE&quot; then 
 set FormByName = new frmITTD_GTYPE_
 exit function
end if

if Name=&quot;ITTD_ZTYPE&quot; then 
 set FormByName = new frmITTD_ZTYPE_
 exit function
end if

if Name=&quot;ITTD_PLTYPE&quot; then 
 set FormByName = new frmITTD_PLTYPE_
 exit function
end if

if Name=&quot;ITTD_QTYPE&quot; then 
 set FormByName = new frmITTD_QTYPE_
 exit function
end if

if Name=&quot;ITTD_ATYPE&quot; then 
 set FormByName = new frmITTD_ATYPE_
 exit function
end if

if Name=&quot;ITTD_SRV&quot; then 
 set FormByName = new frmITTD_SRV_
 exit function
end if

if Name=&quot;ITTD_PART&quot; then 
 set FormByName = new frmITTD_PART_
 exit function
end if

if Name=&quot;ITTD_FACTORY&quot; then 
 set FormByName = new frmITTD_FACTORY_
 exit function
end if

if Name=&quot;ITTD_KILLPLACE&quot; then 
 set FormByName = new frmITTD_KILLPLACE_
 exit function
end if

if Name=&quot;ITTD_COUNTRY&quot; then 
 set FormByName = new frmITTD_COUNTRY_
 exit function
end if

if Name=&quot;ITTD_CAMERA&quot; then 
 set FormByName = new frmITTD_CAMERA_
 exit function
end if

if Name=&quot;ITTD_RULE&quot; then 
 set FormByName = new frmITTD_RULE_
 exit function
end if

if Name=&quot;ITTD_OPTTYPE&quot; then 
 set FormByName = new frmITTD_OPTTYPE_
 exit function
end if

if Name=&quot;ITTD_MOROZ&quot; then 
 set FormByName = new frmITTD_MOROZ_
 exit function
end if

if Name=&quot;ITTD_EMAIL&quot; then 
 set FormByName = new frmITTD_EMAIL_
 exit function
end if

end if
end function

'Скопировать объект в типизированный XML  буфер
'Parameters:
'[IN][OUT]  u , тип параметра: Object  - ...
'See Also:
'Example:
'  call me.SaveToBuffer({параметры})
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub


'Получить объект из типизированного XML  буфера
'Parameters:
'[IN][OUT]  u , тип параметра: Object  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.GetFromBuffer(...параметры...) 
Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
